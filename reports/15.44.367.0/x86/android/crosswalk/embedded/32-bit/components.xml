<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet type="text/xsl" href="../../../../../../style/components.xsl"?><test_definition><environment arch="X86" branch="Stable" build="15.44.367.0" hardware="ASUS MeMO Pad 8 K011" platform="Android" segment="Embedded Crosswalk 32-bit" /><category name="Crosswalk Stability"><testcase id="Suspend_Resume_System_WithVideoPlaying" purpose="Suspend/Resume system while playing HTML5 video 50 times" result="PASS" /><testcase id="Install_Uninstall_Webapp_Repeatly" purpose="50+times w/o error&#10;Web app install and uninstall w/o error." result="PASS" /><testcase id="Crosswalk_Stabiterative_LaunchAndExit_Repeatedly" purpose="Launch/terminate one Web app 50 times" result="PASS" /><testcase id="Switch_Between_NativeAndWebApp" purpose="Switch between multiple Web apps 50 times" result="PASS" /><testcase id="Switch_Between_WebApps" purpose="Validate play video under low disk" result="PASS" /><testcase id="TapControl_During_PlayingAudio" purpose="Tap control buttons (FF/FB, Play/Pause, volume etc) during playing audio" result="PASS" /><testcase id="TapControl_During_PlayingVideo" purpose="Tap control buttons (FF/FB, Play/Pause, fullscreen, etc) during playing video" result="PASS" /><testcase id="Play_Music_LongTime" purpose="Play html5 audio" result="PASS" /><testcase id="RunPlayVideoLongTime" purpose="Play html5 video" result="PASS" /><testcase id="Capture_Video_LongTime" purpose="Capture Video in Web app" result="PASS" /><testcase id="RunGame2DGraphicsLongTimeTest" purpose="Run Games of 2D graphics" result="PASS" /><testcase id="RunGame3DGraphicsLongTimeTest" purpose="Run Games of 3D graphics" result="FAIL">[[https://crosswalk-project.org/jira/i#browse/XWALK-1289  XWALK-1289]]</testcase><testcase id="Overload_LoadLargeImageList" purpose="Load a web page with a mass of large images" result="PASS" /><testcase id="Standard_ScrollLargeHightPage" purpose="Scroll a large high page" result="PASS" /><testcase id="Launch_MultiApps_WithSystemForceTerminate" purpose="Launch a mass of Web apps till system force to terminate" result="PASS" /><testcase id="Pause_Resume_WebApp_LongTime" purpose="Pause/resume sample app after a long time" result="PASS" /></category><category name="Crosswalk APIs/Embedding API"><testcase id="v1.FullScreenTest/1" purpose="Check if the fullScreen related methods are effective./1" result="PASS" /><testcase id="v1.FullScreenTest/2" purpose="Check if the fullScreen related methods are effective./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3889 XWALK-3889]]</testcase><testcase id="v1.LoadTest/1" purpose="Check if the load related methods are effective./1" result="PASS" /><testcase id="v1.LoadTest/10" purpose="Check if the load related methods are effective./10" result="PASS" /><testcase id="v1.LoadTest/11" purpose="Check if the load related methods are effective./11" result="PASS" /><testcase id="v1.LoadTest/12" purpose="Check if the load related methods are effective./12" result="PASS" /><testcase id="v1.LoadTest/13" purpose="Check if the load related methods are effective./13" result="PASS" /><testcase id="v1.LoadTest/14" purpose="Check if the load related methods are effective./14" result="PASS" /><testcase id="v1.LoadTest/15" purpose="Check if the load related methods are effective./15" result="PASS" /><testcase id="v1.LoadTest/16" purpose="Check if the load related methods are effective./16" result="PASS" /><testcase id="v1.LoadTest/17" purpose="Check if the load related methods are effective./17" result="PASS" /><testcase id="v1.LoadTest/18" purpose="Check if the load related methods are effective./18" result="PASS" /><testcase id="v1.LoadTest/2" purpose="Check if the load related methods are effective./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.LoadTest/3" purpose="Check if the load related methods are effective./3" result="PASS" /><testcase id="v1.LoadTest/4" purpose="Check if the load related methods are effective./4" result="PASS" /><testcase id="v1.LoadTest/5" purpose="Check if the load related methods are effective./5" result="PASS" /><testcase id="v1.LoadTest/6" purpose="Check if the load related methods are effective./6" result="PASS" /><testcase id="v1.LoadTest/7" purpose="Check if the load related methods are effective./7" result="PASS" /><testcase id="v1.LoadTest/8" purpose="Check if the load related methods are effective./8" result="PASS" /><testcase id="v1.LoadTest/9" purpose="Check if the load related methods are effective./9" result="PASS" /><testcase id="v1.NavigationHistoryTest/1" purpose="Check if the view can forward and backward history./1" result="PASS" /><testcase id="v1.NavigationHistoryTest/10" purpose="Check if the view can forward and backward history./10" result="PASS" /><testcase id="v1.NavigationHistoryTest/11" purpose="Check if the view can forward and backward history./11" result="PASS" /><testcase id="v1.NavigationHistoryTest/12" purpose="Check if the view can forward and backward history./12" result="PASS" /><testcase id="v1.NavigationHistoryTest/13" purpose="Check if the view can forward and backward history./13" result="PASS" /><testcase id="v1.NavigationHistoryTest/2" purpose="Check if the view can forward and backward history./2" result="PASS" /><testcase id="v1.NavigationHistoryTest/3" purpose="Check if the view can forward and backward history./3" result="PASS" /><testcase id="v1.NavigationHistoryTest/4" purpose="Check if the view can forward and backward history./4" result="PASS" /><testcase id="v1.NavigationHistoryTest/5" purpose="Check if the view can forward and backward history./5" result="PASS" /><testcase id="v1.NavigationHistoryTest/6" purpose="Check if the view can forward and backward history./6" result="PASS" /><testcase id="v1.NavigationHistoryTest/7" purpose="Check if the view can forward and backward history./7" result="PASS" /><testcase id="v1.NavigationHistoryTest/8" purpose="Check if the view can forward and backward history./8" result="PASS" /><testcase id="v1.NavigationHistoryTest/9" purpose="Check if the view can forward and backward history./9" result="PASS" /><testcase id="v1.XWalkJavascriptResultTest/1" purpose="Check if the methods of XWalkJavascriptResult interface can be executed correctly./1" result="PASS" /><testcase id="v1.XWalkJavascriptResultTest/2" purpose="Check if the methods of XWalkJavascriptResult interface can be executed correctly./2" result="PASS" /><testcase id="v1.XWalkJavascriptResultTest/3" purpose="Check if the methods of XWalkJavascriptResult interface can be executed correctly./3" result="PASS" /><testcase id="v1.XWalkNavigationItemTest/1" purpose="Check if the view history can get the correct url, title, and original url./1" result="PASS" /><testcase id="v1.XWalkNavigationItemTest/2" purpose="Check if the view history can get the correct url, title, and original url./2" result="PASS" /><testcase id="v1.XWalkNavigationItemTest/3" purpose="Check if the view history can get the correct url, title, and original url./3" result="PASS" /><testcase id="v1.XWalkPreferenceTest/1" purpose="Check if the methods of XWalkPreference interface can be executed correctly./1" result="PASS" /><testcase id="v1.XWalkPreferenceTest/2" purpose="Check if the methods of XWalkPreference interface can be executed correctly./2" result="PASS" /><testcase id="v1.XWalkPreferenceTest/3" purpose="Check if the methods of XWalkPreference interface can be executed correctly./3" result="PASS" /><testcase id="v1.XWalkPreferenceTest/4" purpose="Check if the methods of XWalkPreference interface can be executed correctly./4" result="PASS" /><testcase id="v1.XWalkResourceClientTest/1" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./1" result="PASS" /><testcase id="v1.XWalkResourceClientTest/10" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./10" result="PASS" /><testcase id="v1.XWalkResourceClientTest/11" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./11" result="PASS" /><testcase id="v1.XWalkResourceClientTest/12" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./12" result="PASS" /><testcase id="v1.XWalkResourceClientTest/13" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./13" result="PASS" /><testcase id="v1.XWalkResourceClientTest/14" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./14" result="PASS" /><testcase id="v1.XWalkResourceClientTest/15" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./15" result="PASS" /><testcase id="v1.XWalkResourceClientTest/16" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./16" result="PASS" /><testcase id="v1.XWalkResourceClientTest/17" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./17" result="PASS" /><testcase id="v1.XWalkResourceClientTest/18" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./18" result="PASS" /><testcase id="v1.XWalkResourceClientTest/19" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./19" result="PASS" /><testcase id="v1.XWalkResourceClientTest/2" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.XWalkResourceClientTest/20" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./20" result="PASS" /><testcase id="v1.XWalkResourceClientTest/21" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./21" result="PASS" /><testcase id="v1.XWalkResourceClientTest/22" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./22" result="PASS" /><testcase id="v1.XWalkResourceClientTest/23" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./23" result="PASS" /><testcase id="v1.XWalkResourceClientTest/24" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./24" result="PASS" /><testcase id="v1.XWalkResourceClientTest/25" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./25" result="PASS" /><testcase id="v1.XWalkResourceClientTest/26" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./26" result="PASS" /><testcase id="v1.XWalkResourceClientTest/27" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./27" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.XWalkResourceClientTest/28" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./28" result="PASS" /><testcase id="v1.XWalkResourceClientTest/29" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./29" result="PASS" /><testcase id="v1.XWalkResourceClientTest/3" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.XWalkResourceClientTest/30" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./30" result="PASS" /><testcase id="v1.XWalkResourceClientTest/31" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./31" result="PASS" /><testcase id="v1.XWalkResourceClientTest/32" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./32" result="PASS" /><testcase id="v1.XWalkResourceClientTest/33" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./33" result="PASS" /><testcase id="v1.XWalkResourceClientTest/34" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./34" result="PASS" /><testcase id="v1.XWalkResourceClientTest/4" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./4" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.XWalkResourceClientTest/5" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./5" result="PASS" /><testcase id="v1.XWalkResourceClientTest/6" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./6" result="PASS" /><testcase id="v1.XWalkResourceClientTest/7" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./7" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3508 XWALK-3508]]</testcase><testcase id="v1.XWalkResourceClientTest/8" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./8" result="PASS" /><testcase id="v1.XWalkResourceClientTest/9" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./9" result="PASS" /><testcase id="v1.XWalkUIClientTest/1" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./1" result="PASS" /><testcase id="v1.XWalkUIClientTest/10" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./10" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.XWalkUIClientTest/11" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./11" result="PASS" /><testcase id="v1.XWalkUIClientTest/2" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.XWalkUIClientTest/3" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./3" result="PASS" /><testcase id="v1.XWalkUIClientTest/4" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./4" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.XWalkUIClientTest/5" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./5" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.XWalkUIClientTest/6" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./6" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.XWalkUIClientTest/7" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./7" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.XWalkUIClientTest/8" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./8" result="PASS" /><testcase id="v1.XWalkUIClientTest/9" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./9" result="PASS" /><testcase id="v1.XWalkViewTest/1" purpose="Check if the methods of XWalkView interface can be executed correctly./1" result="PASS" /><testcase id="v1.XWalkViewTest/10" purpose="Check if the methods of XWalkView interface can be executed correctly./10" result="PASS" /><testcase id="v1.XWalkViewTest/11" purpose="Check if the methods of XWalkView interface can be executed correctly./11" result="PASS" /><testcase id="v1.XWalkViewTest/12" purpose="Check if the methods of XWalkView interface can be executed correctly./12" result="PASS" /><testcase id="v1.XWalkViewTest/13" purpose="Check if the methods of XWalkView interface can be executed correctly./13" result="PASS" /><testcase id="v1.XWalkViewTest/14" purpose="Check if the methods of XWalkView interface can be executed correctly./14" result="PASS" /><testcase id="v1.XWalkViewTest/15" purpose="Check if the methods of XWalkView interface can be executed correctly./15" result="PASS" /><testcase id="v1.XWalkViewTest/16" purpose="Check if the methods of XWalkView interface can be executed correctly./16" result="PASS" /><testcase id="v1.XWalkViewTest/17" purpose="Check if the methods of XWalkView interface can be executed correctly./17" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v1.XWalkViewTest/18" purpose="Check if the methods of XWalkView interface can be executed correctly./18" result="PASS" /><testcase id="v1.XWalkViewTest/19" purpose="Check if the methods of XWalkView interface can be executed correctly./19" result="PASS" /><testcase id="v1.XWalkViewTest/2" purpose="Check if the methods of XWalkView interface can be executed correctly./2" result="PASS" /><testcase id="v1.XWalkViewTest/20" purpose="Check if the methods of XWalkView interface can be executed correctly./20" result="PASS" /><testcase id="v1.XWalkViewTest/21" purpose="Check if the methods of XWalkView interface can be executed correctly./21" result="PASS" /><testcase id="v1.XWalkViewTest/22" purpose="Check if the methods of XWalkView interface can be executed correctly./22" result="PASS" /><testcase id="v1.XWalkViewTest/23" purpose="Check if the methods of XWalkView interface can be executed correctly./23" result="PASS" /><testcase id="v1.XWalkViewTest/24" purpose="Check if the methods of XWalkView interface can be executed correctly./24" result="PASS" /><testcase id="v1.XWalkViewTest/25" purpose="Check if the methods of XWalkView interface can be executed correctly./25" result="PASS" /><testcase id="v1.XWalkViewTest/26" purpose="Check if the methods of XWalkView interface can be executed correctly./26" result="PASS" /><testcase id="v1.XWalkViewTest/27" purpose="Check if the methods of XWalkView interface can be executed correctly./27" result="PASS" /><testcase id="v1.XWalkViewTest/28" purpose="Check if the methods of XWalkView interface can be executed correctly./28" result="PASS" /><testcase id="v1.XWalkViewTest/29" purpose="Check if the methods of XWalkView interface can be executed correctly./29" result="PASS" /><testcase id="v1.XWalkViewTest/3" purpose="Check if the methods of XWalkView interface can be executed correctly./3" result="PASS" /><testcase id="v1.XWalkViewTest/4" purpose="Check if the methods of XWalkView interface can be executed correctly./4" result="PASS" /><testcase id="v1.XWalkViewTest/5" purpose="Check if the methods of XWalkView interface can be executed correctly./5" result="PASS" /><testcase id="v1.XWalkViewTest/6" purpose="Check if the methods of XWalkView interface can be executed correctly./6" result="PASS" /><testcase id="v1.XWalkViewTest/7" purpose="Check if the methods of XWalkView interface can be executed correctly./7" result="PASS" /><testcase id="v1.XWalkViewTest/8" purpose="Check if the methods of XWalkView interface can be executed correctly./8" result="PASS" /><testcase id="v1.XWalkViewTest/9" purpose="Check if the methods of XWalkView interface can be executed correctly./9" result="PASS" /><testcase id="v2.XWalkExtensionTest/1" purpose="Check if the methods of XWalkExtension interface can be executed correctly./1" result="PASS" /><testcase id="v2.XWalkExtensionTest/10" purpose="Check if the methods of XWalkExtension interface can be executed correctly./10" result="PASS" /><testcase id="v2.XWalkExtensionTest/11" purpose="Check if the methods of XWalkExtension interface can be executed correctly./11" result="PASS" /><testcase id="v2.XWalkExtensionTest/12" purpose="Check if the methods of XWalkExtension interface can be executed correctly./12" result="PASS" /><testcase id="v2.XWalkExtensionTest/2" purpose="Check if the methods of XWalkExtension interface can be executed correctly./2" result="PASS" /><testcase id="v2.XWalkExtensionTest/3" purpose="Check if the methods of XWalkExtension interface can be executed correctly./3" result="PASS" /><testcase id="v2.XWalkExtensionTest/4" purpose="Check if the methods of XWalkExtension interface can be executed correctly./4" result="PASS" /><testcase id="v2.XWalkExtensionTest/5" purpose="Check if the methods of XWalkExtension interface can be executed correctly./5" result="PASS" /><testcase id="v2.XWalkExtensionTest/6" purpose="Check if the methods of XWalkExtension interface can be executed correctly./6" result="PASS" /><testcase id="v2.XWalkExtensionTest/7" purpose="Check if the methods of XWalkExtension interface can be executed correctly./7" result="PASS" /><testcase id="v2.XWalkExtensionTest/8" purpose="Check if the methods of XWalkExtension interface can be executed correctly./8" result="PASS" /><testcase id="v2.XWalkExtensionTest/9" purpose="Check if the methods of XWalkExtension interface can be executed correctly./9" result="PASS" /><testcase id="v2.XWalkResourceClientTest/1" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./1" result="PASS" /><testcase id="v2.XWalkResourceClientTest/10" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./10" result="PASS" /><testcase id="v2.XWalkResourceClientTest/11" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./11" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkResourceClientTest/12" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./12" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkResourceClientTest/13" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./13" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkResourceClientTest/14" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./14" result="PASS" /><testcase id="v2.XWalkResourceClientTest/15" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./15" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkResourceClientTest/16" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./16" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkResourceClientTest/17" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./17" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkResourceClientTest/2" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkResourceClientTest/3" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkResourceClientTest/4" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./4" result="PASS" /><testcase id="v2.XWalkResourceClientTest/5" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./5" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkResourceClientTest/6" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./6" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkResourceClientTest/7" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./7" result="PASS" /><testcase id="v2.XWalkResourceClientTest/8" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./8" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkResourceClientTest/9" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./9" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkUIClientTest/1" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./1" result="PASS" /><testcase id="v2.XWalkUIClientTest/10" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./10" result="PASS" /><testcase id="v2.XWalkUIClientTest/11" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./11" result="PASS" /><testcase id="v2.XWalkUIClientTest/12" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./12" result="PASS" /><testcase id="v2.XWalkUIClientTest/13" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./13" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3564 XWALK-3564]]</testcase><testcase id="v2.XWalkUIClientTest/14" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./14" result="PASS" /><testcase id="v2.XWalkUIClientTest/15" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./15" result="PASS" /><testcase id="v2.XWalkUIClientTest/16" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./16" result="PASS" /><testcase id="v2.XWalkUIClientTest/17" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./17" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3564 XWALK-3564]]</testcase><testcase id="v2.XWalkUIClientTest/18" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./18" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3564 XWALK-3564]]</testcase><testcase id="v2.XWalkUIClientTest/19" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./19" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3964 XWALK-3964]]</testcase><testcase id="v2.XWalkUIClientTest/2" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./2" result="PASS" /><testcase id="v2.XWalkUIClientTest/20" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./20" result="PASS" /><testcase id="v2.XWalkUIClientTest/21" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./21" result="PASS" /><testcase id="v2.XWalkUIClientTest/22" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./22" result="PASS" /><testcase id="v2.XWalkUIClientTest/23" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./23" result="PASS" /><testcase id="v2.XWalkUIClientTest/24" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./24" result="PASS" /><testcase id="v2.XWalkUIClientTest/3" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./3" result="PASS" /><testcase id="v2.XWalkUIClientTest/4" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./4" result="PASS" /><testcase id="v2.XWalkUIClientTest/5" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./5" result="PASS" /><testcase id="v2.XWalkUIClientTest/6" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./6" result="PASS" /><testcase id="v2.XWalkUIClientTest/7" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./7" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkUIClientTest/8" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./8" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v2.XWalkUIClientTest/9" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./9" result="PASS" /><testcase id="v3.XWalkPreferenceTest/1" purpose="Check if the methods of XWalkPreference interface can be executed correctly./1" result="PASS" /><testcase id="v3.XWalkPreferenceTest/2" purpose="Check if the methods of XWalkPreference interface can be executed correctly./2" result="PASS" /><testcase id="v3.XWalkPreferenceTest/3" purpose="Check if the methods of XWalkPreference interface can be executed correctly./3" result="PASS" /><testcase id="v3.XWalkPreferenceTest/4" purpose="Check if the methods of XWalkPreference interface can be executed correctly./4" result="PASS" /><testcase id="v3.XWalkPreferenceTest/5" purpose="Check if the methods of XWalkPreference interface can be executed correctly./5" result="PASS" /><testcase id="v3.XWalkPreferenceTest/6" purpose="Check if the methods of XWalkPreference interface can be executed correctly./6" result="PASS" /><testcase id="v3.XWalkPreferenceTest/7" purpose="Check if the methods of XWalkPreference interface can be executed correctly./7" result="PASS" /><testcase id="v4.XWalkResourceClientTest/1" purpose="Check if the methods of XWalkResourceClient interface can be executed correctly./1" result="PASS" /><testcase id="v4.XWalkUIClientTest/1" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./1" result="PASS" /><testcase id="v4.XWalkUIClientTest/2" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./2" result="PASS" /><testcase id="v4.XWalkUIClientTest/3" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./3" result="PASS" /><testcase id="v4.XWalkUIClientTest/4" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./4" result="PASS" /><testcase id="v4.XWalkViewTest/1" purpose="Check if the methods of XWalkView interface can be executed correctly./1" result="PASS" /><testcase id="v4.XWalkViewTest/2" purpose="Check if the methods of XWalkView interface can be executed correctly./2" result="PASS" /><testcase id="v5.XWalkResourceClientTest/1" purpose="Check if the methods of XWalkResourceClientTest interface can be executed correctly./1" result="PASS" /><testcase id="v5.XWalkUIClientTest/1" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./1" result="PASS" /><testcase id="v5.XWalkUIClientTest/10" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./10" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v5.XWalkUIClientTest/11" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./11" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v5.XWalkUIClientTest/12" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./12" result="PASS" /><testcase id="v5.XWalkUIClientTest/2" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v5.XWalkUIClientTest/3" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v5.XWalkUIClientTest/4" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./4" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v5.XWalkUIClientTest/5" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./5" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v5.XWalkUIClientTest/6" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./6" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v5.XWalkUIClientTest/7" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./7" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v5.XWalkUIClientTest/8" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./8" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v5.XWalkUIClientTest/9" purpose="Check if the methods of XWalkUIClient interface can be executed correctly./9" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v5.XWalkViewTest/1" purpose="Check if the methods of XWalkView interface can be executed correctly./1" result="PASS" /><testcase id="v5.XWalkViewTest/10" purpose="Check if the methods of XWalkView interface can be executed correctly./10" result="PASS" /><testcase id="v5.XWalkViewTest/2" purpose="Check if the methods of XWalkView interface can be executed correctly./2" result="PASS" /><testcase id="v5.XWalkViewTest/3" purpose="Check if the methods of XWalkView interface can be executed correctly./3" result="PASS" /><testcase id="v5.XWalkViewTest/4" purpose="Check if the methods of XWalkView interface can be executed correctly./4" result="PASS" /><testcase id="v5.XWalkViewTest/5" purpose="Check if the methods of XWalkView interface can be executed correctly./5" result="PASS" /><testcase id="v5.XWalkViewTest/6" purpose="Check if the methods of XWalkView interface can be executed correctly./6" result="PASS" /><testcase id="v5.XWalkViewTest/7" purpose="Check if the methods of XWalkView interface can be executed correctly./7" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4251 XWALK-4251]]</testcase><testcase id="v5.XWalkViewTest/8" purpose="Check if the methods of XWalkView interface can be executed correctly./8" result="PASS" /><testcase id="v5.XWalkViewTest/9" purpose="Check if the methods of XWalkView interface can be executed correctly./9" result="PASS" /></category><category name="Sample Apps"><testcase id="gallery_appFunction" purpose="Validate if sample app gallery function could work well" result="PASS" /><testcase id="gallery_icon" purpose="Validate if sample app Gallery icon display normally" result="PASS" /><testcase id="gallery_install" purpose="Validate if sample app Gallery could be installed successfully" result="PASS" /><testcase id="gallery_launch" purpose="Validate if sample app Gallery could be launched successfully" result="PASS" /><testcase id="gallery_orientation" purpose="Validate if sample app Gallery could rotate between portrait orientation screen and landscape orientation screen" result="PASS" /><testcase id="gallery_pack" purpose="Validate if sample app Gallery could be packed successfully" result="PASS" /><testcase id="gallery_stop" purpose="Validate if sample app Gallery could be stopped successfully" result="PASS" /><testcase id="gallery_switch" purpose="Validate if sample app Gallery could switch back successfully" result="PASS" /><testcase id="gallery_uninstall" purpose="Validate if sample app Gallery could be uninstalled successfully" result="PASS" /><testcase id="gallery_uninstall_withAppRunning" purpose="Validate Crosswalk support that uninstall the sample app Gallery when it's actually running" result="PASS" /><testcase id="hangonman_appFunction" purpose="Validate if sample app HangOnMan function could work well" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2223 XWALK-2223]]</testcase><testcase id="hangonman_icon" purpose="Validate if sample app HangOnMan icon display normally" result="PASS" /><testcase id="hangonman_install" purpose="Validate if hangonman could be installed successfully" result="PASS" /><testcase id="hangonman_launch" purpose="Validate sample app hangonman could be launched successfully" result="PASS" /><testcase id="hangonman_orientation" purpose="Validate if sample app HangOnMan could rotate between portrait orientation screen and landscape orientation screen" result="PASS" /><testcase id="hangonman_pack" purpose="Validate if hangonman could be packed successfully" result="PASS" /><testcase id="hangonman_stop" purpose="Validate sample app hangonman could be stopped successfully" result="PASS" /><testcase id="hangonman_switch" purpose="Validate if sample app HangOnMan could switch back successfully" result="PASS" /><testcase id="hangonman_uninstall" purpose="Validate if sample app hangonman could be uninstalled successfully" result="PASS" /><testcase id="hangonman_uninstall_withAppRunning" purpose="Validate Crosswalk support that uninstall the sample app hangonman when it's actually running" result="PASS" /><testcase id="hexgl_appFunction" purpose="Validate if sample app HexGL function could work well" result="PASS" /><testcase id="hexgl_icon" purpose="Validate if sample app HexGL icon display normally" result="PASS" /><testcase id="hexgl_install" purpose="Validate if HexGL could be installed successfully" result="PASS" /><testcase id="hexgl_launch" purpose="Validate sample app HexGL could be launched successfully" result="PASS" /><testcase id="hexgl_orientation" purpose="Validate if sample app HexGL could rotate between portrait orientation screen and landscape orientation screen" result="PASS" /><testcase id="hexgl_pack" purpose="Validate if HexGL could be packed successfully" result="PASS" /><testcase id="hexgl_stop" purpose="Validate sample app HexGL could be stopped successfully" result="PASS" /><testcase id="hexgl_switch" purpose="Validate if sample app HexGL could switch back successfully" result="PASS" /><testcase id="hexgl_uninstall" purpose="Validate if sample app HexGL could be uninstalled successfully" result="PASS" /><testcase id="hexgl_uninstall_withAppRunning" purpose="Validate Crosswalk support that uninstall the sample app HexGL when it's actually running" result="PASS" /><testcase id="M38_CollectionsIterators" purpose="Check collections-iterators feature is supported or not" result="PASS" /><testcase id="M38_FileConstructor" purpose="Check file constructor feature is supported or not" result="PASS" /><testcase id="M38_PictureElement" purpose="Check picture element feature is supported or not" result="PASS" /><testcase id="M38_ScreenOrientation" purpose="Check screen orientation feature is supported or not" result="PASS" /><testcase id="M39_Beacon" purpose="Validate if Beacon is supported or not" result="PASS" /><testcase id="M39_Generators" purpose="Validate if ES6 generator is supported or not" result="PASS" /><testcase id="M39_WebAnimations_AnimateMethod" purpose="Validate if Web Animations Javascript API [element.animate()] is supported or not" result="PASS" /><testcase id="M39_WebAnimations_PlaybackControl" purpose="Validate if Web Animations Javascript API [playback control] is supported or not" result="PASS" /><testcase id="M39_WebApplicationManifest" purpose="Validate if Web Application Manifest is supported or not" result="PASS" /><testcase id="M40_ReportValidity" purpose="Check if reportValidity() method is supported or not" result="PASS" /><testcase id="M40_ServiceWorker" purpose="Check if service worker is supported or not" result="PASS" /><testcase id="M41_LexicalDeclarations" purpose="Check if Lexical Declarations is supported or not" result="PASS" /><testcase id="M41_MediaQueries" purpose="Check if Media Queries('any-pointer'/'any-hover') is supported or not" result="PASS" /><testcase id="M41_PixelatedImage" purpose="Check if Pixelated Image is supported or not" result="PASS" /><testcase id="M41_TemplateLiterals" purpose="Check if Template Literals is supported or not" result="PASS" /><testcase id="M41_WebAudioSuspendResume" purpose="Check if WebAudio Suspend/Resume is supported or not" result="PASS" /><testcase id="M42_AppInstallBanners" purpose="Check if App Install Banners is supported or not" result="FAIL">same as Chrome 42</testcase><testcase id="M42_Classes-ES6" purpose="Check if Languages support classes or not" result="PASS" /><testcase id="M42_EncryptedMediaExtensions" purpose="Check if Encrypted Media Extensions is supported or not" result="PASS" /><testcase id="M42_FetchAPI" purpose="Check if Fetch API is supported or not" result="PASS" /><testcase id="M42_WebAudioStartRendering" purpose="Check if WebAudio startRendering is supported or not" result="PASS" /><testcase id="M43_CutAndCopy" purpose="Check that copy and cut is supported or not" result="PASS" /><testcase id="M43_FetchAPI_ResponseStream" purpose="Check that Fetch API supports response.body property or not" result="PASS" /><testcase id="memorygame_appFunction" purpose="Validate if sample app MemoryGame function could work well" result="PASS" /><testcase id="memorygame_icon" purpose="Validate if sample app MemoryGame icon display normally" result="PASS" /><testcase id="memorygame_install" purpose="Validate if MemoryGame could be installed successfully" result="PASS" /><testcase id="memorygame_launch" purpose="Validate sample app MemoryGame could be launched successfully" result="PASS" /><testcase id="memorygame_orientation" purpose="Validate if sample app MemoryGame could rotate between portrait orientation screen and landscape orientation screen" result="PASS" /><testcase id="memorygame_pack" purpose="Validate if MemoryGame could be packed successfully" result="PASS" /><testcase id="memorygame_stop" purpose="Validate sample app MemoryGame could be stopped successfully" result="PASS" /><testcase id="memorygame_switch" purpose="Validate if sample app MemoryGame could switch back successfully" result="PASS" /><testcase id="memorygame_uninstall" purpose="Validate if sample app MemoryGame could be uninstalled successfully" result="PASS" /><testcase id="memorygame_uninstall_withAppRunning" purpose="Validate Crosswalk support that uninstall the sample app MemoryGame when it's actually running" result="PASS" /><testcase id="RTC_datachannel" purpose="Check if the first channel onDataChannel can be fired" result="FAIL">createDataChannel and onDataChannel issues(upstream issues, XWALK-1473)</testcase><testcase id="simd_appFunction" purpose="Validate if sample app SIMD function could work well" result="PASS" /><testcase id="simd_icon" purpose="Check if SIMD icon display correctly" result="PASS" /><testcase id="simd_install" purpose="Check if SIMD can be installed" result="PASS" /><testcase id="simd_launch" purpose="Check if SIMD can be launched" result="PASS" /><testcase id="simd_orientation" purpose="Check if SIMD can be orientation" result="PASS" /><testcase id="simd_pack" purpose="Check if SIMD can be packed" result="PASS" /><testcase id="simd_stop" purpose="Check if SIMD can be stopped" result="PASS" /><testcase id="simd_switch" purpose="Check if SIMD can be switched" result="PASS" /><testcase id="simd_uninstall" purpose="Check if SIMD can be uninstalled" result="PASS" /><testcase id="simd_uninstall_withAppRunning" purpose="Check if SIMD can be uninstalled with app running" result="PASS" /><testcase id="sysapps_appFunction" purpose="Validate if sample app SysApps function could work well" result="PASS" /><testcase id="sysapps_icon" purpose="Validate if sample app SysApps icon display normally" result="PASS" /><testcase id="sysapps_install" purpose="Validate if SysApps could be installed successfully" result="PASS" /><testcase id="sysapps_launch" purpose="Validate sample app SysApps could be launched successfully" result="PASS" /><testcase id="sysapps_orientation" purpose="Validate if sample app SysApps could rotate between portrait orientation screen and landscape orientation screen" result="PASS" /><testcase id="sysapps_pack" purpose="Validate if SysApps could be packed successfully" result="PASS" /><testcase id="sysapps_stop" purpose="Validate sample app SysApps could be stopped successfully" result="PASS" /><testcase id="sysapps_switch" purpose="Validate if sample app SysApps could switch back successfully" result="PASS" /><testcase id="sysapps_uninstall" purpose="Validate if sample app SysApps could be uninstalled successfully" result="PASS" /><testcase id="sysapps_uninstall_withAppRunning" purpose="Validate Crosswalk support that uninstall the sample app SysApps when it's actually running" result="PASS" /><testcase id="webrtc_icon" purpose="Validate if sample app WebRTC icon display normally" result="PASS" /><testcase id="webrtc_install" purpose="Validate if WebRTC could be installed successfully" result="PASS" /><testcase id="webrtc_launch" purpose="Validate sample app WebRTC could be launched successfully" result="PASS" /><testcase id="webrtc_login" purpose="Validate WebRTC sample app  could login successfully" result="PASS" /><testcase id="webrtc_orientation" purpose="Validate if sample app WebRTC could rotate between portrait orientation screen and landscape orientation screen" result="PASS" /><testcase id="webrtc_pack" purpose="Validate if WebRTC could be packed successfully" result="PASS" /><testcase id="webrtc_stop" purpose="Validate sample app WebRTC could be stopped successfully" result="PASS" /><testcase id="webrtc_switch" purpose="Validate if sample app WebRTC could switch back successfully" result="PASS" /><testcase id="webrtc_textChat" purpose="Validate WebRTC sample app  could text chat" result="PASS" /><testcase id="webrtc_uninstall" purpose="Validate if sample app WebRTC could be uninstalled successfully" result="PASS" /><testcase id="webrtc_uninstall_withAppRunning" purpose="Validate Crosswalk support that uninstall the sample app WebRTC when it's actually running" result="PASS" /><testcase id="webrtc_videoChat" purpose="Validate WebRTC sample app  could video chat" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4010 XWALK-4010]]</testcase></category><category name="Crosswalk APIs/Screen Presentation APIs"><testcase id="Presentation_displayavailablechange_on_Widi_Adapter" purpose="Test checks that the presentation displayavailablechange event on Widi Adapter" result="PASS" /><testcase id="Presentation_displayAvailable_false" purpose="Test checks that the attribute displayAvailable of presentation value can be false" result="PASS" /><testcase id="Presentation_displayAvailable_true" purpose="Test checks that the attribute displayAvailable of presentation value can be true" result="PASS" /><testcase id="Presentation_lifecycle_with_simulate_close" purpose="Test checks that the presentation lifecycle, when simulate secondary display close" result="PASS" /><testcase id="Presentation_lifecycle_with_simulate_open" purpose="Test checks that the presentation lifecycle, when simulate secondary display open" result="PASS" /><testcase id="Presentation_requestShow_old_version_android" purpose="Test checks that the presentation requestShow on older version of Android" result="PASS" /><testcase id="Presentation_requestShow_with_simulate_close" purpose="Test checks that the method requestShow of presentation can work, when simulate secondary display close" result="PASS" /><testcase id="Presentation_requestShow_with_simulate_open" purpose="Test checks that the method requestShow of presentation can work, when simulate secondary display open" result="PASS" /><testcase id="presentation_secondary_page_image" purpose="Test checks that the presentation secondary page can display picture" result="PASS" /><testcase id="presentation_secondary_page_message" purpose="Test checks that the presentation secondary page can open" result="PASS" /><testcase id="presentation_secondary_page_video" purpose="Test checks that the presentation secondary page can play video" result="PASS" /><testcase id="Presentation_work_on_Widi_Adapter" purpose="Test checks that the presentation works well on Widi Adapter" result="PASS" /><testcase id="Presentation_displayAvailable_basic" purpose="Test checks that navigator.presentation.displayAvailable attribute basic" result="PASS" /><testcase id="Presentation_ondisplayavailablechange_basic" purpose="Test checks that navigator.presentation.ondisplayavailablechange attribute basic" result="PASS" /><testcase id="Presentation_requestShow_basic" purpose="Test checks that navigator.presentation.requestShow method basic" result="PASS" /></category><category name="W3C_HTML5 APIs/Communication/HTML5 The session history of browsing contexts"><testcase id="history_forward_basic" purpose="Check if the history.forward method works well." result="PASS" /><testcase id="history_back_exists" purpose="Check if history.back method exists" result="PASS" /><testcase id="history_back_type" purpose="Check if history.back method is of type function" result="PASS" /><testcase id="history_forward_exists" purpose="Check if history.forward method exists" result="PASS" /><testcase id="history_forward_type" purpose="Check if history.forward is of type function" result="PASS" /><testcase id="history_go_exists" purpose="Check if history.go method exists" result="PASS" /><testcase id="history_go_no_argument" purpose="Check if History.go method not set,then compare Location.href is '001.html'" result="PASS" /><testcase id="history_go_outOfRange" purpose="Check if History.go method set 10000 out of range navigates will do nothing" result="PASS" /><testcase id="history_go_type" purpose="Check if history.go method is of type function" result="PASS" /><testcase id="history_go_zero" purpose="Check if History.go method set 0,then compare Location.href is '001.html'" result="PASS" /><testcase id="history_length_exists" purpose="Check if history.length attribute exists" result="PASS" /><testcase id="history_length_not_decrease_after_going_back" purpose="history.length should not decrease after going back" result="PASS" /><testcase id="history_length_not_update_replacing_state_with_no_URL" purpose="history.length should not update when replacing a state with no URL" result="PASS" /><testcase id="history_length_readonly" purpose="Check if history.length attribute set history.length+10.then compare history.length is history.leng+10" result="PASS" /><testcase id="history_length_type" purpose="Check if history.length attribute is of type number" result="PASS" /><testcase id="history_length_update_when_loading_pages" purpose="history.length should update when loading pages in an iframe" result="PASS" /><testcase id="history_length_update_when_setting_location_hash" purpose="history.length should update when setting location.hash" result="PASS" /><testcase id="history_length_when_pushing_state" purpose="history.length should update when pushing a state" result="PASS" /><testcase id="history_pushState_able_to_make_structured_clones" purpose="pushState must be able to make structured clones of complex objects" result="PASS" /><testcase id="history_pushState_able_to_set_absolute_URLs" purpose="pushState must be able to set absolute URLs to the same host" result="PASS" /><testcase id="history_pushState_able_to_set_location_hash" purpose="pushState must be able to set location.hash" result="PASS" /><testcase id="history_pushState_able_to_set_location_pathname" purpose="pushState must be able to set location.pathname" result="PASS" /><testcase id="history_pushState_arguments_with_about_colon_blank" purpose="pushState must not be allowed to create cross-origin URLs (about:blank)" result="PASS" /><testcase id="history_pushState_arguments_with_cross-origin_URLs" purpose="pushState must not be allowed to create cross-origin URLs" result="PASS" /><testcase id="history_pushState_arguments_with_data_colon_URI" purpose="pushState must not be allowed to create cross-origin URLs (data:URI)" result="PASS" /><testcase id="history_pushState_arguments_with_invalid_URLs" purpose="pushState must not be allowed to create invalid URLs" result="PASS" /><testcase id="history_pushState_basic" purpose="Check if the location.href is '002.html' when history.pushstate method is set to '002.html'" result="PASS" /><testcase id="history_pushState_document_referrer" purpose="Check if document.referrer should use the pushed state" result="PASS" /><testcase id="history_pushState_document_referrer_2" purpose="Check if document.referrer should use the pushed state before onload" result="PASS" /><testcase id="history_pushState_exists" purpose="Check if history.pushState method exists" result="PASS" /><testcase id="history_pushState_exist_within_iframes" purpose="history.pushState must exist within iframes" result="PASS" /><testcase id="history_pushState_HTTP_Referer" purpose="Check if HTTP Referer should use the pushed state" result="PASS" /><testcase id="history_pushState_HTTP_Referer_2" purpose="Check if HTTP Referer should use the pushed state before onload" result="PASS" /><testcase id="history_pushState_not_able_to_use_DOM_node_as_data" purpose="pushState must not be able to use a DOM node as data" result="PASS" /><testcase id="history_pushState_not_able_to_use_error_object_as_data" purpose="pushState must not be able to use an error object as data" result="PASS" /><testcase id="history_pushState_not_able_to_use_function_as_data" purpose="pushState must not be able to use a function as data" result="PASS" /><testcase id="history_pushState_not_alter_with_no_URL_arguments" purpose="pushState must not alter location.hash when no URL is provided" result="PASS" /><testcase id="history_pushState_not_fire_hashchange_event" purpose="pushState must not fire hashchange events" result="PASS" /><testcase id="history_pushState_not_load_new_URL" purpose="pushState should not actually load the new URL" result="PASS" /><testcase id="history_pushState_reflecte" purpose="Check if the pushed location can be reflected immediately" result="PASS" /><testcase id="history_pushState_reloading_a_pushed_state" purpose="reloading a pushed state should actually load the new URL" result="PASS" /><testcase id="history_pushState_remove_history" purpose="pushState must remove all history after the current state" result="PASS" /><testcase id="history_pushState_retained_later" purpose="Check if the pushed location retained after the page has loaded" result="PASS" /><testcase id="history_pushState_set_location_state" purpose="Check if history.pushState can be set the location state" result="PASS" /><testcase id="history_pushState_type" purpose="Check if the type of window.history.pushState is function" result="PASS" /><testcase id="history_pushState_url_null" purpose="Check if history.pushState method param url set null,then compare location.href is '001.html'" result="PASS" /><testcase id="history_replaceState_able_to_make_structured_clones" purpose="replaceState must be able to make structured clones of complex objects" result="PASS" /><testcase id="history_replaceState_able_to_set_absolute_URLs" purpose="replaceState must be able to set absolute URLs to the same host" result="PASS" /><testcase id="history_replaceState_able_to_set_location_pathname" purpose="replaceState must be able to set location.pathname" result="PASS" /><testcase id="history_replaceState_arguments_with_a_DOM" purpose="replaceState must not be able to use a DOM node as data" result="PASS" /><testcase id="history_replaceState_arguments_with_a_error_object" purpose="replaceState must not be able to use an error object as data" result="PASS" /><testcase id="history_replaceState_arguments_with_a_function" purpose="replaceState must not be able to use a function as data" result="PASS" /><testcase id="history_replaceState_basic" purpose="Check if the location.href is '002.html' when history.replaceState method param url set '002.html'" result="PASS" /><testcase id="history_replaceState_document_referrer" purpose="Check if document.referrer should use the replaced state" result="PASS" /><testcase id="history_replaceState_document_referrer_2" purpose="Check if document.referrer should use the replaced state before onload" result="PASS" /><testcase id="history_replaceState_exists" purpose="Check if history.replaceState method exists" result="PASS" /><testcase id="history_replaceState_exist_within_iframes" purpose="history.replaceState must exist within iframes" result="PASS" /><testcase id="history_replaceState_HTTP_Referer" purpose="Check if HTTP Referer should use the replaced state" result="PASS" /><testcase id="history_replaceState_HTTP_Referer_2" purpose="Check if HTTP Referer should use the replaced state before onload" result="PASS" /><testcase id="history_replaceState_not_allowed_create_cross-origin_URLs" purpose="replaceState must not be allowed to create cross-origin URLs" result="PASS" /><testcase id="history_replaceState_not_allowed_to_create_about_colon_blank" purpose="replaceState must not be allowed to create cross-origin URLs (about:blank)" result="PASS" /><testcase id="history_replaceState_not_allowed_to_create_data_colon_URI" purpose="replaceState must not be allowed to create cross-origin URLs (data:URI)" result="PASS" /><testcase id="history_replaceState_not_allowed_to_create_invalid_URLs" purpose="replaceState must not be allowed to create invalid URLs" result="PASS" /><testcase id="history_replaceState_not_altering_forward_history" purpose="replaceState must replace the existing state without altering the forward history" result="PASS" /><testcase id="history_replaceState_not_fire_hashchange_event" purpose="replaceState must not fire hashchange events" result="PASS" /><testcase id="history_replaceState_not_load_new_URL" purpose="replaceState should not actually load the new URL" result="PASS" /><testcase id="history_replaceState_not_remove_tasks_queued" purpose="replaceState must not remove any tasks queued by the history traversal task source" result="PASS" /><testcase id="history_replaceState_reflecte" purpose="Check if the replaced location can be reflected immediately" result="PASS" /><testcase id="history_replaceState_reloading_not_load_new_URL" purpose="reloading a replaced state should actually load the new URL" result="PASS" /><testcase id="history_replaceState_replace_existing_state" purpose="replaceState must replace the existing state and not add an extra one" result="PASS" /><testcase id="history_replaceState_retained_later" purpose="Check if the replaced location retained after the page has loaded" result="PASS" /><testcase id="history_replaceState_set_location_state" purpose="Check if history.replaceState can be set the location state" result="PASS" /><testcase id="history_replaceState_type" purpose="Check if the type of window.history.replaceState is function" result="PASS" /><testcase id="history_replaceState_url_null" purpose="Check if history.replacestate method param url set null,then compare location.href is '001.html'" result="PASS" /><testcase id="history_replaceState_without_URL" purpose="hash should not change when replaceState is called without a URL" result="PASS" /><testcase id="history_replaceState_with_a_URL_hash_change" purpose="hash should change when replaceState is called with a URL" result="PASS" /><testcase id="history_replaceState_with_a_URL_length_no_update" purpose="history.length should not update when replacing a state with a URL" result="PASS" /><testcase id="history_security_errors_test_pushState_with_empty" purpose="security errors are expected to be thrown in the context of the document that owns the history object, pushState with empty" result="PASS" /><testcase id="history_security_errors_test_pushState_with_URL" purpose="security errors are expected to be thrown in the context of the document that owns the history object, pushState with URL" result="PASS" /><testcase id="history_security_errors_test_replaceState_with_empty" purpose="security errors are expected to be thrown in the context of the document that owns the history object, replaceState with empty" result="PASS" /><testcase id="history_security_errors_test_replaceState_with_URL" purpose="security errors are expected to be thrown in the context of the document that owns the history object, replaceState with URL" result="PASS" /><testcase id="history_state_exists" purpose="Check if history.state attribute exists" result="PASS" /><testcase id="history_state_initial" purpose="Check if the value of history.state initialled to null" result="PASS" /><testcase id="history_state_initial_be_null" purpose="initial history.state should be null" result="PASS" /><testcase id="history_state_readonly" purpose="Check if history.state attribute is readonly" result="PASS" /><testcase id="history_state_reference_a_clone" purpose="history.state should also reference a clone of the original object" result="PASS" /><testcase id="history_state_reference_a_clone_not_reference_original" purpose="history.state should be a clone of the original object, not a reference to it" result="PASS" /><testcase id="history_state_update_after_state_pushed" purpose="history.state should update after a state is pushed" result="PASS" /><testcase id="history_state_value_after_onload" purpose="Check if the value of history.state still be null after onload event occurs" result="PASS" /><testcase id="history_state_value_onload" purpose="Check if the value of history.state still be null on onload event occurs" result="PASS" /><testcase id="history_state_write" purpose="Check if writing to history.state should be silently ignored and not throw an error" result="PASS" /><testcase id="history_traversal_task_source" purpose="go must queue a task with the history traversal task source (run asynchronously)" result="PASS" /><testcase id="history_traversed_must_traverse_hash_changes" purpose="traversing history must also traverse hash changes" result="PASS" /><testcase id="history_traversed_must_traverse_pushed_states" purpose="traversing history must traverse pushed states" result="PASS" /><testcase id="initPopStateEvent_dispatchable" purpose="Check if initPopStateEvent can be dispatchable on the window object" result="PASS" /><testcase id="initPopStateEvent_instanceof_PopStateEvent" purpose="Check if the document.createEvent instanceof of PopStateEvent" result="PASS" /><testcase id="initPopStateEvent_property_Event" purpose="Check if the document.createEvent instanceof of Event" result="PASS" /><testcase id="location_body_onpopstate" purpose="Check if body onpopstate register a listener for the popstate event" result="PASS" /><testcase id="location_document_hostname_assign" purpose="Check if location.hostname attribute calling location.assign,then compare location.hostname" result="PASS" /><testcase id="location_document_hostname_default_value" purpose="Check if location.hostname attribute default value should not ne null" result="PASS" /><testcase id="location_document_hostname_exists" purpose="Check if location.hostname exists" result="PASS" /><testcase id="location_document_hostname_href" purpose="Check if location.hostname attribute calling location.href,then compare location.hostname" result="PASS" /><testcase id="location_document_hostname_type" purpose="Check if location.hostname is of type string" result="PASS" /><testcase id="location_document_protocol_assign" purpose="Check if location.protocol attribute calling location.assign,then compare location.protocol" result="PASS" /><testcase id="location_document_protocol_exists" purpose="Check if location.protocol attribute exists" result="PASS" /><testcase id="location_document_protocol_href" purpose="Check if location.protocol attribute calling location.href,then compare location.protocol" result="PASS" /><testcase id="location_document_protocol_type" purpose="Check if location.protocol is of type string" result="PASS" /><testcase id="location_document_reload_exists" purpose="Check if location.reload method exists" result="PASS" /><testcase id="location_document_reload_type" purpose="Check if location.reload method is if type function" result="PASS" /><testcase id="location_document_search_assign" purpose="Check if location.search attribute calling location.assign,then compare location.search" result="PASS" /><testcase id="location_document_search_exists" purpose="Check if location.search attribute exists" result="PASS" /><testcase id="location_document_search_href" purpose="Check if location.search attribute calling location.href,then comapre location.search is '?test=a'" result="PASS" /><testcase id="location_document_search_type" purpose="Check if location.search attribute is of type string" result="PASS" /><testcase id="location_hash" purpose="Check if Location.hash attribute set '#x=1',then compare Location.hash is '#x=1'" result="PASS" /><testcase id="Location_hash_change_part_one" purpose="location.hash must be allowed to change (part 1)" result="PASS" /><testcase id="Location_hash_change_part_two" purpose="location.hash must be allowed to change (part 2)" result="PASS" /><testcase id="location_window_assign_basic" purpose="Check if the location.href is '002.html' when location.assign is '002.html'" result="PASS" /><testcase id="location_window_assign_exists" purpose="Check if location.assign method exists" result="PASS" /><testcase id="location_window_assign_type" purpose="Check if Location.assign attribute is of type function" result="PASS" /><testcase id="location_window_hash_basic" purpose="Check if Location.hash fire hashchange event and get the correct data" result="PASS" /><testcase id="location_window_hash_default_value" purpose="Check if Location.hash attribute not set,then compare Location.hash is ''" result="PASS" /><testcase id="location_window_hash_empty_string" purpose="Check if Location.hash attribute set 'test hash' then set empty string,finally compare is Location.hash is ''" result="PASS" /><testcase id="location_window_hash_exists" purpose="Check if Location.hash attribute exists" result="PASS" /><testcase id="location_window_hash_null" purpose="Check if Location.hash attribute set null,then compare Location.hash is '#null'" result="PASS" /><testcase id="location_window_hash_random" purpose="Check if Location.hash attribute set random,then compare Location.hash is '#'+random" result="PASS" /><testcase id="location_window_host_assign" purpose="Check if Location.host attribute calling assign method,then compare now host is after host" result="PASS" /><testcase id="location_window_host_exists" purpose="Check if Location.host attribute exists" result="PASS" /><testcase id="location_window_host_href" purpose="Check if location.host attribute,calling location.href,then compare location.host" result="PASS" /><testcase id="location_window_host_type" purpose="Check if Location.host attribute is of type string" result="PASS" /><testcase id="location_window_href_basic" purpose="Check if Location.href value equals to document.URL" result="PASS" /><testcase id="location_window_href_default_value" purpose="Check if Location.href attribute,then compare location.href equals 'location_window_href_default_value.html'" result="PASS" /><testcase id="location_window_href_exists" purpose="Check if Location.href attribute exists" result="PASS" /><testcase id="location_window_href_type" purpose="Check if Location.href attribute is of type string" result="PASS" /><testcase id="location_window_onpopstate" purpose="Check if window.onpopstate register a listener for the popstate event" result="PASS" /><testcase id="location_window_pathname_assign" purpose="Check if location.pathname attribute calling location.assign,then compare location.pathname" result="PASS" /><testcase id="location_window_pathname_default_value" purpose="Check if Location.pathname attribute default value is file name" result="PASS" /><testcase id="location_window_pathname_exists" purpose="Check if Location.pathname attribute exists" result="PASS" /><testcase id="location_window_pathname_href" purpose="Check if Location.pathname attibute calling location.href,then compare location.pathname" result="PASS" /><testcase id="location_window_pathname_type" purpose="Check if Location.pathname attribute is of type string" result="PASS" /><testcase id="location_window_port_assign" purpose="Check if Location.port attribute calling Location.assign,then compare location.port" result="PASS" /><testcase id="location_window_port_exists" purpose="Check if Location.port attribute exists" result="PASS" /><testcase id="location_window_port_href" purpose="Check if Location.port attribute calling location.href,then compare location.port" result="PASS" /><testcase id="location_window_port_type" purpose="Check if Location.port attribute is of type string" result="PASS" /><testcase id="location_window_replace_basic" purpose="Check if the location.href is 'id=1' when location.replace method is set to 'id=1'" result="PASS" /><testcase id="location_window_replace_exists" purpose="Check if location.replace method exists" result="PASS" /><testcase id="location_window_replace_type" purpose="Check if location.replace method is of type function" result="PASS" /><testcase id="PopStateEvent_exists" purpose="Check if PopStateEvent exists" result="PASS" /><testcase id="PopStateEvent_fired_when_navigation_occurs" purpose="popstate event should fire when navigation occurs" result="PASS" /><testcase id="PopStateEvent_get_history_state_be_a_clone" purpose="popstate event history.state should also reference a clone of the original object" result="PASS" /><testcase id="PopStateEvent_get_history_state_be_a_clone_not_reference_original" purpose="popstate event history.state should be a clone of the original object, not a reference to it" result="PASS" /><testcase id="PopStateEvent_pass_the_state_data" purpose="popstate event should pass the state data" result="PASS" /><testcase id="PopStateEvent_state_data_be_clone" purpose="state data should be a clone of the original object, not a reference to it" result="PASS" /><testcase id="PopStateEvent_state_data_cope" purpose="state data should cope with circular object references" result="PASS" /><testcase id="popstate_event_fire_after_onload" purpose="Check if popstate event fired after onload event" result="PASS" /></category><category name="W3C_HTML5 APIs/Device/Battery Status API"><testcase id="battery-charging-manual" purpose="Check if all of the BatteryManager attributes exist and are set to their correct values when battery is charging" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4111 XWALK-4111]]</testcase><testcase id="battery-discharging-manual" purpose="Check if all of the BatteryManager attributes exist and are set to their correct values when battery is discharging" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4111 XWALK-4111]]</testcase><testcase id="battery-full-manual" purpose="Check if all of the BatteryManager attributes exist and are set to their correct values when battery is full" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4111 XWALK-4111]]</testcase><testcase id="battery-plugging-in-manual" purpose="Check if validates that all of the BatteryManager attributes exist and are set to correct values, with corresponding events fired, when the charger is plugged in." result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-4111 XWALK-4111]]</testcase><testcase id="battery-unplugging-manual" purpose="Check if that all of the BatteryManager attributes exist and are set to correct values, with corresponding events fired, when the charger is unplugged." result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-4111 XWALK-4111]]</testcase><testcase id="battery-interface_entry1" purpose="Check if getBattery is present on navigator" result="PASS" /><testcase id="battery-interface_entry10" purpose="Check if level attribute exists" result="PASS" /><testcase id="battery-interface_entry11" purpose="Check if level attribute is readonly" result="PASS" /><testcase id="battery-interface_entry12" purpose="Check if onchargingchange attribute exists" result="PASS" /><testcase id="battery-interface_entry13" purpose="Check if onchargingchange is null" result="PASS" /><testcase id="battery-interface_entry14" purpose="Check if onchargingchange is set to function" result="PASS" /><testcase id="battery-interface_entry15" purpose="Check if onchargingchange: treat object as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry16" purpose="Check if onchargingchange: treat object with non-callable call property as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry17" purpose="Check if onchargingchange: treat string as null" result="PASS" /><testcase id="battery-interface_entry18" purpose="Check if onchargingchange: treat number as null" result="PASS" /><testcase id="battery-interface_entry19" purpose="Check if onchargingchange: treat undefined as null" result="PASS" /><testcase id="battery-interface_entry2" purpose="Check if window has an own property BatteryManager" result="PASS" /><testcase id="battery-interface_entry20" purpose="Check if onchargingchange: treat array as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry21" purpose="Check if onchargingtimechange attribute exists" result="PASS" /><testcase id="battery-interface_entry22" purpose="Check if onchargingtimechange is null" result="PASS" /><testcase id="battery-interface_entry23" purpose="Check if onchargingtimechange is set to function" result="PASS" /><testcase id="battery-interface_entry24" purpose="Check if onchargingtimechange: treat object as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry25" purpose="Check if onchargingtimechange: treat object with non-callable call property as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry26" purpose="Check if onchargingtimechange: treat string as null" result="PASS" /><testcase id="battery-interface_entry27" purpose="Check if onchargingtimechange: treat number as null" result="PASS" /><testcase id="battery-interface_entry28" purpose="Check if onchargingtimechange: treat undefined as null" result="PASS" /><testcase id="battery-interface_entry29" purpose="Check if onchargingtimechange: treat array as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry3" purpose="Check if battery inherits from EventTarget" result="PASS" /><testcase id="battery-interface_entry30" purpose="Check if ondischargingtimechange attribute exists" result="PASS" /><testcase id="battery-interface_entry31" purpose="Check if ondischargingtimechange is null" result="PASS" /><testcase id="battery-interface_entry32" purpose="Check if ondischargingtimechange is set to function" result="PASS" /><testcase id="battery-interface_entry33" purpose="Check if ondischargingtimechange: treat object as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry34" purpose="Check if ondischargingtimechange: treat object with non-callable call property as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry35" purpose="Check if ondischargingtimechange: treat string as null" result="PASS" /><testcase id="battery-interface_entry36" purpose="Check if ondischargingtimechange: treat number as null" result="PASS" /><testcase id="battery-interface_entry37" purpose="Check if ondischargingtimechange: treat undefined as null" result="PASS" /><testcase id="battery-interface_entry38" purpose="Check if ondischargingtimechange: treat array as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry39" purpose="Check if onlevelchange attribute exists" result="PASS" /><testcase id="battery-interface_entry4" purpose="Check if charging attribute exists" result="PASS" /><testcase id="battery-interface_entry40" purpose="Check if onlevelchange is null" result="PASS" /><testcase id="battery-interface_entry41" purpose="Check if onlevelchange is set to function" result="PASS" /><testcase id="battery-interface_entry42" purpose="Check if onlevelchange: treat object as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry43" purpose="Check if onlevelchange: treat object with non-callable call property as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry44" purpose="Check if onlevelchange: treat string as null" result="PASS" /><testcase id="battery-interface_entry45" purpose="Check if onlevelchange: treat number as null" result="PASS" /><testcase id="battery-interface_entry46" purpose="Check if onlevelchange: treat undefined as null" result="PASS" /><testcase id="battery-interface_entry47" purpose="Check if onlevelchange: treat array as null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4382 XWALK-4382]]</testcase><testcase id="battery-interface_entry5" purpose="Check if charging attribute is readonly" result="PASS" /><testcase id="battery-interface_entry6" purpose="Check if chargingTime attribute exists" result="PASS" /><testcase id="battery-interface_entry7" purpose="Check if chargingTime attribute is readonly" result="PASS" /><testcase id="battery-interface_entry8" purpose="Check if dischargingTime attribute exists" result="PASS" /><testcase id="battery-interface_entry9" purpose="Check if dischargingTime attribute is readonly" result="PASS" /><testcase id="battery-promise_entry1" purpose="Check if that all of the BatteryManager attributes exist and are set to correct values, with corresponding events fired, when the charger is unplugged." result="PASS" /><testcase id="battery-promise_entry2" purpose="Check if navigator.getBattery() shall always return the same promise" result="PASS" /></category><category name="W3C_HTML5 APIs/Device/The Screen Orientation API"><testcase id="lockOrientation-basic" purpose="Test that screen.orientation.lock returns a pending promise" result="PASS" /><testcase id="orientationchange-event" purpose="Test that orientationchange event is fired when the orientation changes" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2512 XWALK-2512]]</testcase><testcase id="lockOrientation-bad-argument" purpose="Test that screen.orientation.lock() throws exception when the input isn't valid" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4126 XWALK-4126]]</testcase><testcase id="ScreenOrientation_attributes_defaultvalue" purpose="Test screen.orientation default values" result="PASS" /><testcase id="ScreenOrientation_attributes_existence" purpose="Test that the Screen Orientation API is present" result="PASS" /><testcase id="ScreenOrientation_attributes_reading" purpose="Test screen.orientation properties reading" result="PASS" /><testcase id="ScreenOrientation_attributes_readonly" purpose="Test that screen.orientation properties are not writable" result="PASS" /><testcase id="ScreenOrientation_attributes_type" purpose="Test Screen Orientation API property types" result="PASS" /><testcase id="ScreenOrientation_inherit_EventTarget" purpose="Test that screen.orientation is an EventTarget" result="PASS" /><testcase id="ScreenOrientation_singleton_object" purpose="Test that screen.orientation is always the same object" result="PASS" /></category><category name="W3C_HTML5 APIs/Device/Touch Events version 1"><testcase id="multi_mouse_event" purpose="Check if touchstart event must be dispatched before any mouse during multiple touches" result="PASS" /><testcase id="multi_touchend_event_received" purpose="Check if touchend event is received during multiple touches" result="PASS" /><testcase id="multi_touchmove_event_received" purpose="Check if touchmove event is received during multiple touches" result="PASS" /><testcase id="multi_touchstart_event_received" purpose="Check if touchstart event is received during multiple touches" result="PASS" /><testcase id="single_mouse_events" purpose="Check if touchstart event must be dispatched before any mouse" result="PASS" /><testcase id="single_touchend_event_received" purpose="Check if touchend event is received during single touch" result="PASS" /><testcase id="single_touchmove_event_received" purpose="Check if touchmove event is received during single touch" result="PASS" /><testcase id="single_touchstart_event_received" purpose="Check if touchstart event is received during single touch" result="PASS" /><testcase id="TouchEvent_altKey_exist" purpose="Check if touchEvent.altKey attribute is defined." result="PASS" /><testcase id="TouchEvent_ctrlKey_exist" purpose="Check if touchEvent.ctrlKey attribute is defined." result="PASS" /><testcase id="TouchEvent_metaKey_exist" purpose="Check if touchEvent.metaKey attribute is defined." result="PASS" /><testcase id="TouchEvent_shiftKey_exist" purpose="Check if touchEvent.shiftKey attribute is defined." result="PASS" /><testcase id="TouchList_item_exists" purpose="Check if TouchList.item attribute exists" result="PASS" /><testcase id="TouchList_item_type" purpose="Check if TouchList.item attribute is of type function" result="PASS" /><testcase id="TouchList_length_exists" purpose="Check if TouchList.length attributes exists" result="PASS" /><testcase id="TouchList_length_type" purpose="Check if TouchList.length attribute is of type number(unisigned long)" result="PASS" /><testcase id="touchstart_changedTouches_subset" purpose="Check if touchstart changedTouches is a subset of touches" result="PASS" /><testcase id="touchstart_event_type" purpose="Check if touchstart event is a TouchEvent" result="PASS" /><testcase id="touchstart_targetTouches_exists" purpose="Check if touchstart.targetTouches attribute exists" result="PASS" /><testcase id="touchstart_targetTouches_subset" purpose="Check if touchstart targetTouches is a subset of touches" result="PASS" /><testcase id="touchstart_targetTouches_type" purpose="Check if touchstart.targetTouches attribute is of type TouchList" result="PASS" /><testcase id="touchstart_touches_exists" purpose="Check if touchstart.touches attribute exists" result="PASS" /><testcase id="touchstart_touches_type" purpose="Check if touchstart.touches attribute is of type TouchList" result="PASS" /><testcase id="Touch_clientX_exists" purpose="Check if Touch.clientX attribute exists" result="PASS" /><testcase id="Touch_clientX_type" purpose="Check if Touch.clientX attribute is of type number(long)" result="PASS" /><testcase id="Touch_clientY_exists" purpose="Check if Touch.clientY attribute exists" result="PASS" /><testcase id="Touch_clientY_type" purpose="Check if Touch.clientY attribute is of type number(long)" result="PASS" /><testcase id="Touch_identifier_exists" purpose="Check if Touch.identifier_attribute_exists" result="PASS" /><testcase id="Touch_identifier_type" purpose="Check if Touch.identifier attribute is of type number(long)" result="PASS" /><testcase id="touch_list_object" purpose="Check if touch list is a TouchList object" result="PASS" /><testcase id="Touch_pageX_exists" purpose="Check if Touch.pageX attribute exists" result="PASS" /><testcase id="Touch_pageX_type" purpose="Check if Touch.pageX attribute is of type number(long)" result="PASS" /><testcase id="Touch_pageY_exists" purpose="Check if Touch.pageY attribute exists" result="PASS" /><testcase id="Touch_pageY_type" purpose="Check if Touch.pageY attribute is of type number(long)" result="PASS" /><testcase id="touch_point_object" purpose="Check if touch point is a Touch object" result="PASS" /><testcase id="Touch_screenX_exists" purpose="Check if Touch.screenX attribute exists" result="PASS" /><testcase id="Touch_screenX_type" purpose="Check if Touch.screenX attribute if of type number(long)" result="PASS" /><testcase id="Touch_screenY_exists" purpose="Check if Touch.screenY attribute exists" result="PASS" /><testcase id="Touch_screenY_type" purpose="Check if Touch.screenY attribute is of type number(long)" result="PASS" /><testcase id="Touch_target_exists" purpose="Check if Touch.target attribute exists" result="PASS" /><testcase id="Touch_target_type" purpose="Check if Touch.target attribute is of type Element" result="PASS" /><testcase id="document_createTouchList_exist" purpose="Check if document.createtouchlist method is defined." result="PASS" /><testcase id="document_createTouchList_null" purpose="Check if document.createTouchList with arguments negative the length is default value" result="PASS" /><testcase id="document_createTouchList_one_arguments" purpose="Check if createTouchList length is one, when parameter be set to one Touch" result="PASS" /><testcase id="document_createTouchList_two_arguments" purpose="Check if createTouchList length is two, when parameter be set to two Touch" result="PASS" /><testcase id="document_createTouch_exist" purpose="Check if document.createtouch method is defined." result="PASS" /><testcase id="Touch_interface" purpose="Check if document.createTouch exists and creates a Touch object with requested properties" result="PASS" /></category><category name="W3C_HTML5 APIs/Device/Vibration API"><testcase id="cancel-when-hidden-manual" purpose="Test checks that cancel ongoing vibrate() when hidden by switching tab/window" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-4307 XWALK-4307]]</testcase><testcase id="cancel-with-0" purpose="If pattern is 0, cancel the pre-existing instance of the processing vibration patterns algorithm" result="PASS" /><testcase id="cancel-with-array-0-manual" purpose="Test checks that cancel ongoing vibrate() with [0]" result="PASS" /><testcase id="cancel-with-empty-array-manual" purpose="To check if the device does not vibrate when the argument is []" result="PASS" /><testcase id="cancel-with-new" purpose="Cancel the pre-existing instance of the processing vibration patterns algorithm, if any" result="PASS" /><testcase id="pattern-array" purpose="To check if the device will vibrate three times for one second, separated by one second intervals" result="PASS" /><testcase id="pattern-array-extra" purpose="If the length of pattern is even, then remove the last entry in pattern" result="PASS" /><testcase id="pattern-arry-with-0-manual" purpose="If the length of pattern is three and the first two entries are 0, then first 0 have no vibration and second 0 no separated." result="PASS" /><testcase id="simple-array" purpose="To check if the device vibrates for 2 second when the argument is long[2000]" result="PASS" /><testcase id="simple-scalar" purpose="To check if the device vibrates for 2 seconds when the argument is long 2000" result="PASS" /><testcase id="api-is-present" purpose="Check that the vibrate() method is present" result="PASS" /><testcase id="miss-pattern-argument" purpose="Test checks that vibrate throws a TypeError, when miss pattern argument" result="PASS" /><testcase id="pattern-brace-argument" purpose="Test checks that vibrate take no effect, when set pattern of {} argument" result="PASS" /><testcase id="pattern-empty-string-argument" purpose="Test checks that vibrate take no effect, when set pattern of empty string argument" result="PASS" /><testcase id="pattern-NaN-argument" purpose="Test checks that vibrate take no effect, when set pattern of NaN argument" result="PASS" /><testcase id="pattern-null-argument" purpose="Test checks that vibrate take no effect, when set pattern of null argument" result="PASS" /><testcase id="pattern-string-argument" purpose="Test checks that vibrate take no effect, when set pattern of string argument" result="PASS" /><testcase id="pattern-String-instance-argument" purpose="Test checks that vibrate take no effect, when set pattern of String instance argument" result="PASS" /><testcase id="pattern-undefined-argument" purpose="Test checks that vibrate take no effect, when set pattern of undefined argument" result="PASS" /><testcase id="silent-ignore" purpose="If the device does not provide a vibration mechanism, or it is disabled, the user agent must silently ignore any invocations of the vibrate() method" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/CSS Animations Module Level 3"><testcase id="animation-delay-001" purpose="When animation-delay is set to a negative time offset, animation will execute as soon as it is applied but act as if the animation had started the specified time in the past" result="PASS" /><testcase id="animation-delay-002" purpose="When animation-delay is set to a positive time offset, animation will delay execution by the specified offset value" result="PASS" /><testcase id="animation-delay-003" purpose="When animation-delay is set to 0s (zero seconds), animation will execute as soon as it is applied" result="PASS" /><testcase id="animation-delay-004" purpose="Check that animation-delay applies to the ::after pseudo element" result="PASS" /><testcase id="animation-delay-005" purpose="Check that animation-delay applies to the ::before pseudo element" result="PASS" /><testcase id="animation-delay-006" purpose="Check that animation-delay property accepts 'initial' keyword" result="PASS" /><testcase id="animation-delay-007" purpose="Check that animation-delay property accepts 'inherit' keyword" result="PASS" /><testcase id="animation-direction-001" purpose="When animation-direction is set to alternate, animation cycle will iteration that are odd counts are played in the normal direction, and the animation cycle iterations that are even counts are played in a reverse direction" result="PASS" /><testcase id="animation-direction-002" purpose="When animation-direction is set to normal, all iterations of animation are played as specified" result="PASS" /><testcase id="animation-direction-003" purpose="When animation-direction is set to alternate-reverse, the animation cycle iterations that are odd counts are played in the normal direction, and the animation cycle iterations that are  Even counts are played in a reverse direction" result="PASS" /><testcase id="animation-direction-004" purpose="When animation-direction is set to reverse, all iterations of the animation are played in the reverse direction from the way they were specified" result="PASS" /><testcase id="animation-direction-005" purpose="Check that animation-direction applies to the ::after pseudo element" result="PASS" /><testcase id="animation-direction-006" purpose="Check that animation-direction applies to the ::before pseudo element" result="PASS" /><testcase id="animation-display" purpose="Check that setting 'display' property to 'none' terminates running animation applied to the element, and updating 'display' property to a value other than 'none' will start the animation" result="PASS" /><testcase id="animation-duration-001" purpose="When animation-duration value is set blank, there will be no animation seen" result="PASS" /><testcase id="animation-duration-002" purpose="When animation-duration is set a finite time offset, animation takes the specifies time to complete one cycle" result="PASS" /><testcase id="animation-duration-003" purpose="When animation-duration is set to a negative value, it is treated as 0s (zero seconds) and no animation is seen" result="PASS" /><testcase id="animation-duration-004" purpose="When animation-duration is set to 0s (zero seconds), animation occurs instantaneously, there will be no animation seen" result="PASS" /><testcase id="animation-duration-005" purpose="When animation-duration is set to 0s (zero seconds), and 'animation-fill-mode' is set to 'forwards', the last frame of the animation will be displayed" result="PASS" /><testcase id="animation-duration-006" purpose="When animation-duration is set to 0s (zero seconds), and 'animation-fill-mode' is set to 'both', the last frame of the animation will be displayed" result="PASS" /><testcase id="animation-duration-007" purpose="Check that animation-duration applies to the ::before pseudo element" result="PASS" /><testcase id="animation-duration-008" purpose="Check that animation-duration applies to the ::after pseudo element" result="PASS" /><testcase id="animation-fill-mode-001" purpose="When animation-fill-mode is set to none, animation has no effect when it is applied but not executing" result="PASS" /><testcase id="animation-fill-mode-002" purpose="When animation-fill-mode is set to forwards, animation will apply the property values for the time the amination ended after the animation ends" result="PASS" /><testcase id="animation-fill-mode-003" purpose="When animation-fill-mode is set to backwards, animation-delay is set a positive time offset, and animation-direction is 'normal' or 'alternate-reverse', animation will apply the from or 0% keyframe That will start the first iteration" result="PASS" /><testcase id="animation-fill-mode-004" purpose="Check if animation-fill-mode is set to both, the effects of both 'forwards' and 'backwards' will apply" result="PASS" /><testcase id="animation-fill-mode-005" purpose="Check that animation-fill-mode applies to the ::after pseudo element" result="PASS" /><testcase id="animation-fill-mode-006" purpose="Check that animation-fill-mode applies to the ::before pseudo element" result="PASS" /><testcase id="animation-iteration-count-001" purpose="When animation-iteration-count is not set, 1 is taken by default and animation will play from beginning to end once" result="PASS" /><testcase id="animation-iteration-count-002" purpose="When animation-iteration-count is set to infinite, animation will repeat forever" result="PASS" /><testcase id="animation-iteration-count-003" purpose="When animation-iteration-count is set to negative count, it is invalid and animation will play from beginning to end once" result="PASS" /><testcase id="animation-iteration-count-004" purpose="When animation-iteration-count is set to non-integer, animation will end partway through its last cycle" result="PASS" /><testcase id="animation-iteration-count-005" purpose="When animation-iteration-count is set to integer count, animation will repeat the specified number of times" result="PASS" /><testcase id="animation-iteration-count-006" purpose="When animation-iteration-count is set to 0 (zero), no animation is seen" result="PASS" /><testcase id="animation-iteration-count-007" purpose="Check that animation-iteration-count applies to the ::after pseudo element" result="PASS" /><testcase id="animation-iteration-count-008" purpose="Check that animation-iteration-count applies to the ::before pseudo element" result="PASS" /><testcase id="animation-iteration-event" purpose="Check that animationiteration event occurs at the end of each iteration of an animation for which animation-iteration-count is greater than one" result="PASS" /><testcase id="animation-keyframes-001" purpose="Check that @keyframes rule accepts 'from' and 'to' keywords, and percentage values" result="PASS" /><testcase id="animation-keyframes-002" purpose="Check that a keyframe selector specifies negative percentage values or values higher than 100%, the keyframe will be ignored" result="PASS" /><testcase id="animation-keyframes-003" purpose="Check that @keyframes rule accpets 'animation-timing-function' property used as the animation moves to the next keyframe" result="PASS" /><testcase id="animation-name-001" purpose="Check that animation-name is set without any value, there will be no animation" result="PASS" /><testcase id="animation-name-002" purpose="When animation-name is set to refer to a keyframe at-rule that provides the property values for the animation, animation will execute" result="PASS" /><testcase id="animation-name-003" purpose="Check that animation-name is set to none, there will be no animation" result="PASS" /><testcase id="animation-name-004" purpose="Check that animation-name does not match any keyframe at-rule, there are no properties to be animated and animation will not execute" result="PASS" /><testcase id="animation-name-005" purpose="Check that animation-name applies to the ::after pseudo element" result="PASS" /><testcase id="animation-name-006" purpose="Check that animation-name applies to the ::before pseudo element" result="PASS" /><testcase id="animation-play-state-001" purpose="When animation-play-state is set to paused, animation is paused where the progress it had made before being paused" result="PASS" /><testcase id="animation-play-state-002" purpose="When animation-play-state is set to running, animation will proceed as normal" result="PASS" /><testcase id="animation-play-state-003" purpose="Check that animation-play-state applies to the ::after pseudo element" result="PASS" /><testcase id="animation-play-state-004" purpose="Check that animation-play-state applies to the ::before pseudo element" result="PASS" /><testcase id="animation-shorthand-001" purpose="Check that animation shorthand property accepts time values for animation-duration and animation-delay in order" result="PASS" /><testcase id="animation-shorthand-002" purpose="Check that animation shorthand applies to the ::after pseudo element and accepts time values for animation-duration and animation-delay in order" result="PASS" /><testcase id="animation-shorthand-003" purpose="Check that animation shorthand applies to the ::before pseudo element and accepts time values for animation-duration and animation-delay  in order" result="PASS" /><testcase id="animation-timing-function-001" purpose="When animation-timing-function is set to cubic-bezier with parameters (0,0,1,1), animation will progress over one cycle  of its duration with constant speed" result="PASS" /><testcase id="animation-timing-function-002" purpose="Check that animation-timing-function is set to ease, animation will starts slow, gain acceleration in the middle and again slow down at the end" result="PASS" /><testcase id="animation-timing-function-003" purpose="Check that animation-timing-function is set to ease-in, animation will start slow, gain acceleration as time progresses" result="PASS" /><testcase id="animation-timing-function-004" purpose="Check that animation-timing-function is set to ease-in-out,  animation will start slow, gain acceleration in the middle and again slow down at the end" result="PASS" /><testcase id="animation-timing-function-005" purpose="Check that animation-timing-function is set to ease-out, animation will start with higher (than the normal) speed and relatively slow down as time progresses" result="PASS" /><testcase id="animation-timing-function-006" purpose="When animation-timing-function is set to linear, animation will progress over one cycle of its duration with constant speed" result="PASS" /><testcase id="animation-timing-function-007" purpose="When animation-timing-function is set to step-start, animation will play the end effect at the start of the interval" result="PASS" /><testcase id="animation-timing-function-008" purpose="When animation-timing-function is set to step-end, animation will play the end effect at the end time point, and keep the start effect at the start of the interval" result="PASS" /><testcase id="animation-timing-function-009" purpose="When animation-timing-function is set to steps with parameters (number, start), animation will be defined by the number that divides the domain of operation into equally size intervals, evey time the change happens at the start of the interval" result="PASS" /><testcase id="animation-timing-function-010" purpose="When animation-timing-function is set to steps with parameters  (number, end), animation will be defined by the number that divides the domain of operation into equally size intervals, evey time the changes happens at the end of the interval" result="PASS" /><testcase id="animation-timing-function-011" purpose="Check that animation-timing-function applies to the ::after pseudo element" result="PASS" /><testcase id="animation-timing-function-012" purpose="Check that animation-timing-function applies to the ::before pseudo element" result="PASS" /><testcase id="animationstart-and-animationend-events" purpose="Check that animationstart event occurs at the start of an animation, animationend event occurs when animation finishes" result="PASS" /><testcase id="animationevent-interface-entry1" purpose="Check that the event is an instance of AnimationEvent" result="PASS" /><testcase id="animationevent-interface-entry10" purpose="Check that elapsedTime is readonly" result="PASS" /><testcase id="animationevent-interface-entry11" purpose="Check that animationEventInit argument is null" result="PASS" /><testcase id="animationevent-interface-entry12" purpose="Check that animationEventInit argument is undefined" result="PASS" /><testcase id="animationevent-interface-entry13" purpose="Check that animationEventInit argument is empty dictionary" result="PASS" /><testcase id="animationevent-interface-entry14" purpose="Check that animationName set to 'sample'" result="PASS" /><testcase id="animationevent-interface-entry15" purpose="Check that elapsedTime set to 0.5" result="PASS" /><testcase id="animationevent-interface-entry16" purpose="Check that AnimationEventInit properties set value" result="PASS" /><testcase id="animationevent-interface-entry2" purpose="Check that the event inherts from Event" result="PASS" /><testcase id="animationevent-interface-entry3" purpose="Check that Missing type argument" result="PASS" /><testcase id="animationevent-interface-entry4" purpose="Check that type argument is string" result="PASS" /><testcase id="animationevent-interface-entry5" purpose="Check that type argument is null" result="PASS" /><testcase id="animationevent-interface-entry6" purpose="Check that event type set to undefined" result="PASS" /><testcase id="animationevent-interface-entry7" purpose="Check that animationName has default value of empty string" result="PASS" /><testcase id="animationevent-interface-entry8" purpose="Check that elapsedTime has default value of 0.0" result="PASS" /><testcase id="animationevent-interface-entry9" purpose="Check that animationName is readonly" result="PASS" /><testcase id="animationevent-types-entry1" purpose="Check that animationstart event is instanceof AnimationEvent" result="PASS" /><testcase id="animationevent-types-entry2" purpose="Check that animationend event is instanceof AnimationEvent" result="PASS" /><testcase id="animationevent-types-entry3" purpose="Check that animationiteration event is instanceof AnimationEvent" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/CSS Backgrounds and Borders Module Level 3"><testcase id="background-size-024" purpose="Check if background-size with '100% 100%' and background-clip with 'content-box' display correctly in visual" result="FAIL" /><testcase id="background-size-033" purpose="Check if background-size with first-line pseudo-element display correctly in visual" result="PASS" /><testcase id="background-001" purpose="Check if background with color display correctly in visual" result="PASS" /><testcase id="background-002" purpose="Check if background with an image display correctly in visual" result="PASS" /><testcase id="background-006" purpose="Check if background with (color image) display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-007" purpose="Check if background with (color repeat) display correctly in visual" result="PASS" /><testcase id="background-008" purpose="Check if background with (color attachment) display correctly in visual" result="PASS" /><testcase id="background-009" purpose="Check if background with (color position) display correctly in visual" result="PASS" /><testcase id="background-010" purpose="Check if background with (image color) display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-011" purpose="Check if background with (image repeat) display correctly in visual" result="PASS" /><testcase id="background-012" purpose="Check if background with (image attachment) display correctly in visual" result="PASS" /><testcase id="background-013" purpose="Check if background with (image position) display correctly in visual" result="PASS" /><testcase id="background-014" purpose="Check if background with (repeat color) display correctly in visual" result="PASS" /><testcase id="background-015" purpose="Check if background with (repeat image) display correctly in visual" result="PASS" /><testcase id="background-016" purpose="Check if background with (repeat attachment) display correctly in visual" result="PASS" /><testcase id="background-017" purpose="Check if background with (repeat position) display correctly in visual" result="PASS" /><testcase id="background-018" purpose="Check if background with (attachment color) display correctly in visual" result="PASS" /><testcase id="background-019" purpose="Check if background with (attachment image) display correctly in visual" result="PASS" /><testcase id="background-020" purpose="Check if background with (attachment repeat) display correctly in visual" result="PASS" /><testcase id="background-021" purpose="Check if background with (attachment position) display correctly in visual" result="PASS" /><testcase id="background-022" purpose="Check if background with (position color) display correctly in visual" result="PASS" /><testcase id="background-023" purpose="Check if background with (position image) display correctly in visual" result="PASS" /><testcase id="background-024" purpose="Check if background with (position repeat) display correctly in visual" result="PASS" /><testcase id="background-025" purpose="Check if background with (position attachment) display correctly in visual" result="PASS" /><testcase id="background-clip-002" purpose="Check if background-clip initial value display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-clip-003" purpose="Check if background-clip with border-box display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-clip-004" purpose="Check if background-clip with padding-box display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-clip-005" purpose="Check if background-clip with content-box display correctly in visual" result="PASS" /><testcase id="background-clip-006" purpose="Check if background-clip with inherit display correctly in visual" result="PASS" /><testcase id="background-clip-008" purpose="Check if background-clip with padding-box background color display correctly in visual" result="PASS" /><testcase id="background-image-first-letter" purpose="Check if background-image display correctly in visual first-letter" result="PASS" /><testcase id="background-origin-002" purpose="Check if background-origin with initial value display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-origin-003" purpose="Check if background-origin with padding-box display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-origin-004" purpose="Check if background-origin with border-box display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-origin-005" purpose="Check if background-origin with content-box display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-origin-006" purpose="Check if background-origin with content-box and background-attachment with fixed display correctly in visual" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="background-origin-007" purpose="Check if background-origin with border-box and background-clip with padding-box display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-origin-008" purpose="Check if background-origin with inherit display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-paint-order-001" purpose="Check if background border painting order display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-002" purpose="Check if background-size with initial value display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-005" purpose="Check if background-size with one auto display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-006" purpose="Check if background-size with one length display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-007" purpose="Check if background-size with one length at minimum display correctly in visual" result="PASS" /><testcase id="background-size-008" purpose="Check if background-size with one length at maximum display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-009" purpose="Check if background-size with one percentage display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-010" purpose="Check if background-size with one percentage at minimum display correctly in visual" result="PASS" /><testcase id="background-size-011" purpose="Check if background-size with one percentage at maximum display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-012" purpose="Check if background-size with two auto display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-013" purpose="Check if background-size with one auto and one length display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-014" purpose="Check if background-size with one auto and one percentage display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-015" purpose="Check if background-size with one length and one auto display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-016" purpose="Check if background-size with two length display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-017" purpose="Check if background-size with one length and one percentage display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-018" purpose="Check if background-size with one percentage and one auto display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-019" purpose="Check if background-size with one percentage and one length display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-020" purpose="Check if background-size with two percentage display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-021" purpose="Check if background-size with '100% 100%' and background-origin with 'content-box' display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-026" purpose="Check if background-size with 'auto' and background-repeat with 'repeat' display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2659 XWALK-2659]]</testcase><testcase id="background-size-028" purpose="Check if background-size with '50px' and background-repeat with 'repeat' display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2659 XWALK-2659]]</testcase><testcase id="background-size-030" purpose="Check if background-size with '25% 25%' and background-repeat with 'repeat' display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="background-size-032" purpose="Check if background-size with first-letter pseudo-element display correctly in visual" result="PASS" /><testcase id="background-size-034" purpose="Check if background-size with inherit display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2659 XWALK-2659]]</testcase><testcase id="background-size-contain-001" purpose="Check if background-size with contain and height with 50px display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2659 XWALK-2659]]</testcase><testcase id="background-size-contain-002" purpose="Check if background-size with contain and height with 150px display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2659 XWALK-2659]]</testcase><testcase id="background-size-cover-001" purpose="Check if background-size with cover and height with 0px display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2659 XWALK-2659]]</testcase><testcase id="background-size-cover-002" purpose="Check if background-size with cover and height with 50px display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2659 XWALK-2659]]</testcase><testcase id="CSS3BG_background" purpose="Check if the background is set to 'rgb(255, 0, 0)'" result="PASS" /><testcase id="CSS3BG_background-attachment" purpose="Check if the background-attachment is set to 'scroll'" result="PASS" /><testcase id="CSS3BG_background-attachment_fixed_no-repeat_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'fixed', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_fixed_no-repeat_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'fixed', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_fixed_repeat-x_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'fixed', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_fixed_repeat-x_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'fixed', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_fixed_repeat-y_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'fixed', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_fixed_repeat-y_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'fixed', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_fixed_repeat_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'fixed', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_fixed_repeat_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'fixed', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_local_no-repeat_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'local', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_local_no-repeat_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'local', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_local_repeat-x_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'local', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_local_repeat-x_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'local', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_local_repeat-y_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'local', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_local_repeat-y_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'local', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_local_repeat_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'local', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_local_repeat_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'local', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_scroll_no-repeat_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'scroll', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_scroll_no-repeat_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'scroll', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_scroll_repeat-x_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'scroll', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_scroll_repeat-x_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'scroll', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_scroll_repeat-y_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'scroll', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_scroll_repeat-y_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'scroll', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_scroll_repeat_none" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'scroll', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-attachment_scroll_repeat_url_png" purpose="Check if the values of  'background-attachment', 'background-repeat', 'background-image' are 'scroll', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip" purpose="Check if the background-clip is set to 'border-box'" result="PASS" /><testcase id="CSS3BG_background-clip_border-box_no-repeat_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'border-box', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_border-box_no-repeat_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'border-box', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_border-box_repeat-x_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'border-box', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_border-box_repeat-x_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'border-box', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_border-box_repeat-y_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'border-box', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_border-box_repeat-y_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'border-box', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_border-box_repeat_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'border-box', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_border-box_repeat_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'border-box', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_content-box_no-repeat_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'content-box', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_content-box_no-repeat_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'content-box', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_content-box_repeat-x_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'content-box', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_content-box_repeat-x_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'content-box', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_content-box_repeat-y_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'content-box', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_content-box_repeat-y_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'content-box', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_content-box_repeat_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'content-box', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_content-box_repeat_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'content-box', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_padding-box_no-repeat_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'padding-box', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_padding-box_no-repeat_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'padding-box', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_padding-box_repeat-x_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'padding-box', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_padding-box_repeat-x_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'padding-box', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_padding-box_repeat-y_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'padding-box', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_padding-box_repeat-y_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'padding-box', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_padding-box_repeat_none" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'padding-box', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-clip_padding-box_repeat_url_png" purpose="Check if the values of  'background-clip', 'background-repeat', 'background-image' are 'padding-box', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-color" purpose="Check if the background-color is set to 'rgb(0, 0, 0)'" result="PASS" /><testcase id="CSS3BG_background-color_hsl" purpose="Check if the element background-color supports hsl()" result="PASS" /><testcase id="CSS3BG_background-color_initial_value" purpose="Check if the background-color initial value is 'rgba(0, 0, 0, 0)'" result="PASS" /><testcase id="CSS3BG_background-color_red" purpose="Check if the element background-color support color keywords" result="PASS" /><testcase id="CSS3BG_background-color_rgb" purpose="Check if the element background-color supports rgb()" result="PASS" /><testcase id="CSS3BG_background-image" purpose="Check if the background-image is set to 'custom.png'" result="PASS" /><testcase id="CSS3BG_background-image_excess_values" purpose="Check if the image values of the lists are matched up from the first value: excess values at the end are not used" result="PASS" /><testcase id="CSS3BG_background-image_initial_value" purpose="Check if the background-image initial value is 'none'" result="PASS" /><testcase id="CSS3BG_background-image_many_url" purpose="Check if the background-image use the last url when set to many url" result="PASS" /><testcase id="CSS3BG_background-image_none" purpose="Check if a value of 'none' counts as an image layer but draws nothing" result="PASS" /><testcase id="CSS3BG_background-image_no_enough_comma-separated_values" purpose="Check if the UA calculate its used value by repeating the list of values until there are enough" result="PASS" /><testcase id="CSS3BG_background-origin" purpose="Check if the background-origin is set to 'border-box'" result="PASS" /><testcase id="CSS3BG_background-origin_border-box_no-repeat_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'border-box', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_border-box_no-repeat_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'border-box', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_border-box_repeat-x_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'border-box', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_border-box_repeat-x_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'border-box', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_border-box_repeat-y_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'border-box', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_border-box_repeat-y_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'border-box', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_border-box_repeat_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'border-box', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_border-box_repeat_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'border-box', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_content-box_no-repeat_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'content-box', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_content-box_no-repeat_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'content-box', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_content-box_repeat-x_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'content-box', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_content-box_repeat-x_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'content-box', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_content-box_repeat-y_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'content-box', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_content-box_repeat-y_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'content-box', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_content-box_repeat_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'content-box', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_content-box_repeat_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'content-box', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_padding-box_no-repeat_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'padding-box', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_padding-box_no-repeat_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'padding-box', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_padding-box_repeat-x_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'padding-box', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_padding-box_repeat-x_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'padding-box', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_padding-box_repeat-y_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'padding-box', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_padding-box_repeat-y_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'padding-box', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_padding-box_repeat_none" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'padding-box', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-origin_padding-box_repeat_url_png" purpose="Check if the values of  'background-origin', 'background-repeat', 'background-image' are 'padding-box', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-posiltion_offset_inward" purpose="Check if the positive values represent an offset inward from the edge of the background positioning area" result="PASS" /><testcase id="CSS3BG_background-posiltion_offset_outward" purpose="Check if the negative values represent an offset outward from the edge of the background positioning area" result="PASS" /><testcase id="CSS3BG_background-position" purpose="Check if the background-position is set to '50% 0%'" result="PASS" /><testcase id="CSS3BG_background-position_2cm_1cm" purpose="Check if a length value gives a fixed length as the offset" result="PASS" /><testcase id="CSS3BG_background-position_bottom" purpose="Check if the background-position is set to 'bottom'" result="PASS" /><testcase id="CSS3BG_background-position_center" purpose="Check if the background-position is set to 'center'" result="PASS" /><testcase id="CSS3BG_background-position_center_bottom" purpose="Check if the background-position is set to 'center bottom'" result="PASS" /><testcase id="CSS3BG_background-position_center_top" purpose="Check if the background-position is set to 'center top'" result="PASS" /><testcase id="CSS3BG_background-position_initial" purpose="Check if the background-position initial value is '0% 0%'" result="PASS" /><testcase id="CSS3BG_background-position_left" purpose="Check if the background-position is set to 'left'" result="PASS" /><testcase id="CSS3BG_background-position_left_bottom" purpose="Check if the background-position is set to 'left bottom'" result="PASS" /><testcase id="CSS3BG_background-position_left_center" purpose="Check if the background-position is set to 'left center'" result="PASS" /><testcase id="CSS3BG_background-position_left_top" purpose="Check if the background-position is set to 'left top'" result="PASS" /><testcase id="CSS3BG_background-position_only_one" purpose="Check if only one value is specified, the second value is assumed to be center" result="PASS" /><testcase id="CSS3BG_background-position_right" purpose="Check if the background-position is set to 'right'" result="PASS" /><testcase id="CSS3BG_background-position_right_bottom" purpose="Check if the background-position is set to 'right bottom'" result="PASS" /><testcase id="CSS3BG_background-position_right_center" purpose="Check if the background-position is set to 'right center'" result="PASS" /><testcase id="CSS3BG_background-position_right_top" purpose="Check if the background-position is set to 'right top'" result="PASS" /><testcase id="CSS3BG_background-repeat" purpose="Check if the background-repeat is set to 'repeat-x'" result="PASS" /><testcase id="CSS3BG_background-repeat_no-repeat" purpose="Check if the background-repeat is set to 'no-repeat'" result="PASS" /><testcase id="CSS3BG_background-repeat_repeat" purpose="Check if the background-repeat is set to 'repeat'" result="PASS" /><testcase id="CSS3BG_background-repeat_repeat-x_left_none" purpose="Check if the values of 'background-repeat', 'background-position', 'background-image' are 'repeat-x', 'left', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-repeat_repeat-x_left_url_png" purpose="Check if the values of 'background-repeat', 'background-position' are 'repeat-x', 'left' respectively" result="PASS" /><testcase id="CSS3BG_background-repeat_repeat-y" purpose="Check if the background-repeat is set to 'repeat-y'" result="PASS" /><testcase id="CSS3BG_background-repeat_round" purpose="Check if the background-repeat is set to 'round'" result="PASS" /><testcase id="CSS3BG_background-repeat_space" purpose="Check if the background-repeat is set to 'space'" result="PASS" /><testcase id="CSS3BG_background-size" purpose="Check if the background-size is set to '100% 50px'" result="PASS" /><testcase id="CSS3BG_background-size_50pct_no-repeat_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50%', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50pct_no-repeat_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50%', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50pct_repeat-x_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50%', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50pct_repeat-y_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50%', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50pct_repeat-y_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50%', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50pct_repeat-y_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50%', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50pct_repeat_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50%', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50pct_repeat_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50%', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50px_70px_no-repeat_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50px 70px', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50px_70px_repeat-x_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50px 70px', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50px_70px_repeat-x_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50px 70px', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50px_70px_repeat-y_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50px 70px', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50px_70px_repeat-y_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50px 70px', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50px_70px_repeat_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50px 70px', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50px_70px_repeat_none_image" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50px 70px', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_50px_70px_repeat_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are '50px 70px', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_contain_no-repeat_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'contain', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_contain_no-repeat_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'contain', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_contain_repeat-y_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'contain', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_contain_repeat-y_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'contain', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_contain_repeat_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'contain', 'repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_contain_repeat_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'contain', 'repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_cover_no-repeat_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'cover', 'no-repeat', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_cover_no-repeat_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'cover', 'no-repeat', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_cover_repeat-x_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'cover', 'repeat-x', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_cover_repeat-x_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'cover', 'repeat-x', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_cover_repeat-y_none" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'cover', 'repeat-y', 'none' respectively" result="PASS" /><testcase id="CSS3BG_background-size_cover_repeat-y_url_png" purpose="Check if the values of  'background-size', 'background-repeat', 'background-image' are 'cover', 'repeat-y', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_background-size_negative" purpose="Check if negative values are not allowed" result="PASS" /><testcase id="CSS3BG_background_default_layer" purpose="Check if each box has a possible default completely transparent background layer" result="PASS" /><testcase id="CSS3BG_background_example_equivalent" purpose="Check if the other individual properties are set to their initial values when only partial values for 'background' has been given" result="PASS" /><testcase id="CSS3BG_background_f00_no-repeat_bottom_none" purpose="Check if the background is set to '#f00 none no-repeat bottom '" result="PASS" /><testcase id="CSS3BG_background_f00_no-repeat_bottom_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) no-repeat bottom'" result="PASS" /><testcase id="CSS3BG_background_f00_no-repeat_left_none" purpose="Check if the background is set to '#f00 none no-repeat left'" result="PASS" /><testcase id="CSS3BG_background_f00_no-repeat_left_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) no-repeat left'" result="PASS" /><testcase id="CSS3BG_background_f00_no-repeat_right_none" purpose="Check if the background is set to '#f00 none no-repeat right'" result="PASS" /><testcase id="CSS3BG_background_f00_no-repeat_right_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) no-repeat right'" result="PASS" /><testcase id="CSS3BG_background_f00_no-repeat_top_none" purpose="Check if the background is set to '#f00 none no-repeat top'" result="PASS" /><testcase id="CSS3BG_background_f00_no-repeat_top_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) no-repeat top'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-x_bottom_none" purpose="Check if the background is set to '#f00 none repeat-x bottom'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-x_bottom_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) repeat-x bottom'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-x_left_none" purpose="Check if the background is set to '#f00 none repeat-x left'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-x_left_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) repeat-x left'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-x_right_none" purpose="Check if the background is set to '#f00 none repeat-x right'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-x_right_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) repeat-x right'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-x_top_none" purpose="Check if the background is set to '#f00 none repeat-x top'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-x_top_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) repeat-x top'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-y_bottom_none" purpose="Check if the background is set to '#f00 none repeat-y bottom'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-y_bottom_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) repeat-y bottom'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-y_left_none" purpose="Check if the background is set to '#f00 none repeat-y left'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-y_left_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) repeat-y left'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-y_right_none" purpose="Check if the background is set to '#f00 none repeat-y right'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat-y_right_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) repeat-y right'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat_bottom_none" purpose="Check if the background is set to '#f00 none repeat bottom'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat_bottom_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) repeat bottom'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat_left_none" purpose="Check if the background is set to '#f00 none repeat left'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat_left_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) repeat left'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat_right_none" purpose="Check if the background is set to '#f00 none repeat right'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat_right_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) repeat right'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat_top_none" purpose="Check if the background is set to '#f00 none repeat top'" result="PASS" /><testcase id="CSS3BG_background_f00_repeat_top_url_png" purpose="Check if the background is set to '#f00 url(support/custom.png) repeat top'" result="PASS" /><testcase id="CSS3BG_border" purpose="Check if the border is set to '5px solid rgb(0, 0, 0)'" result="PASS" /><testcase id="CSS3BG_border-bottom-color" purpose="Check if the border-bottom-color is set to 'rgb(85, 85, 85)'" result="PASS" /><testcase id="CSS3BG_border-bottom-color_ccc_dashed_2px" purpose="Check if the values of 'border-bottom-color', 'border-style', 'border-width' are '#ccc', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-color_ccc_solid_2px" purpose="Check if the values of 'border-bottom-color', 'border-style', 'border-width' are '#ccc', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-color_rgb_255_255_0_dashed_2px" purpose="Check if the values of 'border-bottom-color', 'border-style', 'border-width' are 'rgb(255,255,0)', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-color_rgb_255_255_0_dotted_2px" purpose="Check if the values of 'border-bottom-color', 'border-style', 'border-width' are 'rgb(255,255,0)', 'dotted', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-color_rgb_255_255_0_solid_2px" purpose="Check if the values of 'border-bottom-color', 'border-style', 'border-width' are 'rgb(255,255,0)', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius" purpose="Check if the border-bottom-left-radius is set to '5px'" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius_10px_dashed_2px" purpose="Check if the values of 'border-bottom-left-radius', 'border-style', 'border-width' are '10px', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius_10px_solid_2px" purpose="Check if the values of 'border-bottom-left-radius', 'border-style', 'border-width' are '10px', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius_2em_dashed_2px" purpose="Check if the values of 'border-bottom-left-radius', 'border-style', 'border-width' are '2em', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius_2em_solid_2px" purpose="Check if the values of 'border-bottom-left-radius', 'border-style', 'border-width' are '2em', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius_50pct_dashed_2px" purpose="Check if the values of 'border-bottom-left-radius', 'border-style', 'border-width' are '50%', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius_initial" purpose="Check if the border-bottom-left-radius initial value is '0px'" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius_length_length" purpose="Check if the border-bottom-left-radius is set to '1px 4px'" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius_negative_length" purpose="Check if the element border-bottom-left-radius value is negative length" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius_negative_percentage" purpose="Check if the element border-bottom-left-radius value is negative percentage" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius_percentage_length" purpose="Check if the border-bottom-left-radius is set to '2% 4px'" result="PASS" /><testcase id="CSS3BG_border-bottom-left-radius_percentage_percentage" purpose="Check if the border-bottom-left-radius is set to '2% 3%'" result="PASS" /><testcase id="CSS3BG_border-bottom-right-radius" purpose="Check if the border-bottom-right-radius is set to '5px'" result="PASS" /><testcase id="CSS3BG_border-bottom-right-radius_10pct_solid_2px" purpose="Check if the values of 'border-bottom-right-radius', 'border-style', 'border-width' are '10%', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-right-radius_10px_solid_2px" purpose="Check if the values of 'border-bottom-right-radius', 'border-style', 'border-width' are '10px', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-right-radius_initial" purpose="Check if the border-bottom-right-radius initial value is '0px'" result="PASS" /><testcase id="CSS3BG_border-bottom-right-radius_length_length" purpose="Check if the border-bottom-right-radius is set to '1px 4px'" result="PASS" /><testcase id="CSS3BG_border-bottom-right-radius_negative_length" purpose="Check if the element border-bottom-right-radius value is negative length" result="PASS" /><testcase id="CSS3BG_border-bottom-right-radius_negative_percentage" purpose="Check if the element border-bottom-right-radius value is negative percentage" result="PASS" /><testcase id="CSS3BG_border-bottom-right-radius_percentage_length" purpose="Check if the border-bottom-right-radius is set to '2% 4px'" result="PASS" /><testcase id="CSS3BG_border-bottom-right-radius_percentage_percentage" purpose="Check if the border-bottom-right-radius is set to '2% 3%'" result="PASS" /><testcase id="CSS3BG_border-bottom-style" purpose="Check if the border-bottom-style is set to 'dashed'" result="PASS" /><testcase id="CSS3BG_border-bottom-style_dashed" purpose="Check if the border-bottom-style value is dashed" result="PASS" /><testcase id="CSS3BG_border-bottom-style_dotted" purpose="Check if the border-bottom-style value is dotted" result="PASS" /><testcase id="CSS3BG_border-bottom-style_double" purpose="Check if the border-bottom-style value is double" result="PASS" /><testcase id="CSS3BG_border-bottom-style_groove" purpose="Check if the border-bottom-style value is groove" result="PASS" /><testcase id="CSS3BG_border-bottom-style_hidden" purpose="Check if the border-bottom-style value is hidden" result="PASS" /><testcase id="CSS3BG_border-bottom-style_inset" purpose="Check if the border-bottom-style value is inset" result="PASS" /><testcase id="CSS3BG_border-bottom-style_none" purpose="Check if the border-bottom-style value is none" result="PASS" /><testcase id="CSS3BG_border-bottom-style_outset" purpose="Check if the border-bottom-style value is outset" result="PASS" /><testcase id="CSS3BG_border-bottom-style_ridge" purpose="Check if the border-bottom-style value is ridge" result="PASS" /><testcase id="CSS3BG_border-bottom-style_solid" purpose="Check if the border-bottom-style value is solid" result="PASS" /><testcase id="CSS3BG_border-bottom-width" purpose="Check if the border-bottom-width is set to '12px'" result="PASS" /><testcase id="CSS3BG_border-bottom-width_2em_dashed" purpose="Check if the values of 'border-bottom-width', 'border-style' are '2em', 'dashed' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-width_2em_dotted" purpose="Check if the values of 'border-bottom-width', 'border-style' are '2em', 'dotted' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-width_2em_solid" purpose="Check if the values of 'border-bottom-width', 'border-style' are '2em', 'solid' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-width_30px_dashed" purpose="Check if the values of 'border-bottom-width', 'border-style' are '30px', 'dashed' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-width_30px_dotted" purpose="Check if the values of 'border-bottom-width', 'border-style' are '30px', 'dotted' respectively" result="PASS" /><testcase id="CSS3BG_border-bottom-width_30px_solid" purpose="Check if the values of 'border-bottom-width', 'border-style' are '30px', 'solid' respectively" result="PASS" /><testcase id="CSS3BG_border-color" purpose="Check if the border-color is set to 'rgb(85, 85, 85)'" result="PASS" /><testcase id="CSS3BG_border-color_000_solid_0px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are '#000', 'solid', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_000_solid_2px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are '#000', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_000_solid_neg5px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are '#000', 'solid', '-5px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_red_dashed_0px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are 'red', 'dashed', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_red_dashed_2px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are 'red', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_red_dashed_neg5px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are 'red', 'dashed', '-5px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_red_green_blue_yellow_solid_0px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are 'red green blue yellow', 'solid', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_red_green_blue_yellow_solid_2px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are 'red green blue yellow', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_red_green_blue_yellow_solid_neg5px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are 'red green blue yellow', 'solid', '-5px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_red_yellow_dashed_0px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are 'red yellow', 'dashed', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_red_yellow_dashed_2px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are 'red yellow', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_red_yellow_dashed_neg5px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are 'red green blue yellow', 'dashed', '-5px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_rgb_255_130_255_dashed_0px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are rgb(255,130,255)', 'dashed', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-color_rgb_255_130_255_dashed_2px" purpose="Check if the values of 'border-color', 'border-style', 'border-width' are 'rgb(255,130,255)', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-image" purpose="Check if the border-image is set to 'custom.png 100% / 1 / 0px repeat'" result="PASS" /><testcase id="CSS3BG_border-image-outset" purpose="Check if the border-image-outset is set to '0px'" result="PASS" /><testcase id="CSS3BG_border-image-outset_30_30_none_20pct" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '30 30', 'none', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_30_30_none_50px" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '30 30', 'none', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_30_30_none_auto" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '30 30', 'none', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_30_30_url_png_20pct" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '30 30', 'url(support/custom.png)', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_30_30_url_png_50px" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '30 30', 'url(support/custom.png)', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_30_30_url_png_auto" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '30 30', 'url(support/custom.png)', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_5_5_none_20pct" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '5 5', 'none', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_5_5_none_50px" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '5 5', 'none', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_5_5_none_auto" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '5 5', 'none', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_5_5_url_png_20pct" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '5 5', 'url(support/custom.png)', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_5_5_url_png_50px" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '5 5', 'url(support/custom.png)', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_5_5_url_png_auto" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '5 5', 'url(support/custom.png)', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_neg50_neg50_none_20pct" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '-50 -50', 'none', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_neg50_neg50_none_50px" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '-50 -50', 'none', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_neg50_neg50_none_auto" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '-50 -50', 'none', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_neg50_neg50_url_png_20pct" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '-50 -50', 'url(support/custom.png)', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_neg50_neg50_url_png_50px" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '-50 -50', 'url(support/custom.png)', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_neg50_neg50_url_png_auto" purpose="Check if the values of 'border-image-outset', 'border-image-source', 'border-image-width' are '-50 -50', 'url(support/custom.png)', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-outset_negative_not_allowed" purpose="Check if the border-image-outset value is negative" result="PASS" /><testcase id="CSS3BG_border-image-repeat" purpose="Check if the border-image-repeat is set to 'repeat'" result="PASS" /><testcase id="CSS3BG_border-image-repeat_no-repeat_none_20pct" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'no-repeat', 'none', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_no-repeat_none_50px" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'no-repeat', 'none', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_no-repeat_none_auto" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'no-repeat', 'none', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_no-repeat_url_png_20pct" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'no-repeat', 'url(support/custom.png)', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_no-repeat_url_png_50px" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'no-repeat', 'url(support/custom.png)', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_no-repeat_url_png_auto" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'no-repeat', 'url(support/custom.png)', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-x_none_20pct" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-x', 'none', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-x_none_50px" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-x', 'none', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-x_none_auto" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-x', 'none', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-x_url_png_20pct" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-x', 'url(support/custom.png)', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-x_url_png_50px" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-x', 'url(support/custom.png)', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-x_url_png_auto" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-x', 'url(support/custom.png)', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-y_none_20pct" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-y', 'none', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-y_none_50px" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-y', 'none', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-y_none_auto" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-y', 'none', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-y_url_png_20pct" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-y', 'url(support/custom.png)', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-y_url_png_50px" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-y', 'url(support/custom.png)', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat-y_url_png_auto" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat-y', 'url(support/custom.png)', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat_none_20pct" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat', 'none', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat_none_50px" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat', 'none', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat_none_auto" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat', 'none', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat_url_png_20pct" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat', 'url(support/custom.png)', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat_url_png_50px" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat', 'url(support/custom.png)', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-repeat_repeat_url_png_auto" purpose="Check if the values of 'border-image-repeat', 'border-image-source', 'border-image-width' are 'repeat', 'url(support/custom.png)', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice" purpose="Check if the border-image-slice is set to '25% 30% 15% 20%'" result="PASS" /><testcase id="CSS3BG_border-image-slice_50pct_50pct_none_20pct" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50% 50%', 'none', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_50pct_50pct_none_50px" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50% 50%', 'none', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_50pct_50pct_none_auto" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50% 50%', 'none', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_50pct_50pct_url_png_20pct" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50% 50%', 'url(support/custom.png)', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_50pct_50pct_url_png_50px" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50% 50%', 'url(support/custom.png)', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_50pct_50pct_url_png_auto" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50% 50%', 'url(support/custom.png)', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_50px_40px_none_20pct" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50 40', 'none', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_50px_40px_none_50px" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50 40', 'none', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_50px_40px_none_auto" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50 40', 'none', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_50px_40px_url_png_20pct" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50 40', 'url(support/custom.png)', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_50px_40px_url_png_50px" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50 40', 'url(support/custom.png)', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_50px_40px_url_png_auto" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are '50 40', 'url(support/custom.png)', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_fill_none_20pct" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are 'fill', 'none', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_fill_none_50px" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are 'fill', 'none', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_fill_none_auto" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are 'fill', 'none', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_fill_url_png_20pct" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are 'fill', 'url(support/custom.png)', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_fill_url_png_50px" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are 'fill', 'url(support/custom.png)', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_fill_url_png_auto" purpose="Check if the values of 'border-image-slice', 'border-image-source', 'border-image-width' are 'fill', 'url(support/custom.png)', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-slice_negative_interpreted_100pct" purpose="Check if the negative values of 'border-image-slice' are interpreted as 100%" result="PASS" /><testcase id="CSS3BG_border-image-source" purpose="Check if the border-image-source is set to 'custom.png'" result="PASS" /><testcase id="CSS3BG_border-image-source_none_50pct_50pct_20pct" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'none', '50% 50%', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_none_50pct_50pct_50px" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'none', '50% 50%', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_none_50pct_50pct_auto" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'none', '50% 50%', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_none_50px_40px_20pct" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'none', '50 40', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_none_50px_40px_50px" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'none', '50 40', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_none_50px_40px_auto" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'none', '50 40', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_none_fill_20pct" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'none', 'fill', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_none_fill_50px" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'none', 'fill', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_none_fill_auto" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'none', 'fill', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_url_png_50pct_50pct_20pct" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'url(support/custom.png)', '50% 50%', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_url_png_50pct_50pct_50px" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'url(support/custom.png)', '50% 50%', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_url_png_50pct_50pct_auto" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'url(support/custom.png)', '50% 50%', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_url_png_50px_40px_20pct" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'url(support/custom.png)', '50 40', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_url_png_50px_40px_50px" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'url(support/custom.png)', '50 40', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_url_png_50px_40px_auto" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'url(support/custom.png)', '50 40', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_url_png_fill_20pct" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'url(support/custom.png)', 'fill', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_url_png_fill_50px" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'url(support/custom.png)', 'fill', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image-source_url_png_fill_auto" purpose="Check if the values of 'border-image-source', 'border-image-slice', 'border-image-width' are 'url(support/custom.png)', 'fill', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width" purpose="Check if the border-image-width is set to '10px'" result="PASS" /><testcase id="CSS3BG_border-image-width_20pct_50pct_50pct_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '20%', '50% 50%', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_20pct_50pct_50pct_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '20%', '50% 50%', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_20pct_50px_40px_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '20%', '50 40', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_20pct_50px_40px_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '20%', '50 40', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_20pct_fill_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '20%', 'fill', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_20pct_fill_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '20%', 'fill', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_500px_50pct_50pct_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '500px', '50% 50%', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_500px_50pct_50pct_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '500px', '50% 50%', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_500px_50px_40px_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '500px', '50 40', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_500px_50px_40px_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '500px', '50 40', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_500px_fill_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '500px', 'fill', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_500px_fill_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '500px', 'fill', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_50px_50pct_50pct_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '50px', '50% 50%', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_50px_50pct_50pct_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '50px', '50% 50%', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_50px_50px_40px_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '50px', '50 40', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_50px_50px_40px_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '50px', '50 40', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_50px_fill_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '50px', 'fill', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_50px_fill_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are '50px', 'fill', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_auto_50pct_50pct_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are 'auto', '50% 50%', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_auto_50pct_50pct_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are 'auto', '50% 50%', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_auto_50px_40px_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are 'auto', '50 40', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_auto_50px_40px_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are 'auto', '50 40', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_auto_fill_none" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are 'auto', 'fill', 'none' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_auto_fill_url_png" purpose="Check if the values of 'border-image-width', 'border-image-slice', 'border-image-source' are 'auto', 'fill', 'url(support/custom.png)' respectively" result="PASS" /><testcase id="CSS3BG_border-image-width_negative_not_allowed" purpose="Check if the border-image-width value is negative" result="PASS" /><testcase id="CSS3BG_border-image_50pct_50pct_none_20pct" purpose="Check if the border-image is set to 'none 50% 50% / 20%'" result="PASS" /><testcase id="CSS3BG_border-image_50pct_50pct_none_50px" purpose="Check if the border-image is set to 'none 50% 50% / 50px'" result="PASS" /><testcase id="CSS3BG_border-image_50pct_50pct_none_auto" purpose="Check if the border-image is set to 'none 50% 50% / auto'" result="PASS" /><testcase id="CSS3BG_border-image_50pct_50pct_url_png_20pct" purpose="Check if the border-image is set to 'url(support/custom.png) 50% 50% / 20%'" result="PASS" /><testcase id="CSS3BG_border-image_50pct_50pct_url_png_50px" purpose="Check if the border-image is set to 'url(support/custom.png) 50% 50% / 50px'" result="PASS" /><testcase id="CSS3BG_border-image_50pct_50pct_url_png_auto" purpose="Check if the border-image is set to 'url(support/custom.png) 50% 50% / auto'" result="PASS" /><testcase id="CSS3BG_border-image_50px_40px_none_20pct" purpose="Check if the border-image is set to 'none 50 40 / 20%'" result="PASS" /><testcase id="CSS3BG_border-image_50px_40px_none_50px" purpose="Check if the border-image is set to 'none 50 40 / 50px'" result="PASS" /><testcase id="CSS3BG_border-image_50px_40px_none_auto" purpose="Check if the border-image is set to 'none 50 40 / auto'" result="PASS" /><testcase id="CSS3BG_border-image_50px_40px_url_png_20pct" purpose="Check if the border-image is set to 'url(support/custom.png) 50 40 / 20%'" result="PASS" /><testcase id="CSS3BG_border-image_50px_40px_url_png_50px" purpose="Check if the border-image is set to 'url(support/custom.png) 50 40 / 50px'" result="PASS" /><testcase id="CSS3BG_border-image_50px_40px_url_png_auto" purpose="Check if the border-image is set to 'url(support/custom.png) 50 40 / auto'" result="PASS" /><testcase id="CSS3BG_border-image_fill_none_20pct" purpose="Check if the values of 'border-image', 'border-image-slice', 'border-image-source', 'border-image-width' are ' ', 'fill', 'none', '20%' respectively" result="PASS" /><testcase id="CSS3BG_border-image_fill_none_50px" purpose="Check if the values of 'border-image', 'border-image-slice', 'border-image-source', 'border-image-width' are ' ', 'fill', 'none', '50px' respectively" result="PASS" /><testcase id="CSS3BG_border-image_fill_none_auto" purpose="Check if the values of 'border-image', 'border-image-slice', 'border-image-source', 'border-image-width' are ' ', 'fill', 'none', 'auto' respectively" result="PASS" /><testcase id="CSS3BG_border-left-color" purpose="Check if the border-left-color is set to 'rgb(85, 85, 85)'" result="PASS" /><testcase id="CSS3BG_border-left-color_ccc_dashed_2px" purpose="Check if the values of 'border-left-color', 'border-style', 'border-width' are '#ccc', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-left-color_ccc_solid_2px" purpose="Check if the values of 'border-left-color', 'border-style', 'border-width' are '#ccc', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-left-color_f00_solid_2px" purpose="Check if the values of 'border-left-color', 'border-style', 'border-width' are '#f00', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-left-color_rgb_255_255_0_dashed_2px" purpose="Check if the values of 'border-left-color', 'border-style', 'border-width' are 'rgb(255,255,0)', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-left-color_rgb_255_255_0_solid_2px" purpose="Check if the values of 'border-left-color', 'border-style', 'border-width' are 'rgb(255,255,0)', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-left-style" purpose="Check if the border-left-style is set to 'dashed'" result="PASS" /><testcase id="CSS3BG_border-left-style_dashed" purpose="Check if the border-left-style value is dashed" result="PASS" /><testcase id="CSS3BG_border-left-style_dotted" purpose="Check if the border-left-style value is dotted" result="PASS" /><testcase id="CSS3BG_border-left-style_double" purpose="Check if the border-left-style value is double" result="PASS" /><testcase id="CSS3BG_border-left-style_groove" purpose="Check if the border-left-style value is groove" result="PASS" /><testcase id="CSS3BG_border-left-style_hidden" purpose="Check if the border-left-style value is hidden" result="PASS" /><testcase id="CSS3BG_border-left-style_inset" purpose="Check if the border-left-style value is inset" result="PASS" /><testcase id="CSS3BG_border-left-style_none" purpose="Check if the border-left-style value is none" result="PASS" /><testcase id="CSS3BG_border-left-style_outset" purpose="Check if the border-left-style value is outset" result="PASS" /><testcase id="CSS3BG_border-left-style_ridge" purpose="Check if the border-left-style value is ridge" result="PASS" /><testcase id="CSS3BG_border-left-style_solid" purpose="Check if the border-left-style value is solid" result="PASS" /><testcase id="CSS3BG_border-left-width" purpose="Check if the border-left-width is set to '12px'" result="PASS" /><testcase id="CSS3BG_border-left-width_2em_dashed" purpose="Check if the values of 'border-left-width', 'border-style' are '2em', 'dashed' respectively" result="PASS" /><testcase id="CSS3BG_border-left-width_2em_dotted" purpose="Check if the values of 'border-left-width', 'border-style' are '2em', 'dotted' respectively" result="PASS" /><testcase id="CSS3BG_border-left-width_2em_solid" purpose="Check if the values of 'border-left-width', 'border-style' are '2em', 'solid' respectively" result="PASS" /><testcase id="CSS3BG_border-left-width_30px_dashed" purpose="Check if the values of 'border-left-width', 'border-style' are '30px', 'dashed' respectively" result="PASS" /><testcase id="CSS3BG_border-left-width_30px_dotted" purpose="Check if the values of 'border-left-width', 'border-style' are '30px', 'dotted' respectively" result="PASS" /><testcase id="CSS3BG_border-left-width_30px_solid" purpose="Check if the values of 'border-left-width', 'border-style' are '30px', 'solid' respectively" result="PASS" /><testcase id="CSS3BG_border-radius" purpose="To check if the border-radius is set to '5px'" result="PASS" /><testcase id="CSS3BG_border-radius_0px_dashed_ccc_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '0px', 'dashed', '#ccc', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_0px_dashed_f00_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '0px', 'dashed', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_0px_solid_ccc_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '0px', 'solid', '#ccc', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_0px_solid_f00_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '0px', 'solid', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_2px_3px_4px_5px_dashed_ccc_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '2px 3px 4px 5px', 'dashed', '#ccc', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_2px_3px_4px_5px_dashed_f00_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '2px 3px 4px 5px', 'dashed', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_2px_3px_4px_5px_solid_ccc_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '2px 3px 4px 5px', 'solid', '#ccc', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_2px_3px_4px_5px_solid_f00_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '2px 3px 4px 5px', 'solid', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_50pct_dashed_ccc_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '50%', 'dashed', '#ccc', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_50pct_dashed_f00_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '50%', 'dashed', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_50pct_solid_f00_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '50%', 'solid', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_50px_dashed_ccc_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '50px', 'dashed', '#ccc', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_50px_dashed_f00_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '50px', 'dashed', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_50px_solid_ccc_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '50px', 'solid', '#ccc', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_50px_solid_f00_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '50px', 'solid', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_5px_dashed_ccc_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '5px', 'dashed', '#ccc', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_5px_dashed_f00_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '5px', 'dashed', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_5px_solid_ccc_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '5px', 'solid', '#ccc', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_5px_solid_f00_2px" purpose="Check if the values of 'border-radius', 'border-style', 'border-color', 'border-width' are '5px', 'solid', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-radius_bottomleft_omitted" purpose="Check if border-radius bottom-left value omitted it is the same as top-right" result="PASS" /><testcase id="CSS3BG_border-radius_bottomright_bottomleft_omitted" purpose="Check if border-radius bottom-right and bottom-left omitted it is the same as top-left and top-right" result="PASS" /><testcase id="CSS3BG_border-right-color" purpose="Check if the border-right-color is set to 'rgb(85, 85, 85)'" result="PASS" /><testcase id="CSS3BG_border-right-color_ccc_dashed_2px" purpose="Check if the values of 'border-right-color', 'border-style', 'border-width' are '#ccc', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-right-color_ccc_solid_2px" purpose="Check if the values of 'border-right-color', 'border-style', 'border-width' are '#ccc', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-right-color_rgb_0_255_0_2px" purpose="Check if the values of 'border-right-color', 'border-width' are 'rgb(0,255,0)', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-right-color_rgb_255_255_0_dashed_2px" purpose="Check if the values of 'border-right-color', 'border-style', 'border-width' are 'rgb(255,255,0)', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-right-color_rgb_255_255_0_solid_2px" purpose="Check if the values of 'border-right-color', 'border-style', 'border-width' are 'rgb(255,255,0)', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-right-style" purpose="Check if the border-right-style is set to 'dashed'" result="PASS" /><testcase id="CSS3BG_border-right-style_dashed" purpose="Check if the border-right-style value is dashed" result="PASS" /><testcase id="CSS3BG_border-right-style_dotted" purpose="Check if the border-right-style value is dotted" result="PASS" /><testcase id="CSS3BG_border-right-style_double" purpose="Check if the border-right-style value is double" result="PASS" /><testcase id="CSS3BG_border-right-style_groove" purpose="Check if the border-right-style value is groove" result="PASS" /><testcase id="CSS3BG_border-right-style_hidden" purpose="Check if the border-right-style value is hidden" result="PASS" /><testcase id="CSS3BG_border-right-style_inset" purpose="Check if the border-right-style value is inset" result="PASS" /><testcase id="CSS3BG_border-right-style_none" purpose="Check if the border-right-style value is none" result="PASS" /><testcase id="CSS3BG_border-right-style_outset" purpose="Check if the border-right-style value is outset" result="PASS" /><testcase id="CSS3BG_border-right-style_ridge" purpose="Check if the border-right-style value is ridge" result="PASS" /><testcase id="CSS3BG_border-right-style_solid" purpose="Check if the border-right-style value is solid" result="PASS" /><testcase id="CSS3BG_border-right-width" purpose="Check if the border-right-width is set to '12px'" result="PASS" /><testcase id="CSS3BG_border-right-width_2em_dashed" purpose="Check if the values of 'border-right-width', 'border-style' are '2em', 'dashed' respectively" result="PASS" /><testcase id="CSS3BG_border-right-width_2em_dotted" purpose="Check if the values of 'border-right-width', 'border-style' are '2em', 'dotted' respectively" result="PASS" /><testcase id="CSS3BG_border-right-width_2em_solid" purpose="Check if the values of 'border-right-width', 'border-style' are '2em', 'solid' respectively" result="PASS" /><testcase id="CSS3BG_border-right-width_30px_dashed" purpose="Check if the values of 'border-right-width', 'border-style' are '30px', 'dashed' respectively" result="PASS" /><testcase id="CSS3BG_border-right-width_30px_dotted" purpose="Check if the values of 'border-right-width', 'border-style' are '30px', 'dotted' respectively" result="PASS" /><testcase id="CSS3BG_border-right-width_30px_solid" purpose="Check if the values of 'border-right-width', 'border-style' are '30px', 'solid' respectively" result="PASS" /><testcase id="CSS3BG_border-style" purpose="Check if the border-style is set to 'dashed'" result="PASS" /><testcase id="CSS3BG_border-style_double_f00_2px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'double', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_double_f00_neg5px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'double', '#f00', '-5px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_groove_f00_0px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'groove', '#f00', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_groove_f00_2px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'groove', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_groove_f00_neg5px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'groove', '#f00', '-5px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_hidden_f00_0px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'hidden', '#f00', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_hidden_f00_2px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'hidden', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_hidden_f00_neg5px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'hidden', '#f00', '-5px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_inherit_f00_0px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'inherit', '#f00', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_inherit_f00_2px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'inherit', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_inherit_f00_neg5px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'inherit', '#f00', '-5px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_inset_f00_0px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'inset', '#f00', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_inset_f00_2px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'inset', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_outset_f00_0px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'outset', '#f00', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_outset_f00_2px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'outset', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_outset_f00_neg5px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'outset', '#f00', '-5px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_ridge_f00_0px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'ridge', '#f00', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_ridge_f00_2px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'ridge', '#f00', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_ridge_f00_neg5px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'ridge', '#f00', '-5px' respectively" result="PASS" /><testcase id="CSS3BG_border-style_solid_f00_0px" purpose="Check if the values of 'border-style', 'border-color', 'border-width' are 'solid', '#f00', '0px' respectively" result="PASS" /><testcase id="CSS3BG_border-top-color" purpose="Check if the border-top-color is set to 'rgb(85, 85, 85)'" result="PASS" /><testcase id="CSS3BG_border-top-color_ccc_dashed_2px" purpose="Check if the values of 'border-top-color', 'border-style', 'border-width' are '#ccc', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-top-color_ccc_solid_2px" purpose="Check if the values of 'border-top-color', 'border-style', 'border-width' are '#ccc', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-top-color_f00_dashed_2px" purpose="Check if the values of 'border-top-color', 'border-style', 'border-width' are '#f00', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-top-color_f00_solid_2px" purpose="Check if the values of 'border-top-color', 'border-style', 'border-width' are '#f00', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-top-color_rgb_255_255_0_solid_2px" purpose="Check if the values of 'border-top-color', 'border-style', 'border-width' are 'rgb(255,255,0)', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-top-left-radius" purpose="Check if the border-top-left-radius is set to '5px'" result="PASS" /><testcase id="CSS3BG_border-top-left-radius_10pct_dashed_2px" purpose="Check if the values of 'border-top-left-radius', 'border-style', 'border-width' are '10%', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-top-left-radius_10pct_solid_2px" purpose="Check if the values of 'border-top-left-radius', 'border-style', 'border-width' are '10%', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-top-left-radius_10px_dashed_2px" purpose="Check if the values of 'border-top-left-radius', 'border-style', 'border-width' are '10px', 'dashed', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-top-left-radius_10px_solid_2px" purpose="Check if the values of 'border-top-left-radius', 'border-style', 'border-width' are '10px', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-top-left-radius_initial" purpose="Check if the border-top-left-radius initial value is '0px'" result="PASS" /><testcase id="CSS3BG_border-top-left-radius_length_length" purpose="Check if the border-top-left-radius is set to '1px 4px'" result="PASS" /><testcase id="CSS3BG_border-top-left-radius_negative_length" purpose="Check if the element border-top-left-radius value is negative length" result="PASS" /><testcase id="CSS3BG_border-top-left-radius_negative_percentage" purpose="Check if the element border-top-left-radius value is negative percentage" result="PASS" /><testcase id="CSS3BG_border-top-left-radius_percentage_length" purpose="Check if the border-top-left-radius is set to '2% 4px'" result="PASS" /><testcase id="CSS3BG_border-top-left-radius_percentage_percentage" purpose="Check if the border-top-left-radius is set to '2% 3%'" result="PASS" /><testcase id="CSS3BG_border-top-right-radius" purpose="Check if the border-top-right-radius is set to '5px'" result="PASS" /><testcase id="CSS3BG_border-top-right-radius_10px_solid_2px" purpose="Check if the values of 'border-top-right-radius', 'border-style', 'border-width' are '10px', 'solid', '2px' respectively" result="PASS" /><testcase id="CSS3BG_border-top-right-radius_initial" purpose="Check if the element border-top-right-radius initial value is 0px" result="PASS" /><testcase id="CSS3BG_border-top-right-radius_length_length" purpose="Check if the border-top-right-radius is set to '1px 4px'" result="PASS" /><testcase id="CSS3BG_border-top-right-radius_negative" purpose="Check if the element border-top-right-radius value is negative" result="PASS" /><testcase id="CSS3BG_border-top-right-radius_negative_percentage" purpose="Check if the element border-top-right-radius value is negative percentage" result="PASS" /><testcase id="CSS3BG_border-top-right-radius_percentage_length" purpose="Check if the border-top-right-radius is set to '2% 4px'" result="PASS" /><testcase id="CSS3BG_border-top-right-radius_percentage_percentage" purpose="Check if the border-top-right-radius is set to '2% 3%'" result="PASS" /><testcase id="CSS3BG_border-top-style" purpose="Check if the border-top-style is set to 'dashed'" result="PASS" /><testcase id="CSS3BG_border-top-style_dashed" purpose="Check if the border-top-style value is dashed" result="PASS" /><testcase id="CSS3BG_border-top-style_dotted" purpose="Check if the border-top-style value is dotted" result="PASS" /><testcase id="CSS3BG_border-top-style_double" purpose="Check if the border-top-style value is double" result="PASS" /><testcase id="CSS3BG_border-top-style_groove" purpose="Check if the border-top-style value is groove" result="PASS" /><testcase id="CSS3BG_border-top-style_hidden" purpose="Check if the border-top-style value is hidden" result="PASS" /><testcase id="CSS3BG_border-top-style_inset" purpose="Check if the border-top-style value is inset" result="PASS" /><testcase id="CSS3BG_border-top-style_none" purpose="Check if the border-top-style value is none" result="PASS" /><testcase id="CSS3BG_border-top-style_outset" purpose="Check if the border-top-style value is outset" result="PASS" /><testcase id="CSS3BG_border-top-style_ridge" purpose="Check if the border-top-style value is ridge" result="PASS" /><testcase id="CSS3BG_border-top-style_solid" purpose="Check if the border-top-style value is solid" result="PASS" /><testcase id="CSS3BG_border-top-width" purpose="Check if the border-top-width is set to '12px'" result="PASS" /><testcase id="CSS3BG_border-top-width_100px_dashed_000" purpose="Check if the values of 'border-top-width', 'border-style', 'border-color' are '100px', 'dashed', '#000' respectively" result="PASS" /><testcase id="CSS3BG_border-top-width_100px_solid_000" purpose="Check if the values of 'border-top-width', 'border-style', 'border-color' are '100px', 'solid', '#000' respectively" result="PASS" /><testcase id="CSS3BG_border-top-width_30px_dashed_000" purpose="Check if the values of 'border-top-width', 'border-style', 'border-color' are '30px', 'dashed', '#000' respectively" result="PASS" /><testcase id="CSS3BG_border-top-width_30px_solid_000" purpose="Check if the values of 'border-top-width', 'border-style', 'border-color' are '30px', 'solid', '#000' respectively" result="PASS" /><testcase id="CSS3BG_border-top-width_neg5px_dashed_000" purpose="Check if the values of 'border-top-width', 'border-style', 'border-color' are '-5px', 'dashed', '#000' respectively" result="PASS" /><testcase id="CSS3BG_border-top-width_neg5px_solid_000" purpose="Check if the values of 'border-top-width', 'border-style', 'border-color' are '-5px', 'solid', '#000' respectively" result="PASS" /><testcase id="CSS3BG_border-width" purpose="Check if the border-width is set to '50px'" result="PASS" /><testcase id="CSS3BG_border-width_0px_dashed_ccc" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '0px', 'dashed', '#ccc' respectively" result="PASS" /><testcase id="CSS3BG_border-width_0px_dashed_f00" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '0px', 'dashed', '#f00' respectively" result="PASS" /><testcase id="CSS3BG_border-width_0px_solid_ccc" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '0px', 'solid', '#ccc' respectively" result="PASS" /><testcase id="CSS3BG_border-width_0px_solid_f00" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '0px', 'solid', '#f00' respectively" result="PASS" /><testcase id="CSS3BG_border-width_20px_dashed_ccc" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '20px', 'dashed', '#ccc' respectively" result="PASS" /><testcase id="CSS3BG_border-width_20px_dashed_f00" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '20px', 'dashed', '#f00' respectively" result="PASS" /><testcase id="CSS3BG_border-width_20px_solid_ccc" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '20px', 'solid', '#ccc' respectively" result="PASS" /><testcase id="CSS3BG_border-width_20px_solid_f00" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '20px', 'solid', '#f00' respectively" result="PASS" /><testcase id="CSS3BG_border-width_50px_dashed_ccc" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '50px', 'dashed', '#ccc' respectively" result="PASS" /><testcase id="CSS3BG_border-width_50px_dashed_f00" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '50px', 'dashed', '#f00' respectively" result="PASS" /><testcase id="CSS3BG_border-width_50px_solid_ccc" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '50px', 'solid', '#ccc' respectively" result="PASS" /><testcase id="CSS3BG_border-width_50px_solid_f00" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '50px', 'solid', '#f00' respectively" result="PASS" /><testcase id="CSS3BG_border-width_neg5px_dashed_ccc" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '-5px', 'dashed', '#ccc' respectively" result="PASS" /><testcase id="CSS3BG_border-width_neg5px_dashed_f00" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '-5px', 'dashed', '#f00' respectively" result="PASS" /><testcase id="CSS3BG_border-width_neg5px_solid_ccc" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '-5px', 'solid', '#ccc' respectively" result="PASS" /><testcase id="CSS3BG_border-width_neg5px_solid_f00" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are '-5px', 'solid', '#f00' respectively" result="PASS" /><testcase id="CSS3BG_border-width_none_dashed_ccc" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are 'none', 'dashed', '#ccc' respectively" result="PASS" /><testcase id="CSS3BG_border-width_none_dashed_f00" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are 'none', 'dashed', '#f00' respectively" result="PASS" /><testcase id="CSS3BG_border-width_none_solid_ccc" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are 'none', 'solid', '#ccc' respectively" result="PASS" /><testcase id="CSS3BG_border-width_none_solid_f00" purpose="Check if the values of 'border-width', 'border-style', 'border-color' are 'none', 'solid', '#f00' respectively" result="PASS" /><testcase id="CSS3BG_border_0point5px_dashed_000" purpose="Check if the border is set to '0.5px dashed #000'" result="PASS" /><testcase id="CSS3BG_border_10px_ridge_000" purpose="Check if the border is set to '10px ridge #000'" result="PASS" /><testcase id="CSS3BG_border_20pct_dotted_000" purpose="Check if the border is set to '20% dotted #000'" result="PASS" /><testcase id="CSS3BG_border_20px_double_000" purpose="Check if the border is set to '20px double #000'" result="PASS" /><testcase id="CSS3BG_border_20px_groove_000" purpose="Check if the border is set to '20px groove #000'" result="PASS" /><testcase id="CSS3BG_box-shadow" purpose="Check if the box-shadow is set to 'rgb(0, 0, 65) 5px 5px 5px 0px'" result="PASS" /><testcase id="CSS3BG_box-shadow_10px_10px_50px_20px_pink_inset" purpose="Check if the box-shadow is set to '10px 10px 50px 20px pink inset'" result="PASS" /><testcase id="CSS3BG_box-shadow_10px_10px_black" purpose="Check if the box-shadow is set to '10px 10px black'" result="PASS" /><testcase id="CSS3BG_box-shadow_20px_20px_50px_20px_pink" purpose="Check if the box-shadow is set to '20px 20px 50px 20px pink'" result="PASS" /><testcase id="CSS3BG_box-shadow_40px_40px_50px_20px_pink" purpose="Check if the box-shadow is set to '40px 40px 50px 20px pink'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_10px_black" purpose="Check if the box-shadow is set to '50px 50px 10px black'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_20px_black" purpose="Check if the box-shadow is set to '50px 50px 20px black'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_50px_10px_black" purpose="Check if the box-shadow is set to '50px 50px 50px 10px black'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_50px_20px_black" purpose="Check if the box-shadow is set to '50px 50px 50px 20px black'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_50px_20px_blue" purpose="Check if the box-shadow is set to '50px 50px 50px 20px blue'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_50px_20px_pink" purpose="Check if the box-shadow is set to '50px 50px 50px 20px pink'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_50px_20px_red" purpose="Check if the box-shadow is set to '50px 50px 50px 20px red'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_50px_5px_black" purpose="Check if the box-shadow is set to '50px 50px 50px 5px black'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_50px_black" purpose="Check if the box-shadow is set to '50px 50px 50px black'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_5px_black" purpose="Check if the box-shadow is set to '50px 50px 5px black'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_black" purpose="Check if the box-shadow is set to '50px 50px black'" result="PASS" /><testcase id="CSS3BG_box-shadow_50px_50px_inset_black" purpose="Check if the box-shadow is set to '50px 50px inset black'" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/CSS Color Module Level 3"><testcase id="CSS3Colors_color_pseudo-classes" purpose="Check the color effect in Pseudo-classes on test div" result="PASS" /><testcase id="css3_colors_tests_entry14" purpose="Check that the color keywords  in  HTML4 specification  have the correct values" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="css3_colors_tests_entry27" purpose="Check that color components in rgb colors are interpreted correctly" result="PASS" /><testcase id="css3_colors_tests_entry40" purpose="Check that color components in rgba colors are rendered correctly" result="PASS" /><testcase id="css3_colors_tests_entry55" purpose="Check that system colors are displayed as described" result="PASS" /><testcase id="CSS3Colors_color_000" purpose="Check if the color is set to 'color:#000'" result="PASS" /><testcase id="CSS3Colors_color_000000" purpose="Check if the color is set to 'color:#000000'" result="PASS" /><testcase id="CSS3Colors_color_0000FF" purpose="Check if the color is set to 'color:#0000FF'" result="PASS" /><testcase id="CSS3Colors_color_00FF00" purpose="Check if the color is set to 'color:#00FF00'" result="PASS" /><testcase id="CSS3Colors_color_00ffff_1" purpose="Check if the color is set to 'color:#00ffff'" result="PASS" /><testcase id="CSS3Colors_color_00FFFF_2" purpose="Check if the color is set to 'color:#00FFFF'" result="PASS" /><testcase id="CSS3Colors_color_00f_1" purpose="Check if the color is set to 'color:#00f'" result="PASS" /><testcase id="CSS3Colors_color_00F_2" purpose="Check if the color is set to 'color:#00F'" result="PASS" /><testcase id="CSS3Colors_color_0f0_1" purpose="Check if the color is set to 'color:#0f0'" result="PASS" /><testcase id="CSS3Colors_color_0F0_2" purpose="Check if the color is set to 'color:#0F0'" result="PASS" /><testcase id="CSS3Colors_color_0ff_1" purpose="Check if the color is set to 'color:#0ff'" result="PASS" /><testcase id="CSS3Colors_color_0FF_2" purpose="Check if the color is set to 'color:#0FF'" result="PASS" /><testcase id="CSS3Colors_color_black" purpose="Check if the color is set to 'color:black'" result="PASS" /><testcase id="CSS3Colors_color_blue" purpose="Check if the color is set to 'color:blue'" result="PASS" /><testcase id="CSS3Colors_color_c30_1" purpose="Check if the color is set to 'color:#c30'" result="PASS" /><testcase id="CSS3Colors_color_C30_2" purpose="Check if the color is set to 'color:#C30'" result="PASS" /><testcase id="CSS3Colors_color_cccc33_1" purpose="Check if the color is set to 'color:#cccc33'" result="PASS" /><testcase id="CSS3Colors_color_CCCC33_2" purpose="Check if the color is set to 'color:#CCCC33'" result="PASS" /><testcase id="CSS3Colors_color_ccff00_1" purpose="Check if the color is set to 'color:#ccff00'" result="PASS" /><testcase id="CSS3Colors_color_CCFF00_2" purpose="Check if the color is set to 'color:#CCFF00'" result="PASS" /><testcase id="CSS3Colors_color_cf0_1" purpose="Check if the color is set to 'color:#cf0'" result="PASS" /><testcase id="CSS3Colors_color_CF0_2" purpose="Check if the color is set to 'color:#CF0'" result="PASS" /><testcase id="CSS3Colors_color_f00_1" purpose="Check if the color is set to 'color:#f00'" result="PASS" /><testcase id="CSS3Colors_color_F00_2" purpose="Check if the color is set to 'color:#F00'" result="PASS" /><testcase id="CSS3Colors_color_f0c_1" purpose="Check if the color is set to 'color:#f0c'" result="PASS" /><testcase id="CSS3Colors_color_F0C_2" purpose="Check if the color is set to 'color:#F0C'" result="PASS" /><testcase id="CSS3Colors_color_ff0000_1" purpose="Check if the color is set to 'color:#ff0000'" result="PASS" /><testcase id="CSS3Colors_color_FF0000_2" purpose="Check if the color is set to 'color:#FF0000'" result="PASS" /><testcase id="CSS3Colors_color_ff00cc_1" purpose="Check if the color is set to 'color:#ff00cc'" result="PASS" /><testcase id="CSS3Colors_color_FF00CC_2" purpose="Check if the color is set to 'color:#FF00CC'" result="PASS" /><testcase id="CSS3Colors_color_hsl_hus_only_number" purpose="Check if in hsl(), the hus only a number value can be given" result="PASS" /><testcase id="CSS3Colors_color_hsl_value_with_space" purpose="Check if hsl() can has space" result="PASS" /><testcase id="CSS3Colors_color_red" purpose="Check if the color is set to 'color:red'" result="PASS" /><testcase id="CSS3Colors_color_rgb_0pct_0pct_100pct" purpose="Check if the color is set to 'color:rgb(0%,0%,100%)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_0pct_100pct_0pct" purpose="Check if the color is set to 'color:rgb(0%,100%,0%)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_0pct_100pct_100pct" purpose="Check if the color is set to 'color:rgb(0%,100%,100%)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_0_0_0" purpose="Check if the color is set to 'color:rgb(0,0,0)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_0_0_255" purpose="Check if the color is set to 'color:rgb(0,0,255)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_0_255_0" purpose="Check if the color is set to 'color:rgb(0,255,0)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_0_255_255" purpose="Check if the color is set to 'color:rgb(0,255,255)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_100pct_0pct_0pct" purpose="Check if the color is set to 'color:rgb(100%,0%,0%)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_100pct_0pct_80pct" purpose="Check if the color is set to 'color:rgb(100%,0%,80%)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_204_204_51" purpose="Check if the color is set to 'color:rgb(204,204,51)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_204_255_0" purpose="Check if the color is set to 'color:rgb(204,255,0)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_255_0_0" purpose="Check if the color is set to 'color:rgb(255,0,0)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_255_0_204" purpose="Check if the color is set to 'color:rgb(255,0,204)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_80pct_100pct_0pct" purpose="Check if the color is set to 'color:rgb(80%,100%,0%)'" result="PASS" /><testcase id="CSS3Colors_color_rgb_80pct_80pct_20pct" purpose="Check if the color is set to 'color:rgb(80%,80%,20%)'" result="PASS" /><testcase id="CSS3Colors_color_transprent_rgba_0_0_0_0" purpose="Check if the color keyword transparent and color value rgba(0,0,0,0) have same effect" result="PASS" /><testcase id="css3_colors_tests_entry1" purpose="Check that color: currentColor acts like inherit." result="PASS" /><testcase id="css3_colors_tests_entry10" purpose="To check that opacity is group opacity over elements (not boxes)" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry15" purpose="To check that currentColor uses the color from the color property works at boxes" result="PASS" /><testcase id="css3_colors_tests_entry16" purpose="To check that currentColor uses the color from the color property works at borders" result="PASS" /><testcase id="css3_colors_tests_entry18" purpose="Check that rgb() values of number produces correct colors" result="PASS" /><testcase id="css3_colors_tests_entry19" purpose="Check that rgb() values are only accepted when all integers or all percentages" result="PASS" /><testcase id="css3_colors_tests_entry2" purpose="Check that color: green can implement color function properly" result="PASS" /><testcase id="css3_colors_tests_entry20" purpose="Check that rgb() values of percent produce correct colors." result="PASS" /><testcase id="css3_colors_tests_entry21" purpose="Check that whitespace is allowed within rgb() functions" result="PASS" /><testcase id="css3_colors_tests_entry22" purpose="Check that #rgb values produce correct colors" result="PASS" /><testcase id="css3_colors_tests_entry25" purpose="Check that the color '#rrggbb' is displayed correctly." result="PASS" /><testcase id="css3_colors_tests_entry26" purpose="Check that hexadecimal values are only accepted if they have 3 or six digits" result="PASS" /><testcase id="css3_colors_tests_entry3" purpose="Check that opacity: 0.0 can implement opacity function properly" result="PASS" /><testcase id="css3_colors_tests_entry30" purpose="Check that opacity of 1.0 makes text fully opaque" result="PASS" /><testcase id="css3_colors_tests_entry31" purpose="Check that alpha components of rgba() colors less than 0 are treated to 0" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry32" purpose="Check that alpha components of rgba() colors greater than 1 are treated to 1" result="PASS" /><testcase id="css3_colors_tests_entry33" purpose="Check clipping of rgba() values are outside the device gamut" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry34" purpose="Check that rgba() values produce correct colors" result="PASS" /><testcase id="css3_colors_tests_entry35" purpose="Check that rgba() values are only accepted when all integers or all percentages" result="PASS" /><testcase id="css3_colors_tests_entry36" purpose="Check that rgba() can produce correct colors" result="PASS" /><testcase id="css3_colors_tests_entry37" purpose="Check that whitespace is allowed within rgba() functions" result="PASS" /><testcase id="css3_colors_tests_entry38" purpose="To check that rgba() does not behave like opacity and draw in an offscreen buffer" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry39" purpose="To check that rgba() does not behave like opacity" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry41" purpose="Check that the 'transparent' color keyword makes colors white transparent" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry42" purpose="Check that the 'transparent' color keyword makes colors black transparent" result="PASS" /><testcase id="css3_colors_tests_entry43" purpose="Check the basic functioning of hsl() colors." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry44" purpose="Check that clipping of hsl() values are outside the device gamut" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry45" purpose="Check that H values in hsl() colors was treated like angles, even if it is outside [0,360)." result="PASS" /><testcase id="css3_colors_tests_entry46" purpose="Check the rules for parsing of hsl() colors." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry49" purpose="Check the clipping of hsla() values when they are beyond the scope of device gamut." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry5" purpose="Check that opacity: 1.0 can implement opacity function properly" result="PASS" /><testcase id="css3_colors_tests_entry50" purpose="Check H values in hsla() colors should be treated like angles, even if it is outside [0,360)" result="PASS" /><testcase id="css3_colors_tests_entry52" purpose="To check that hsla() does not behave like opacity" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry53" purpose="Check the rules for parsing of hsla() colors" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry54" purpose="Check the implementation of algorithm for converting hsla() colors to rgb() colors" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css3_colors_tests_entry6" purpose="Check that opacity: (Negative number below than -0.0) are treated to 0.0" result="PASS" /><testcase id="css3_colors_tests_entry7" purpose="Check that opacity: (greater than 1.0) is treated to 1.0" result="PASS" /><testcase id="css3_colors_tests_entry9" purpose="To check that opacity is group opacity into elements (not boxes)" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/CSS Fonts Module Level 3"><testcase id="font-044" purpose="Check if a system font sets all of the font subproperties at the same time; then font value is changed to 'message-box'" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="font-matching-rule-012" purpose="Check if the font-size for scalable fonts are rounded to the nearest whole pixel" result="PASS" /><testcase id="font-size-091" purpose="Check if the font-size is 1% in visual" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="font-size-116" purpose="Check if the font-size have the right size in pixels unit in visual" result="PASS" /><testcase id="font-size-rule-004" purpose="Check if the font-size em unit value refers its parent in visual" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="c523-font-style-000" purpose="Check if the 'font-style' property has correct visual rendering" result="PASS" /><testcase id="c524-font-var-000" purpose="Check if the 'font-variant' property has correct visual rendering" result="PASS" /><testcase id="c525-font-wt-000" purpose="Check if the 'font-weight' property has correct visual rendering" result="PASS" /><testcase id="c526-font-sz-000" purpose="Check if the 'font-size' property has correct visual rendering" result="PASS" /><testcase id="CSS3DF_font-family" purpose="Check if the element font-family exists" result="PASS" /><testcase id="CSS3DF_font-kerning_auto" purpose="Check if the font-kerning value can be given auto" result="PASS" /><testcase id="CSS3DF_font-kerning_initial_value" purpose="Check if the initial value of font-kerning is auto" result="PASS" /><testcase id="CSS3DF_font-kerning_none" purpose="Check if the font-kerning value can be given none" result="PASS" /><testcase id="CSS3DF_font-kerning_normal" purpose="Check if the font-kerning can be given normal value" result="PASS" /><testcase id="CSS3DF_font-style_initial_value" purpose="Check if the initial value of font-style is normal" result="PASS" /><testcase id="CSS3DF_font-variant-ligatures_initial_value" purpose="Check if the initial value of font-variant-ligatures is normal" result="PASS" /><testcase id="CSS3DF_font-variant-ligatures_normal" purpose="Check if the font-variant-ligatures can be given normal value" result="PASS" /><testcase id="CSS3DF_font-variant_initial_value" purpose="Check if the initial value of font-variant is normal" result="PASS" /><testcase id="CSS3DF_font-variant_normal" purpose="Check if the font-variant can be given normal value" result="PASS" /><testcase id="CSS3DF_font-weight_initial_value" purpose="Check if the initial value of font-weight is normal" result="PASS" /><testcase id="font-001" purpose="Check if the 'font' shorthand property accepts and sets font-size and font-family" result="PASS" /><testcase id="font-002" purpose="Check if the 'font' shorthand property accepts and sets font-style, font-size and font-family" result="PASS" /><testcase id="font-003" purpose="Check if the 'font' shorthand property accepts and sets font-variant, font-size and font-family" result="PASS" /><testcase id="font-004" purpose="Check if the 'font' shorthand property accepts and sets font-weight, font-size and font-family" result="PASS" /><testcase id="font-006" purpose="Check if the 'font' shorthand property accepts and sets font-style, font-weight, font-size and font-family" result="PASS" /><testcase id="font-007" purpose="Check if the 'font' shorthand property accepts and sets font-variant, font-style, font-size and font-family" result="PASS" /><testcase id="font-008" purpose="Check if the 'font' shorthand property accepts and sets font-variant, font-weight, font-size and font-family" result="PASS" /><testcase id="font-009" purpose="Check if the 'font' shorthand property accepts and sets font-weight, font-style, font-size and font-family" result="PASS" /><testcase id="font-010" purpose="Check if the 'font' shorthand property accepts and sets font-weight, font-variant, font-size and font-family" result="PASS" /><testcase id="font-011" purpose="Check if the 'font' shorthand property accepts and sets font-style, font-variant, font-weight, font-size and font-family" result="PASS" /><testcase id="font-012" purpose="Check if the 'font' shorthand property accepts and sets font-style, font-weight, font-variant, font-size and font-family" result="PASS" /><testcase id="font-013" purpose="Check if the 'font' shorthand property accepts and sets font-variant, font-style, font-weight, font-size and font-family" result="PASS" /><testcase id="font-014" purpose="Check if the 'font' shorthand property accepts and sets font-style, font-variant, font-weight, font-style, font-size and font-family" result="PASS" /><testcase id="font-015" purpose="Check if the 'font' shorthand property accepts and sets font-weight, font-style, font-variant, font-size and font-family" result="PASS" /><testcase id="font-016" purpose="Check if the 'font' shorthand property accepts and sets font-weight, font-variant, font-style, font-size and font-family" result="PASS" /><testcase id="font-017" purpose="Check if the 'font' shorthand property accepts and sets font-size, line-height and font-family" result="PASS" /><testcase id="font-018" purpose="Check if the 'font' shorthand property accepts and sets font-style, font-size, line-height and font-family" result="PASS" /><testcase id="font-020" purpose="Check if the 'font' shorthand property accepts and sets font-weight, font-size, line-height and font-family" result="PASS" /><testcase id="font-022" purpose="Check if the 'font' shorthand property accepts and sets font-style, font-weight, font-size, line-height and font-family" result="PASS" /><testcase id="font-023" purpose="Check if the 'font' shorthand property accepts and sets font-variant, font-style, font-size, line-height and font-family" result="PASS" /><testcase id="font-024" purpose="Check if the 'font' shorthand property accepts and sets font-variant, font-weight, font-size, line-height and font-family" result="PASS" /><testcase id="font-025" purpose="Check if the 'font' shorthand property accepts and sets font-weight, font-style, font-size, line-height and font-family" result="PASS" /><testcase id="font-026" purpose="Check if the 'font' shorthand property accepts and sets font-weight, font-variant, font-size, line-height and font-family" result="PASS" /><testcase id="font-027" purpose="Check if the 'font' shorthand property accepts and sets font-style, font-variant, font-weight, font-size, line-height and font-family" result="PASS" /><testcase id="font-028" purpose="Check if the 'font' shorthand property accepts and sets font-style, font-weight, font-variant, font-size, line-height and font-family" result="PASS" /><testcase id="font-029" purpose="Check if the 'font' shorthand property accepts and sets font-variant, font-style, font-weight, font-size, line-height and font-family" result="PASS" /><testcase id="font-030" purpose="Check if the 'font' shorthand property accepts and sets font-style, font-variant, font-weight, font-style, font-size, line-height and font-family" result="PASS" /><testcase id="font-031" purpose="Check if the 'font' shorthand property accepts and sets font-weight, font-style, font-variant, font-size, line-height and font-family" result="PASS" /><testcase id="font-032" purpose="Check if the 'font' shorthand property accepts and sets font-weight, font-variant, font-style, font-size, line-height and font-family" result="PASS" /><testcase id="font-033" purpose="Check if the 'font' property set to 'caption' correctly uses the system setting" result="PASS" /><testcase id="font-034" purpose="Check if the 'font' property set to 'icon' correctly uses the system setting" result="PASS" /><testcase id="font-035" purpose="Check if the 'font' property set to 'menu' correctly uses the system setting" result="PASS" /><testcase id="font-036" purpose="Check if the 'font' property set to 'message-box' correctly uses the system setting" result="PASS" /><testcase id="font-037" purpose="Check if the 'font' property set to 'small-caption' correctly uses the system setting" result="PASS" /><testcase id="font-038" purpose="Check if the 'font' property set to 'status-bar' correctly uses the system setting" result="PASS" /><testcase id="font-043" purpose="Check if the 'font' shorthand property set to 'inherit' inherits the parent element's value 'italic small-caps bold 1in/1em Ahem'" result="PASS" /><testcase id="font-applies-to-001" purpose="Check if the 'font' property applies to 'display: inline' elements" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="font-applies-to-002" purpose="Check if the 'font' property applies to 'display: block' elements" result="PASS" /><testcase id="font-applies-to-017" purpose="Check if the 'font' property applies to 'display: inherit' elements" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="font-family-002" purpose="Check if the 'font-family' property set to 'serif' correctly renders the user agent's serif font" result="PASS" /><testcase id="font-family-003" purpose="Check if the 'font-family' property set to 'sans-serif' correctly renders the user agent's sans-serif font" result="PASS" /><testcase id="font-family-004" purpose="Check if the 'font-family' property set to 'cursive' correctly renders the user agent's cursive font" result="PASS" /><testcase id="font-family-005" purpose="Check if the 'font-family' property set to 'fantasy' correctly renders the user agent's fantasy font" result="PASS" /><testcase id="font-family-006" purpose="Check if the 'font-family' property set to 'monospace' correctly renders the user agent's monospace font" result="PASS" /><testcase id="font-family-007" purpose="Check if the 'font-family' property set to 'inherit' inherits its value from the parent element's value" result="PASS" /><testcase id="font-family-008" purpose="Check if the font-family names must not contain unescaped parentheses or unescaped curly braces" result="PASS" /><testcase id="font-family-009" purpose="Check if the 'font-family' property set the value 'Ahem'" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="font-family-applies-to-001" purpose="Check if the 'font-family' property applies to 'display: inline' elements" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="font-family-applies-to-002" purpose="Check if the 'font-family' property applies to 'display: block' elements" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="font-family-applies-to-016" purpose="Check if the 'font-family' property applies to 'display: none' elements" result="PASS" /><testcase id="font-family-applies-to-017" purpose="Check if the 'font-family' property applies to 'display: inherit' elements" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="font-family-invalid-characters-001" purpose="Check if the invalid characters in font family names invalidate entire declaration" result="PASS" /><testcase id="font-family-invalid-characters-002" purpose="Check if the Invalid characters is in font family names" result="PASS" /><testcase id="font-family-rule-001" purpose="Check if the default font family varies and depends on user agent" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="font-family-rule-005" purpose="Check if glyphs that are missing render as the missing glyph character and still report their initial character location, not the missing glyph location" result="PASS" /><testcase id="font-family-valid-characters-001" purpose="Check if the 'font-family' sets valid characters" result="PASS" /><testcase id="font-family-valid-characters-002" purpose="Check if the font family names must be identifiers" result="PASS" /><testcase id="font-matching-rule-001" purpose="Check if font property match then use the font specified by font-family, if font property doesn't match, don't even try to match font-family" result="PASS" /><testcase id="font-matching-rule-006" purpose="Check if the font contains definition of 'italic' or 'oblique' and italic or oblique is set by the style, then use that font" result="PASS" /><testcase id="font-matching-rule-009" purpose="Check if the invalid font weight values are set to the default weight of 400" result="PASS" /><testcase id="font-size-001" purpose="Check if the 'font-size' property sets a minimum minus one length value in pixels is invalid, such 'font-size' declaration should be ignored, then the 'font-size' property value can be determined by computed font-size of containers and from cascade mechan" result="PASS" /><testcase id="font-size-002" purpose="Check if the 'font-size' property sets a minimum length value in pixels" result="PASS" /><testcase id="font-size-003" purpose="Check if the 'font-size' property sets a minimum plus one length value in pixels" result="PASS" /><testcase id="font-size-004" purpose="Check if the 'font-size' property sets a negative zero length value in pixels" result="PASS" /><testcase id="font-size-005" purpose="Check if the 'font-size' property sets a positive zero length value in pixels" result="PASS" /><testcase id="font-size-006" purpose="Check if the 'font-size' property sets a nominal length value in pixels" result="PASS" /><testcase id="font-size-007" purpose="Check if the 'font-size' property sets a positive nominal length value in pixels" result="PASS" /><testcase id="font-size-089" purpose="Check if the font-size is invalid and the value will be ignored in visual when the font-size property set as -1%" result="PASS" /><testcase id="font-size-090" purpose="Check if the font-size can be set as 0%" result="PASS" /><testcase id="font-size-092" purpose="Check if the font-size is 0 in visual when the font-size property set as -0%" result="PASS" /><testcase id="font-size-093" purpose="Check if the font-size is 0 in visual when the font-size property set as +0%" result="PASS" /><testcase id="font-size-094" purpose="Check if the font-size is 100% in visual" result="PASS" /><testcase id="font-size-095" purpose="Check if the font-size is 100% in visual when the font-size property set as +100%" result="PASS" /><testcase id="font-size-100" purpose="Check if the font-size is 0 in visual when the font-size property set as -0" result="PASS" /><testcase id="font-size-101" purpose="Check if the font-size can be set as 0" result="PASS" /><testcase id="font-size-102" purpose="Check if the font-size is 0 in visual when the font-size property set as +0" result="PASS" /><testcase id="font-size-112" purpose="Check if the font-size inherits its value from its parent in visual when the font-size property set as the keyword inherit" result="PASS" /><testcase id="font-size-120" purpose="Check if the font-size inherits its value from its parent in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2659 XWALK-2659]]</testcase><testcase id="font-size-applies-to-001" purpose="Check if the font-size applies to 'display: inline' elements in visual" result="PASS" /><testcase id="font-size-applies-to-002" purpose="Check if the font-size applies to 'display: block' elements in visual" result="PASS" /><testcase id="font-size-applies-to-016" purpose="Check if the font-size applies to 'display: none' elements in visual" result="PASS" /><testcase id="font-size-applies-to-017" purpose="Check if the font-size applies to 'display: inherit' elements in visual" result="PASS" /><testcase id="font-size-rule-003" purpose="Check if the script is free to choose a font-size from the font size table or the closest font size in visual" result="PASS" /><testcase id="font-style-001" purpose="Check if the font-style renders the characters as normal text in visual when the font-style property set to 'normal'" result="PASS" /><testcase id="font-style-002" purpose="Check if the font-style renders the characters as italic text in visual when the font-style property set to 'italic'" result="PASS" /><testcase id="font-style-003" purpose="Check if the font-style renders the characters as oblique text in visual when the font-style property set to 'oblique'" result="PASS" /><testcase id="font-style-004" purpose="Check if the font-style inherits its value from the parent element in visual when the font-style property set to 'inherit'" result="PASS" /><testcase id="font-style-applies-to-001" purpose="Check if the font-style applies to 'display: inline' elements in visual" result="PASS" /><testcase id="font-style-applies-to-002" purpose="Check if the font-style applies to 'display: block' elements in visual" result="PASS" /><testcase id="font-style-applies-to-016" purpose="Check if the font-style applies to 'display: none' elements in visual" result="PASS" /><testcase id="font-style-applies-to-017" purpose="Check if the font-style applies to 'display: inherit' elements in visual" result="PASS" /><testcase id="font-systemfont-rule-004" purpose="Check if the 'font' shorthand property resets any property which not explicitly given a value by default" result="PASS" /><testcase id="font-variant-001" purpose="Check if the font-variant renders the typical characters for text in visual when the font-variant property set to 'normal'" result="PASS" /><testcase id="font-variant-002" purpose="Check if the font-variant renders the small-caps version of characters for text in visual when the font-variant property set to 'normal'" result="PASS" /><testcase id="font-variant-003" purpose="Check if the font-variant inherits its value from the parent element in visual when the font-variant property set to 'inherit'" result="PASS" /><testcase id="font-variant-applies-to-001" purpose="Check if the font-variant applies to 'display: inline' elements in visual" result="PASS" /><testcase id="font-variant-applies-to-002" purpose="Check if the font-variant applies to 'display: block' elements in visual" result="PASS" /><testcase id="font-variant-applies-to-016" purpose="Check if the font-variant applies to 'display: none' elements in visual" result="PASS" /><testcase id="font-variant-applies-to-017" purpose="Check if the font-variant applies to 'display: inherit' elements in visual" result="PASS" /><testcase id="font-weight-001" purpose="Check if the font-weight renders the font to normal weight in visual when the font-weight property set to 'normal'" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="font-weight-008" purpose="Check if the font-weight renders the font to correct bold in visual when the font-weight property set to the numerical value '400'" result="PASS" /><testcase id="font-weight-010" purpose="Check if the font-weight renders the font to correct bold in visual when the font-weight property set to the numerical value '600'" result="PASS" /><testcase id="font-weight-011" purpose="Check if the font-weight renders the font to correct bold in visual when the font-weight property set to the numerical value '700'" result="PASS" /><testcase id="font-weight-012" purpose="Check if the font-weight renders the font to correct bold in visual when the font-weight property set to the numerical value '800'" result="PASS" /><testcase id="font-weight-013" purpose="Check if the font-weight renders the font to correct bold in visual when the font-weight property set to the numerical value '900'" result="PASS" /><testcase id="font-weight-014" purpose="Check if the font-weight renders the font to bold in visual when the font-weight property set to the keyword 'inherit'" result="PASS" /><testcase id="font-weight-applies-to-001" purpose="Check if the font-weight applies to 'display: inline' elements in visual" result="PASS" /><testcase id="font-weight-applies-to-002" purpose="Check if the font-weight applies to 'display: block' elements in visual" result="PASS" /><testcase id="font-weight-applies-to-016" purpose="Check if the font-weight applies to 'display: none' elements in visual" result="PASS" /><testcase id="font-weight-applies-to-017" purpose="Check if the font-weight applies to 'display: inherit' elements in visual" result="PASS" /><testcase id="font-weight-rule-001" purpose="Check if the font-weight property of 'normal' corresponds to the weight value '400' in visual" result="PASS" /><testcase id="font-weight-rule-002" purpose="Check if the font-weight value 100 to 900 indicates a weight that is either darker than or as dark as its predecessor in visual" result="PASS" /><testcase id="font-weight-rule-003" purpose="Check if the font-weight child elements inherit their parent's actual font weight in visual" result="PASS" /><testcase id="font-weight-rule-004" purpose="Check if the font-weight value 'bolder' selects the next darker weight compared to its parent's weight in visual" result="PASS" /><testcase id="font-weight-rule-005" purpose="Check if the font-weight value 'bolder' does not increase the value of font weight in visual when the parent values is already set at 900" result="PASS" /><testcase id="font-weight-rule-006" purpose="Check if the font-weight value 'lighter' selects the next lighter weight in visual" result="PASS" /><testcase id="font-weight-rule-007" purpose="Check if the font-weight value 'lighter' selects the next lighter weight compared to its parent's weight in visual" result="PASS" /><testcase id="font-weight-rule-008" purpose="Check if the font-weight property of 'bold' corresponds to the weight value '700' in visual" result="PASS" /><testcase id="fonts-010" purpose="Check if font inherits the pre element in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2659 XWALK-2659]]</testcase><testcase id="fonts-011" purpose="Check if font have correct bidirection in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2659 XWALK-2659]]</testcase></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/CSS Multi-column Layout Module"><testcase id="CSS3Multicolumn_column-count_max-height_overflow_visible" purpose="Check if the height of the multi-column element has been constrained to a maximum height" result="PASS" /><testcase id="CSS3Multicolumn_column-count_maximum_columns" purpose="Check if both column-width and column-count have non-auto values, the integer value describes the maximum number of columns" result="PASS" /><testcase id="CSS3Multicolumn_column-gap_image_custom_png_clipped" purpose="Check if the image is wider than the column, and is therefore clipped" result="PASS" /><testcase id="CSS3Multicolumn_column-gap_width_same" purpose="Check if the column rule and the column gap have the same width" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_image_left_empty" purpose="Check if a tall image is moved to a column on the next page to find room when the column do not have enough space to place it" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_same" purpose="Check if all column rules in the same row are also equal,column rules only appear between columns that both have content" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_wider_than_gap" purpose="Check if a column rule is wider than its gap, the column rule will overlap adjacent column boxes, and possibly extend outside the box of the multicol element" result="PASS" /><testcase id="CSS3Multicolumn_column-span_all_background_silver" purpose="Check if column-span to all, all content that appear before the h2 element is shown before the h2 element" result="PASS" /><testcase id="CSS3Multicolumn_column-span_none_background_silver" purpose="Check if the H2 element appears in the overflow and there is not room to make the element spanning" result="PASS" /><testcase id="CSS3Multicolumn_column-width_image_custom_png" purpose="Check if the width of the image is set with these rules" result="PASS" /><testcase id="CSS3Multicolumn_column-width_image_custom_png_float_right" purpose="Check if the width of the image is set float right" result="PASS" /><testcase id="CSS3Multicolumn_column-width_more_available_space" purpose="Check if in order to fill the available space the actual column width will be increased" result="PASS" /><testcase id="CSS3Multicolumn_column-width_no_available_space" purpose="Check if the available space is smaller than the specified column width and the actual column width will therefore be decreased" result="PASS" /><testcase id="CSS3Multicolumn_column-width_same" purpose="Check if all column boxes in a row have the same column width, and all column boxes in a row have the same column height" result="PASS" /><testcase id="CSS3Multicolumn_break-after" purpose="Check if the content is divided into several columns,this property describe page/column break behavior after the generated box" result="PASS" /><testcase id="CSS3Multicolumn_break-after_always" purpose="Check if break-after attribute value is 'always'" result="PASS" /><testcase id="CSS3Multicolumn_break-after_auto" purpose="Check if break-after attribute value is 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_break-after_avoid" purpose="Check if break-after attribute value is 'avoid'" result="PASS" /><testcase id="CSS3Multicolumn_break-after_initial_value" purpose="Check if break-after attribute initial value is 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_break-after_invalid" purpose="Check if break-after attribute value is 'invalid'" result="PASS" /><testcase id="CSS3Multicolumn_break-before" purpose="Check if the content is divided into several columns,this property describe page/column break behavior before the generated box" result="PASS" /><testcase id="CSS3Multicolumn_break-before_always" purpose="Check if break-before attribute value is 'always'" result="PASS" /><testcase id="CSS3Multicolumn_break-before_auto" purpose="Check if break-before attribute value is 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_break-before_avoid" purpose="Check if 'break-before' is set to 'avoid'" result="PASS" /><testcase id="CSS3Multicolumn_break-before_initial_value" purpose="Check if the initial value of break-before attribute is 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_break-before_invalid" purpose="Check if break-before attribute value is 'invalid'" result="PASS" /><testcase id="CSS3Multicolumn_break-inside" purpose="Check if the content is divided into several columns,this property describe page/column break behavior inside the generated box" result="PASS" /><testcase id="CSS3Multicolumn_break-inside_auto" purpose="Check if 'break-inside' is set to 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_break-inside_avoid" purpose="Check if 'break-inside' is set to 'avoid'" result="PASS" /><testcase id="CSS3Multicolumn_break-inside_illegal_value" purpose="Check if 'break-inside' is set to 'error'" result="PASS" /><testcase id="CSS3Multicolumn_break-inside_initial_value" purpose="Check if the initial value of break-inside is 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_column-count" purpose="Check if the content is divided into several columns, this property is to set the column count" result="PASS" /><testcase id="CSS3Multicolumn_column-count_0" purpose="Check if 'column-count' is set to '0'" result="PASS" /><testcase id="CSS3Multicolumn_column-count_3" purpose="Check if 'column-count' is set to '3'" result="PASS" /><testcase id="CSS3Multicolumn_column-count_3_p" purpose="Check if 'column-count' is set to '3' for p element" result="PASS" /><testcase id="CSS3Multicolumn_column-count_auto" purpose="Check if 'column-count' is set to 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_column-count_initial" purpose="Check if column count not set value according to the column width automatically calculate the number of columns" result="PASS" /><testcase id="CSS3Multicolumn_column-count_initial_value" purpose="Check if the initial_value of column-count is 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_column-count_neg3" purpose="Check if 'column-count' is set to '-3'" result="PASS" /><testcase id="CSS3Multicolumn_column-gap" purpose="Check if the content is divided into several columns,the pitch is 15px between columns" result="PASS" /><testcase id="CSS3Multicolumn_column-gap_0px" purpose="Check if 'column-gap' is set to '0px'" result="PASS" /><testcase id="CSS3Multicolumn_column-gap_15px" purpose="Check if 'column-gap' is set to '15px'" result="PASS" /><testcase id="CSS3Multicolumn_column-gap_15px_p" purpose="Check if 'column-gap' is set to '15px' for p element" result="PASS" /><testcase id="CSS3Multicolumn_column-gap_1cm" purpose="Check if 'column-gap' is set to '1cm'" result="PASS" /><testcase id="CSS3Multicolumn_column-gap_1em" purpose="Check if 'column-gap' is set to '1em'" result="PASS" /><testcase id="CSS3Multicolumn_column-gap_initial_value" purpose="Check if the initial value of column-gap is set to 'normal'" result="PASS" /><testcase id="CSS3Multicolumn_column-gap_neg15px" purpose="Check if 'column-gap' is set to '-15px'" result="PASS" /><testcase id="CSS3Multicolumn_column-gap_normal" purpose="Check if 'column-gap' is set to 'normal'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule" purpose="Check if the content is divided into several columns, this property is a shorthand for setting column-rule-width column-rule-style,and column-rule-color at the same place in the style sheet" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color" purpose="Check if the content is divided into several columns,the color is rgb(255, 192, 203) between columns" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_100pct_0pct_0pct" purpose="Check if 'column-rule-color' is set to 'rgb(100%, 0%, 0%)'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_110pct_0_0" purpose="Check if 'column-rule-color' is set to 'rgb(110%, 0,0)'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_120_0_0" purpose="Check if 'column-rule-color' is set to 'rgb(120, 0, 0)'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_200pct_0pct_0pct" purpose="Check if 'column-rule-color' is set to 'rgb(200%, 0%, 0%)'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_255_0_0" purpose="Check if 'column-rule-color' is set to 'rgb(255, 0, 0)'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_500_0_0" purpose="Check if 'column-rule-color' is set to 'rgb(500, 0, 0)'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_500_0_0_p" purpose="Check if 'column-rule-color' is set to 'rgb(500, 0, 0)' for p element" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_60pct_0pct_0pct" purpose="Check if 'column-rule-color' is set to 'rgb(60%, 0%, 0%)'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_f00" purpose="Check if 'column-rule-color' is set to 'f00'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_ff0000" purpose="Check if 'column-rule-color' is set to 'ff0000'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_initial_value" purpose="Check if the initial value 0f column-rule-color is set to 'rgb(0, 0, 0)'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-color_rgb_red" purpose="Check if 'column-rule-color' is set to 'red'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style" purpose="Check if the content is divided into several columns,the style is dotted between columns" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_dashed" purpose="Check if 'column-rule-style' is set to 'dashed'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_dotted" purpose="Check if 'column-rule-style' is set to 'dotted'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_dotted_p" purpose="Check if 'column-rule-style' is set to 'dotted' for p element" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_double" purpose="Check if 'column-rule-style' is set to 'double'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_groove" purpose="Check if 'column-rule-style' is set to 'groove'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_hidden" purpose="Check if 'column-rule-style' is set to 'hidden'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_initial_value" purpose="Check if the initial value of column-rule-style is set to 'none'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_inset" purpose="Check if 'column-rule-style' is set to 'inset'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_none" purpose="Check if 'column-rule-style' is set to 'none'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_outset" purpose="Check if 'column-rule-style' is set to 'outset'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_ridge" purpose="Check if 'column-rule-style' is set to 'ridge'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_solid" purpose="Check if 'column-rule-style' is set to 'solid'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-style_undefined" purpose="Check if 'column-rule-style' is set to 'undefined'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width" purpose="Check if the content is divided into several columns,width of the border is 2px between each column" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_0point4cm" purpose="Check if 'column-rule-width' is set to '0.4cm'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_0point5em" purpose="Check if 'column-rule-width' is set to '0.5em'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_0px" purpose="Check if 'column-rule-width' is set to '0px'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_0px_hidden" purpose="Check if the column-rule-style value set hidden column-rule-width got value is 0px" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_0px_none" purpose="Check if the column-rule-style value set none column-rule-width got value is 0px" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_5px" purpose="Check if 'column-rule-width' is set to '5px'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_5px_p" purpose="Check if 'column-rule-width' is set to '5px' for p element" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_initial_value" purpose="Check if the initial value of column-rule-width is set to '3px'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_medium" purpose="Check if 'column-rule-width' is set to 'medium'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_neg5px" purpose="Check if 'column-rule-width' is set to '-5px'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_thick" purpose="Check if 'column-rule-width' is set to 'thick'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule-width_thin" purpose="Check if 'column-rule-width' is set to 'thin'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_2px" purpose="Check if 'column-rule' is set to '2px'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_4px_dashed" purpose="Check if 'column-rule' is set to '4px dashed'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_6px_green_solid" purpose="Check if 'column-rule' is set to '6px green solid'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_6px_green_solid_p" purpose="Check if 'column-rule' is set to '6px green solid' for p element" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_8px_red" purpose="Check if 'column-rule' is set to '8px red'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_dashed" purpose="Check if 'column-rule' is set to 'dashed'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_dotted" purpose="Check if 'column-rule' is set to 'dotted'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_double" purpose="Check if 'column-rule' is set to 'double'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_green_inset" purpose="Check if 'column-rule' is set to 'green inset'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_green_outset" purpose="Check if 'column-rule' is set to 'green outset'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_green_solid" purpose="Check if 'column-rule' is set to 'green solid'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_groove" purpose="Check if 'column-rule' is set to 'groove'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_initial" purpose="Check if column rule property initial value" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_initial_value" purpose="Check if the initial value of column-rule is set to 'rgb(0, 0, 0) 0px none'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_invalid" purpose="Check if 'column-rule' is set to 'invalid'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_medium_dotted" purpose="Check if 'column-rule' is set to 'medium dotted'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_medium_green_solid" purpose="Check if 'column-rule' is set to 'medium green solid'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_medium_outset" purpose="Check if 'column-rule' is set to 'medium outset'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_none" purpose="Check if 'column-rule' is set to 'none'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_pink_ridge" purpose="Check if 'column-rule' is set to 'pink ridge'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_shorthand" purpose="Check if the column-rule is a shorthand property and by the column-rule-width,column-rule-style,column-rule-color" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_solid" purpose="Check if 'column-rule' is set to 'solid'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_thick_pink_dashed" purpose="Check if 'column-rule' is set to 'thick pink dashed'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_thick_pink_double" purpose="Check if 'column-rule' is set to 'thick pink double'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_thin_pink_dashed" purpose="Check if 'column-rule' is set to 'thin pink dashed'" result="PASS" /><testcase id="CSS3Multicolumn_column-rule_thin_pink_ridge" purpose="Check if 'column-rule' is set to 'thin pink ridge'" result="PASS" /><testcase id="CSS3Multicolumn_column-span" purpose="Check if the content is divided into several columns,this property describes the element spans across an entire column" result="PASS" /><testcase id="CSS3Multicolumn_column-span_all" purpose="Check if 'column-span' is set to 'all'" result="PASS" /><testcase id="CSS3Multicolumn_column-span_all_pre" purpose="Check if 'column-span' is set to 'all' on pre tag" result="PASS" /><testcase id="CSS3Multicolumn_column-span_illegal_value" purpose="Check if 'column-span' is set to 'illegal'" result="PASS" /><testcase id="CSS3Multicolumn_column-span_initial_value" purpose="Check if the initial value of column-span is 'none'" result="PASS" /><testcase id="CSS3Multicolumn_column-span_none" purpose="Check if 'column-span' is set to 'none'" result="PASS" /><testcase id="CSS3Multicolumn_column-width" purpose="Check if the content is divided into several columns, this property is to set the column width" result="PASS" /><testcase id="CSS3Multicolumn_column-width_100px" purpose="Check if 'column-width' is set to '100px'" result="PASS" /><testcase id="CSS3Multicolumn_column-width_100px_p" purpose="Check if 'column-width' is set to '100px' for p element" result="PASS" /><testcase id="CSS3Multicolumn_column-width_10cm" purpose="Check if 'column-width' is set to '10cm'" result="PASS" /><testcase id="CSS3Multicolumn_column-width_10em" purpose="Check if 'column-width' is set to '10em'" result="PASS" /><testcase id="CSS3Multicolumn_column-width_auto" purpose="Check if 'column-width' is set to 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_column-width_initial" purpose="Check if column width not set value automatically calculate the width of the column" result="PASS" /><testcase id="CSS3Multicolumn_column-width_initial_value" purpose="Check if the initial_value of column-width is 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_column-width_neg10cm" purpose="Check if 'column-width' is set to '-10cm'" result="PASS" /><testcase id="CSS3Multicolumn_column-width_neg10em" purpose="Check if 'column-width' is set to '-10em'" result="PASS" /><testcase id="CSS3Multicolumn_column-width_neg10px" purpose="Check if 'column-width' is set to '-10px'" result="PASS" /><testcase id="CSS3Multicolumn_columns" purpose="Check if the content is divided into several columns and each column width is 100px" result="PASS" /><testcase id="CSS3Multicolumn_columns_2" purpose="Check if columns property value is '2'" result="PASS" /><testcase id="CSS3Multicolumn_columns_20px_4" purpose="Check if columns property value is '20px 4'" result="PASS" /><testcase id="CSS3Multicolumn_columns_20px_4_p" purpose="Check if 'columns' is set to '20px 4'" result="PASS" /><testcase id="CSS3Multicolumn_columns_2point2" purpose="Check if columns property value is '2.2'" result="PASS" /><testcase id="CSS3Multicolumn_columns_2px_30px" purpose="Check if columns property value is '2px 30px'" result="PASS" /><testcase id="CSS3Multicolumn_columns_2_40" purpose="Check if columns property value is '2 40'" result="PASS" /><testcase id="CSS3Multicolumn_columns_30point2px" purpose="Check if columns property value is '30.2px'" result="PASS" /><testcase id="CSS3Multicolumn_columns_30px" purpose="Check if columns property value is '30px'" result="PASS" /><testcase id="CSS3Multicolumn_columns_40px_auto" purpose="Check if columns property value is '40px auto'" result="PASS" /><testcase id="CSS3Multicolumn_columns_4_20px" purpose="Check if columns property value is '4 20px'" result="PASS" /><testcase id="CSS3Multicolumn_columns_4_auto" purpose="Check if columns property value is '4 auto'" result="PASS" /><testcase id="CSS3Multicolumn_columns_5_30px" purpose="Check if columns property value is '5 30px'" result="PASS" /><testcase id="CSS3Multicolumn_columns_auto" purpose="Check if columns property value is 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_columns_auto_20px" purpose="Check if columns property value is 'auto 20px'" result="PASS" /><testcase id="CSS3Multicolumn_columns_auto_4" purpose="Check if columns property value is 'auto 4'" result="PASS" /><testcase id="CSS3Multicolumn_columns_auto_auto" purpose="Check if columns property value is 'auto auto'" result="PASS" /><testcase id="CSS3Multicolumn_columns_initial" purpose="Check if all column properties have their initial value, the layout of an element will be identical to a multi-column layout with only one column" result="PASS" /><testcase id="CSS3Multicolumn_columns_initial_value" purpose="Check if the initial_value of columns is 'auto'" result="PASS" /><testcase id="CSS3Multicolumn_columns_invalid" purpose="Check if columns property value is invalid" result="PASS" /><testcase id="CSS3Multicolumn_columns_neg3" purpose="Check if columns property value is '-3'" result="PASS" /><testcase id="CSS3Multicolumn_columns_neg30px" purpose="Check if columns property value is '-30px'" result="PASS" /><testcase id="CSS3Multicolumn_columns_shorthand" purpose="Check if the element is set to have the number of columns,the width of columns,and both the number and width are set" result="PASS" /><testcase id="multicol-basic-001" purpose="Check if multicol column with integer display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="multicol-basic-002" purpose="Check if multicol column-count with integer display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="multicol-basic-003" purpose="Check if multicol column with width display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="multicol-basic-004" purpose="Check if multicol column-count with width display correctly in visual" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/CSS Transforms"><testcase id="backface-visibility-hidden-001" purpose="When the value of backface visibility property is 'hidden' then the back side of a transformed element is invisible when facing the viewer" result="PASS" /><testcase id="css-rotate-2d-3d-001" purpose="This transform rotates a tall rectangle by 90 degrees then applies a 3D rotation in the X axis" result="PASS" /><testcase id="css-transform-3d-rotate3d-X-negative" purpose="Check that rotate the 2:1 rectangle on X-axis for 60 degree we will get a square and completely cover the red square and here we use border due to the rectangle not be rotated would cover the red square" result="PASS" /><testcase id="css-transform-3d-rotate3d-X-positive" purpose="Check that rotate3d a 2:1 rectangle on X-axis for 60 degree we will get a square and completely cover the red square and here we use border due to the rectangle not be rotated would cover the red square" result="PASS" /><testcase id="css-transform-3d-rotate3d-Y-negative" purpose="Check that rotate3d a 2:1 rectangle on Y-axis for 60 degree we will get a square and completely cover the red square and here we use border due to the rectangle not be rotated would cover the red square" result="PASS" /><testcase id="css-transform-3d-rotate3d-Y-positive" purpose="Check that rotate3d a 2:1 rectangle on Y-axis for -60 degree we will get a square and completely cover the red square and here we use border due to the rectangle not be rotated would cover the red square" result="PASS" /><testcase id="css-transform-3d-rotate3d-Z-negative" purpose="Check that rotate3d a vertical rectangle for -90 degree on Z-axis will cover the horizontal red rectangle" result="PASS" /><testcase id="css-transform-3d-rotate3d-Z-positive" purpose="Check that box width should be equal to projection width if transform rotateZ applied" result="PASS" /><testcase id="css-transform-3d-rotateX-negative" purpose="Check that rotate a 2:1 rectangle on X-axis for -60 degree we will get a square and completely cover the red square and here we use border due to the rectangle not be rotated would cover the red square" result="PASS" /><testcase id="css-transform-3d-rotateX-positive" purpose="Check that rotate a 2:1 rectangle on X-axis for 60 degree we will get a square and completely cover the red square and here we use border due to the rectangle not be rotated would cover the red square" result="PASS" /><testcase id="css-transform-3d-rotateY-negative" purpose="Check that rotate a 2:1 rectangle on Y-axis for -60 degree we will get a square and completely cover the red square and here we use border due to the rectangle not be rotated would cover the red square" result="PASS" /><testcase id="css-transform-3d-rotateY-positive" purpose="Check that rotate a 2:1 rectangle on Y-axis for 60 degree we will get a square and completely cover the red square and here we use border due to the rectangle not be rotated would cover the red square" result="PASS" /><testcase id="css3-transform-perspective" purpose="Check if rotateX 90 degrees with perspective make it invisible" result="PASS" /><testcase id="css3-transform-rotateY" purpose="Check that box width should be equal to projection width if transform rotateY applied" result="PASS" /><testcase id="perspective-origin-001" purpose="The 'perspective-origin' property set 'center' computes to 50% for the vertical position." result="PASS" /><testcase id="perspective-origin-002" purpose="The 'perspective-origin' property set 'center' computes to 50% for the horizontal position." result="PASS" /><testcase id="perspective-origin-003" purpose="The 'perspective-origin' property set 'bottom' computes to 100% for the vertical position." result="PASS" /><testcase id="perspective-origin-004" purpose="The 'perspective-origin' property set 'top' computes to 0% for the vertical position." result="PASS" /><testcase id="perspective-origin-005" purpose="The 'perspective-origin' property set 'left' computes to 0% for the horizontal position." result="PASS" /><testcase id="perspective-origin-006" purpose="The 'perspective-origin' property set 'right' computes to 100% for the horizontal position." result="PASS" /><testcase id="perspective-origin-x" purpose="Asserts that origin 'x1' visually moves the objects '-x1*d/(d-1)'" result="PASS" /><testcase id="perspective-origin-xy" purpose="Asserts that origin '(x y)' visually moves the objects '(-x -y)*d/(d-1)'" result="PASS" /><testcase id="perspective-translateZ-0" purpose="Asserts that points on the z=0 plane are unchanged" result="PASS" /><testcase id="perspective-translateZ-negative" purpose="Asserts that the scaling is proportional to d/(d - Z) for a negative Z" result="PASS" /><testcase id="perspective-translateZ-positive" purpose="Asserts that the scaling is proportional to d/(d - Z) for a positive Z" result="PASS" /><testcase id="rotateY" purpose="When the value of transform is 'rotateY(90deg)' the foward side of a transformed element disappears." result="PASS" /><testcase id="rotate_x_45deg" purpose="Rotate 45 degree in x axis" result="PASS" /><testcase id="rotate_y_45deg" purpose="Rotate 45 degree in y axis" result="PASS" /><testcase id="transform3d-backface-visibility-008" purpose="When 'backface-visiblity' is set to visible the back side of a transformed element is visible." result="PASS" /><testcase id="transform3d-preserve3d-012" purpose="This tests that two 90-degree rotations with  the default 'transform-style: flat' do not add together to form a 180-degree rotation" result="PASS" /><testcase id="transform3d-scale-004" purpose="This tests that scale3d(2 2 0) being singular causes the contents not to display" result="PASS" /><testcase id="transforms-rotateY-degree-60" purpose="Check that transform property with rotate function and one parameter" result="PASS" /><testcase id="transofrmed-preserve-3d-1" purpose="The transformed div should establishe a 3D rendering context" result="PASS" /><testcase id="transofrmed-rotateX-3" purpose="The transformed div should rotateX by 180 degrees" result="PASS" /><testcase id="transofrmed-rotateY-1" purpose="The transformed div should rotate 90 degrees" result="PASS" /><testcase id="Css-transform-property-existence-001" purpose="Check the existence of transform" result="PASS" /><testcase id="Css-transform-property-existence-002" purpose="Check the existence of transform-origin" result="PASS" /><testcase id="Css-transform-property-existence-003" purpose="Check the existence of transform-style" result="PASS" /><testcase id="Css-transform-property-existence-004" purpose="Check the existence of perspective" result="PASS" /><testcase id="Css-transform-property-existence-005" purpose="Check the existence of perspective-origin" result="PASS" /><testcase id="Css-transform-property-existence-006" purpose="Check the existence of backface-visibility" result="PASS" /><testcase id="Css-transform-style-evaluation-validation-001" purpose="transform: Check bad-format multi-expr input." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-002" purpose="transform: Check multi-expr input with tab." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-003" purpose="transform: Check multi-expr input with spaces start and end." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-004" purpose="transform: Check multi-expr input with two spaces." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-005" purpose="transform: Check valied multi-expr input." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-006" purpose="transform: Check rotate(0) input." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-007" purpose="transform: Check rotateX(0) input." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-008" purpose="transform: Check rotateY(0) input." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-009" purpose="transform: Check rotateZ(0) input." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-010" purpose="transform: Check rotate(string) input." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-011" purpose="transform: Check rotateX(string) input." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-012" purpose="transform: Check rotateY(string) input." result="PASS" /><testcase id="Css-transform-style-evaluation-validation-013" purpose="transform: Check rotateZ(string) input." result="PASS" /><testcase id="CSS33Dtransform_backface-visibility" purpose="Check if the element backface-visibility is 'visible'" result="PASS" /><testcase id="CSS33Dtransform_perspective" purpose="Check if the element perspective is '200px'" result="PASS" /><testcase id="CSS33Dtransform_perspective-origin" purpose="Check if the element perspective-origin is '50px 27px'" result="PASS" /><testcase id="CSS33Dtransform_transform" purpose="Check if the element transform is 'matrix(2, 0, 0, 2, 0, 0)'" result="PASS" /><testcase id="CSS33Dtransform_transform-origin" purpose="Check if the element transform-origin is 'left top'" result="PASS" /><testcase id="CSS33Dtransform_transform-style" purpose="Check if the element transform-style is 'preserve-3d'" result="PASS" /><testcase id="css3_2Dtransforms_backface-visibility_exists" purpose="Check if the backface-visibility property exists" result="PASS" /><testcase id="css3_2Dtransforms_perspective-origin_exists" purpose="Check if the perspective-origin property exists" result="PASS" /><testcase id="css3_2Dtransforms_perspective_exists" purpose="Check if the perspective property exists" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry1" purpose="Check the computed value for 'TRANSFORM: none' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry10" purpose="Check the computed value for 'TRANSFORM: scale(2) translateY()' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry108" purpose="Check the computed value for 'TRANSFORM: skewx(45deg)' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry11" purpose="Check the computed value for 'tRAnSFoRM: scale(2) scale()' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry111" purpose="Check the computed value for 'TRANSFORM: skewy(45deg)' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry114" purpose="Check the computed value for 'TRANSFORM: skew(45deg, 45deg)' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry117" purpose="Check the getComputedStyle(div).transform with no attributes set" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry119" purpose="getComputedStyle(div).transform with 'transform: none', set via setAttribute()" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry12" purpose="Check the computed value for 'transform: scale(2) scaleX()' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry120" purpose="Boundaries with 'transform: none', set via CSSOM; switch style 1" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry13" purpose="Check the computed value for 'TRANSFORM: scale(2) scaleY()' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry14" purpose="Check the computed value for 'tRAnSFoRM: scale(2) rotate()' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry15" purpose="Check the computed value for 'transform: scale(2) skewX()' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry16" purpose="Check the computed value for 'TRANSFORM: scale(2) skewY()' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry17" purpose="Check the computed value for 'tRAnSFoRM: scale(2) skew()' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry1774" purpose="Boundaries with 'transform: skewY(45deg)', set via setAttribute(); switch style 0" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry2575" purpose="Check the getComputedStyle(div).transformOrigin with 'transform: none; transform-origin: none' via setting setAttribute()" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry4" purpose="Check the computed value for 'TRANSFORM: scale(2) quasit' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry7" purpose="Check the computed value for 'TRANSFORM: scale(2) matrix()' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry727" purpose="getComputedStyle(div).transform with 'transform: translate(-1px, 1em)', set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry75" purpose="Check the computed value for 'TRANSFORM: matrix(1,2,3,4,5,6)' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry78" purpose="Check the computed value for 'TRANSFORM: translate(1px)' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry8" purpose="Check the computed value for 'tRAnSFoRM: scale(2) translate()' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry81" purpose="Check the computed value for 'TRANSFORM: translatex(1pt)' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry84" purpose="Check the computed value for 'TRANSFORM: translatey(1in)' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry87" purpose="Check the computed value for 'TRANSFORM: scale(2)' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry9" purpose="Check the computed value for 'transform: scale(2) translateX()' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry90" purpose="Check the computed value for 'TRANSFORM: scalex(2)' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry93" purpose="Check the computed value for 'TRANSFORM: scaley(2)' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_tests_entry96" purpose="Check the computed value for 'TRANSFORM: rotate(90deg)' set via CSSOM" result="PASS" /><testcase id="css3_2Dtransforms_transform-style_exists" purpose="Check if the transform-style property exists" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/CSS Transitions Module Level 3"><testcase id="css3_transition_tests_entry25" purpose="To check if left can implement transitionend event normally" result="PASS" /><testcase id="css3_transition_tests_entry26" purpose="To check if background-color can implement transitionend event normally" result="PASS" /><testcase id="css3_transition_tests_entry27" purpose="To check if width can implement transitionend event normally" result="PASS" /><testcase id="css3_transition_tests_entry5" purpose="To check if the remove of transition properties can work properly" result="PASS" /><testcase id="css3_transition_tests_entry6" purpose="To check if changes  transition-duration while the transition is running to ensure that the running transition is not affected" result="PASS" /><testcase id="CSS3Transitions_transition-delay_0s" purpose="Check if the transition-delay value is 0s" result="PASS" /><testcase id="CSS3Transitions_transition-delay_4s_1s" purpose="Check if the transition-delay value is 4s and 1s" result="PASS" /><testcase id="CSS3Transitions_transition-delay_initial_value" purpose="Check if the transition-delay initial value is 0s" result="PASS" /><testcase id="CSS3Transitions_transition-duration_4s" purpose="Check if the transition-duration value is 4s" result="PASS" /><testcase id="CSS3Transitions_transition-duration_4s_1s" purpose="Check if the transition-duration value is 4s and 1s" result="PASS" /><testcase id="CSS3Transitions_transition-duration_initial_value" purpose="Check if the transition-duration initial value is 0s" result="PASS" /><testcase id="CSS3Transitions_transition-duration_negative" purpose="Check if a negative value for transition-duration is treated as 0" result="PASS" /><testcase id="CSS3Transitions_transition-property_all" purpose="Check if the transition-property value is all" result="PASS" /><testcase id="CSS3Transitions_transition-property_initial_value" purpose="Check if the transition-property initial value is all" result="PASS" /><testcase id="CSS3Transitions_transition-property_none" purpose="Check if the transition-property value is none" result="PASS" /><testcase id="CSS3Transitions_transition-timing-function" purpose="To check if css.transition-timing-function exists" result="PASS" /><testcase id="CSS3Transitions_transition-timing-function_cubic-bezier_x_invalid" purpose="To check if 'transition-timing-function' can set 'cubic-bezier' with invalid x coordinate" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3006 XWALK-3006]]</testcase><testcase id="CSS3Transitions_transition-timing-function_cubic-bezier_x_range" purpose="To check if 'transition-timing-function' can set 'cubic-bezier' with x [0, 1]" result="PASS" /><testcase id="CSS3Transitions_transition-timing-function_cubic-bezier_y_exceed" purpose="To check if 'transition-timing-function' can set 'cubic-bezier' with y exceed [0, 1]" result="PASS" /><testcase id="CSS3Transitions_transition-timing-function_ease" purpose="Check if the transition-timing-function value is ease" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3006 XWALK-3006]]</testcase><testcase id="CSS3Transitions_transition-timing-function_easein" purpose="Check if the transition-timing-function value is ease-in" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3006 XWALK-3006]]</testcase><testcase id="CSS3Transitions_transition-timing-function_easeinout" purpose="Check if the transition-timing-function value is ease-in-out" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3006 XWALK-3006]]</testcase><testcase id="CSS3Transitions_transition-timing-function_easeout" purpose="Check if the transition-timing-function value is ease-out" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3006 XWALK-3006]]</testcase><testcase id="CSS3Transitions_transition-timing-function_initial_value" purpose="Check if the transition-timing-function initial value is ease" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3006 XWALK-3006]]</testcase><testcase id="CSS3Transitions_transition-timing-function_step-end" purpose="To check if 'transition-timing-function' can set 'step-end'" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3006 XWALK-3006]]</testcase><testcase id="CSS3Transitions_transition-timing-function_step-start" purpose="To check if 'transition-timing-function' can set 'step-start'" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3006 XWALK-3006]]</testcase><testcase id="CSS3Transitions_transition-timing-function_steps_end" purpose="To check if 'transition-timing-function' can set 'steps(integer, end)'" result="PASS" /><testcase id="CSS3Transitions_transition-timing-function_steps_integer" purpose="To check if 'transition-timing-function' can set 'steps(integer)'" result="PASS" /><testcase id="CSS3Transitions_transition-timing-function_steps_start" purpose="To check if 'transition-timing-function' can set 'steps(integer, start)'" result="PASS" /><testcase id="CSS3Transitions_transition_4s_1s" purpose="Check if the first value that can be parsed as a time is assigned to the transition-duration,the second is transition-delay" result="PASS" /><testcase id="css3_transition_tests_entry1" purpose="To check if  transition-property:background-position can implement transition-property function normally" result="PASS" /><testcase id="css3_transition_tests_entry10" purpose="To check if  border-bottom-color can implement transition function normally" result="PASS" /><testcase id="css3_transition_tests_entry11" purpose="To check if  border-left-color can implement transition function normally" result="PASS" /><testcase id="css3_transition_tests_entry12" purpose="To check if  border-top-width can implement transition function normally" result="PASS" /><testcase id="css3_transition_tests_entry13" purpose="To check if  border-right-width can implement transition function normally" result="PASS" /><testcase id="css3_transition_tests_entry14" purpose="To check if border-bottom-width can implement transition function normally" result="PASS" /><testcase id="css3_transition_tests_entry15" purpose="To check if  border-left-width can implement transition function normally" result="PASS" /><testcase id="css3_transition_tests_entry18" purpose="To check if shorthand properties padding-top can implement transition-property function normally" result="PASS" /><testcase id="css3_transition_tests_entry19" purpose="To check if shorthand properties margin-top can implement transition-property function normally" result="PASS" /><testcase id="css3_transition_tests_entry20" purpose="To check if shorthand properties outline-color can implement transition-property function normally" result="PASS" /><testcase id="css3_transition_tests_entry21" purpose="To check if shorthand properties background-color can implement transition-property function normally" result="PASS" /><testcase id="css3_transition_tests_entry28" purpose="To check if  transition-property:top can implement transition-property function normally" result="PASS" /><testcase id="css3_transition_tests_entry7" purpose="To check if  transition-property:left can implement transition-property function normally" result="PASS" /><testcase id="css3_transition_tests_entry8" purpose="To check if  border-top-color can implement transition function normally" result="PASS" /><testcase id="css3_transition_tests_entry9" purpose="To check if  border-right-color can implement transition function normally" result="PASS" /></category><category name="W3C_HTML5 APIs/Graphics/HTML Canvas 2D Context"><testcase id="canvas_colorsandstyles_createlineargradient_001" purpose="Check the createLinearGradient method of CanvasRenderingContext2D interface." result="PASS" /><testcase id="canvas_shadows_001" purpose="Check the createLinearGradient method of CanvasRenderingContext2D interface." result="PASS" /><testcase id="canvas_text_font_001" purpose="Check if ignore 'inherit' property-independent style sheet syntax without assigning a new font value." result="PASS" /><testcase id="2d.composite.operation.nullsuffix" purpose="Check that ctx.globalCompositeOperation is not changed when set to nullsuffix" result="PASS" /><testcase id="2d.drawImage.broken" purpose="Check the drawImage method when the image is broken" result="PASS" /><testcase id="2d.drawImage.incomplete.emptysrc" purpose="Check the drawImage method with image is empty string" result="PASS" /><testcase id="2d.drawImage.incomplete.nosrc" purpose="Check the drawImage method with image is no src" result="PASS" /><testcase id="2d.drawImage.incomplete.reload" purpose="Check the drawImage method with image is reload" result="PASS" /><testcase id="2d.drawImage.incomplete.removedsrc" purpose="Check the drawImage method with image src is removed" result="PASS" /><testcase id="2d.drawImage.wrongtype" purpose="Check if incorrect image types in drawImage do not match any defined overloads, so WebIDL throws a TypeError" result="PASS" /><testcase id="2d.getcontext.unique" purpose="Check if getContext('2d') returns the same object" result="PASS" /><testcase id="2d.gradient.object.type" purpose="Check that window.CanvasGradient exists and has the right properties" result="PASS" /><testcase id="2d.imageData.create1.basic" purpose="Check if createImageData(imgdata) exists and returns something" result="PASS" /><testcase id="2d.imageData.create1.initial" purpose="Check if createImageData(imgdata) returns transparent black data of the right size" result="PASS" /><testcase id="2d.imageData.create1.type" purpose="Check if createImageData(imgdata) returns an ImageData object containing a CanvasPixelArray object" result="PASS" /><testcase id="2d.imageData.create2.type" purpose="Check if createImageData(sw, sh) returns an ImageData object containing a CanvasPixelArray object" result="PASS" /><testcase id="2d.imageData.object.round" purpose="Check that ImageData.data rounds numbers with round-to-zero" result="PASS" /><testcase id="2d.line.cap.invalid" purpose="Check that setting lineCap to invalid values is ignored" result="PASS" /><testcase id="2d.line.join.invalid" purpose="Check that setting lineJoin to invalid values is ignored" result="PASS" /><testcase id="2d.path.isPointInPath.transform.4" purpose="Check that isPointInPath() handles transformations correctly" result="PASS" /><testcase id="2d.pattern.image.string" purpose="Check if the createPattern of interface is CanvasRenderingContext2D." result="PASS" /><testcase id="2d.scaled" purpose="Check if CSS-scaled canvases get drawn correctly" result="PASS" /><testcase id="2d.shadow.attributes.shadowBlur.valid" purpose="Check if valid shadowBlur of shadow attributes works" result="PASS" /><testcase id="2d.state.saverestore.fillStyle" purpose="Check if save()/restore() method works for fillStyle" result="PASS" /><testcase id="2d.state.saverestore.globalAlpha" purpose="Check if save()/restore() method works for globalAlpha" result="PASS" /><testcase id="2d.state.saverestore.shadowOffsetX" purpose="Check if save()/restore() method works for shadowOffsetX" result="PASS" /><testcase id="2d.strokeRect.zero.4" purpose="Check that strokeRect of Nx0 pixels draws a closed line with no caps" result="PASS" /><testcase id="2d.text.align.invalid" purpose="Check that setting textAlign to invalid values is ignored" result="PASS" /><testcase id="2d.text.baseline.invalid" purpose="Check that setting textBaseline to invalid values is ignored" result="PASS" /><testcase id="2d.text.draw.fill.rtl" purpose="Check if fillText respects Right-To-Left Override characters" result="PASS" /><testcase id="2d.transformation.scale.zero" purpose="Check if scale() with a scale factor of zero works" result="PASS" /><testcase id="2d.type.exists" purpose="Check that the 2D context interface is a property of 'window'" result="PASS" /><testcase id="2d.type.extend" purpose="Check that the interface methods can be added" result="PASS" /><testcase id="2d.type.replace" purpose="Check that the interface methods can be overridden" result="PASS" /><testcase id="2d.voidreturn" purpose="Check if void methods return undefined" result="PASS" /><testcase id="2d_canvas_readonly" purpose="Check if CanvasRenderingContext2D.canvas is readonly" result="PASS" /><testcase id="2d_canvas_reference" purpose="Check if CanvasRenderingContext2D.canvas refers back to its canvas" result="PASS" /><testcase id="2d_clearRect_basic" purpose="Check if clearRect clears all pixels on the canvas in the given rectangle to transparent black" result="PASS" /><testcase id="2d_clearRect_clip" purpose="Check if  clearRect function is affected by clipping regions" result="PASS" /><testcase id="2d_clearRect_globalalpha" purpose="Check if clearRect is not affected by globalAlpha" result="PASS" /><testcase id="2d_clearRect_globalcomposite" purpose="Check if clearRect is affected by globalCompositeOperation" result="PASS" /><testcase id="2d_clearRect_negative" purpose="Check if clearRect of negative sizes works" result="PASS" /><testcase id="2d_clearRect_nonfinite" purpose="Check if clearRect() with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_clearRect_path" purpose="Check if clearRect affects the current path" result="PASS" /><testcase id="2d_clearRect_shadow" purpose="Check if clearRect draws shadows" result="PASS" /><testcase id="2d_clearRect_transform" purpose="Check if clearRect is affected by transforms" result="PASS" /><testcase id="2d_clearRect_zero" purpose="Check if clearRect of zero pixels has no effect" result="PASS" /><testcase id="2d_composite_canvas_copy" purpose="Check if drawImage function with composite 'copy' of canvas works" result="PASS" /><testcase id="2d_composite_canvas_destination_atop" purpose="Check if the canvas can be displayed correctly with globalCompositeOperation = 'destination-atop'" result="PASS" /><testcase id="2d_composite_canvas_destination_in" purpose="Check if the canvas can be displayed correctly with globalCompositeOperation = 'destination-in'" result="PASS" /><testcase id="2d_composite_canvas_destination_out" purpose="Check if the canvas can be displayed correctly with globalCompositeOperation = 'destination-out'" result="PASS" /><testcase id="2d_composite_canvas_destination_over" purpose="Check if the canvas can be displayed correctly with globalCompositeOperation = 'destination-over'" result="PASS" /><testcase id="2d_composite_canvas_lighter" purpose="Check if the canvas can be displayed correctly with globalCompositeOperation = 'lighter'" result="PASS" /><testcase id="2d_composite_canvas_source_atop" purpose="Check if the canvas can be displayed correctly with globalCompositeOperation = 'source-atop'" result="PASS" /><testcase id="2d_composite_canvas_source_in" purpose="Check if the canvas can be displayed correctly with globalCompositeOperation = 'source-in'" result="PASS" /><testcase id="2d_composite_canvas_source_out" purpose="Check if the canvas can be displayed correctly with globalCompositeOperation = 'source-out'" result="PASS" /><testcase id="2d_composite_canvas_source_over" purpose="Check if the canvas can be displayed correctly with globalCompositeOperation = 'source-over'" result="PASS" /><testcase id="2d_composite_canvas_xor" purpose="Check if the canvas can be displayed correctly with globalCompositeOperation = 'xor'" result="PASS" /><testcase id="2d_composite_clip_copy" purpose="Check if fill()  affect pixels outside the clip region." result="PASS" /><testcase id="2d_composite_clip_destination_atop" purpose="Check if fill() method does not affect pixels outside the clip region" result="PASS" /><testcase id="2d_composite_clip_destination_in" purpose="Check if fill() function affects pixels outside the clip region." result="PASS" /><testcase id="2d_composite_clip_destination_out" purpose="Check if fill() does not affect pixels outside the clip region." result="PASS" /><testcase id="2d_composite_clip_destination_over" purpose="Check if fill() function does not affect pixels outside the clip region" result="PASS" /><testcase id="2d_composite_clip_lighter" purpose="Check if fill() affects pixels outside the clip region" result="PASS" /><testcase id="2d_composite_clip_source_atop" purpose="Check if fill function does not affect pixels outside the clip region" result="PASS" /><testcase id="2d_composite_clip_source_in" purpose="Check if fill() affects pixels outside the clip region" result="PASS" /><testcase id="2d_composite_clip_source_out" purpose="Check if method fill() does not affect pixels outside the clip region" result="PASS" /><testcase id="2d_composite_clip_source_over" purpose="Check if fill does not affect pixels outside the clip region" result="PASS" /><testcase id="2d_composite_clip_xor" purpose="Check if fill() method affects pixels outside the clip region" result="PASS" /><testcase id="2d_composite_globalAlpha_canvas" purpose="Check if the image can be displayed correctly with globalAlpha" result="PASS" /><testcase id="2d_composite_globalAlpha_canvaspattern" purpose="Check if globalAlpha.canvaspattern can be displayed correctly" result="PASS" /><testcase id="2d_composite_globalAlpha_default" purpose="Check if the image can be displayed correctly with assertSame(globalAlpha(default), 1.0, &quot;globalAlpha(default)&quot;, &quot;1.0&quot;)" result="PASS" /><testcase id="2d_composite_globalAlpha_fill" purpose="Check if globalAlpha.fill can be displayed correctly" result="PASS" /><testcase id="2d_composite_globalAlpha_image" purpose="Check if the image can be displayed correctly with globalAlpha = 0.01" result="PASS" /><testcase id="2d_composite_globalAlpha_imagepattern" purpose="Check if imagepattern with composite globleAlpha works" result="PASS" /><testcase id="2d_composite_globalAlpha_invalid" purpose="Check if globalAlpha with invalid value works" result="PASS" /><testcase id="2d_composite_globalAlpha_range" purpose="Check if the value is composite globalAlpha range" result="PASS" /><testcase id="2d_composite_image_copy" purpose="Check if the image can be displayed correctly with globalCompositeOperation = copy" result="PASS" /><testcase id="2d_composite_image_destination_atop" purpose="Check if the image can be displayed correctly with globalCompositeOperation = 'destination-atop'" result="PASS" /><testcase id="2d_composite_image_destination_in" purpose="Check if the image can be displayed correctly with globalCompositeOperation = 'destination-in'" result="PASS" /><testcase id="2d_composite_image_destination_out" purpose="Check if the image can be displayed correctly with globalCompositeOperation = 'destination-out'" result="PASS" /><testcase id="2d_composite_image_destination_over" purpose="Check if the canvas can be displayed correctly with globalCompositeOperation ='destination-over'" result="PASS" /><testcase id="2d_composite_image_lighter" purpose="Check drawImage with composite 'lighter'" result="PASS" /><testcase id="2d_composite_image_source_atop" purpose="Check if the image can be displayed correctly with globalCompositeOperation = 'source-atop'" result="PASS" /><testcase id="2d_composite_image_source_in" purpose="Check if draw image with composite 'source-in' works" result="PASS" /><testcase id="2d_composite_image_source_out" purpose="Check if drawImage with composite 'source-out' works" result="PASS" /><testcase id="2d_composite_image_source_over" purpose="Check if the image can be displayed correctly with globalCompositeOperation = 'source-over'" result="PASS" /><testcase id="2d_composite_image_xor" purpose="Check if drawImage with composite 'xor' works" result="PASS" /><testcase id="2d_composite_operation_casesensitive" purpose="Check if the image can be diaplayed correclty with globalCompositeOperation = 'Source-over'" result="PASS" /><testcase id="2d_composite_operation_default" purpose="Check the value of composite operation default" result="PASS" /><testcase id="2d_composite_operation_get" purpose="Check get composite operation" result="PASS" /><testcase id="2d_composite_operation_highlight" purpose="Check if the image can be displayed correctly with globalCompositeOperation = 'highlight'" result="PASS" /><testcase id="2d_composite_operation_over" purpose="Check if the image can be diaplayed correclty with globalCompositeOperation = 'over';" result="PASS" /><testcase id="2d_composite_operation_unrecognised" purpose="Check composite operation unrecognised" result="PASS" /><testcase id="2d_composite_solid_copy" purpose="Check if the solid can be displayed correctly after setting globalCompositeOperation = 'copy'" result="PASS" /><testcase id="2d_composite_solid_destination_atop" purpose="Check if the solid can be displayed correctly after setting globalCompositeOperation = 'copy'" result="PASS" /><testcase id="2d_composite_solid_destination_in" purpose="Check if user agent can displayed the solid with globalCompositeOperation = destination-in correctly" result="PASS" /><testcase id="2d_composite_solid_destination_out" purpose="Check if the solid can be displayed correctly after setting the globalCompositeOperation = destination-out" result="PASS" /><testcase id="2d_composite_solid_destination_over" purpose="Check composite with 'destination-over'" result="PASS" /><testcase id="2d_composite_solid_lighter" purpose="Check if composite with 'lighter' works" result="PASS" /><testcase id="2d_composite_solid_source_atop" purpose="Check if user agent can displayed the solid with globalCompositeOperation = source-atop correctly" result="PASS" /><testcase id="2d_composite_solid_source_in" purpose="Check if the solid can be displayed correctly with globalCompositeOperation = 'source-in'" result="PASS" /><testcase id="2d_composite_solid_source_out" purpose="Check if user agent can displayed the solid with globalCompositeOperation = source-out correctly" result="PASS" /><testcase id="2d_composite_solid_source_over" purpose="Check composite operation 'source-over'" result="PASS" /><testcase id="2d_composite_solid_xor" purpose="Check if the solid can be displayed correclty as globalCompositeOperation = 'xor'" result="PASS" /><testcase id="2d_composite_transparent_copy" purpose="Check if the value is composite transparent 'copy'" result="PASS" /><testcase id="2d_composite_transparent_destination_atop" purpose="Check if user agent can display transparent image with globalCompositeOperation = destination-atop correctly" result="PASS" /><testcase id="2d_composite_transparent_destination_in" purpose="Check if user agent can display transparent image with globalCompositeOperation = destination-in correctly" result="PASS" /><testcase id="2d_composite_transparent_destination_out" purpose="Check if user agent can displayed transparent image with globalCompositeOperation = destination-out correctly" result="PASS" /><testcase id="2d_composite_transparent_destination_over" purpose="Check if user agent can display transparent image with globalCompositeOperation = destination-over correctly" result="PASS" /><testcase id="2d_composite_transparent_lighter" purpose="Check if a transparent image can be displayed correctly with globalCompositeOperation = 'lighter'" result="PASS" /><testcase id="2d_composite_transparent_source_atop" purpose="Check if fill function  affect pixels outside the transparent region" result="PASS" /><testcase id="2d_composite_transparent_source_in" purpose="Check if a transparent image can be displayed correctly with globalCompositeOperation = 'source-in" result="PASS" /><testcase id="2d_composite_transparent_source_out" purpose="Check the source-out" result="PASS" /><testcase id="2d_composite_transparent_source_over" purpose="Check if user agent can display transparent image with globalCompositeOperation = source-over correctly" result="PASS" /><testcase id="2d_composite_transparent_xor" purpose="Check if the image can be displayed correctly with globalCompositeOperation = 'xor'" result="PASS" /><testcase id="2d_composite_uncovered_fill_copy" purpose="Check if fill() draws pixels and is not covered by the source object as (0,0,0,0), and does not leave the pixels" result="PASS" /><testcase id="2d_composite_uncovered_fill_destination_atop" purpose="Check if fill() method draws pixels and is not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_fill_destination_in" purpose="Check if fill() function draws pixels and is not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_fill_source_in" purpose="Check if method fill() draws pixels and is not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_fill_source_out" purpose="Check if function fill() draws pixels and is not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_image_copy" purpose="Check if drawImage() draws pixels and is not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_image_destination_atop" purpose="Check if drawImage function draws pixels and is not covered by the source object as (0,0,0,0)" result="PASS" /><testcase id="2d_composite_uncovered_image_destination_in" purpose="Check if drawImage draws pixels and is not covered by the source object as (0,0,0,0)" result="PASS" /><testcase id="2d_composite_uncovered_image_source_in" purpose="Check if drawImage() method draws pixels and is not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_image_source_out" purpose="Check if drawImage method draws pixels and is not covered by the source object as (0,0,0,0)" result="PASS" /><testcase id="2d_composite_uncovered_nocontext_copy" purpose="Check if drawImage() method of a canvas with no context draws pixels as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_nocontext_destination_atop" purpose="Check if drawImage() function of a canvas with no context draws pixels as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_nocontext_destination_in" purpose="Check if drawImage of a canvas with no context draws pixels as (0,0,0,0)" result="PASS" /><testcase id="2d_composite_uncovered_nocontext_source_in" purpose="Check if method drawImage of a canvas with no context draws pixels as (0,0,0,0) and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_nocontext_source_out" purpose="Check if drawImage() of a canvas with no context draws pixels as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_pattern_copy" purpose="Check if Pattern fill draws pixels and is not covered by the source object as (0,0,0,0)" result="PASS" /><testcase id="2d_composite_uncovered_pattern_destination_atop" purpose="Check if Pattern fill() method draws pixels and is not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_pattern_destination_in" purpose="Check if Pattern fill() function draws pixels and is not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_pattern_source_in" purpose="Check if Pattern method fill() draws pixels and is not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_composite_uncovered_pattern_source_out" purpose="Check if Pattern fill() draws pixels and is not covered by the source object as (0,0,0,0), and does not leave the pixels unchanged" result="PASS" /><testcase id="2d_coordinatespace" purpose="Check if Coordinate space goes from top-left to bottom-right" result="PASS" /><testcase id="2d_drawImage_2self" purpose="Check if drawImage with self works" result="PASS" /><testcase id="2d_drawImage_3arg" purpose="Check  drawImage function with 3 arguments" result="PASS" /><testcase id="2d_drawImage_5arg" purpose="Check drawImage function with five arguments" result="PASS" /><testcase id="2d_drawImage_9arg_basic" purpose="Check drawImage function  with nine arguments" result="PASS" /><testcase id="2d_drawImage_9arg_destpos" purpose="Check if the drawImage function with nine argumnets destpos works" result="PASS" /><testcase id="2d_drawImage_9arg_destsize" purpose="Check if the image can be displayed correctly after setting the drawImage 5 times" result="PASS" /><testcase id="2d_drawImage_9arg_sourcepos" purpose="Check if can draw a 2d image with 9arguments" result="PASS" /><testcase id="2d_drawImage_9arg_sourcesize" purpose="Check if drawImage.9arg.sourcesize works" result="PASS" /><testcase id="2d_drawImage_alpha" purpose="Check if the image can be displayed correctly with globalAlpha=0" result="PASS" /><testcase id="2d_drawImage_animated_apng" purpose="Check if drawImage() of an APNG with no poster frame draws the first frame" result="PASS" /><testcase id="2d_drawImage_animated_gif" purpose="Check if drawImage function of an animated GIF draws the first frame" result="PASS" /><testcase id="2d_drawImage_animated_poster" purpose="Check if drawImage() of an APNG draws the poster frame" result="PASS" /><testcase id="2d_drawImage_canvas" purpose="Check if can draw a image of canvas" result="PASS" /><testcase id="2d_drawImage_clip" purpose="Check if the drawImage.clip can be displayed correctly" result="PASS" /><testcase id="2d_drawImage_composite" purpose="Check if drawImage with composite 'destination-over' works" result="PASS" /><testcase id="2d_drawImage_floatsource" purpose="Check if user agent can display the imge drawing with floatsource correctly" result="PASS" /><testcase id="2d_drawImage_image_incomplete_empty" purpose="Check if the incomplete empty 'drawimage' image can be displayed correctly" result="PASS" /><testcase id="2d_drawImage_image_incomplete_omitted" purpose="Check if the incomplete(omitted) drawImange image can be displayed correctly" result="PASS" /><testcase id="2d_drawImage_negativedest" purpose="Check if Negative destination width/height represents the correct rectangle" result="PASS" /><testcase id="2d_drawImage_negativedir" purpose="Check if negative dimensions do not affect the direction of the image" result="PASS" /><testcase id="2d_drawImage_negativesource" purpose="Check if Negative source width/height represents the correct rectangle" result="PASS" /><testcase id="2d_drawImage_nonfinite" purpose="Check if drawImage function with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_drawImage_nowrap" purpose="Check if stretch images get pixels wrapping around the edges" result="PASS" /><testcase id="2d_drawImage_path" purpose="Check if the drawImage.path works" result="PASS" /><testcase id="2d_drawImage_self_one" purpose="Check if drawImage by self works" result="PASS" /><testcase id="2d_drawImage_transform" purpose="Check if drawImage is affected by transforms" result="PASS" /><testcase id="2d_drawImage_zerocanvas" purpose="Check if the canvas can be displayed correctly with 'drawimage' width=0/leight=0/width=leight=0" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="2d_drawImage_zerosource" purpose="Check if drawImage with zero-sized source rectangle throws INDEX_SIZE_ERR" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="2d_fillRect_basic" purpose="Check if  fillRect function works" result="PASS" /><testcase id="2d_fillRect_clip" purpose="Check if fillRect is affected by clipping regions" result="PASS" /><testcase id="2d_fillRect_negative" purpose="Check if fillRect of negative sizes works" result="PASS" /><testcase id="2d_fillRect_nonfinite" purpose="Check if fillRect function with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_fillRect_path" purpose="Check if fillRect  affects the current path" result="PASS" /><testcase id="2d_fillRect_shadow" purpose="Check if fillRect draws shadows" result="PASS" /><testcase id="2d_fillRect_transform" purpose="Check if fillRect function is affected by transforms" result="PASS" /><testcase id="2d_fillRect_zero" purpose="Check if fillRect with zero pixels has no effect" result="PASS" /><testcase id="2d_fillStyle_default" purpose="Check if  fillStyle function works" result="PASS" /><testcase id="2d_fillStyle_get_semitransparent" purpose="Check if the semitransparent image can be displayed correctly" result="PASS" /><testcase id="2d_fillStyle_get_solid" purpose="Check if fillStyle.get.solid works" result="PASS" /><testcase id="2d_fillStyle_get_transparent" purpose="Check if fillStyle.get.transparent works" result="PASS" /><testcase id="2d_fillStyle_invalidstring" purpose="Check if invalid string filestyle can be displayed correctly" result="PASS" /><testcase id="2d_fillStyle_invalidtype" purpose="Check if user agent can displayed invalid fillstyle correctly" result="PASS" /><testcase id="2d_fillStyle_parse_1transparent" purpose="Check if the image can be displayed correctly with fillStyle = 'transparent'" result="PASS" /><testcase id="2d_fillStyle_parse_2hsl" purpose="Check if fillStyle function with hsl works" result="PASS" /><testcase id="2d_fillStyle_parse_2hsla" purpose="Check if fillStyle function with hsla works" result="PASS" /><testcase id="2d_fillStyle_parse_5hsl" purpose="Check if the image can be displayed correctly after setting the hsl(120.0, 100.0%, 50.0%)" result="PASS" /><testcase id="2d_fillStyle_parse_6hex" purpose="Check if fillStyle with 6 hex number works" result="PASS" /><testcase id="2d_fillStyle_parse_current_basic" purpose="Check if currentColor is computed from the canvas element" result="PASS" /><testcase id="2d_fillStyle_parse_current_changed" purpose="Check if currentColor is computed when the attribute is set, not painted" result="PASS" /><testcase id="2d_fillStyle_parse_current_removed" purpose="Check if currentColor is solid black when the canvas element is not in a document" result="PASS" /><testcase id="2d_fillStyle_parse_hex_three" purpose="Check if the image can be displayed correctly set fillstyle as hex(fillStyle = '#0f0';)" result="PASS" /><testcase id="2d_fillStyle_parse_hsla_2clamp" purpose="Check if fillStyle paser with hsla works" result="PASS" /><testcase id="2d_fillStyle_parse_hsla_4clamp" purpose="Check if  fillStyle function with hsla works" result="PASS" /><testcase id="2d_fillStyle_parse_hsla_clamp_five" purpose="Check if the image can be displayed correctly after setting fillStyle = 'hsla(120, 100%, 50%, 2)'" result="PASS" /><testcase id="2d_fillStyle_parse_hsla_clamp_one" purpose="Check if the image can be displayed correctly after setting fillStyle = hsla(120, 200%, 50%, 1)" result="PASS" /><testcase id="2d_fillStyle_parse_hsla_clamp_six" purpose="Check if the image can be displayed correctly after setting fillStyle = hsla(120, 100%, 0%, -2)" result="PASS" /><testcase id="2d_fillStyle_parse_hsla_clamp_three" purpose="Check  if the image can be displayed correctly after setting fillStyle = 'hsla(120, 100%, 200%, 1)'" result="PASS" /><testcase id="2d_fillStyle_parse_hsla_one" purpose="Check if the fillstyle can be displayed correctly after setting hsla(120, 100%, 50%, 0.499)" result="PASS" /><testcase id="2d_fillStyle_parse_hsl_1clamp" purpose="Check if fillStyle parse with hsl works" result="PASS" /><testcase id="2d_fillStyle_parse_hsl_3clamp" purpose="Check if fillStyle with hsl works" result="PASS" /><testcase id="2d_fillStyle_parse_hsl_clamp_four" purpose="Check if the image can be displayed correctly after setting fillStyle = hsl(120, 100%, -200%)" result="PASS" /><testcase id="2d_fillStyle_parse_hsl_clamp_two" purpose="Check if the image can be displayed correctly after setting fillStyle = hsl(120, -200%, 49.9%)" result="PASS" /><testcase id="2d_fillStyle_parse_hsl_four" purpose="Check if the image can be displayed correctly after setting the hsl(-360240, 100%, 50%)" result="PASS" /><testcase id="2d_fillStyle_parse_hsl_one" purpose="Check if the image can be displayed correctly after setting the hsl(120, 100%, 50%)" result="PASS" /><testcase id="2d_fillStyle_parse_hsl_six" purpose="Check if the image can be displayed correctly after setting the hsl(+120, +100%, +50%)" result="PASS" /><testcase id="2d_fillStyle_parse_hsl_three" purpose="Check if the image can be displayed correctly after setting the hsl(360120, 100%, 50%)" result="PASS" /><testcase id="2d_fillStyle_parse_html4" purpose="Check fillStyle parses html4" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_2hex" purpose="Check if fillStyle parse invalid 2 hex number" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_2rgb" purpose="Check if fillStyle parse invalid rgb" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_2rgba" purpose="Check if fillStyle with invalid rgba works" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_4hex" purpose="Check if fillStyle with invalid 4 hex number works" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_5hex" purpose="Check if fillStyle parse invalid 5 hex numbers" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_5rgba" purpose="Check if fillStyle with invalid rgba data works" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_7hex" purpose="Check if fillStyle with invalid 7 hex number works" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_7rgba" purpose="Check if fillStyle parse invalid rgba" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hex6" purpose="Check if the image van be displayed correctly after setting the fillstyle with six invalid hex numbers" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hex8" purpose="Check if fillStyle with 8 hex numbers works" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hex_one" purpose="Check if the image van be displayed correctly after setting the fillstyle as an invalid hex number" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hex_three" purpose="Check if the image van be displayed correctly after setting the fillstyle as three invalid hex numbers" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hsla_one" purpose="Check if it can be displayed correctly with fillStyle = 'hsla(0%, 100%, 50%, 1) invalid hsla" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hsla_two" purpose="Check if it can be displayed correctly with fillStyle = 'hsla(0, 0, 50%, 1)'" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hsl_five" purpose="Check if the invalid fillstyle can be displayed correctly after setting the hsl(0, 100%, 100%, 1)" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hsl_four" purpose="Check if the invalid fillstyle can be displayed correctly after setting the hsl(0, 100%, 0)" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hsl_one" purpose="Check if the image can be displayed correctly after setting the hsl" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hsl_six" purpose="Check if the invalid fillstyle can be displayed correctly after setting the hsl(0, 100.%, 50%)" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hsl_three" purpose="Check if the image can be displayed correctly after setting fillStyle = 'hsl(0, 0, 50%)'" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_hsl_two" purpose="Check if the invalid fillstyle can be displayed correctly after setting the hsl(z, 100%, 50%)" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_name_darkbrown" purpose="Check if fillStyle with invalid name 'darkbrown' works" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_name_firebrick1" purpose="Check if fillStyle with invalid name 'firebrick1' works" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_name_four" purpose="Check if the image can be displayed correctly with fillstyle=invalid name" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_name_red" purpose="Check if fillStyle with invalid name '&quot;red' works" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_name_redblue" purpose="Check if  fillStyle parses invalid name 'red blue'" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_rgba_a" purpose="Check if fillStyle function with invalid 'a' score of rgba works" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_rgba_four" purpose="Check if the invalid fillstyle can be displayed correctly after setting the rgba(255, 0, 0, 100%)" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_rgba_one" purpose="Check if the invalid fillstyle can be displayed correctly after setting the rgba(255, 0, 0)" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_rgba_three" purpose="Check if the invalid fillstyle can be displayed correctly after setting the rgba(100%, 0, 0, 1)" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_rgb_five" purpose="Check if  fillStyle parses invalid rgb" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_rgb_four" purpose="Check if the invalid fillstyle can be displayed correctly after setting the rgba(100%, 0, 0)" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_rgb_one" purpose="Check if invalid fillstyle can be displayed correctly after setting the rgb(255.0, 0, 0)" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_rgb_r" purpose="Check if fillStyle function parse invalid red score of rgb" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_rgb_seven" purpose="Check if the invalid fillstyle can be displayed correctly after setting the rgb(255, 0, 0, 1)" result="PASS" /><testcase id="2d_fillStyle_parse_invalid_rgb_six" purpose="Check if the invalid fillstyle can be displayed correctly after setting the rgb(255, - 1, 0)" result="PASS" /><testcase id="2d_fillStyle_parse_rgba_1clamp" purpose="Check if fillStyle with rgba clamped works" result="PASS" /><testcase id="2d_fillStyle_parse_rgba_1solid" purpose="Check if  fillStyle parses solid rgba" result="PASS" /><testcase id="2d_fillStyle_parse_rgba_4solid" purpose="Check if fillStyle parse rgba solid" result="PASS" /><testcase id="2d_fillStyle_parse_rgba_a" purpose="Check if fillStyle function  parse invalid number" result="PASS" /><testcase id="2d_fillStyle_parse_rgba_clamp_two" purpose="Check if fillStyle with rgba clamp works" result="PASS" /><testcase id="2d_fillStyle_parse_rgba_num_one" purpose="Check if fillStyle parses rgba number" result="PASS" /><testcase id="2d_fillStyle_parse_rgba_num_two" purpose="Check if the image can be displayed correctly with fillStyle = rgba(0,  255,  0,  0.499)" result="PASS" /><testcase id="2d_fillStyle_parse_rgba_percent" purpose="Check if the invalid fillstyle can be displayed correctly after setting the rgba(0%,100%,0%,0.499)" result="PASS" /><testcase id="2d_fillStyle_parse_rgba_solid_two" purpose="Check if the solid can be displayed correctly with rgba(  0  ,  255  ,  0  ,  1.0  )" result="PASS" /><testcase id="2d_fillStyle_parse_rgb_1clamp" purpose="Check if fillStyle with parse rgb clamped works" result="PASS" /><testcase id="2d_fillStyle_parse_rgb_5clamp" purpose="Check if fillStyle parse invalid colour number does not range [0, 255]" result="PASS" /><testcase id="2d_fillStyle_parse_rgb_clamp_four" purpose="Check if the image can be displayed correctly with Assumes colours clamped to [0,255] after setting the rgb" result="PASS" /><testcase id="2d_fillStyle_parse_rgb_clamp_three" purpose="Check if the image can be displayed correctly with Assumes colours clamped to [0,255] after setting the rgb(-2147483649, 4294967298, -18446744073709551619)" result="PASS" /><testcase id="2d_fillStyle_parse_rgb_clamp_two" purpose="Check if the image can be displayed correctly with Assumes colours clamped to [0,255] after setting the rgb(-200%, 200%, -200%)" result="PASS" /><testcase id="2d_fillStyle_parse_rgb_num" purpose="Check if fillStyle parses rgb num" result="PASS" /><testcase id="2d_fillStyle_parse_rgb_percent" purpose="Check if the image pattern can be displayed corrctly with rgb(0% ,100% ,0%)" result="PASS" /><testcase id="2d_fillStyle_parse_svg_gray" purpose="Check if the image can be displayed correctly with fillStyle = 'gray'" result="PASS" /><testcase id="2d_fillStyle_parse_svg_grey" purpose="Check if the image can be displayed correctly with fillStyle = 'grey'" result="PASS" /><testcase id="2d_fillStyle_parse_system" purpose="Check if the image can be displayed correctly with fillStyle = 'ThreeDDarkShadow'" result="PASS" /><testcase id="2d_fillStyle_parse_TrAnSpArEnT" purpose="Check if the image can be displayed correctly with fillStyle = 'TrAnSpArEnT';" result="PASS" /><testcase id="2d_getcontext_exists" purpose="Check the existence of 2D context method" result="PASS" /><testcase id="2d_getcontext_extraargs" purpose="Check if 2D context ignores extra getContext arguments" result="PASS" /><testcase id="2d_getcontext_shared" purpose="Check if getContext('2d') returns objects which share canvas state" result="PASS" /><testcase id="2d_gradient_empty" purpose="Check if the image can be displayed with empty gradient" result="PASS" /><testcase id="2d_gradient_interpolate_2overlap" purpose="Check if the image can be displayed successfully with overlap gradient" result="PASS" /><testcase id="2d_gradient_interpolate_alpha" purpose="Check if addColorStop method works with alpha argument" result="PASS" /><testcase id="2d_gradient_interpolate_colour" purpose="Check if addColorStop method with color argument works" result="PASS" /><testcase id="2d_gradient_interpolate_colouralpha" purpose="Check if addColorStop method with colouralpha argument" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="2d_gradient_interpolate_multiple" purpose="Check if the image can be displayed correctly with multiple gradient" result="PASS" /><testcase id="2d_gradient_interpolate_outside" purpose="Check if the image can be displayed correctly with outside gradient" result="PASS" /><testcase id="2d_gradient_interpolate_overlap" purpose="Check if the image can be displayed correctly with overlap gradient;" result="PASS" /><testcase id="2d_gradient_interpolate_solid" purpose="Check interpolate gradient with createLinearGradient" result="PASS" /><testcase id="2d_gradient_interpolate_vertical" purpose="Check if the image can be displayed with vertical gradient" result="PASS" /><testcase id="2d_gradient_interpolate_zerosize" purpose="Check if the image can be displayed with zero-length line" result="PASS" /><testcase id="2d_gradient_linear_3transform" purpose="Check if Linear gradient transforms do not experience broken caching effects" result="PASS" /><testcase id="2d_gradient_linear_nonfinite" purpose="Check if createLinearGradient() throws TypeError with infinite arguments" result="PASS" /><testcase id="2d_gradient_linear_transform_one" purpose="Check if Linear gradient coordinates are relative to the  coordinates pace at the time of filling" result="PASS" /><testcase id="2d_gradient_linear_transform_two" purpose="Check if Linear gradient coordinates are relative to the coordinated space at the time of the filling" result="PASS" /><testcase id="2d_gradient_object_compare" purpose="Check the different of two gradient object" result="PASS" /><testcase id="2d_gradient_object_crosscanvas" purpose="Check if crosscanvas gradient can be displayed correctly" result="PASS" /><testcase id="2d_gradient_object_current" purpose="Check if the image can be displayed with current color." result="PASS" /><testcase id="2d_gradient_object_invalidcolour" purpose="Check if the image can be displayed with invalidcolour in addColorStop" result="PASS" /><testcase id="2d_gradient_object_invalidoffset" purpose="Check if the image can be displayed with invalidoffset in addColorStop" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2121 XWALK-2121]]</testcase><testcase id="2d_gradient_object_return" purpose="Check if createLinearGradient() and createRadialGradient() return objects implementing CanvasGradient" result="PASS" /><testcase id="2d_gradient_object_update" purpose="Check if the image can be displayed when argument be updated in addColorStop" result="PASS" /><testcase id="2d_gradient_radial_1inside" purpose="Check if the image can be displayed with the start circle inside the end circle" result="PASS" /><testcase id="2d_gradient_radial_2outside" purpose="Check if the image can be displayed with the start circle outside the end circle" result="PASS" /><testcase id="2d_gradient_radial_3transform" purpose="Check if Radial gradient transformations do not experience broken caching effects" result="PASS" /><testcase id="2d_gradient_radial_cone_behind" purpose="Check if create a cone at behind" result="PASS" /><testcase id="2d_gradient_radial_cone_beside" purpose="Check if can create a cone beside" result="PASS" /><testcase id="2d_gradient_radial_cone_bottom" purpose="Check if create a cone at bottom" result="PASS" /><testcase id="2d_gradient_radial_cone_cylinder" purpose="Check if create a cone in cylinder" result="PASS" /><testcase id="2d_gradient_radial_cone_front" purpose="Check if can create a cone at front" result="PASS" /><testcase id="2d_gradient_radial_cone_shape2" purpose="Check the gradient radial cone" result="PASS" /><testcase id="2d_gradient_radial_cone_shape_one" purpose="Check if cone with createRadialGradient can be displayed correctly" result="PASS" /><testcase id="2d_gradient_radial_cone_top" purpose="Check if fillStyle works with radial gradient" result="PASS" /><testcase id="2d_gradient_radial_equal" purpose="Check if the image can be displayed with equal start circle to end circle" result="PASS" /><testcase id="2d_gradient_radial_inside_three" purpose="Check if image can be displayed correctly after setting the createRadialGradient's value" result="PASS" /><testcase id="2d_gradient_radial_inside_two" purpose="Check if the image can be displayed with end circle inside the start circle" result="PASS" /><testcase id="2d_gradient_radial_negative" purpose="Check if createRadialGradient() throws INDEX_SIZE_ERR with negative radius" result="PASS" /><testcase id="2d_gradient_radial_nonfinite" purpose="Check if createRadialGradient() throws TypeError with infinite arguments" result="PASS" /><testcase id="2d_gradient_radial_outside_one" purpose="Check if the image can be displayed with the end circle outside the start circle" result="PASS" /><testcase id="2d_gradient_radial_outside_three" purpose="Check if user agent can displayed RadialGradient image correctly" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="2d_gradient_radial_touch_one" purpose="Check if the image can be displayed correctly with start circle touching end circle" result="PASS" /><testcase id="2d_gradient_radial_touch_three" purpose="Check if the image can be displayed successfully with start circle touching end circle" result="PASS" /><testcase id="2d_gradient_radial_touch_two" purpose="Check if the image can be displayed with start circle touching end circle" result="PASS" /><testcase id="2d_gradient_radial_transform_one" purpose="Check if radial gradient coordinates are relative to the coordinated space at the time of filling" result="PASS" /><testcase id="2d_gradient_radial_transform_translate" purpose="Check if radial gradient coordinates are relative to the coordinate space at the time of the filling" result="PASS" /><testcase id="2d_imageData_create2_basic" purpose="Check if createImageData(sw, sh) exists and returns something" result="PASS" /><testcase id="2d_imageData_create2_large" purpose="Check if createImageData(sw, sh) works for sizes much larger than the canvas" result="PASS" /><testcase id="2d_imageData_create2_negative" purpose="Check if createImageData(sw, sh) takes the absolute magnitude of the size arguments" result="PASS" /><testcase id="2d_imageData_create2_round" purpose="Check if createImageData(w, h) is rounded the same as getImageData(0, 0, w, h)" result="PASS" /><testcase id="2d_imageData_create2_tiny" purpose="Check if createImageData(sw, sh) works for sizes smaller than one pixel" result="PASS" /><testcase id="2d_imageData_create2_zero" purpose="Check if createImageData(sw, sh) throws INDEX_SIZE_ERR if size is zero" result="PASS" /><testcase id="2d_imageData_create_two_initial" purpose="Check if createImageData(sw, sh) returns transparent black data of the right size" result="PASS" /><testcase id="2d_imageData_create_two_nonfinite" purpose="Check if createImageData() throws TypeError if arguments are infinite" result="PASS" /><testcase id="2d_imageData_get_basic" purpose="Check if getImageData() exists and returns something" result="PASS" /><testcase id="2d_imageData_get_clamp" purpose="Check if getImageData() clamps colours to the range [0, 255]" result="PASS" /><testcase id="2d_imageData_get_length" purpose="Check if getImageData() returns a correctly-sized CanvasPixelArray" result="PASS" /><testcase id="2d_imageData_get_nonfinite" purpose="Check if getImageData() throws TypeError if arguments are not finite" result="PASS" /><testcase id="2d_imageData_get_nonpremul" purpose="Check if getImageData() returns non-premultiplied colours" result="PASS" /><testcase id="2d_imageData_get_order_alpha" purpose="Check if getImageData() returns A in the fourth component" result="PASS" /><testcase id="2d_imageData_get_order_cols" purpose="Check if getImageData() returns leftmost columns first" result="PASS" /><testcase id="2d_imageData_get_order_rgb" purpose="Check if getImageData() returns R then G then B" result="PASS" /><testcase id="2d_imageData_get_order_rows" purpose="Check if getImageData() returns topmost rows first" result="PASS" /><testcase id="2d_imageData_get_range" purpose="Check if getImageData() returns values in the range [0, 255]" result="PASS" /><testcase id="2d_imageData_get_source_negative" purpose="Check if getImageData() works with negative width and height, and returns top-to-bottom left-to-right" result="PASS" /><testcase id="2d_imageData_get_source_outside" purpose="Check if getImageData() returns transparent black outside the canvas" result="PASS" /><testcase id="2d_imageData_get_source_size" purpose="Check if getImageData() returns bigger ImageData for bigger source rectangle" result="PASS" /><testcase id="2d_imageData_get_tiny" purpose="Check if getImageData() works for sizes smaller than one pixel" result="PASS" /><testcase id="2d_imageData_get_type" purpose="Check if getImageData() returns an ImageData object containing a CanvasPixelArray object" result="PASS" /><testcase id="2d_imageData_get_unaffected" purpose="Check if getImageData() is not affected by context state" result="PASS" /><testcase id="2d_imageData_get_zero" purpose="Check if getImageData() throws INDEX_SIZE_ERR if size is zero" result="PASS" /><testcase id="2d_imageData_object_clamp" purpose="Check if ImageData.data wraps numbers modulo 256" result="PASS" /><testcase id="2d_imageData_object_ctor" purpose="Check if ImageData does not have a usable constructor" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3630 XWALK-3630]]</testcase><testcase id="2d_imageData_object_nan" purpose="Check if ImageData.data converts NaN to 0" result="PASS" /><testcase id="2d_imageData_object_properties" purpose="Check if ImageData objects have the right properties" result="PASS" /><testcase id="2d_imageData_object_readonly" purpose="Check if ImageData objects' properties are read-only" result="PASS" /><testcase id="2d_imageData_object_set" purpose="Check if ImageData.data can be modified" result="PASS" /><testcase id="2d_imageData_object_string" purpose="Check if ImageData.data converts strings to numbers with ToNumber" result="PASS" /><testcase id="2d_imageData_object_undefined" purpose="Check if ImageData.data converts undefined to 0" result="PASS" /><testcase id="2d_imageData_put_alpha" purpose="Check if putImageData() puts non-solid image data correctly" result="PASS" /><testcase id="2d_imageData_put_basic" purpose="Check if putImageData() puts image data from getImageData() onto the canvas" result="PASS" /><testcase id="2d_imageData_put_clip" purpose="Check if putImageData() is not affected by clipping regions" result="PASS" /><testcase id="2d_imageData_put_created" purpose="Check if putImageData() puts image data from createImageData() onto the canvas" result="PASS" /><testcase id="2d_imageData_put_cross" purpose="Check if putImageData() accepts image data got from a different canvas" result="PASS" /><testcase id="2d_imageData_put_dirty_negative" purpose="Check if putImageData() handles negative-sized dirty rectangles correctly" result="PASS" /><testcase id="2d_imageData_put_dirty_outside" purpose="Check if putImageData() handles dirty rectangles outside the canvas correctly" result="PASS" /><testcase id="2d_imageData_put_dirty_rect2" purpose="Check if putImageData() only modifies areas inside the dirty rectangle, using x and y" result="PASS" /><testcase id="2d_imageData_put_dirty_rect_one" purpose="Check if putImageData() only modifies areas inside the dirty rectangle, using width and height" result="PASS" /><testcase id="2d_imageData_put_dirty_zero" purpose="Check if putImageData() with zero-sized dirty rectangle puts nothing" result="PASS" /><testcase id="2d_imageData_put_modified" purpose="Check if putImageData() puts modified image data correctly" result="PASS" /><testcase id="2d_imageData_put_nonfinite" purpose="Check if putImageData() throws TypeError if arguments are not finite" result="PASS" /><testcase id="2d_imageData_put_path" purpose="Check if putImageData() does not affect the current path" result="PASS" /><testcase id="2d_imageData_put_unaffected" purpose="Check if putImageData() is not affected by context state" result="PASS" /><testcase id="2d_imageData_put_unchanged" purpose="Check if putImageData(getImageData(...), ...) has no effect" result="PASS" /><testcase id="2d_linemiter_invalid" purpose="Check if Setting miterLimit to invalid values is ignored" result="PASS" /><testcase id="2d_line_cap_butt" purpose="Check if lineCap 'butt' is rendered correctly" result="PASS" /><testcase id="2d_line_cap_closed" purpose="Check if Line caps are not drawn at the corners of an unclosed rectangle" result="PASS" /><testcase id="2d_line_cap_open" purpose="Check if Line caps are drawn at the corners of an unclosed rectangle" result="PASS" /><testcase id="2d_line_cap_round" purpose="Check if lineCap 'round' is rendered correctly" result="PASS" /><testcase id="2d_line_cap_square" purpose="Check if lineCap 'square' is rendered correctly" result="PASS" /><testcase id="2d_line_cap_valid" purpose="Check if Setting lineCap to valid values works" result="PASS" /><testcase id="2d_line_cross" purpose="Check if the cross line can be displayed correctly" result="PASS" /><testcase id="2d_line_defaults" purpose="Check if user agent can display the line with default sets correctly" result="PASS" /><testcase id="2d_line_join_bevel" purpose="Check if lineJoin 'bevel' is rendered correctly" result="PASS" /><testcase id="2d_line_join_closed" purpose="Check if Line joins are drawn at the corner of a closed rectangle" result="PASS" /><testcase id="2d_line_join_miter" purpose="Check if lineJoin 'miter' is rendered correctly" result="PASS" /><testcase id="2d_line_join_open" purpose="Check if Line joins are not drawn at the corner of an unclosed rectangle" result="PASS" /><testcase id="2d_line_join_parallel" purpose="Check if Line joins are drawn at 180-degree joins" result="PASS" /><testcase id="2d_line_join_round" purpose="Check if lineJoin 'round' is rendered correctly" result="PASS" /><testcase id="2d_line_join_valid" purpose="Check if setting lineJoin to valid values works" result="PASS" /><testcase id="2d_line_miter_acute" purpose="Check if Miter joins are drawn correctly with acute angles" result="PASS" /><testcase id="2d_line_miter_exceeded" purpose="Check if Miter joins are not drawn when the miter limit is exceeded" result="PASS" /><testcase id="2d_line_miter_lineedge" purpose="Check if Miter joins are not drawn when the miter limit is exceeded at the corners of a zero-height rectangle" result="PASS" /><testcase id="2d_line_miter_obtuse" purpose="Check if Miter joins are drawn correctly with obtuse angles" result="PASS" /><testcase id="2d_line_miter_rightangle" purpose="Check if Miter joins are not drawn when the miter limit is exceeded, on exact right angles" result="PASS" /><testcase id="2d_line_miter_valid" purpose="Check if setting miterLimit to valid values works" result="PASS" /><testcase id="2d_line_miter_within" purpose="Check if Miter joins are drawn when the miter limit is not quite exceeded" result="PASS" /><testcase id="2d_line_union" purpose="Check if union is two line" result="PASS" /><testcase id="2d_line_width_basic" purpose="Check if lineWidth can determine the width of line strokes" result="PASS" /><testcase id="2d_line_width_invalid" purpose="Check if setting lineWidth to invalid values is ignored" result="PASS" /><testcase id="2d_line_width_scaledefault" purpose="Check if Default lineWidth strokes are affected by scale transformations" result="PASS" /><testcase id="2d_line_width_transformed" purpose="Check if line stroke widths are affected by scale transformations" result="PASS" /><testcase id="2d_line_width_valid" purpose="Check if setting lineWidth to valid values works" result="PASS" /><testcase id="2d_path_arcTo_2collinear" purpose="Check if arcTo() with all points on a line, and P2 between P0/P1, draws a straight line to P1" result="PASS" /><testcase id="2d_path_arcTo_2zero" purpose="Check if arcTo() with zero radius draws a straight line from P0 to P1, even when all points are collinear" result="PASS" /><testcase id="2d_path_arcTo_coincide_one" purpose="Check if arcTo() has no effect if P0 = P1" result="PASS" /><testcase id="2d_path_arcTo_coincide_tow" purpose="Check if arcTo() draws a straight line to P1 if P1 = P2" result="PASS" /><testcase id="2d_path_arcTo_collinear_one" purpose="Check if arcTo() with all points on a line, and P1 between P0/P2, draws a straight line to P1" result="PASS" /><testcase id="2d_path_arcTo_collinear_three" purpose="Check if arcTo() with all points on a line, and P0 between P1/P2, draws a straight line to P1" result="PASS" /><testcase id="2d_path_arcTo_ensuresubpath" purpose="Check if the first control point is added when there is not any subpath" result="PASS" /><testcase id="2d_path_arcTo_ensuresubpath_radius" purpose="Check if the first control point is added (and nothing is drawn up to it)  when there is no subpath," result="PASS" /><testcase id="2d_path_arcTo_negative" purpose="Check if arcTo() with negative radius throws an exception" result="PASS" /><testcase id="2d_path_arcTo_nonfinite" purpose="Check if arcTo() with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_path_arcTo_scale" purpose="Check if arcTo scales the curve, not just the control points" result="PASS" /><testcase id="2d_path_arcTo_shape_curve_one" purpose="check if arcTo() curves in the right kind of shape" result="PASS" /><testcase id="2d_path_arcTo_shape_curve_two" purpose="Check if the arcTo() method curves in the right kind of shape" result="PASS" /><testcase id="2d_path_arcTo_shape_end" purpose="Check if arcTo() does not draw anything from P1 to P2" result="PASS" /><testcase id="2d_path_arcTo_shape_start" purpose="Check if arcTo() draws a straight line from P0 to P1" result="PASS" /><testcase id="2d_path_arcTo_transformation" purpose="Check if arcTo joins up to the last subpath point correctly" result="PASS" /><testcase id="2d_path_arcTo_zero_one" purpose="Check if arcTo() with zero radius draws a straight line from P0 to P1" result="PASS" /><testcase id="2d_path_arc_1selfintersect" purpose="Check if arc() with lineWidth greater than 2*radius is drawn sensibly" result="PASS" /><testcase id="2d_path_arc_2scale" purpose="Check if Highly scaled arcs are the right shape" result="PASS" /><testcase id="2d_path_arc_2shape" purpose="Check if arc() from 0 to pi draws stuff in the right half" result="PASS" /><testcase id="2d_path_arc_6angle" purpose="Check if arc() draws a full circle when anticlockwise and starts greater than end+2pi" result="PASS" /><testcase id="2d_path_arc_angle_angles" purpose="Check if arc() wraps angles mod 2pi when clockwise and start greater than end+2pi" result="PASS" /><testcase id="2d_path_arc_angle_anticlockwise" purpose="Check if arc() draws pi/2 .. -pi anticlockwise correctly" result="PASS" /><testcase id="2d_path_arc_angle_full_circle" purpose="Check if arc() draws a full circle when clockwise and end is greater than start+2pi" result="PASS" /><testcase id="2d_path_arc_angle_three" purpose="Check if arc() wraps angles mod 2pi when anticlockwise and end greater than start+2pi" result="PASS" /><testcase id="2d_path_arc_angle_two" purpose="Check if arc() draws -3pi/2 .. -pi anticlockwise correctly" result="PASS" /><testcase id="2d_path_arc_default" purpose="Check if the default value of arc() when missing last argument is clockwise" result="PASS" /><testcase id="2d_path_arc_empty" purpose="Check if arc() with an empty path does not draw a straight line to the start point" result="PASS" /><testcase id="2d_path_arc_end" purpose="Check if arc() adds the end point of the arc to the subpath" result="PASS" /><testcase id="2d_path_arc_negative" purpose="Check if arc() with negative radius throws INDEX_SIZE_ERR" result="PASS" /><testcase id="2d_path_arc_nonempty" purpose="Check if arc() with a non-empty path does draw a straight line to the start point" result="PASS" /><testcase id="2d_path_arc_nonfinite" purpose="Check if arc() with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_path_arc_scale_one" purpose="Check if Non-uniformly scaled arcs are the right shape" result="PASS" /><testcase id="2d_path_arc_selfintersect_two" purpose="Check if arc() method with lineWidth greater than 2*radius can draw sensibly" result="PASS" /><testcase id="2d_path_arc_shape1" purpose="Check if arc() from 0 to pi does not draw anything in the wrong half" result="PASS" /><testcase id="2d_path_arc_shape_five" purpose="Check if arc() from 0 to 5pi does not draw crazy things" result="PASS" /><testcase id="2d_path_arc_shape_four" purpose="Check if arc() from 0 to -pi/2 draws stuff in the right quadrant" result="PASS" /><testcase id="2d_path_arc_shape_three" purpose="Check if arc() from 0 to -pi/2 does not draw anything in the wrong quadrant" result="PASS" /><testcase id="2d_path_arc_twopie_four" purpose="Check if arc() draws nothing when end = start + 2pi+e and clockwise" result="PASS" /><testcase id="2d_path_arc_twopie_full_circle" purpose="Check if arc() draws a full circle when end = start + 2pi-e and clockwise" result="PASS" /><testcase id="2d_path_arc_twopie_one" purpose="Check if arc() draws nothing when end = start + 2pi-e and anticlockwise" result="PASS" /><testcase id="2d_path_arc_twopie_three" purpose="Check if arc() draws a full circle when end = start + 2pi+e and anticlockwise" result="PASS" /><testcase id="2d_path_arc_zeroradius" purpose="Check if arc() with zero radius draws a line to the start point" result="PASS" /><testcase id="2d_path_arc_zero_endAngle_clockwise" purpose="Check if arc() draws nothing when startAngle = endAngle and clockwise" result="PASS" /><testcase id="2d_path_arc_zero_one" purpose="Check if arc() draws nothing when startAngle = endAngle and anticlockwise" result="PASS" /><testcase id="2d_path_beginPath" purpose="Check beginPath() method works" result="PASS" /><testcase id="2d_path_bezierCurveTo_basic" purpose="Check if can add the given point to the current subpath" result="PASS" /><testcase id="2d_path_bezierCurveTo_ensuresubpath_one" purpose="Check if the first control point is added (and nothing is drawn up to it)when there is no subpath" result="PASS" /><testcase id="2d_path_bezierCurveTo_ensuresubpath_two" purpose="Check if the first control point is added when there is no subpath" result="PASS" /><testcase id="2d_path_bezierCurveTo_nonfinite" purpose="Check if bezierCurveTo() with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_path_bezierCurveTo_scaled" purpose="Check if bezierCurveTo() method works successfully" result="PASS" /><testcase id="2d_path_bezierCurveTo_shape" purpose="Check bezierCurveTo() method" result="PASS" /><testcase id="2d_path_clip_2winding" purpose="Check if the clip.winding can be displayed correctly" result="PASS" /><testcase id="2d_path_clip_basic_one" purpose="Check if clip() method creates a new clipping region" result="PASS" /><testcase id="2d_path_clip_basic_two" purpose="Check if create a new clipping region by clip() method successfully" result="PASS" /><testcase id="2d_path_clip_empty" purpose="Check if the empty clip can be displayed correctly" result="PASS" /><testcase id="2d_path_clip_intersect" purpose="Check if it can be displayed correctly with clip intersecting" result="PASS" /><testcase id="2d_path_clip_unaffected" purpose="Check if clip is unaffected" result="PASS" /><testcase id="2d_path_clip_winding_one" purpose="Check if the clip.winding can be displayed successfully" result="PASS" /><testcase id="2d_path_closePath_empty" purpose="Check if it can be displayed correctly with closePath empty" result="PASS" /><testcase id="2d_path_closePath_newline" purpose="Check if closePath.newline works" result="PASS" /><testcase id="2d_path_closePath_nextpoint" purpose="Check if linkto nextpoint after closePath" result="PASS" /><testcase id="2d_path_fill_closed_basic" purpose="Check if fill function works" result="PASS" /><testcase id="2d_path_fill_closed_unaffected" purpose="Check if the changed of border's color has no affect on the filled color" result="PASS" /><testcase id="2d_path_fill_overlap" purpose="Check  if fill function overlaps" result="PASS" /><testcase id="2d_path_fill_winding_1subtract" purpose="Check if fill with winding subtract" result="PASS" /><testcase id="2d_path_fill_winding_3subtract" purpose="Check fill with winding subtract" result="PASS" /><testcase id="2d_path_fill_winding_add" purpose="Check  if the user agent can display the winding correctly" result="PASS" /><testcase id="2d_path_fill_winding_subtract_two" purpose="Check if the user agent can display the winding correctly" result="PASS" /><testcase id="2d_path_initial" purpose="Check if the image can be displayed correctly with the initial path" result="PASS" /><testcase id="2d_path_isPointInPath_1basic" purpose="check if whether isPointInPath() detects the point is inside the path or not" result="PASS" /><testcase id="2d_path_isPointInPath_2basic" purpose="Check if isPointInPath() method detects whether the point is inside the path" result="PASS" /><testcase id="2d_path_isPointInPath_arc" purpose="Check if isPointInPath() works on arcs" result="PASS" /><testcase id="2d_path_isPointInPath_bezier" purpose="Check if isPointInPath() works on Bezier curves" result="PASS" /><testcase id="2d_path_isPointInPath_bigarc" purpose="Check if isPointInPath() works on unclosed arcs larger than 2pi" result="PASS" /><testcase id="2d_path_isPointInPath_edge" purpose="Check if isPointInPath() counts points on the path as inside" result="PASS" /><testcase id="2d_path_isPointInPath_empty" purpose="Check if isPointInPath() works when there is no path" result="PASS" /><testcase id="2d_path_isPointInPath_nonfinite" purpose="Check if isPointInPath() returns false for non-finite arguments" result="PASS" /><testcase id="2d_path_isPointInPath_outside" purpose="Check if isPointInPath() works on paths outside the canvas" result="PASS" /><testcase id="2d_path_isPointInPath_subpath" purpose="Check if isPointInPath() uses the current path, not just the subpath" result="PASS" /><testcase id="2d_path_isPointInPath_transform_one" purpose="Check if isPointInPath() method handles transformations correctly" result="PASS" /><testcase id="2d_path_isPointInPath_transform_scale" purpose="Check if isPointInPath() function handles transformations correctly" result="PASS" /><testcase id="2d_path_isPointInPath_transform_two" purpose="Check if isPointInPath() handles transformations correctly" result="PASS" /><testcase id="2d_path_isPointInPath_unclosed" purpose="Check if isPointInPath() works on unclosed subpaths" result="PASS" /><testcase id="2d_path_isPointInPath_winding" purpose="Check if isPointInPath() uses the non-zero winding number rule" result="PASS" /><testcase id="2d_path_lineTo_basic" purpose="Check if image can be displayed correctly with basic setting of lineTo()" result="PASS" /><testcase id="2d_path_lineTo_ensuresubpath_one" purpose="Check if the point is added and nothing is drawn when there is no subpath" result="PASS" /><testcase id="2d_path_lineTo_ensuresubpath_two" purpose="Check if the point is added and used for subsequent drawing when there is no subpath," result="PASS" /><testcase id="2d_path_lineTo_nextpoint" purpose="Check if path.lineTo.nextpoint works" result="PASS" /><testcase id="2d_path_lineTo_nonfinite" purpose="Check if lineTo() with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_path_moveTo_basic" purpose="Check if image can be displayed correctly with basic setting of moveTo()" result="PASS" /><testcase id="2d_path_moveTo_multiple" purpose="Check if image can be displayed correctly with moveTo() multiple setted" result="PASS" /><testcase id="2d_path_moveTo_newsubpath" purpose="Check if image can be displayed correctly with moveTo() newsubpath setted" result="PASS" /><testcase id="2d_path_moveTo_nonfinite" purpose="Check if moveTo() with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_path_quadraticCurveTo_basic" purpose="Check if quadraticCurveTo function works" result="PASS" /><testcase id="2d_path_quadraticCurveTo_ensuresubpath1" purpose="Check if there is no subpath, the first control point is added" result="PASS" /><testcase id="2d_path_quadraticCurveTo_ensuresubpath_two" purpose="Check if  the first control point is added when there is no subpath" result="PASS" /><testcase id="2d_path_quadraticCurveTo_nonfinite" purpose="Check quadraticCurveTo with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_path_quadraticCurveTo_scaled" purpose="Check if the scaled imange can be displayed correctly with quadraticCurveTo(0, -1, 1.2, 1.05)" result="PASS" /><testcase id="2d_path_quadraticCurveTo_shape" purpose="Check if the quadraticCurveTo_shape works" result="PASS" /><testcase id="2d_path_rect_1end" purpose="Check if the value is rect path end" result="PASS" /><testcase id="2d_path_rect_2end" purpose="Check rect with end" result="PASS" /><testcase id="2d_path_rect_basic" purpose="Check if rect function works" result="PASS" /><testcase id="2d_path_rect_closed" purpose="Check  the value of rect_closed" result="PASS" /><testcase id="2d_path_rect_negative" purpose="Check  rect with negative" result="PASS" /><testcase id="2d_path_rect_newsubpath" purpose="Check if the rect can be displayed correctly with newsubpath" result="PASS" /><testcase id="2d_path_rect_nonfinite" purpose="Check if rect with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_path_rect_selfintersect" purpose="Check rect function with lineWidth" result="PASS" /><testcase id="2d_path_rect_width_leight_zero" purpose="Check if the rect with leight, width=0 can be displayed correctly" result="PASS" /><testcase id="2d_path_rect_width_zero" purpose="Check  if the rect with width=0 can be displayed correctly" result="PASS" /><testcase id="2d_path_rect_winding" purpose="Check rect with winding works" result="PASS" /><testcase id="2d_path_rect_zero_height_width" purpose="Check rect zero with height and width works" result="PASS" /><testcase id="2d_path_rect_zero_width_2" purpose="Check  rect function with zero width works" result="PASS" /><testcase id="2d_path_rect_zero_width_6" purpose="Check if the image can be displayed correctly after setting the rect's width=0" result="PASS" /><testcase id="2d_path_rect_zero_width_height" purpose="Check rect function with zero width and height works" result="PASS" /><testcase id="2d_path_stroke_empty" purpose="Check if empty subpaths are not stroked" result="PASS" /><testcase id="2d_path_stroke_overlap" purpose="Check if Stroked subpaths are combined before being drawn" result="PASS" /><testcase id="2d_path_stroke_prune_arc" purpose="Check zero-length line segments from arcTo and arc are removed before stroking" result="PASS" /><testcase id="2d_path_stroke_prune_closed" purpose="Check if Zero-length line segments from closed paths are removed before stroking" result="PASS" /><testcase id="2d_path_stroke_prune_corner" purpose="Check if Zero-leight line segments are removed before stroking with miters" result="PASS" /><testcase id="2d_path_stroke_prune_curve" purpose="Check if Zero-length line segments from quadraticCurveTo and bezierCurveTo are removed before stroking" result="PASS" /><testcase id="2d_path_stroke_prune_line" purpose="Check if Zero-leight line segments from lineTo are removed before stroking" result="PASS" /><testcase id="2d_path_stroke_prune_rect" purpose="Check if Zero-leight line segments from rect and strokeRect are removed before stroking" result="PASS" /><testcase id="2d_path_stroke_scale_one" purpose="Check if Stroke line widths are scaled by the current transformation matrix" result="PASS" /><testcase id="2d_path_stroke_scale_two" purpose="Check if Stroke line widths are scaled successfully by the current transformation matrix" result="PASS" /><testcase id="2d_path_stroke_skew" purpose="Check if strokes lines are skewed by the current transformation matrix" result="PASS" /><testcase id="2d_path_stroke_unaffected" purpose="Check if Stroking starts a new path or subpath" result="PASS" /><testcase id="2d_path_stroke_union" purpose="Check strokes in opposite directions are union, not subtracted" result="PASS" /><testcase id="2d_path_transformation_basic" purpose="Check if the value is transformation basic" result="PASS" /><testcase id="2d_path_transformation_changing" purpose="Check if the transformations are applied while building paths, not drawing" result="PASS" /><testcase id="2d_path_transformation_multiple" purpose="Check if Transformations are applied while building paths, not drawing" result="PASS" /><testcase id="2d_pattern_animated_gif" purpose="Check if createPattern() of an animated GIF draws the first frame" result="PASS" /><testcase id="2d_pattern_basic_canvas" purpose="Check fillStyle with pattern of canvas works" result="PASS" /><testcase id="2d_pattern_basic_image" purpose="Check if fillStyle with image pattern works" result="PASS" /><testcase id="2d_pattern_basic_nocontext" purpose="Check pattern_basic_nocontext" result="PASS" /><testcase id="2d_pattern_basic_type" purpose="Check pattern of canvas" result="PASS" /><testcase id="2d_pattern_basic_zerocanvas" purpose="Check if the canvas can be displayed correctly with 'pattern' width=0/leight=0/width=leight=0" result="PASS" /><testcase id="2d_pattern_crosscanvas" purpose="Check if crosscanvas pattern can be displayed correctly" result="PASS" /><testcase id="2d_pattern_image_undefined" purpose="Check if the undefined image can be displayed correctly" result="PASS" /><testcase id="2d_pattern_modify_canvas1" purpose="Check if it is pattern modify canvas" result="PASS" /><testcase id="2d_pattern_modify_canvas_two" purpose="Check if the canvas can be displayed correctly after modified canvas" result="PASS" /><testcase id="2d_pattern_modify_image1" purpose="Check modify pattern 'no-repeat'" result="PASS" /><testcase id="2d_pattern_modify_image_two" purpose="Check if the image can be displayed correctly after modified image" result="PASS" /><testcase id="2d_pattern_paint_norepeat_basic" purpose="Check if fillStyle with paint pattern 'no-repeat' works" result="PASS" /><testcase id="2d_pattern_paint_norepeat_coord2" purpose="Check if fillStyle function with pattern of 'no-repeat' works" result="PASS" /><testcase id="2d_pattern_paint_norepeat_coord_one" purpose="Check if the image can be displayed successfully with norepeat horizontal and vertical" result="PASS" /><testcase id="2d_pattern_paint_norepeat_coord_three" purpose="Check if the image can be displayed correctly with norepeat horizontal and vertical" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="2d_pattern_paint_norepeat_outside" purpose="Check if paint pattern with 'no-repeat' works" result="PASS" /><testcase id="2d_pattern_paint_orientation_canvas" purpose="Check if Canvas patterns do not get flipped when painted" result="PASS" /><testcase id="2d_pattern_paint_orientation_image" purpose="Check if Image patterns do not get flipped when painted" result="PASS" /><testcase id="2d_pattern_paint_repeatx_basic" purpose="Check if the imange can be displayed correctly with createPattern(img, 'repeat-x')" result="PASS" /><testcase id="2d_pattern_paint_repeatx_coord1" purpose="Check fillStyle function with pattern" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="2d_pattern_paint_repeatx_outside" purpose="Check if the image can be displayed correctly when this item is set to repeatx.outside" result="PASS" /><testcase id="2d_pattern_paint_repeaty_basic" purpose="chek if the pattern can be diaplayed correctly when repeating vertical only" result="PASS" /><testcase id="2d_pattern_paint_repeaty_coord_one" purpose="Check if the image can be displayed correctly with repeating vertical" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="2d_pattern_paint_repeaty_outside" purpose="Check if the image can be displayed correctly when repeaty.outside is set" result="PASS" /><testcase id="2d_pattern_paint_repeat_basic" purpose="Check if the image can be displayed correctly after repeatting the image" result="PASS" /><testcase id="2d_pattern_paint_repeat_coord1" purpose="Check if the image can be displayed after repeaded both x and y" result="PASS" /><testcase id="2d_pattern_paint_repeat_coord2" purpose="Check fillStyle pattern with 'repeat'" result="PASS" /><testcase id="2d_pattern_paint_repeat_coord_three" purpose="Check if the image can be displayed successfully after repeaded both x and y" result="PASS" /><testcase id="2d_pattern_paint_repeat_outside" purpose="Check if the image can be displayed correctly after repeating the image outside of the image" result="PASS" /><testcase id="2d_pattern_repeat_case" purpose="Check if createPattern function with 'Repeat' works" result="PASS" /><testcase id="2d_pattern_repeat_empty" purpose="Check if the image can be displayed correcly after repeatting an empty pattern" result="PASS" /><testcase id="2d_pattern_repeat_null" purpose="Check if the image can be displayed correcly after repeatting a null pattern" result="PASS" /><testcase id="2d_pattern_repeat_undefined" purpose="Check if createPattern with undefined works" result="PASS" /><testcase id="2d_pattern_repeat_unrecognised" purpose="Check if the image pattern can be displayed correclty after repeating unrecognized image" result="PASS" /><testcase id="2d_shadow_2alpha" purpose="Check if shadow colour alpha components are used" result="PASS" /><testcase id="2d_shadow_2transform" purpose="Check if shadow offsets are not affected by transformations" result="PASS" /><testcase id="2d_shadow_alpha_five" purpose="Check if Shadows of shapes with alpha components are drawn correctly" result="PASS" /><testcase id="2d_shadow_alpha_globalAlpha" purpose="Check if Shadows with alpha components are correctly affected by globalAlpha" result="PASS" /><testcase id="2d_shadow_alpha_one" purpose="Check if Shadow colour alpha components are used successfully" result="PASS" /><testcase id="2d_shadow_alpha_three" purpose="Check if Shadows are affected by globalAlpha" result="PASS" /><testcase id="2d_shadow_attributes_shadowBlur_initial" purpose="Check if shadowBlur with shadow attributes works" result="PASS" /><testcase id="2d_shadow_attributes_shadowBlur_invalid" purpose="Check  invalid shadowBlur of shadow attributes works" result="PASS" /><testcase id="2d_shadow_attributes_shadowColor_initial" purpose="Check if the image can be displayed correclty after setting an initial shadow color" result="PASS" /><testcase id="2d_shadow_attributes_shadowColor_invalid" purpose="Check if the image can be displayed correclty after setting an invalid shadow color" result="PASS" /><testcase id="2d_shadow_attributes_shadowColor_valid" purpose="Check if the image can be displayed correctly with valid shadowColor" result="PASS" /><testcase id="2d_shadow_attributes_shadowOffset_initial" purpose="Check if the shadow can be displayed correctly as shadowOffset=initial values" result="PASS" /><testcase id="2d_shadow_attributes_shadowOffset_invalid" purpose="Check invalid shadowOffset of shadow attributes" result="PASS" /><testcase id="2d_shadow_attributes_shadowOffset_valid" purpose="Check if the shadow can be displayed correctly as shadowOffset=valid values" result="PASS" /><testcase id="2d_shadow_blur_high" purpose="check if Shadows look correct for large blurs" result="PASS" /><testcase id="2d_shadow_canvas_2transparent" purpose="Check if shadows are not drawn for transparent parts of canvases" result="PASS" /><testcase id="2d_shadow_canvas_alpha" purpose="Check if Shadows are drawn correctly for partially-transparent canvases" result="PASS" /><testcase id="2d_shadow_canvas_basic" purpose="Check if Shadows are drawn for canvases" result="PASS" /><testcase id="2d_shadow_canvas_transparent_canvases" purpose="Check if Shadows are drawn for transparent canvases" result="PASS" /><testcase id="2d_shadow_clip_1" purpose="Check shadows of clipped shapes are still drawn within the clipping region" result="PASS" /><testcase id="2d_shadow_clip_three" purpose="Check if Shadows of clipped shapes are still drawn within the clipping region" result="PASS" /><testcase id="2d_shadow_clip_two" purpose="Check if Shadows are not drawn outside the clipping region" result="PASS" /><testcase id="2d_shadow_composite_destination_out" purpose="Check if areas outside shadows are drawn correctly with destination-out" result="PASS" /><testcase id="2d_shadow_composite_one" purpose="Check if Shadows are drawn using globalCompositeOperation" result="PASS" /><testcase id="2d_shadow_composite_two" purpose="Check if Shadows are drawn by using globalCompositeOperation" result="PASS" /><testcase id="2d_shadow_enable_blur" purpose="Check that shadows are drawn if shadowBlur is set" result="PASS" /><testcase id="2d_shadow_enable_off" purpose="Check if shadows are not drawn when only shadowColor is set" result="PASS" /><testcase id="2d_shadow_enable_off_two" purpose="Check if Shadows are not drawn when only the shadowColor is set" result="PASS" /><testcase id="2d_shadow_enable_x" purpose="Check that Shadows are drawn if shadowOffsetX is set" result="PASS" /><testcase id="2d_shadow_enable_y" purpose="Check if Shadows are drawn when shadowOffsetY is set" result="PASS" /><testcase id="2d_shadow_gradient_alpha" purpose="Check if Shadows are drawn correctly for partially-transparent gradient fills" result="PASS" /><testcase id="2d_shadow_gradient_basic" purpose="Check shadows are drawn for gradient fills" result="PASS" /><testcase id="2d_shadow_gradient_transparent_one" purpose="Check if Shadows are not drawn for transparent gradient fills" result="PASS" /><testcase id="2d_shadow_gradient_transparent_two" purpose="Check if Shadows are not drawn for transparent parts of gradient fills" result="PASS" /><testcase id="2d_shadow_image_1transparent" purpose="Check shadows are not drawn for transparent images" result="PASS" /><testcase id="2d_shadow_image_alpha" purpose="Check if Shadows are drawn correctly for partially-transparent images" result="PASS" /><testcase id="2d_shadow_image_basic" purpose="Check if Shadows are drawn for images" result="PASS" /><testcase id="2d_shadow_image_scale" purpose="Check shadows are drawn correctly for scaled images" result="PASS" /><testcase id="2d_shadow_image_section" purpose="Check if Shadows are not drawn for areas outside image source rectangles" result="PASS" /><testcase id="2d_shadow_image_transparent_part_of_image" purpose="Check  if Shadows are not drawn for transparent parts of images" result="PASS" /><testcase id="2d_shadow_offset_negativeX" purpose="Check shadows can be offset with negative x" result="PASS" /><testcase id="2d_shadow_offset_negativeY" purpose="Check  if Shadows can be offset with negative y" result="PASS" /><testcase id="2d_shadow_offset_positiveX" purpose="Check shadows can be offset with positive x" result="PASS" /><testcase id="2d_shadow_offset_positiveY" purpose="Check if Shadows can be offset with positive y" result="PASS" /><testcase id="2d_shadow_outside" purpose="Check if Shadows of shapes outside the visible area can be offset onto the visible area" result="PASS" /><testcase id="2d_shadow_pattern_alpha" purpose="Check if Shadows are drawn correctly for partially-transparent fill patterns" result="PASS" /><testcase id="2d_shadow_pattern_basic" purpose="Check if Shadows are drawn for filling patterns" result="PASS" /><testcase id="2d_shadow_pattern_transparent_one" purpose="Check if Shadows are not drawn for transparent fill patterns" result="PASS" /><testcase id="2d_shadow_pattern_transparent_two" purpose="Check if Shadows are not drawn for transparent parts of fill patterns" result="PASS" /><testcase id="2d_shadow_stroke_1cap" purpose="Check if shadows are not drawn for areas outside stroke caps" result="PASS" /><testcase id="2d_shadow_stroke_2cap" purpose="Check if shadows are drawn for stroke caps" result="PASS" /><testcase id="2d_shadow_stroke_basic" purpose="Check if Shadows are drawn for strokes" result="PASS" /><testcase id="2d_shadow_stroke_join" purpose="Check if Shadows drawn for stroke joins can be displayed correctly" result="PASS" /><testcase id="2d_shadow_stroke_join_one" purpose="Check if Shadows are not drawn for areas outside stroke joins" result="PASS" /><testcase id="2d_shadow_stroke_join_three" purpose="Check if Shadows are drawn for stroke joins respecting miter limit" result="PASS" /><testcase id="2d_shadow_transform_one" purpose="Check if Shadows take account of transformations" result="PASS" /><testcase id="2d_state_saverestore_bitmap" purpose="Check if save()/restore() affect the current bitmap" result="PASS" /><testcase id="2d_state_saverestore_clip" purpose="Check if save()/restore() method affects the clipping path" result="PASS" /><testcase id="2d_state_saverestore_font" purpose="Check if save()/restore() method works for font" result="PASS" /><testcase id="2d_state_saverestore_globalCompositeOperation" purpose="Check if save()/restore() method works for globalCompositeOperation" result="PASS" /><testcase id="2d_state_saverestore_lineCap" purpose="Check if save()/restore() method works for lineCap" result="PASS" /><testcase id="2d_state_saverestore_lineJoin" purpose="Check if save()/restore() method works for lineJoin" result="PASS" /><testcase id="2d_state_saverestore_linewidth" purpose="Check if save()/restore() method works for lineWidth" result="PASS" /><testcase id="2d_state_saverestore_miterLimit" purpose="Check if save()/restore() method works for miterLimit" result="PASS" /><testcase id="2d_state_saverestore_path" purpose="Check if save()/restore() method does not affect the current path" result="PASS" /><testcase id="2d_state_saverestore_shadowBlur" purpose="Check if save()/restore() method works for shadowBlur" result="PASS" /><testcase id="2d_state_saverestore_shadowColor" purpose="Check if save()/restore() method works for shadowColor" result="PASS" /><testcase id="2d_state_saverestore_shadowOffsetY" purpose="Check if save()/restore() method works for shadowOffsetY" result="PASS" /><testcase id="2d_state_saverestore_stack" purpose="Check if save()/restore() method can be nested as a stack" result="PASS" /><testcase id="2d_state_saverestore_stackdepth" purpose="Check if save()/restore() method stack depth is not unreasonably limited" result="PASS" /><testcase id="2d_state_saverestore_strokeStyle" purpose="Check if save()/restore() method works for strokeStyle" result="PASS" /><testcase id="2d_state_saverestore_textAlign" purpose="Check if save()/restore() method works for textAlign" result="PASS" /><testcase id="2d_state_saverestore_textBaseline" purpose="Check if save()/restore() method works for textBaseline" result="PASS" /><testcase id="2d_state_saverestore_transformation" purpose="Check if save()/restore() method affects the current transformation matrix" result="PASS" /><testcase id="2d_state_saverestore_underflow" purpose="Check if restore() with an empty stack has no effect" result="PASS" /><testcase id="2d_strokeRect_2zero" purpose="Check if strokeRect() method of 0x0 pixels draws nothing, including caps and joins" result="PASS" /><testcase id="2d_strokeRect_5zero" purpose="Check if strokeRect() method of Nx0 pixels draws a closed line with joins" result="PASS" /><testcase id="2d_strokeRect_basic" purpose="Check if strokeRect() method works" result="PASS" /><testcase id="2d_strokeRect_clip" purpose="Check if strokeRect() method is affected by clipping regions" result="PASS" /><testcase id="2d_strokeRect_globalalpha" purpose="Check if strokeRect() method is affected by globalAlpha" result="PASS" /><testcase id="2d_strokeRect_globalcomposite" purpose="Check if strokeRect() method is not affected by globalCompositeOperation" result="PASS" /><testcase id="2d_strokeRect_negative" purpose="Check if strokeRect() method of negative sizes works" result="PASS" /><testcase id="2d_strokeRect_nonfinite" purpose="Check if strokeRect() method with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_strokeRect_path" purpose="Check if strokeRect() method does not affect the current path" result="PASS" /><testcase id="2d_strokeRect_shadow" purpose="Check if strokeRect() method draws shadows" result="PASS" /><testcase id="2d_strokeRect_transform" purpose="Check if strokeRect() method is affected by transforms" result="PASS" /><testcase id="2d_strokeRect_zero_one" purpose="Check if strokeRect() method of 0x0 pixels draws nothing" result="PASS" /><testcase id="2d_strokeRect_zero_straight_line" purpose="Check if strokeRect() method of Nx0 pixels draws a straight line" result="PASS" /><testcase id="2d_strokeStyle_default" purpose="Check if the image can be displayed correctly with strokeStyle setted as default" result="PASS" /><testcase id="2d_text_align_default" purpose="Check if text is align by default" result="PASS" /><testcase id="2d_text_align_valid" purpose="Check if the text can be displayed correctly as set the align a valid value" result="PASS" /><testcase id="2d_text_baseline_default" purpose="Check if the caseline can be displayed correctly with default settings" result="PASS" /><testcase id="2d_text_baseline_valid" purpose="Check if baseline with valid value" result="PASS" /><testcase id="2d_text_draw_align_center" purpose="Check if textAlign center is in the center of the em squares (not the bounding box)" result="PASS" /><testcase id="2d_text_draw_align_end_ltr" purpose="Check if the textAlign end with ltr is the right edge" result="PASS" /><testcase id="2d_text_draw_align_end_rtl" purpose="Check if textAlign end with rtl is the left edge" result="PASS" /><testcase id="2d_text_draw_align_left" purpose="Check if textAlign left is on the left of the first em square" result="PASS" /><testcase id="2d_text_draw_align_right" purpose="Check if textAlign right is on the right of the last em square (not the bounding box)" result="PASS" /><testcase id="2d_text_draw_align_start_ltr" purpose="Check if textAlign start with ltr is the left edge" result="PASS" /><testcase id="2d_text_draw_align_start_rtl" purpose="Check if textAlign start with rtl is the right edge" result="PASS" /><testcase id="2d_text_draw_baseline_alphabetic" purpose="Check if the text can be displayed correctly with textBaseline = 'alphabetic'" result="PASS" /><testcase id="2d_text_draw_fill_basic" purpose="Check if the fillText method  can draw filled text" result="PASS" /><testcase id="2d_text_draw_fill_maxWidth_bound" purpose="Check if fillText method handles maxWidth based on line size, not bounding box size" result="PASS" /><testcase id="2d_text_draw_fill_maxWidth_fontface" purpose="Check if fillText method works on @font-face fonts" result="PASS" /><testcase id="2d_text_draw_fill_maxWidth_large" purpose="Check if fillText function can handle maxWidth correctly" result="PASS" /><testcase id="2d_text_draw_fill_maxWidth_small" purpose="Check if fillText method can handle maxWidth correctly when it is set to 'small'." result="PASS" /><testcase id="2d_text_draw_fill_maxWidth_zero" purpose="Check if fillText method can handle maxWidth correctly when it is set to 0." result="PASS" /><testcase id="2d_text_draw_fill_unaffected" purpose="Check if fillText method does not start a new path or subpath" result="PASS" /><testcase id="2d_text_draw_fontface" purpose="Check if the text can be displayed correctly after setting text.draw.fontface" result="PASS" /><testcase id="2d_text_draw_fontface_repeat" purpose="Check if draw with the fontface" result="PASS" /><testcase id="2d_text_draw_kern_consistent" purpose="Check if the stroked and filled texts have same kerning exactly." result="PASS" /><testcase id="2d_text_draw_space_basic" purpose="Check if U+0020 is rendered the correct size (1em wide)" result="PASS" /><testcase id="2d_text_draw_space_collapse_nonspace" purpose="Check if Non-space characters are not converted to U+0020 and collapsed" result="PASS" /><testcase id="2d_text_draw_stroke_basic" purpose="Check if the strokeText method can draw stroked text" result="PASS" /><testcase id="2d_text_draw_stroke_unaffected" purpose="Check if strokeText method does not start a new path or subpath" result="PASS" /><testcase id="2d_text_font_default" purpose="Check if the text can be displayed correctly with font default settings" result="PASS" /><testcase id="2d_text_font_parse_basic" purpose="Check if the text can be displayed correctly as setting font as basic values" result="PASS" /><testcase id="2d_text_font_parse_complex" purpose="Check if the text can be displayed correctly with complex font settings" result="PASS" /><testcase id="2d_text_font_parse_invalid" purpose="Check if text can be displayed correctly when setting font=invalid values" result="PASS" /><testcase id="2d_text_font_parse_size_percentage" purpose="Check if font size parses percentage" result="PASS" /><testcase id="2d_text_font_parse_size_percentage_default" purpose="Check if font method parse size percentage by default" result="PASS" /><testcase id="2d_text_font_parse_system" purpose="Check if system fonts is computed to explicit values" result="PASS" /><testcase id="2d_text_measure_width_basic" purpose="Check if the image can be displayed correctly with measureText.width setted as basic values" result="PASS" /><testcase id="2d_text_measure_width_empty" purpose="Check if empty string has zero width" result="PASS" /><testcase id="2d_transformation_order" purpose="Check if transformations are applied in the right order" result="PASS" /><testcase id="2d_transformation_rotate_direction" purpose="Check if the image can be displayed correctly with the rotate()-clockwise" result="PASS" /><testcase id="2d_transformation_rotate_nonfinite" purpose="Check if rotate() with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_transformation_rotate_radians" purpose="Check if pic can be rotated correctly" result="PASS" /><testcase id="2d_transformation_rotate_wrap" purpose="Check if rotate() wraps large positive values correctly" result="PASS" /><testcase id="2d_transformation_rotate_wrapnegative" purpose="Check if rotate() wraps large negative values correctly" result="PASS" /><testcase id="2d_transformation_rotate_zero" purpose="Check if rotate() by 0 does nothing" result="PASS" /><testcase id="2d_transformation_scale_basic" purpose="Check if scale method works" result="PASS" /><testcase id="2d_transformation_scale_large" purpose="Check if scale() with large scale factors works" result="PASS" /><testcase id="2d_transformation_scale_multiple" purpose="Check if user agent supports Multiple scale()s combined" result="PASS" /><testcase id="2d_transformation_scale_negative" purpose="Check if scale method with negative scale factors works" result="PASS" /><testcase id="2d_transformation_scale_nonfinite" purpose="Check if if scale() with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_transformation_setTransform_multiple" purpose="Check if setTransform() with multiple values can be displayed correctly" result="PASS" /><testcase id="2d_transformation_setTransform_nonfinite" purpose="Check if setTransform() with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_transformation_setTransform_skewed" purpose="Check if setTransform method works" result="PASS" /><testcase id="2d_transformation_transform_identity" purpose="Check if transform() with the identity matrix does nothing" result="PASS" /><testcase id="2d_transformation_transform_multiply" purpose="Check if transform() multiplies the CTM" result="PASS" /><testcase id="2d_transformation_transform_nonfinite" purpose="Check if transform function with Infinity/NaN is ignored" result="PASS" /><testcase id="2d_transformation_transform_skewed" purpose="Check if transform function with skewy matrix transforms correctly" result="PASS" /><testcase id="2d_transformation_translate_basic" purpose="Check if translate method works" result="PASS" /><testcase id="2d_transformation_translate_nonfinite" purpose="Check if translate with Infinity/NaN is ignored" result="PASS" /><testcase id="canvas2d_arcTo_exist" purpose="Check if canvas2d.arcTo exists" result="PASS" /><testcase id="canvas2d_arc_exist" purpose="Check if canvas2d.arc exists" result="PASS" /><testcase id="canvas2d_beginPath_exist" purpose="Check if canvas2d.beginPath exists" result="PASS" /><testcase id="canvas2d_bezierCurveTo_exist" purpose="Check if canvas2d.bezierCurveTo exists" result="PASS" /><testcase id="canvas2d_canvas_exist" purpose="Check if canvas2d.canvas exists" result="PASS" /><testcase id="canvas2d_clearRect_exist" purpose="Check if canvas2d.clearRect exists" result="PASS" /><testcase id="canvas2d_clip_exist" purpose="Check if canvas2d.clip exists" result="PASS" /><testcase id="canvas2d_closePath_exist" purpose="Check if canvas2d.closePath exists" result="PASS" /><testcase id="canvas2d_createLinearGradient_exist" purpose="Check if canvas2d.createLinearGradient exists" result="PASS" /><testcase id="canvas2d_createPattern_exist" purpose="Check if canvas2d.creatPattern exists" result="PASS" /><testcase id="canvas2d_createRadialGradient_exist" purpose="Check if canvas2d.createRadialGradient exists" result="PASS" /><testcase id="canvas2d_drawImage_exist" purpose="Check if canvas2d.drawImage exists" result="PASS" /><testcase id="canvas2d_fillRect_exist" purpose="Check if canvas2d.fillRect exists" result="PASS" /><testcase id="canvas2d_fillStyle_exist" purpose="Check if canvas2d.FillStyle exists" result="PASS" /><testcase id="canvas2d_fillText_exist" purpose="Check if canvas2d.fillText exists" result="PASS" /><testcase id="canvas2d_fill_exist" purpose="Check if canvas2d.fill exists" result="PASS" /><testcase id="canvas2d_font_exist" purpose="Check if canvas2d.font exists" result="PASS" /><testcase id="canvas2d_getImageData_exist" purpose="Check if canvas2d.getImageData exists" result="PASS" /><testcase id="canvas2d_globalAlpha_exist" purpose="Check if canvas2d.globalAlpha exists" result="PASS" /><testcase id="canvas2d_globalCompositeOperation_exist" purpose="Check if canvas2d.globalCompositeOperation exists" result="PASS" /><testcase id="canvas2d_globalCompositeOperation_invalid_value" purpose="Check if globalCompositeOperation is set to a invalid value,then the value must be ignored" result="PASS" /><testcase id="canvas2d_isPointInPath_exist" purpose="Check if canvas2d.isPointInPath exists" result="PASS" /><testcase id="canvas2d_lineCap_exist" purpose="Check if canvas2d.lineCap exists" result="PASS" /><testcase id="canvas2d_lineJoin_exist" purpose="Check if canvas2d.lineJoin exists" result="PASS" /><testcase id="canvas2d_lineTo_exist" purpose="Check if canvas2d.lineTo exists" result="PASS" /><testcase id="canvas2d_lineWidth_default_value" purpose="Check if the default value of canvas2d.lineWidth is 1" result="PASS" /><testcase id="canvas2d_lineWidth_exist" purpose="Check if canvas2d.lineWidth exists" result="PASS" /><testcase id="canvas2d_measureText_exist" purpose="Check if canvas2d.measureText exists" result="PASS" /><testcase id="canvas2d_miterLimit_exist" purpose="Check if canvas2d.miterLimit exists" result="PASS" /><testcase id="canvas2d_moveTo_exist" purpose="Check if canvas2d.moveTo exists" result="PASS" /><testcase id="canvas2d_putImageData_exist" purpose="Check if canvas2d.putImageData exists" result="PASS" /><testcase id="canvas2d_quadraticCurveTo_exist" purpose="Check if canvas2d.quadraticCurveTo exists" result="PASS" /><testcase id="canvas2d_rect_exist" purpose="Check if canvas2d.rect exists" result="PASS" /><testcase id="canvas2d_restore_exist" purpose="Check if canvas2d.restore exists" result="PASS" /><testcase id="canvas2d_rotate_exist" purpose="Check if canvas2d.rotate exists" result="PASS" /><testcase id="canvas2d_save_exist" purpose="Check if canvas2d.save exists" result="PASS" /><testcase id="canvas2d_scale_exist" purpose="Check if canvas2d.scale exists" result="PASS" /><testcase id="canvas2d_setTransform_exist" purpose="Check if canvas2d.setTransform exists" result="PASS" /><testcase id="canvas2d_shadowBlur_exist" purpose="Check if canvas2d.shadowBlur exists" result="PASS" /><testcase id="canvas2d_shadowColor_exist" purpose="Check if canvas2d.shadowColor exists" result="PASS" /><testcase id="canvas2d_shadowOffsetX_exist" purpose="Check if canvas2d.shadowOffsetX exists" result="PASS" /><testcase id="canvas2d_shadowOffsetY_exist" purpose="Check if canvas2d.shadowOffsetY exists" result="PASS" /><testcase id="canvas2d_strokeRect_exist" purpose="Check if canvas2d.strokeRect exists" result="PASS" /><testcase id="canvas2d_strokeStyle_exist" purpose="Check if canvas2d.strokeStyle exists" result="PASS" /><testcase id="canvas2d_strokeText_exist" purpose="Check if canvas2d.strokeText exists" result="PASS" /><testcase id="canvas2d_stroke_exist" purpose="Check if canvas2d.stroke exists" result="PASS" /><testcase id="canvas2d_textAlign_exist" purpose="Check if canvas2d.textAlign exists" result="PASS" /><testcase id="canvas2d_textBaseline_exist" purpose="Check if canvas2d.textBaseline exists" result="PASS" /><testcase id="canvas2d_transform_exist" purpose="Check if canvas2d.transform exists" result="PASS" /><testcase id="canvas2d_translate_exist" purpose="Check if canvas2d.translate exists" result="PASS" /><testcase id="canvasgradient_addColorStop_exsit" purpose="Check if canvasgradient.addColorStop is exists" result="PASS" /><testcase id="canvasgradient_addColorStop_INDEX_SIZE_ERR" purpose="Check if the offset is less than 0, greater than 1, infinite, or NaN, then an INDEX_SIZE_ERR exception must be raised" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3578 XWALK-3578]]</testcase><testcase id="canvas_complexshapes_arcto_001" purpose="Check the arcTo method of CanvasRenderingContext2D interface." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="canvas_complexshapes_beziercurveto_001" purpose="Check the bezierCurveTo method of CanvasRenderingContext2D interface." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="canvas_complexshapes_ispointInpath_001" purpose="Check the isPointInPath attribute of CanvasRenderingContext2D interface." result="PASS" /><testcase id="canvas_compositing_globalcompositeoperation_001" purpose="Check the globalCompositeOperation attribute of CanvasRenderingContext2D interface." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="canvas_ellipse_exist" purpose="Check if the method ellipse exists" result="PASS" /><testcase id="canvas_getContext_type" purpose="Check if the type of canvas.getContext('2d') is CanvasRenderingContext2D" result="PASS" /><testcase id="canvas_globalCompositeOperation_modes" purpose="Check if the canvas supports the blending modes" result="PASS" /><testcase id="canvas_height_exist" purpose="Check if canvas.height exists" result="PASS" /><testcase id="canvas_height_new_value" purpose="Check if canvas.height is set,the bitmap and any associated contexts must be cleared back to their initial state" result="PASS" /><testcase id="canvas_height_reflect_value" purpose="Check if canvas.height get the height value" result="PASS" /><testcase id="canvas_height_type" purpose="Check if the type of canvas.height is 'number'" result="PASS" /><testcase id="canvas_linestyles_linecap_001" purpose="Check if the square value of lineCap means that a rectangle with the length of the line width and the width of half the line width, placed flat against the edge perpendicular to the direction of the line, must be added at the end of each line." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="canvas_setLineDash_exist" purpose="Check if the method setLineDash exists" result="PASS" /><testcase id="canvas_state_restore_001" purpose="Check the restore method of CanvasRenderingContext2D interface." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="canvas_toDataURL_exist" purpose="Check if canvas.toDataURL exists" result="PASS" /><testcase id="canvas_toDataURL_jpeg" purpose="Check if the toDataURL with image/jpeg returns a jpeg" result="PASS" /><testcase id="canvas_toDataURL_type" purpose="Check if the type of canvas.toDataURL is 'function'" result="PASS" /><testcase id="canvas_transformations_scale_001" purpose="Check the scale method of CanvasRenderingContext2D interface." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="canvas_width_exist" purpose="Check if canvas.width exists" result="PASS" /><testcase id="canvas_width_new_value" purpose="Check if canvas.width is set,the bitmap and any associated contexts must be cleared back to their initial state" result="PASS" /><testcase id="canvas_width_reflect_value" purpose="Check if canvas.width get the width value" result="PASS" /><testcase id="canvas_width_type" purpose="Check if the type of canvas.width is 'number'" result="PASS" /><testcase id="context.casesensitive" purpose="Check if the value is context.casesensitive" result="PASS" /><testcase id="context.emptystring" purpose="Check if the value is context.emptystring" result="PASS" /><testcase id="context.unrecognised.badname" purpose="Check if the value is context.unrecognised.badname" result="PASS" /><testcase id="context.unrecognised.badsuffix" purpose="Check if the value is context.unrecognised.badsuffix" result="PASS" /><testcase id="context.unrecognised.nullsuffix" purpose="Check if the value is context.unrecognised.nullsuffix" result="PASS" /><testcase id="context.unrecognised.unicode" purpose="Check if the value is context.unrecognised.unicode" result="PASS" /><testcase id="fallback.basic" purpose="Check if the value is fallback.basic" result="PASS" /><testcase id="fallback.multiple" purpose="Check if the value is fallback.multiple" result="PASS" /><testcase id="fallback.nested" purpose="Check if the value is fallback.nested" result="PASS" /><testcase id="imagedata_data_exist" purpose="Check if imagedata.data exists" result="PASS" /><testcase id="imagedata_height_100px" purpose="Check if the value of imagedata.height's is 100px" result="PASS" /><testcase id="imagedata_height_exist" purpose="Check if imagedata.height exists" result="PASS" /><testcase id="imagedata_width_200px" purpose="Check if the value of imagedata.width is 200px" result="PASS" /><testcase id="imagedata_width_exist" purpose="Check if imagedata.width exists" result="PASS" /><testcase id="initial.colour" purpose="Check if the value is initial.colour" result="PASS" /><testcase id="initial.reset.2dstate" purpose="Check the value of initial.reset.2dstate" result="PASS" /><testcase id="initial.reset.clip" purpose="Check the value of initial.reset.clip" result="PASS" /><testcase id="initial.reset.different" purpose="Check the value of initial.reset.different" result="PASS" /><testcase id="initial.reset.gradient" purpose="Check the value of initial.reset.gradient" result="PASS" /><testcase id="initial.reset.path" purpose="Check the value of initial.reset.path" result="PASS" /><testcase id="initial.reset.pattern" purpose="Check the value of initial.reset.pattern" result="PASS" /><testcase id="initial.reset.same" purpose="Check the value of initial.reset.same" result="PASS" /><testcase id="initial.reset.transform" purpose="Check the value of initial.reset.transform" result="PASS" /><testcase id="security.dataURI" purpose="Check if URIs is not counted as different-origin, and do not taint the canvas" result="PASS" /><testcase id="security.drawImage.canvas" purpose="Check if drawImage of unclean canvas makes the canvas origin-unclean" result="PASS" /><testcase id="security.drawImage.image" purpose="Check if drawImage of different-origin image makes the canvas origin-unclean" result="PASS" /><testcase id="security.pattern.canvas.fillStyle" purpose="Check if setting fillStyle to a pattern of an unclean canvas makes the canvas origin-unclean" result="PASS" /><testcase id="security.pattern.canvas.strokeStyle" purpose="Check if setting strokeStyle to a pattern of an unclean canvas makes the canvas origin-unclean" result="PASS" /><testcase id="security.pattern.canvas.timing" purpose="Check if pattern safety depends on whether the source was origin-clean, not on whether it is still clean" result="PASS" /><testcase id="security.pattern.create" purpose="Check if creating an unclean pattern does not make the canvas origin-unclean" result="PASS" /><testcase id="security.pattern.cross" purpose="Check if using an unclean pattern makes the target canvas origin-unclean, not the pattern canvas" result="PASS" /><testcase id="security.pattern.image.fillStyle" purpose="Check if setting fillStyle to a pattern of a different-origin image makes the canvas origin-unclean" result="PASS" /><testcase id="security.pattern.image.strokeStyle" purpose="Check if setting strokeStyle to a pattern of a different-origin image makes the canvas origin-unclean" result="PASS" /><testcase id="security.reset" purpose="Check if resetting the canvas state does not reset the origin-clean flag" result="PASS" /><testcase id="size.attributes.default" purpose="Check if it is default width/height when attributes are missing" result="PASS" /><testcase id="size.attributes.get" purpose="Check if can get width/height IDL/content attributes" result="PASS" /><testcase id="size.attributes.idl" purpose="Check if can get/set width/height IDL attributes" result="PASS" /><testcase id="size.attributes.idl.set.zero" purpose="Check if width/height IDL attributes can be set to 0" result="PASS" /><testcase id="size.attributes.parse.decimal" purpose="Check if width='100.999' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.em" purpose="Check if width='100em' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.empty.html" purpose="Check if width='' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.exp" purpose="Check if width='100e1' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.hex" purpose="Check if width='0x100' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.junk" purpose="Check if width='#!?' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.minus" purpose="Check if width='-100' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.octal" purpose="Check if width='0100' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.onlyspace" purpose="Check if width='  ' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.percent" purpose="Check if width='100%' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.plus" purpose="Check if width='+100' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.space" purpose="Check if the width with space can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.trailingjunk" purpose="Check if width='100#!?' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.whitespace" purpose="Check if the width with widthspace can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.parse.zero" purpose="Check if width='0' can be set as a canvas control value" result="PASS" /><testcase id="size.attributes.reflect.setcontent" purpose="Check if setting content attributes updates IDL and content attributes" result="PASS" /><testcase id="size.attributes.reflect.setidl" purpose="Check if setting IDL attributes updates IDL and content attributes" result="PASS" /><testcase id="size.attributes.reflect.setidlzero" purpose="Check if setting IDL attributes to 0 updates IDL and content attributes" result="PASS" /><testcase id="size.attributes.removed" purpose="Check if removing content attributes reverts to default size" result="PASS" /><testcase id="size.attributes.setAttribute.decimal" purpose="Check that parse non-negative integers in setAttribute if set width='100.999'" result="PASS" /><testcase id="size.attributes.setAttribute.em" purpose="Check that parse non-negative integers in setAttribute if set width='100em'" result="PASS" /><testcase id="size.attributes.setAttribute.empty" purpose="Check that parse non-negative integers in setAttribute if set width=''" result="PASS" /><testcase id="size.attributes.setAttribute.exp" purpose="Check that parse non-negative integers in setAttribute if set width='100e1'" result="PASS" /><testcase id="size.attributes.setAttribute.hex" purpose="Check that parse non-negative integers in setAttribute if set width='0x100'" result="PASS" /><testcase id="size.attributes.setAttribute.junk" purpose="Check that parse non-negative integers in setAttribute if set width='#!?'" result="PASS" /><testcase id="size.attributes.setAttribute.minus" purpose="Check that parse non-negative integers in setAttribute if set width='-100'" result="PASS" /><testcase id="size.attributes.setAttribute.octal" purpose="Check that parse non-negative integers in setAttribute if set width='0100'" result="PASS" /><testcase id="size.attributes.setAttribute.percent" purpose="Check that parse non-negative integers in setAttribute if set width='100%'" result="PASS" /><testcase id="size.attributes.setAttribute.plus" purpose="Check that parse non-negative integers in setAttribute if set width='+100px'" result="PASS" /><testcase id="size.attributes.setAttribute.space" purpose="Check that parsing of non-negative integers in setAttribute if set width=' 100px'" result="PASS" /><testcase id="size.attributes.setAttribute.trailingjunk" purpose="Check that parse non-negative integers in setAttribute if set width=' 100#!?'" result="PASS" /><testcase id="size.attributes.setAttribute.whitespace" purpose="Check that parse non-negative integers in setAttribute if set width='rntx0c100'" result="PASS" /><testcase id="size.attributes.setAttribute.zero" purpose="Check that parse of non-negative integers in setAttribute if set width='0px'" result="PASS" /><testcase id="size.attributes.style" purpose="Check if Canvas size is independent of CSS resizing" result="PASS" /><testcase id="textmetrics_width_exist" purpose="Check if textmetrics.width exists" result="PASS" /><testcase id="textmetrics_width_readonly" purpose="Check if textmetrics.width is readonly" result="PASS" /><testcase id="textmetrics_width_type" purpose="Check if the type of textmetrics.width is number" result="PASS" /><testcase id="toDataURL.arguments.1" purpose="Check that toDataURL ignores extra arguments if set the two parameters" result="PASS" /><testcase id="toDataURL.arguments.2" purpose="Check that toDataURL ignores extra arguments if set the three parameters" result="PASS" /><testcase id="toDataURL.arguments.3" purpose="Check if toDataURL ignores extra arguments" result="PASS" /><testcase id="toDataURL.bogustype" purpose="Check if toDataURL with a syntactically invalid type returns a PNG" result="PASS" /><testcase id="toDataURL.default" purpose="Check if toDataURL with no arguments returns a PNG" result="PASS" /><testcase id="toDataURL.jpeg.alpha" purpose="Check if toDataURL with JPEG composites onto black" result="PASS" /><testcase id="toDataURL.jpeg.primarycolours" purpose="Check if toDataURL with JPEG handles simple colours correctly" result="PASS" /><testcase id="toDataURL.jpeg.quality.basic" purpose="Check if toDataURL with JPEG uses the quality parameter" result="PASS" /><testcase id="toDataURL.jpeg.quality.notnumber" purpose="Check if toDataURL with JPEG handles non-numeric quality parameters" result="PASS" /><testcase id="toDataURL.jpeg.quality.outsiderange" purpose="Check if toDataURL with JPEG handles out-of-range quality parameters" result="PASS" /><testcase id="toDataURL.lowercase.ascii" purpose="Check if toDataURL type is case-insensitive" result="PASS" /><testcase id="toDataURL.lowercase.unicode" purpose="Check if toDataURL type is ASCII-case-insensitive" result="PASS" /><testcase id="toDataURL.nocontext" purpose="Check if toDataURL works before any context has been got" result="PASS" /><testcase id="toDataURL.png" purpose="Check if toDataURL with image/png returns a PNG" result="PASS" /><testcase id="toDataURL.png.complexcolours" purpose="Check if toDataURL with PNG handles non-primary and non-solid colours correctly" result="PASS" /><testcase id="toDataURL.png.primarycolours" purpose="Check if toDataURL with PNG handles simple colours correctly" result="PASS" /><testcase id="toDataURL.unrecognised" purpose="Check if toDataURL with an unhandled type returns a PNG" result="PASS" /><testcase id="toDataURL.zerosize" purpose="Check if toDataURL on zero-size canvas returns 'data:,'" result="PASS" /><testcase id="type.exists" purpose="Check if HTMLCanvasElement is a property of window" result="PASS" /><testcase id="type.extend" purpose="Check if HTMLCanvasElement methods can be added, and the new methods are used by canvases" result="PASS" /><testcase id="type.name" purpose="Check if the type.name is HTMLCanvasElement" result="PASS" /><testcase id="type.replace" purpose="Check if HTMLCanvasElement methods can be replaced, and the replacement methods are used by canvases" result="PASS" /></category><category name="W3C_HTML5 APIs/Graphics/HTML5 SVG"><testcase id="svg_label_inline" purpose="Check if the SVG inside HTML label element parses correctly" result="PASS" /><testcase id="foreign_content_eight_rect_svg_in_body" purpose="Check if SVG inside HTML 'BODY' element is parsed correctly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]][[https://crosswalk-project.org/jira/browse/XWALK-2639 XWALK-2639]]</testcase><testcase id="foreign_content_eleven_rect_svg_in_div_id_style" purpose="Check if SVG elements are styled using ID Selector" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]][[https://crosswalk-project.org/jira/browse/XWALK-2639 XWALK-2639]]</testcase><testcase id="foreign_content_five_rect_svg_in_form" purpose="Check if SVG inside HTML FORM element is parsed correctly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]][[https://crosswalk-project.org/jira/browse/XWALK-2639 XWALK-2639]]</testcase><testcase id="foreign_content_four_rect_svg_in_caption" purpose="Check if SVG inside HTML CAPTION element is parsed  correctly" result="PASS" /><testcase id="foreign_content_nine_circle_in_rect_svg" purpose="Check if SVG Self Closing tags (circle in rect in svg)  is parsed properly" result="PASS" /><testcase id="foreign_content_one_rect_svg_in_object" purpose="Check if SVG inside HTML OBJECT element is parsed correctly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]][[https://crosswalk-project.org/jira/browse/XWALK-2639 XWALK-2639]]</testcase><testcase id="foreign_content_six_rect_svg_in_html" purpose="Check if SVG inside HTML 'HTML' element is parsed correctly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]][[https://crosswalk-project.org/jira/browse/XWALK-2639 XWALK-2639]]</testcase><testcase id="foreign_content_ten_circle_rect_svg" purpose="Check if SVG Self Closing tags (circle and rect in svg) is parsed properly" result="PASS" /><testcase id="foreign_content_thirteen_rect_svg_in_div_class_style" purpose="Check if SVG elements are styled using CLASS Selector" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]][[https://crosswalk-project.org/jira/browse/XWALK-2639 XWALK-2639]]</testcase><testcase id="svg_support" purpose="Check if SVG suppports" result="PASS" /></category><category name="W3C_HTML5 APIs/Location/Geolocation API Specification"><testcase id="errorcallback_PERMISSION_DENIED" purpose="Check if error callback is called with correct code" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="errorcallback_POSITION_UNAVAILABLE" purpose="Check if success callback is called or error callback is called with correct code" result="PASS" /><testcase id="Geolocation_getCurrentPosition_operation_failed" purpose="Check if getCurrentPosition() invokes onPositionErrorCallback() when the operation fails before the timeout expires" result="PASS" /><testcase id="Geolocation_watchPosition_operation_failed" purpose="Check if watchPosition() invokes onPositionErrorCallback() when the operation fails before the timeout expires" result="PASS" /><testcase id="getCurrentPosition_return_synchronously" purpose="Check if getCurrentPosition returns synchronously before any callbacks are invoked" result="PASS" /><testcase id="watchPosition_return_synchronously" purpose="Check if watchPosition returns synchronously before any callbacks are invoked" result="PASS" /><testcase id="Coordinates_accuracy" purpose="Check if the accuracy of interface Coordinates is comparison" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_accuracy_attribute_exists" purpose="Check if the accuracy attribute of interface Coordinates exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_accuracy_attribute_readonly" purpose="Check if the accuracy value of interface Coordinates is readonly" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_accuracy_attribute_set_null" purpose="Check if the accuracy value of interface Coordinates is set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_accuracy_attribute_value_default" purpose="Check if the accuracy value of interface Coordinates is set to empty string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_altitudeAccuracy_attribute_empty_string" purpose="Check if the altitudeAccuracy value of interface Coordinates is set to empty string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_altitudeAccuracy_attribute_exists" purpose="Check if the altitudeAccuracy value of interface Coordinates exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_altitudeAccuracy_attribute_readonly" purpose="Check if the altitudeAccuracy value of interface Coordinates is readonly" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_altitudeAccuracy_attribute_set_null" purpose="Check if the altitudeAccuracy value of interface Coordinates is set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_altitude_attribute_empty_string" purpose="Check if the altitude value of interface Coordinates is set to empty string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_altitude_attribute_exists" purpose="Check if the altitude value of interface Coordinates exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_altitude_attribute_readonly" purpose="Check if the altitude value of interface Coordinates is readonly" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_altitude_attribute_set_null" purpose="Check if the altitude value of interface Coordinates is set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_attribute_timeout_0" purpose="Check if will get Coordinates attribute return value when set timeout to 0" result="PASS" /><testcase id="Coordinates_attribute_timeout_100" purpose="Check if will get Coordinates attribute return value when set timeout to 100" result="PASS" /><testcase id="Coordinates_attribute_timeout_60000" purpose="Check if will get Coordinates attribute return value when set timeout to 60000" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_heading_attribute_empty_string" purpose="Check if the heading value of interface Coordinates is set to empty string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_heading_attribute_exists" purpose="Check if the heading value of interface Coordinates exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_heading_attribute_readonly" purpose="Check if the heading value of interface Coordinates is readonly" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_heading_attribute_set_null" purpose="Check if the heading value of interface Coordinates is set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_latitude" purpose="Check if the latitude value of interface Coordinates is not NaN" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_latitude_attribute_empty_string" purpose="Check if the latitude value of interface Coordinates is set to empty string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_latitude_attribute_exists" purpose="Check if the latitude value of interface Coordinates exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_latitude_attribute_readonly" purpose="Check if the latitude value of interface Coordinates is readonly" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_latitude_attribute_set_null" purpose="Check if the latitude value of interface Coordinates is set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_longitude" purpose="Check if the longitude value of interface Coordinates is not NaN" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_longitude_attribute_empty_string" purpose="Check if the longitude value of interface Coordinates is set to empty string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_longitude_attribute_exists" purpose="Check if the longitude value of interface Coordinates exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_longitude_attribute_readonly" purpose="Check if the longitude value of interface Coordinates is readonly" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_longitude_attribute_set_null" purpose="Check if the longitude value of interface Coordinates is set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_longitude_return_type" purpose="Check the return type of longitude of interface Coordinates" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_speed" purpose="Check if the speed value of interface Coordinates is not NaN" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_speed_attribute_empty_string" purpose="Check if the speed value of interface Coordinates is set to empty string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_speed_attribute_exists" purpose="Check if the speed value of interface Coordinates exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_speed_attribute_readonly" purpose="Check if the speed value of interface Coordinates is readonly" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Coordinates_speed_attribute_set_null" purpose="Check if the speed value of interface Coordinates is set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_clearWatch_watchId_empty" purpose="Check if the geolocation.clearWatch() method of the first parameter can be set to empty" result="PASS" /><testcase id="Geolocation_clearWatch_watchId_no_argument" purpose="Check if the geolocation.clearWatch() method of the first parameter is not argument" result="PASS" /><testcase id="Geolocation_clearWatch_watchId_null" purpose="Check if the geolocation.clearWatch() method of the first parameter can be set to null" result="PASS" /><testcase id="Geolocation_clearWatch_watchId_set_null" purpose="Check if the method clearWatch value of interface Geolocation can be set to null" result="PASS" /><testcase id="Geolocation_clearWatch_watchId_set_zero" purpose="Check if the method clearWatch value of interface Geolocation can be set to zero" result="PASS" /><testcase id="Geolocation_clearWatch_watchId_with_empty_string" purpose="Check if the geolocation.clearWatch() method of the first parameter can be set to empty string" result="PASS" /><testcase id="Geolocation_clearWatch_watchId_with_number" purpose="Check if the geolocation.clearWatch() method of the first parameter can be set to number" result="PASS" /><testcase id="Geolocation_clearWatch_watchId_with_string" purpose="Check if the geolocation.clearWatch() method of the first parameter can be set to string" result="PASS" /><testcase id="Geolocation_getCurrentPosition_cached_position" purpose="Check if getCurrentPosition() supports cached position object" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_enableHighAccuracy_false" purpose="Check that errorCallback can be called if Geolocation,timeout is set to 0 and enableHighAccuracy is set to false" result="PASS" /><testcase id="Geolocation_getCurrentPosition_enableHighAccuracy_true" purpose="Check that errorCallback can be called if Geolocation,timeout is set to 0 and enableHighAccuracy is set to true" result="PASS" /><testcase id="Geolocation_getCurrentPosition_errorCallback_enableHighAccuracy_false" purpose="Check that errorCallback can not be called if Geolocation,MaximumAge is set to 0,timeout is set to 60000 and enableHighAccuracy is set to false" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_errorCallback_enableHighAccuracy_true" purpose="Check that errorCallback can not be called if Geolocation,MaximumAge is set to 0,timeout is set to 60000 and enableHighAccuracy is set to true" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_errorCallback_null" purpose="Check if the geolocation.getCurrentPosition() method of the second parameter can be set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_errorCallback_null_options_null" purpose="Check if the geolocation.getCurrentPosition() method of the second and third parameter can be set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_example_one_short" purpose="Check if example of a 'one-shot' position request works" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_maximumAge_0_enableHighAccuracy_false" purpose="Check that errorCallback can be called if Geolocation,MaximumAge is set to 0,timeout is set to 0 and enableHighAccuracy is set to false" result="PASS" /><testcase id="Geolocation_getCurrentPosition_maximumAge_0_enableHighAccuracy_true" purpose="Check that errorCallback can be called if Geolocation,MaximumAge is set to 0,timeout is set to 0 and enableHighAccuracy is set to true" result="PASS" /><testcase id="Geolocation_getCurrentPosition_method_exists" purpose="Check if the method getCurrentPosition value of interface Geolocation exists" result="PASS" /><testcase id="Geolocation_getCurrentPosition_operation_completed" purpose="Check if getCurrentPosition() invokes onPositionCallback() when the operation completes successfully before the timeout expires" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_options_null" purpose="Check if the geolocation.getCurrentPosition() method of the third parameter can be set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_options_timeout_Neg" purpose="Check if the method getCurrentPosition of interface Geolocation,timeout can be set to Neg" result="PASS" /><testcase id="Geolocation_getCurrentPosition_options_timeout_Neg_maximumAge_0" purpose="Check the attribute code of interface PositionError's return value" result="PASS" /><testcase id="Geolocation_getCurrentPosition_Position_enableHighAccuracy_true" purpose="Check if the attribute position of interface Geolocation returns successfully" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback" purpose="Check if the method getCurrentPosition value of interface Geolocation returns successfully" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_empty_string" purpose="Check if the geolocation.getCurrentPosition() method of the first parameter can be set to empty string" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_enableHighAccuracy_false" purpose="Check that successCallback can be called if Geolocation,and MaximumAge is set to 2000,timeout is set to 60000,enableHighAccuracy is set to false" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_enableHighAccuracy_true" purpose="Check that successCallback can be called if Geolocation,MaximumAge is set to 2000,timeout is set to 60000,enableHighAccuracy is set to true" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_maximumAge_700000_timeout_zero" purpose="Check that successCallback can be called if Geolocation,MaximumAge is set to 700000, timeout is set to 0" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_maximumAge_Infinity_timeout_zero" purpose="Check that successCallback can not be called if Geolocation,MaximumAge is set to Infinity, timeout is set to 0" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_null_options_null" purpose="Check if the geolocation.getCurrentPosition() method of the first third parameter can be set to null" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_options_maximumAge_2000" purpose="Check that successCallback can be called if Geolocation,MaximumAge is set to 2000,timeout is set to 60000" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_maximumAge_200000" purpose="Check that successCallback can be called if Geolocation,MaximumAge is set to 200000" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_maximumAge_600000" purpose="Check that successCallback can be called if Geolocation,MaximumAge is set to 600000" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_maximumAge_700000" purpose="Check that successCallback can be called if Geolocation,MaximumAge is set to 700000" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_maximumAge_empty_string" purpose="Check if the attribute maximumAge of interface PositionOptions can be set to empty string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_maximumAge_Infinity" purpose="Check if the attribute position of interface Geolocation does not return null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_maximumAge_Neg" purpose="Check that successCallback can be called if Geolocation,MaximumAge is set to -2" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_maximumAge_set_null" purpose="Check if the attribute maximumAge of interface PositionOptions can be set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_maximumAge_set_number" purpose="Check if the attribute maximumAge of interface PositionOptions can be set to number" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_maximumAge_set_string" purpose="Check if the attribute maximumAge of interface PositionOptions can be set to string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_maximumAge_zero" purpose="Check if the attribute position of interface Geolocation is not null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_timeout_2000" purpose="Check if the method watchPosition of interface Geolocation,timeout can be set to 2000" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_options_timeout_empty_string" purpose="Check if the attribute timeout of interface PositionOptions can be set to empty string" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_options_timeout_set_null" purpose="Check if the attribute timeout of interface PositionOptions can be set to null" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_options_timeout_set_number" purpose="Check if the attribute timeout of interface PositionOptions can be set to number" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_options_timeout_set_string" purpose="Check if the attribute timeout of interface PositionOptions can be set to string" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_options_with_enableHighAccuracy_false" purpose="Check if the method watchPosition of interface Geolocation,enableHighAccuracy can be set to false" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_options_with_enableHighAccuracy_true" purpose="Check if the method watchPosition of interface Geolocation,enableHighAccuracy can be set to true" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_position" purpose="Check if the successCallback of geolocation.getCurrentPosition() return position with correct argument." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_position_no_argument" purpose="Check if successCallback of geolocation.getCurrentPosition()  can return position without passing argument to it." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_position_return_type" purpose="Check if the return type of successCallback of the geolocation.getCurrentPosition() method is object" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_set_string" purpose="Check if the geolocation.getCurrentPosition() method of the first parameter is set to string" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_timeout_zero" purpose="Check that successCallback can not be called if Geolocation,MaximumAge is set to 600000, timeout is set to 0" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_with_empty_string" purpose="Check if the method getCurrentPosition value of interface Geolocation,successCallback is set to empty" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_with_errorCallback_empty_string" purpose="Check if the method getCurrentPosition value of interface Geolocation,errorCallback is set to empty string" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_with_errorCallback_no_argument" purpose="Check if the method getCurrentPosition value of interface Geolocation,errorCallback is set to no argument" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_with_errorCallback_null" purpose="Check if the method getCurrentPosition value of interface Geolocation,errorCallback is set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_successCallback_with_errorCallback_string" purpose="Check if the method getCurrentPosition value of interface Geolocation,errorCallback is set to string" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_with_null" purpose="Check if the method getCurrentPosition value of interface Geolocation,successCallback is set to null" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_with_number" purpose="Check if the method getCurrentPosition value of interface Geolocation,successCallback is set to number" result="PASS" /><testcase id="Geolocation_getCurrentPosition_successCallback_with_string" purpose="Check if the method getCurrentPosition value of interface Geolocation,successCallback is set to string" result="PASS" /><testcase id="Geolocation_getCurrentPosition_timeout_60000_enableHighAccuracy_true" purpose="Check that errorCallback can not be called if Geolocation,timeout is set to 60000 and enableHighAccuracy is set to true" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_getCurrentPosition_timer_timeout" purpose="Check if getCurrentPosition() invokes onPositionErrorCallback() after timer fires TIMEOUT" result="PASS" /><testcase id="Geolocation_PositionError_PERMISSION_DENIED_constExist" purpose="Check if the const attribute PERMISSION_DENIED of interface PositionError is Exist ,timeout is set to 10,enableHighAccuracy is set to true" result="PASS" /><testcase id="Geolocation_PositionError_POSITION_UNAVAILABLE_constExist" purpose="Check if the const attribute POSITION_UNAVAILABLE of interface PositionError is Exist ,timeout is set to 10,enableHighAccuracy is set to true" result="PASS" /><testcase id="Geolocation_PositionError_TIMEOUT_constExist" purpose="Check if the PositionError.TIMEOUT exists" result="PASS" /><testcase id="Geolocation_watchPosition_cached_position" purpose="Check if watchPosition() supports cached position object" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_enableHighAccuracy_false" purpose="Check that watchPosition errorCallback can be called if Geolocation,timeout is set to 0 and enableHighAccuracy is set to false" result="PASS" /><testcase id="Geolocation_watchPosition_enableHighAccuracy_true" purpose="Check that watchPosition errorCallback can be called if Geolocation,timeout is set to 0 and enableHighAccuracy is set to true" result="PASS" /><testcase id="Geolocation_watchPosition_errorCallback_enableHighAccuracy_false" purpose="Check that errorCallback can not be called if Geolocation,timeout is set to 60000, enableHighAccuracy is set to false" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_errorCallback_error_return_type" purpose="Check if the return type of error value of interface PositionError is obejct" result="PASS" /><testcase id="Geolocation_watchPosition_errorCallback_maximumAge_0_enableHighAccuracy_false" purpose="Check that errorCallback can not be called if Geolocation,MaximumAge is set to 0, timeout is set to 60000 and enableHighAccuracy is set to false" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_errorCallback_maximumAge_0_enableHighAccuracy_true" purpose="Check that errorCallback can not be called if Geolocation,MaximumAge is set to 0, timeout is set to 2000, and enableHighAccuracy is set to true" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_errorCallback_maximumAge_2000_enableHighAccuracy_true" purpose="Check that errorCallback can not be called if Geolocation,MaximumAge is set to 2000, timeout is set to 60000 and enableHighAccuracy is set to true" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_errorCallback_null" purpose="Check if the geolocation.watchPosition() method of the second parameter can be set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_errorCallback_null_options_null" purpose="Check if the geolocation.watchPosition() method of the second third parameter can be set to null" result="PASS" /><testcase id="Geolocation_watchPosition_errorCallback_options_timeout_0" purpose="Check that errorCallback can be called if Geolocation return timeout" result="PASS" /><testcase id="Geolocation_watchPosition_example_repeated_position" purpose="Check if example of requesting repeated position updates works" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_maximumAge_0_enableHighAccuracy_false" purpose="Check that errorCallback can be called if Geolocation,MaximumAge is set to 0, timeout is set to 0 and enableHighAccuracy is set to false" result="PASS" /><testcase id="Geolocation_watchPosition_maximumAge_0_enableHighAccuracy_true" purpose="Check that errorCallback can be called if Geolocation,MaximumAge is set to 0, timeout is set to 0 and enableHighAccuracy is set to true" result="PASS" /><testcase id="Geolocation_watchPosition_maximumAge_500_enableHighAccuracy_false" purpose="Check that errorCallback can be called if Geolocation,MaximumAge is set to 500, timeout is set to 500 and enableHighAccuracy is set to false" result="PASS" /><testcase id="Geolocation_watchPosition_maximumAge_500_enableHighAccuracy_true" purpose="Check that errorCallback can be called if watchPosition method set maximumAge to 500, timeout to 100 and  enableHighSpeed to true" result="PASS" /><testcase id="Geolocation_watchPosition_method_exists" purpose="Check if the watchPosition value of interface Geolocation exists" result="PASS" /><testcase id="Geolocation_watchPosition_method_return_type" purpose="Check if the return type of method watchPosition of interface Geolocation" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_operation_completed" purpose="Check if watchPosition() invokes onPositionCallback() when the operation completes successfully before the timeout expires" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_options_maximumAge_2000" purpose="Check if the maximumAge value of interface PositionOptions can be set to 2000" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_options_maximumAge_Neg" purpose="Check if the maximumAge value of interface PositionOptions in method watchPosition can be set to Neg" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_options_null" purpose="Check if the geolocation.watchPosition() method of the third parameter can be set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_options_timeout_Neg" purpose="Check if the watchPosition of interface Geolocation,timeout can be set to -2" result="PASS" /><testcase id="Geolocation_watchPosition_PositionOptions_timeout_60000_enableHighAccuracy_true" purpose="Check that errorCallback can not be called if Geolocation,timeout is set to 60000, enableHighAccuracy is set to true" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_Position_options_enableHighAccuracy_false" purpose="Check if the enableHighAccuracy value of interface PositionOptions can be set to false" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_Position_options_enableHighAccuracy_true" purpose="Check if the enableHighAccuracy value of interface PositionOptions can be set to true" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_Position_options_timeout_60000" purpose="Check if the watchPosition value of interface Geolocation can be set to 60000 for timeout" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_successCallback" purpose="Check if the watchPosition value of interface Geolocation return success" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_successCallback_empty_string" purpose="Check if the geolocation.watchPosition() method with parameter of successCallback can be set to empty string" result="PASS" /><testcase id="Geolocation_watchPosition_successCallback_enableHighAccuracy_false" purpose="Check that errorCallback can not be called if Geolocation,MaximumAge is set to 2000 and timeout is set to 60000,enableHighAccuracy is set to false" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_successCallback_enableHighAccuracy_true" purpose="Check that errorCallback can not be called if Geolocation,and MaximumAge is set to 2000 and timeout is set to 60000,enableHighAccuracy is set to true" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_successCallback_maximumAge_2000_timeout_60000" purpose="Check that errorCallback can not be called if Geolocation,MaximumAge is set to 2000 and timeout is set to 60000" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_successCallback_null_options_null" purpose="Check if the geolocation.watchPosition() method of the first third parameters parameter can be set to null" result="PASS" /><testcase id="Geolocation_watchPosition_successCallback_number" purpose="Check if the method watchPosition value of interface Geolocation,successCallback can be set to number" result="PASS" /><testcase id="Geolocation_watchPosition_successCallback_set_string" purpose="Check if the geolocation.watchPosition() method of the first parameter set a" result="PASS" /><testcase id="Geolocation_watchPosition_successCallback_string" purpose="Check if the method watchPosition value of interface Geolocation,successCallback can be set to string" result="PASS" /><testcase id="Geolocation_watchPosition_successCallback_with_empty_string" purpose="Check if the geolocation.watchPosition() method of the first parameter set empty string" result="PASS" /><testcase id="Geolocation_watchPosition_successCallback_with_errorCallback_empty_string" purpose="Check if the method watchPosition value of interface Geolocation,errorCallback can be set to empty string" result="PASS" /><testcase id="Geolocation_watchPosition_successCallback_with_errorCallback_no_argument" purpose="Check if the method watchPosition value of interface Geolocation,errorCallback can be set to no argument" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_successCallback_with_errorCallback_null" purpose="Check if the method watchPosition value of interface Geolocation,errorCallback can be set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Geolocation_watchPosition_successCallback_with_errorCallback_string" purpose="Check if the method watchPosition value of interface Geolocation,errorCallback can be set to string" result="PASS" /><testcase id="Geolocation_watchPosition_successCallback_with_first_null" purpose="Check if the geolocation.watchPosition() method of the first parameter can be set to null" result="PASS" /><testcase id="Geolocation_watchPosition_successCallback_with_null" purpose="Check if the method watchPosition value of interface Geolocation,successCallback can be set to null" result="PASS" /><testcase id="Geolocation_watchPosition_timer_timeout" purpose="Check if watchPosition() invokes onPositionErrorCallback() after timer fires TIMEOUT" result="PASS" /><testcase id="Geolocation_watchPosition_watchId_empty_string" purpose="Check if the method watchPosition value of interface Geolocation can be set to empty string" result="PASS" /><testcase id="Geolocation_watchPosition_watchId_return_before_callbacks" purpose="Check if the method watchPosition value of interface Geolocation return watchId before any callbacks" result="PASS" /><testcase id="Geolocation_watchPosition_watchId_return_type" purpose="Check if the return type of method watchPosition of interface Geolocation is object" result="PASS" /><testcase id="Geolocation_watchPosition_watchId_set_null" purpose="Check if the method watchPosition value of interface Geolocation can be set to null" result="PASS" /><testcase id="Geolocation_watchPosition_watchId_set_number" purpose="Check if the method watchPosition value of interface Geolocation can be set to number" result="PASS" /><testcase id="Geolocation_watchPosition_watchId_set_string" purpose="Check if the method watchPosition value of interface Geolocation can be set to string" result="PASS" /><testcase id="Geolocation_watchPosition_with_timeout_0_maximumAge_0" purpose="Check that watchPosition should be triggered if timeout is 0 and maximumAge is 0" result="PASS" /><testcase id="navigator_geolocation" purpose="Check if the return type of geolocation of interface is NavigatorGeolocation object" result="PASS" /><testcase id="navigator_geolocation_attribute_empty_string" purpose="Check if the attribute geolocation value of interface NavigatorGeolocation is empty string" result="PASS" /><testcase id="navigator_geolocation_attribute_readonly" purpose="Check if the attribute geolocation value of interface NavigatorGeolocation is readonly" result="PASS" /><testcase id="navigator_geolocation_attribute_set_null" purpose="Check if the attribute geolocation value of interface NavigatorGeolocation is set to null" result="PASS" /><testcase id="PositionError_code_attribute_empty_string" purpose="Check if the attribute code value of interface PositionError is set to empty string" result="PASS" /><testcase id="PositionError_code_attribute_exists" purpose="Check if the attribute code value of interface PositionError exists, timeout is set to 10, and enableHighAccuracy is set to true" result="PASS" /><testcase id="PositionError_code_attribute_readonly" purpose="Check if the attribute code value of interface PositionError is readonly, timeout is set to 10 and enableHighAccuracy is set to true" result="PASS" /><testcase id="PositionError_code_attribute_set_null" purpose="Check if the attribute code value of interface PositionError is set to null" result="PASS" /><testcase id="PositionError_code_TIMEOUT" purpose="Check if the attribute code of interface PositionError returns 3" result="PASS" /><testcase id="PositionError_message" purpose="Check if the attribute message of interface PositionError is comparison" result="PASS" /><testcase id="PositionError_message_attribute_empty_string" purpose="Check if the attribute message value of interface PositionError is set to empty string" result="PASS" /><testcase id="PositionError_message_attribute_exists" purpose="Check if the attribute message value of interface PositionError exists, timeout is set to 10 and enableHighAccuracy is set to true" result="PASS" /><testcase id="PositionError_message_attribute_readonly" purpose="Check if the attribute message value of interface PositionError is readonly, timeout is set to 10 and enableHighAccuracy is set to true" result="PASS" /><testcase id="PositionError_message_attribute_set_null" purpose="Check if the attribute message value of interface PositionError is set to null" result="PASS" /><testcase id="PositionError_message_getCurrentPosition_Err" purpose="Check if getCurrentPosition returns message of error." result="PASS" /><testcase id="PositionError_message_getCurrentPosition_timeOut0Age0" purpose="Check if message of timeout error is set to timeout to 0 and maxAge to 0" result="PASS" /><testcase id="PositionError_message_getCurrentPosition_timeOut0AgeNeg" purpose="Check that message of timeout error raised if W3C geolocation set timeout to 0 and maxAge to -1," result="PASS" /><testcase id="PositionError_message_getCurrentPosition_timeOutNegAge0" purpose="Check that message of timeout error raised if W3C geolocation set timeout to -1 and maxAge to 0," result="PASS" /><testcase id="PositionError_message_return_type" purpose="Check if the attribute message of interface PositionError return type,timeout is set to 10,enableHighAccuracy is set to true" result="PASS" /><testcase id="PositionError_message_watchPosition_Err" purpose="Check if watchPosition returns message of error." result="PASS" /><testcase id="PositionError_message_watchPosition_timeOut0Age0" purpose="Check that message of timeout error raised(watchPosition) if W3C geolocation set timeout to 0 and maxAge to 0," result="PASS" /><testcase id="PositionError_message_watchPosition_timeOut0AgeNeg" purpose="Check that timeout error raised if W3C geolocation set timeout to 0 and maxAge to -1" result="PASS" /><testcase id="PositionError_message_watchPosition_timeOutNegAge0" purpose="Check that timeout error raised if W3C geolocation set timeout to -1 and maxAge to 0" result="PASS" /><testcase id="PositionError_message_with_getCurrentPosition_timeOut0Age0" purpose="Check that message of timeout error raised(getCurrentPosition) if W3C geolocation set timeout to 0 and maxAge to 0" result="PASS" /><testcase id="PositionError_PERMISSION_DENIED_Default_value" purpose="Check if default type of PositionError.PERMISSION_DENIED is number" result="PASS" /><testcase id="PositionError_PERMISSION_DENIED_type" purpose="Check if return type of PositionError.PERMISSION_DENIED  is number" result="PASS" /><testcase id="PositionError_POSITION_UNAVAILABLE_Default_value" purpose="Check if default value of PositionError.POSITION_UNAVAILABLE is number" result="PASS" /><testcase id="PositionError_POSITION_UNAVAILABLE_type" purpose="Check if return type of PositionError.POSITION_UNAVAILABLE is number" result="PASS" /><testcase id="PositionError_TIMEOUT_Default_value" purpose="Check if default value of PositionError.TIMEOUT is three" result="PASS" /><testcase id="PositionError_TIMEOUT_type" purpose="Check if return type of PositionError.TIMEOUT is number" result="PASS" /><testcase id="PositionOptions_enableHighAccuracy_empty_string" purpose="Check if the attribute enableHighAccuracy of interface PositionOptions can be set to empty string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="PositionOptions_enableHighAccuracy_false" purpose="Check if the attribute enableHighAccuracy of interface PositionOptions can be set to false" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="PositionOptions_enableHighAccuracy_set_null" purpose="Check if the attribute enableHighAccuracy of interface PositionOptions can be set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="PositionOptions_enableHighAccuracy_set_number" purpose="Check if the attribute enableHighAccuracy of interface PositionOptions can be set to number" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="PositionOptions_enableHighAccuracy_set_string" purpose="Check if the attribute enableHighAccuracy of interface PositionOptions can be set to string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="PositionOptions_enableHighAccuracy_true" purpose="Check if the attribute enableHighAccuracy of interface PositionOptions can be set to true" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="PositionOptions_enableHighAccuracy_with_null" purpose="Check if the attribute enableHighAccuracy of Navigator.PositionOptions.enableHighAccuracy can be set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="PositionOptions_enableHighAccuracy_with_number" purpose="Check if the attribute enableHighAccuracy of Navigator.PositionOptions.enableHighAccuracy can be set to number" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="PositionOptions_enableHighAccuracy_with_string" purpose="Check if the attribute enableHighAccuracy of Navigator.PositionOptions.enableHighAccuracy can be set to string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="PositionOptions_timeout_getCurrentPosition_timeout_0_maximumAge_0" purpose="Check if the Navigator.PositionOptions is set timeout to 0 and maximumAge to 0 in getCurrentPosition method" result="PASS" /><testcase id="PositionOptions_timeout_getCurrentPosition_timeout_0_maximumAge_1000" purpose="Check if the Navigator.PositionOptions is set timeout to 0 and maximumAge to 1000 in getCurrentPosition method" result="PASS" /><testcase id="PositionOptions_timeout_getCurrentPosition_timeout_60000" purpose="Check if the Navigator.PositionOptions is set timeout to 60000 in getCurrentPosition method" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="PositionOptions_timeout_watchPosition_timeout_0_maximumAge_0" purpose="Check if the Navigator.PositionOptions is set timeout to 0 and maximumAge to 0 in watchPosition method" result="PASS" /><testcase id="PositionOptions_timeout_watchPosition_timeout_0_maximumAge_1000" purpose="Check if the Navigator.PositionOptions is set timeout to 0 and maximumAge to 1000 in watchPosition method" result="PASS" /><testcase id="PositionOptions_timeout_watchPosition_timeout_60000" purpose="Check if the Navigator.PositionOptions is set timeout to 60000 in watchPosition method" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Position_coords" purpose="Check if the attribute coords of interface Position is comparison" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Position_coords_attribute_empty_string" purpose="Check if the attribute coords value of interface Position is set to empty string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Position_coords_attribute_exists" purpose="Check if the attribute coords value of interface Position exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Position_coords_attribute_readonly" purpose="Check if the attribute coords value of interface Position is readonly" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Position_coords_attribute_set_null" purpose="Check if the attribute coords value of interface Position is set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Position_coords_return_type" purpose="Check if the return type of coords of interface Position is object" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Position_timestamp_attribute_exists" purpose="Check if the attribute timestamp value of interface Position exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Position_timestamp_attribute_readonly" purpose="Check if the attribute timestamp value of interface Position is readonly" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Position_timestamp_attribute_set_null" purpose="Check if the attribute timestamp value of interface Position is set to null" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Position_timestamp_timeout_0" purpose="Check that will get Position.timestamp value if set timeout to 0" result="PASS" /><testcase id="Position_timestamp_timeout_100" purpose="Check that will get Position.timestamp value if set timeout to 100" result="PASS" /><testcase id="Position_timestamp_timeout_60000" purpose="Check that will get Position.timestamp value if set timeout to 60000" result="BLOCK">Test result is the same as Upstream result</testcase></category><category name="W3C_HTML5 APIs/Media/getUserMedia"><testcase id="audio" purpose="Test checks that the MediaStream object returned by the success callback in getUserMedia has exactly one audio track" result="PASS" /><testcase id="disabled-audio-silence" purpose="Test checks that a disabled audio track in a MediaStream is rendered as silence" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2210 XWALK-2210]]</testcase><testcase id="disabled-video-black" purpose="Test checks that a disabled video track in a MediaStream is rendered as blackness" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="mediastream-addtrack" purpose="Test checks that adding a track to a MediaStream works as expected" result="PASS" /><testcase id="mediastream-finished-add" purpose="Test checks that adding a track to a finished MediaStream raises an INVALID_STATE_ERR exception" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="mediastream-gettrackid" purpose="Test checks that MediaStream.getTrackById behaves as expected" result="PASS" /><testcase id="mediastream-id-manual" purpose="Test checks that the MediaStream object returned by the success callback in getUserMedia has a correct id" result="PASS" /><testcase id="mediastream-idl" purpose="Test checks that the MediaStream constructor follows the algorithm set in the spec" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="mediastream-removetrack" purpose="Test checks that removinging a track from a MediaStream works as expected" result="PASS" /><testcase id="mediastreamtrack-end" purpose="Test checks that the video and audio tracks of MediaStream object returned by the success callback in getUserMedia are correctly set into ended state when permission is revoked" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="mediastreamtrack-id" purpose="Test checks that distinct mediastream tracks have distinct ids" result="PASS" /><testcase id="stream-ended" purpose="Test checks that the MediaStream object returned by the success callback in getUserMedia has a ended set to false at start, and triggers 'onended' when it is set to true" result="PASS" /><testcase id="video" purpose="Test checks that the MediaStream object returned by the success callback in getUserMedia has exactly one video track and no audio" result="PASS" /><testcase id="video-assignment-manual" purpose="Test checks that the MediaStream object returned by the success callback in getUserMedia can be properly assigned to a video element via the srcObject attribute" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="api-present" purpose="Test checks for the presence of the navigator.getUserMedia method, taking vendor prefixes into account" result="PASS" /><testcase id="empty-option-param" purpose="Test checks that getUserMedia with no value in the options parameter raises a NOT_SUPPORTED_ERR exception" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="getusermedia-impossible-constraint" purpose="Test checks that setting a trivial mandatory constraint (width &gt;=0) in getUserMedia works" result="PASS" /><testcase id="getusermedia-optional-constraint" purpose="Test checks that setting an optional constraint in getUserMedia is handled as optional" result="PASS" /><testcase id="getusermedia-trivial-constraint" purpose="Test checks that setting a trivial mandatory constraint (width &gt;=0) in getUserMedia works" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="navigator_audio_getting_datastream" purpose="Check if we can access to the user's microphone by calling the API 'getUserMedia'" result="PASS" /><testcase id="navigator_audio_not_getting_datastream" purpose="Check if we can not access to the user's microphone by calling the API 'getUserMedia'" result="PASS" /><testcase id="navigator_audio_video_getting_datastream" purpose="Check if we can access to local devices (video cameras, microphones, Web cams) that can generate multimedia stream data by calling the API 'getUserMedia'" result="PASS" /><testcase id="navigator_getusermedia_supported" purpose="Check if Navigator implements NavigatorUserMedia" result="PASS" /><testcase id="navigator_video_getting_datastream" purpose="Check if we can access to the user's Web cams or video cameras by calling the API 'getUserMedia'" result="PASS" /><testcase id="navigator_video_not_getting_datastream" purpose="Check if we can not access to the user's Web cams and video cameras by calling the API 'getUserMedia'" result="PASS" /><testcase id="unknownkey-option-param" purpose="Test checks that getUserMedia with an unknown value in the options parameter raises a NOT_SUPPORTED_ERR exception" result="FAIL">Test result is the same as Upstream result</testcase></category><category name="W3C_HTML5 APIs/Media/HTML Media Capture"><testcase id="capture_video" purpose="Check if the input will accept an video when capture set to acmcorder" result="PASS" /><testcase id="HTMLInputElement_capture_exist" purpose="Check if the attribute capture exists" result="PASS" /><testcase id="HTMLInputElement_capture_type" purpose="Check if the type of HTMLInputElement.capture is boolean" result="PASS" /><testcase id="HTMLInputElement_exist" purpose="Check if the interface HTMLInputElement exists" result="PASS" /><testcase id="HTMLInputElement_type" purpose="Check if the type of HTMLInputElement is object" result="PASS" /></category><category name="W3C_HTML5 APIs/Media/HTML5 The audio element"><testcase id="audio_controls_present_manual" purpose="Check that user agent can expose a controller if  the controls attribute is provide for the audio element." result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audio_loop_current_media_controller" purpose="Check if the audio element has a current media controller that expecting the loop attribute has no effect" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_muted_overriding_volume" purpose="Check that the sound can not be output when the muted attribute is provided for the audio element although volume is set to loudest." result="PASS" /><testcase id="audio_muted_present_manual" purpose="Check that the sound can not be output when the muted attribute is provided for the audio element." result="PASS" /><testcase id="audio_volume_loudest_manual" purpose="Check that the volume is loudest when the attribute is set to 1.0 for the audio element." result="PASS" /><testcase id="audio_volume_silent_manual" purpose="Check that the volume is lowest (silent) when the attribute is set to 0.0." result="PASS" /><testcase id="audio_autoplay_attribute_exists" purpose="Check if the audio.autoplay attritbute exists" result="PASS" /><testcase id="audio_autoplay_attribute_type" purpose="Check if the type of audio.autoplay attribute is boolean" result="PASS" /><testcase id="audio_autoplay_default_value" purpose="Check if audio.autoplay attribute default is false" result="PASS" /><testcase id="audio_autoplay_empty_string" purpose="Check if the attribute audio.autoplay is false when set it empty string" result="PASS" /><testcase id="audio_autoplay_null" purpose="Check if the value of attribute of audio.autoplay is false when you set it null" result="PASS" /><testcase id="audio_autoplay_onloadedmetadata" purpose="Check if audio.autoplay attribute invoked,then audio.onloadedmetadata() function triggered" result="PASS" /><testcase id="audio_autoplay_true_autoplay_present" purpose="Check if audio.autoplay returns true when the controls attribute is present in the audio element" result="PASS" /><testcase id="audio_buffered_end_type" purpose="Check if the type of audio.buffered.end is function" result="PASS" /><testcase id="audio_buffered_exists" purpose="Check if the audio.buffered attribute exists" result="PASS" /><testcase id="audio_buffered_length_default_value" purpose="Check if the audio.buffered length is zero,typically this will be a single range anchored at the zero point" result="PASS" /><testcase id="audio_buffered_readonly" purpose="Check if the audio.buffered attribute is readonly" result="PASS" /><testcase id="audio_buffered_start_type" purpose="Check if the type of audio.buffered.start is function" result="PASS" /><testcase id="audio_buffered_type" purpose="Check if the type of audio.buffered is object" result="PASS" /><testcase id="audio_canplaytype_application_octet_stream" purpose="Check that audio.canPlayType method support octet-stream" result="PASS" /><testcase id="audio_canplaytype_bogus_type" purpose="Check that audio.canPlayType method support marks-fantasmagorical-format" result="PASS" /><testcase id="audio_canPlayType_codecs_order" purpose="Check if the codecs parameter order of audio.canPlayType" result="PASS" /><testcase id="audio_canPlayType_empty_string" purpose="Check if audio.canPlayType return empty string if arguments is a empty string" result="PASS" /><testcase id="audio_canplaytype_method_exists" purpose="Check that audio.canPlayType method exists" result="PASS" /><testcase id="audio_canPlayType_method_type" purpose="Check if the type of audio.canplayType is 'function'" result="PASS" /><testcase id="audio_canPlayType_mp3" purpose="Check if the browser really supports playing MP3s" result="PASS" /><testcase id="audio_canplaytype_mp4_supported_but_no_codecs_parameter" purpose="Check that audio.canPlayType method supported mp4 format codecs parameter" result="PASS" /><testcase id="audio_canPlayType_null" purpose="Check if audio.canPlayType return empty string if arguments is null" result="PASS" /><testcase id="audio_canplaytype_ogg_supported_but_no_codecs_parameter" purpose="Check that audio.canPlayType method supported ogg format codecs parameter" result="PASS" /><testcase id="audio_canPlayType_return_maybe" purpose="Check if audio.canPlayType() return maybe if the argument is 'audio/ogg'" result="PASS" /><testcase id="audio_canPlayType_return_probably" purpose="Check if the method audio.canPlayType() return probably if video can play the ogg type" result="PASS" /><testcase id="audio_constructor" purpose="Check if new Audio() returns a new audio element" result="PASS" /><testcase id="audio_constructor_src" purpose="Check if new Audio( url ) returns a new audio element" result="PASS" /><testcase id="audio_controller_attribute_exists" purpose="Check if the audio.controller exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_controller_attribute_type" purpose="Check if the type of audio.controller is object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_controller_default_value" purpose="Check if the defaut value of audio.controller is null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_controller_MediaController" purpose="Check if the attribute audio.controller is not null when set it an object MediaController" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_controls_attribute_exists" purpose="Check if the audio.controls exists" result="PASS" /><testcase id="audio_controls_attribute_type" purpose="Check if the type of audio.controls is boolean" result="PASS" /><testcase id="audio_controls_empty_string" purpose="Check if the value of attribute audio.controls is false when set it empty string" result="PASS" /><testcase id="audio_controls_false_controls_absent" purpose="Check if audio.controls returns false when the controls attribute is absent in the audio element" result="PASS" /><testcase id="audio_controls_null" purpose="Check if the value of attribute audio.controls is false when set it null" result="PASS" /><testcase id="audio_controls_reflects_false" purpose="Check that audio.controls returns false if the controls attribute is set to false" result="PASS" /><testcase id="audio_controls_reflects_true" purpose="Check that audio.controls returns true if the controls attribute is set to true" result="PASS" /><testcase id="audio_controls_true_controls_present" purpose="Check that audio.controls returns true if the controls attribute is present in the audio element" result="PASS" /><testcase id="audio_currentSrc_attribute_type" purpose="Check if the type of audio.currentsrc is string" result="PASS" /><testcase id="audio_currentSrc_default_value" purpose="Check if the default value of audio.currentSrc is a empty string" result="PASS" /><testcase id="audio_currentsrc_empty_if_no_src" purpose="Check that audio.currentSrc returns empty if there is no source" result="PASS" /><testcase id="audio_currentsrc_nonempty_after_adding_source_child" purpose="Check that audio.currentSrc returns non-empty if add source element" result="PASS" /><testcase id="audio_currentsrc_nonempty_after_setting_src" purpose="Check that audio.currentSrc returns non-empty after setting src attribute" result="PASS" /><testcase id="audio_currentsrc_property_exists" purpose="Check if the audio.currentSrc property exists" result="PASS" /><testcase id="audio_currentSrc_readonly" purpose="Check if the audio.currentSrc attribute is readonly" result="PASS" /><testcase id="audio_currentSrc_src_empty_string" purpose="Check if audio.currentSrc is empty string when set the audio.src empty string" result="PASS" /><testcase id="audio_currentSrc_src_null" purpose="Check if audio.currentSrc is empty string when set the audio.src null" result="PASS" /><testcase id="audio_currentTime_attribute_exists" purpose="Check if the audio.currentTime attribute exists" result="PASS" /><testcase id="audio_currentTime_attribute_type" purpose="Check if the type of audio.currentTime attribute is number" result="PASS" /><testcase id="audio_currentTime_basic" purpose="Check if the audio.currentTime attribute return the current playback position it was set to 10" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2953 XWLAK-2953]]</testcase><testcase id="audio_currentTime_default_value" purpose="Check if the audio.currentTime attribute initially be zero seconds in the absence of media data" result="PASS" /><testcase id="audio_currentTime_exception_INVALID_STATE_ERR" purpose="Check if the audio.currentTime attribute on setting that expecting TYPE_MISMATCH_ERR exception is to be thrown" result="PASS" /><testcase id="audio_currentTime_value_duration" purpose="Check if the audio.currentTime attribute return the end playback position it was set to duration" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2953 XWLAK-2953]]</testcase><testcase id="audio_currentTime_value_later_end" purpose="Check if the audio.currentTime attribute return the end playback position it was set to later than the end of the media resource" result="PASS" /><testcase id="audio_currentTime_value_null" purpose="Check if the audio.currentTime attribute on getting it must return 0 it was set to null" result="PASS" /><testcase id="audio_defaultMuted_attribute_exists" purpose="Check if the audio.defaultMuted attribute exists" result="PASS" /><testcase id="audio_defaultMuted_attribute_initial" purpose="Check if audio.defaultMuted initial value is false" result="PASS" /><testcase id="audio_defaultMuted_attribute_type" purpose="Check if the type of audio.defaultMuted is boolean" result="PASS" /><testcase id="audio_defaultMuted_empty_string" purpose="Check if the value of the attribute audio.defaultMuted set empty string,then compare media.defaultMuted is false" result="PASS" /><testcase id="audio_defaultMuted_false_muted_absent" purpose="Check that audio.defaultMuted returns false if the muted attribute is absent in the audio element" result="PASS" /><testcase id="audio_defaultMuted_no_dynamic_effect" purpose="Check that audio.defaultMuted returns false if the muted attribute is set to true and the muted attribute is asent in the audio element" result="PASS" /><testcase id="audio_defaultMuted_no_dynamic_effect_muted" purpose="Check that media.defaultMuted returns true if the muted attribute is set to false and the muted attribute is present in the audio element" result="PASS" /><testcase id="audio_defaultMuted_null" purpose="Check if the value of the attribute audio.defaultMuted set null,then compare media.defaultMuted is false" result="PASS" /><testcase id="audio_defaultMuted_true_muted_present" purpose="Check that audio.defaultMuted returns true if the muted attribute is present in the audio element" result="PASS" /><testcase id="audio_defaultPlaybackRate_attribute_exists" purpose="Check if the audio.defaultPlaybackRate attribute exists" result="PASS" /><testcase id="audio_defaultPlaybackRate_attribute_type" purpose="Check if the type of audio.defaultPlaybackRate attribute is number" result="PASS" /><testcase id="audio_defaultPlaybackRate_basic" purpose="Check if the audio.defaultPlaybackRate attribute that on getting it must return 0.5 it was set to 0.5" result="PASS" /><testcase id="audio_defaultPlaybackRate_default_value" purpose="Check if the audio.defaultPlaybackRate attribute return 1.0 if it hasn't yet been set" result="PASS" /><testcase id="audio_defaultPlaybackRate_not_effect_by_controller" purpose="Check if audio.defaultPlaybackRate attributes have no effect when the media element has a current media controller" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_defaultPlaybackRate_value_null" purpose="Check if the audio.defaultPlaybackRate attribute that on getting it must return 0 it was set to null" result="PASS" /><testcase id="audio_defaultPlaybackRate_value_zero" purpose="Check if the audio.defaultPlaybackRate attribute that on getting it must return 0 it was set to 0" result="PASS" /><testcase id="audio_duration_attribute_exists" purpose="Check if the audio.duration attribute exists" result="PASS" /><testcase id="audio_duration_attribute_readonly" purpose="Check if the audio.duration attribute is readonly" result="PASS" /><testcase id="audio_duration_attribute_type" purpose="Check if the type of audio.duration attribute is number" result="PASS" /><testcase id="audio_duration_attribute_value_NaN" purpose="Check if the audio.duration attribute return the Not-a-Number (NaN) value if no media data is available" result="PASS" /><testcase id="audio_duration_attribute_value_resource" purpose="Check if the audio.duration attribute return the time of the end of the media resource" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audio_element" purpose="Check if audio element returns same audio element twice" result="PASS" /><testcase id="audio_ended_attribute_exists" purpose="Check if audio.ended attribute exists" result="PASS" /><testcase id="audio_ended_attribute_readonly" purpose="Check if audio.ended is readonly" result="PASS" /><testcase id="audio_ended_attribute_type" purpose="Check if the type of audio.ended is boolean" result="PASS" /><testcase id="audio_ended_canplaythrough" purpose="Check if the attribute audio.ended should be false during canplaythrough event" result="PASS" /><testcase id="audio_ended_currentTime_duration" purpose="Check if the value of attribute audio.ended is true when set currentTime audio.durations" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audio_ended_default_value" purpose="Check if the default value of attribute audio.ended is false" result="PASS" /><testcase id="audio_ended_loaddata" purpose="Check if the value of attribute audio.ended is false during loadeddata event" result="PASS" /><testcase id="audio_ended_playing" purpose="Check if the value of attribute audio.ended is false during playing event" result="PASS" /><testcase id="audio_error_attribute_type" purpose="Check if the type of audio.error is object" result="PASS" /><testcase id="audio_error_MEDIA_ERR_SRC_NOT_SUPPORTED" purpose="Check if audio.error.code is MEDIA_ERR_SRC_NOT_SUPPORTED if the source not support" result="PASS" /><testcase id="audio_error_property_exists" purpose="Check if audio.error property exists" result="PASS" /><testcase id="audio_error_readonly" purpose="Check if the audio.error attribute is readonly" result="PASS" /><testcase id="audio_event_canplay" purpose="Check that  canplay event is triggered if autoplay attribute present and src attibute give right address of the media resource" result="PASS" /><testcase id="audio_event_canplaythrough" purpose="Check that canplaythrough event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="audio_event_loadeddata" purpose="Check that loadedata event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="audio_event_loadedmetadata" purpose="Check that loadedmetadata event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="audio_event_loadstart" purpose="Check that loadstart event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="audio_event_order_canplay_canplaythrough" purpose="Check that canplay event is triggered, then canplaythrough event triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="audio_event_order_canplay_playing" purpose="Check that canplay event is triggered, then playing event triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="audio_event_order_loadedmetadata_loadeddata" purpose="Check that loadedmetadata event is triggered, then loadeddata event triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="audio_event_order_loadstart_progress" purpose="Check that loadstart event is triggered, then progress event triggered if autoplay attribute present and src attribute give right address of the media resource" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2201 XWALK-2201]]</testcase><testcase id="audio_event_play" purpose="Check that play event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="audio_event_playing" purpose="Check that playing event is triggered if autoplay attribute present and src attibute give right address of the media resource" result="PASS" /><testcase id="audio_event_progress" purpose="Check that progress event is triggered if autoplay attribute present and src attibute give right address of the media resource" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2201 XWALK-2201]]</testcase><testcase id="audio_HAVE_CURRENT_DATA_constant_exists" purpose="Check if the audio.HAVE_CURRENT_DATA exists" result="PASS" /><testcase id="audio_HAVE_CURRENT_DATA_constant_type" purpose="Check if the type of audio.HAVE_CURRENT_DATA is number" result="PASS" /><testcase id="audio_HAVE_CURRENT_DATA_constant_value" purpose="Check if the constant value of audio.HAVE_CURRENT_DATA is 2" result="PASS" /><testcase id="audio_HAVE_ENOUGH_DATA_constant_exists" purpose="Check if the audio.HAVE_ENOUGH_DATA exists" result="PASS" /><testcase id="audio_HAVE_ENOUGH_DATA_constant_type" purpose="Check if the type of audio.HAVE_ENOUGH_DATA is number" result="PASS" /><testcase id="audio_HAVE_ENOUGH_DATA_constant_value" purpose="Check if the constant value of audio.HAVE_ENOUGH_DATA is 4" result="PASS" /><testcase id="audio_HAVE_FUTURE_DATA_constant_exists" purpose="Check if the audio.HAVE_FUTURE_DATA exists" result="PASS" /><testcase id="audio_HAVE_FUTURE_DATA_constant_type" purpose="Check if the type of audio.HAVE_FUTURE_DATA is number" result="PASS" /><testcase id="audio_HAVE_FUTURE_DATA_constant_value" purpose="Check if the constant value of audio.HAVE_FUTURE_DATA is 3" result="PASS" /><testcase id="audio_HAVE_METADATA_constant_exists" purpose="Check if the audio.HAVE_METADATA exists" result="PASS" /><testcase id="audio_HAVE_METADATA_constant_type" purpose="Check if the type of audio.HAVE_METADATA is number" result="PASS" /><testcase id="audio_HAVE_METADATA_constant_value" purpose="Check if the constant value of audio.HAVE_METADATA is 1" result="PASS" /><testcase id="audio_HAVE_NOTHING_constant_exists" purpose="Check if the audio.HAVE_NOTHING exists" result="PASS" /><testcase id="audio_HAVE_NOTHING_constant_type" purpose="Check if the type of audio.HAVE_NOTHING is number" result="PASS" /><testcase id="audio_HAVE_NOTHING_constant_value" purpose="Check if the constant value of audio.HAVE_NOTHING is 0" result="PASS" /><testcase id="audio_load_method" purpose="Check if audio.load can start selecting and loading a new media resource from scratch" result="PASS" /><testcase id="audio_load_method_exists" purpose="Check if the audio.load exists" result="PASS" /><testcase id="audio_load_method_type" purpose="Check if the type of audio.load is 'function'" result="PASS" /><testcase id="audio_loop_attribute_exists" purpose="Check if audio.loop attribute exists" result="PASS" /><testcase id="audio_loop_attribute_initial" purpose="Check if audio.loop initial value is false" result="PASS" /><testcase id="audio_loop_attribute_type" purpose="Check if the type of audio.loop is boolean" result="PASS" /><testcase id="audio_loop_base" purpose="Check that seeking event is triggered more than once if audio.loop is set to true" result="PASS" /><testcase id="audio_loop_empty_string" purpose="Check if the value of the attribute audio.loop is false if set it empty string" result="PASS" /><testcase id="audio_loop_false_loop_absent" purpose="Check if audio.loop returns false when the loop attribute is absent in the audio element" result="PASS" /><testcase id="audio_loop_no_effect_by_controller" purpose="Checks that expecting the loop attribute has no effect, when the audio element has a current media controller" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_loop_null" purpose="Check if the value of the attribute audio.loop is false if set it null" result="PASS" /><testcase id="audio_loop_reflects_false" purpose="Check if audio.loop can be set to false" result="PASS" /><testcase id="audio_loop_reflects_true" purpose="Check if audio.loop can be set to true" result="PASS" /><testcase id="audio_loop_true_loop_present" purpose="Check that audio.loop returns true if the loop attribute is present in the audio element" result="PASS" /><testcase id="audio_MediaController_buffered_exists" purpose="Check if audio.MediaController.buffered exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_buffered_readonly" purpose="Check if audio.MediaController.buffered is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_buffered_type" purpose="Check if audio.MediaController.buffered is of type object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_currentTime_exists" purpose="Check if audio.MediaController.currentTime exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_currentTime_type" purpose="Check if audio.MediaController.currentTime is of type number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_defaultPlaybackRate_exists" purpose="Check if audio.MediaController.defaultPlaybackRate exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_defaultPlaybackRate_type" purpose="Check if audio.MediaController.defaultPlaybackRate is of type number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_duration_exists" purpose="Check if audio.MediaController.duration exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_duration_readonly" purpose="Check if audio.MediaController.duration is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_duration_type" purpose="Check if audio.MediaController.duration is of type number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_ended" purpose="Check if audio.controller.onended event occurs" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="audio_MediaController_muted_exists" purpose="Check if audio.MediaController.muted exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_muted_type" purpose="Check if audio.MediaController.muted is of type boolean" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_oncanplaythrough_event" purpose="Check if audio.controller.canplaythrough event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_oncanplay_event" purpose="Check if audio.controller.canplay event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_onemptied_event" purpose="Check if audio.controller.emptied event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_onloadeddata_event" purpose="Check if audio.controller.loadeddata event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_onloadedmetadata_event" purpose="Check if audio.controller.loadedmetadata event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_onpause_event" purpose="Check if audio.controller.pause event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_onplaying_event" purpose="Check if audio.controller.playing event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_onplay_event" purpose="Check if audio.controller.play event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_onratechange_event" purpose="Check if audio.controller.ratechange event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_onvolumechange_event" purpose="Check if audio.controller.volumechange event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_onwaiting_event" purpose="Check if audio.controller.waiting event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_paused_exists" purpose="Check if audio.MediaController.paused exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_paused_readonly" purpose="Check if audio.MediaController.paused is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_paused_type" purpose="Check if audio.MediaController.paused is of type boolean" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_pause_exists" purpose="Check if audio.MediaController.pause exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_pause_type" purpose="Check if audio.MediaController.pause is of type function" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_playbackRate_exists" purpose="Check if audio.MediaController.playbackRate exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_playbackRate_type" purpose="Check if audio.MediaController.playbackRate is of type number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_playbackState_ended" purpose="Check if audio.MediaController.playbackState attribute is ended" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="audio_MediaController_playbackState_exists" purpose="Check if audio.MediaController.playbackState attribute exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_playbackState_playing" purpose="Check if audio.MediaController.playbackState attribute is playing" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_playbackState_readonly" purpose="Check if audio.MediaController.playbackState attribute is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_playbackState_type" purpose="Check if the type of audio.MediaController.playbackState attribute is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_playbackState_waiting" purpose="Check if audio.MediaController.playbackState attribute is waiting" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_played_exists" purpose="Check if audio.MediaController.played exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_played_readonly" purpose="Check if audio.MediaController.played is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_played_type" purpose="Check if audio.MediaController.played is of type number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_play_exists" purpose="Check if audio.MediaController.play exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_play_type" purpose="Check if audio.MediaController.play is of type function" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_seekable_exists" purpose="Check if audio.MediaController.seekable exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_seekable_readonly" purpose="Check if audio.MediaController.seekable is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_seekable_type" purpose="Check if audio.MediaController.seekable is of type object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_unpause_base" purpose="Check if audio.MediaController.unpause method, calling unpause method paused false callback play event" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_unpause_exists" purpose="Check if audio.MediaController.unpause method exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_unpause_type" purpose="Check if the type of audio.MediaController.unpause method is function" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_volume_exists" purpose="Check if audio.MediaController.volume exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaController_volume_type" purpose="Check if audio.MediaController.volume is of type number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_MediaError_code_exists" purpose="Check if audio.error.code exists" result="PASS" /><testcase id="audio_MediaError_code_readonly" purpose="Check if audio.error.code is readonly" result="PASS" /><testcase id="audio_MediaError_code_type" purpose="Check if the type of audio.error.code is 'number'" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_ABORTED_constant_exists" purpose="Check if audio.error.MEDIA_ERR_ABORTED exists" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_ABORTED_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_ABORTED is 'number'" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_ABORTED_constant_value" purpose="Check if audio.error.MEDIA_ERR_ABORTED const value is 1" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_DECODE_constant_exists" purpose="Check if audio.error.MEDIA_ERR_DECODE exists" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_DECODE_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_DECODE is 'number'" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_DECODE_constant_value" purpose="Check if audio.error.MEDIA_ERR_DECODE const value is 3" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_NETWORK_constant_exists" purpose="Check if audio.error.MEDIA_ERR_NETWORK exists" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_NETWORK_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_NETWORK is 'number'" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_NETWORK_constant_value" purpose="Check if audio.error.MEDIA_ERR_NETWORK const value is 2" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_exists" purpose="Check if audio.error.MEDIA_ERR_SRC_NOT_SUPPORTED exists" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_type" purpose="Check if the type of audio.error.MEDIA_ERR_SRC_NOT_SUPPORTED is 'number'" result="PASS" /><testcase id="audio_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_value" purpose="Check if audio.error.MEDIA_ERR_SRC_NOT_SUPPORTED const value is 4" result="PASS" /><testcase id="audio_mediaGroup_attribute_exists" purpose="Check if audio.mediaGroup exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_mediaGroup_attribute_type" purpose="Check if the type of audio.mediagroup is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_mediaGroup_empty_string" purpose="Check if the value of attribute of audio.mediaGroup is empty string when you set it empty string" result="PASS" /><testcase id="audio_mediaGroup_null" purpose="Check if the value of attribute audio.mediaGroup is empty string when set it null" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audio_mediaGroup_valid_value" purpose="Check if the value of audio.mediaGroup is valid" result="PASS" /><testcase id="audio_muted_attribute_exists" purpose="Check if audio.muted exists" result="PASS" /><testcase id="audio_muted_attribute_initial" purpose="Check if audio.muted initial value is false" result="PASS" /><testcase id="audio_muted_attribute_type" purpose="Check if the type of audio.muted is boolean" result="PASS" /><testcase id="audio_muted_false_muted_absent" purpose="Check if audio.muted returns false when the muted attribute is absent in the audio element" result="PASS" /><testcase id="audio_muted_innerHTML_get" purpose="Check that audio.muted can be get with muted='' (innerHTML-created)" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2906 XWALK-2906]]</testcase><testcase id="audio_muted_notpresent_get" purpose="Check that audio.muted returns false if the muted attribute is not present in the audio element" result="PASS" /><testcase id="audio_muted_notpresent_set" purpose="Check if the audio.muted can be set if the muted attribute is not present in the audio element" result="PASS" /><testcase id="audio_muted_present_get" purpose="Check that audio.muted returns true if the muted attribute is present in the audio element" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2906 XWALK-2906]]</testcase><testcase id="audio_muted_present_set" purpose="Check if the audio.muted can be set if the muted attribute is present in the audio element" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2906 XWALK-2906]]</testcase><testcase id="audio_muted_script_get1" purpose="Check that audio.muted can be get (script-created)" result="PASS" /><testcase id="audio_muted_script_get2" purpose="Check that audio.muted can be get with muted='' (script-created)" result="PASS" /><testcase id="audio_muted_script_set1" purpose="Check that audio.muted can be set (script-created)" result="PASS" /><testcase id="audio_muted_script_set2" purpose="Check that audio.muted can be set with muted='' (script-created)" result="PASS" /><testcase id="audio_muted_volumechange" purpose="Check that volumechange event is triggered if audio.muted is changed" result="PASS" /><testcase id="audio_muted_write_get" purpose="Check that audio.muted can be get with muted='' (document.write-created)" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2906 XWALK-2906]]</testcase><testcase id="audio_networkState_attribute_type" purpose="Check if the type of audio.networkState is number" result="PASS" /><testcase id="audio_networkstate_initial" purpose="Check that audio.networkState is NETWORK_EMPTY" result="PASS" /><testcase id="audio_networkState_NETWORK_LOADING" purpose="Check if audio.networkState is NETWORK_LOADING when the user agent is actively trying to download data" result="PASS" /><testcase id="audio_networkState_NETWORK_NO_SOURCE" purpose="Check if audio.networkState is NETWORK_NO_SOURCE when not yet found a resource to use" result="PASS" /><testcase id="audio_networkstate_property_exists" purpose="Check that audio.networkState property exists" result="PASS" /><testcase id="audio_networkState_readonly" purpose="Check if the audio.networkState attribute is readonly" result="PASS" /><testcase id="audio_NETWORK_EMPTY_constant_exists" purpose="Check if the audio.NETWORK_EMPTY exists" result="PASS" /><testcase id="audio_NETWORK_EMPTY_constant_type" purpose="Check if the type of audio.NETWORK_EMPTY is number" result="PASS" /><testcase id="audio_NETWORK_EMPTY_constant_value" purpose="Check if audio.NETWORK_EMPTY const value is 0" result="PASS" /><testcase id="audio_NETWORK_IDLE_constant_exists" purpose="Check if the audio.NETWORK_IDLE exists" result="PASS" /><testcase id="audio_NETWORK_IDLE_constant_type" purpose="Check if the type of audio.NETWORK_IDLE is number" result="PASS" /><testcase id="audio_NETWORK_IDLE_constant_value" purpose="Check if audio.NETWORK_IDLE const value is 1" result="PASS" /><testcase id="audio_NETWORK_LOADING_constant_exists" purpose="Check if the audio.NETWORK_LOADING exists" result="PASS" /><testcase id="audio_NETWORK_LOADING_constant_type" purpose="Check if the type of audio.NETWORK_LOADING is number" result="PASS" /><testcase id="audio_NETWORK_LOADING_constant_value" purpose="Check if audio.NETWORK_LOADING const value is 2" result="PASS" /><testcase id="audio_NETWORK_NO_SOURCE_constant_exists" purpose="Check if the audio.NETWORK_NO_SOURCE exists" result="PASS" /><testcase id="audio_NETWORK_NO_SOURCE_constant_type" purpose="Check if the type of audio.NETWORK_NO_SOURCE is number" result="PASS" /><testcase id="audio_NETWORK_NO_SOURCE_constant_value" purpose="Check if audio.NETWORK_NO_SOURCE const value is 3" result="PASS" /><testcase id="audio_ondurationchange_event" purpose="Check if the event audio.ondurationchange occurs" result="PASS" /><testcase id="audio_onemptied_event" purpose="Check if the event audio.onemptied occurs" result="PASS" /><testcase id="audio_onended_event" purpose="Check if the event audio.onended occurs when media resource is end" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="audio_onerror_event" purpose="Check if the event audio.onerror occurs" result="PASS" /><testcase id="audio_one_inside_image_not_show" purpose="Check that image content inside the audio element can not be shown." result="PASS" /><testcase id="audio_onpause_event" purpose="Check if the event audio.onpause occurs" result="PASS" /><testcase id="audio_onratechange_event_defaultPlaybackRate" purpose="Check if the event audio.onratechange occurs when defaultPlaybackRate changed" result="PASS" /><testcase id="audio_onratechange_event_playbackRate" purpose="Check if the event audio.onratechange occurs when playbackRate changed" result="PASS" /><testcase id="audio_onseeking_event" purpose="Check if the event audio.onseeking occurs" result="PASS" /><testcase id="audio_ontimeupdate_event" purpose="Check if the event audio.ontimeupdate occurs" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="audio_onvolumechange_event_muted" purpose="Check if the event audio.onvolumechange occurs when muted changed" result="PASS" /><testcase id="audio_onvolumechange_event_volume" purpose="Check if the event audio.onvolumechange occurs when volume changed" result="PASS" /><testcase id="audio_onwaiting_event" purpose="Check if the event audio.onwaiting occurs" result="PASS" /><testcase id="audio_paused_attribute_default_value" purpose="Check if the audio.paused attribute must initially be true" result="PASS" /><testcase id="audio_paused_attribute_exists" purpose="Check if the audio.paused attribute exists" result="PASS" /><testcase id="audio_paused_attribute_readonly" purpose="Check if the audio.paused attribute is readonly" result="PASS" /><testcase id="audio_paused_attribute_type" purpose="Check if the type of audio.paused attribute is boolean" result="PASS" /><testcase id="audio_paused_false_during_play" purpose="Check that audio.paused is false if play event is triggered" result="PASS" /><testcase id="audio_paused_true_during_pause" purpose="Check that audio.paused is true if pause event is triggered" result="PASS" /><testcase id="audio_pause_aac" purpose="Check if the audio element can pause the AAC decoding format and the container format is aac" result="PASS" /><testcase id="audio_pause_amr" purpose="Check if the audio element can pause the AMR-NB decoding format audio file" result="PASS" /><testcase id="audio_pause_method_exists" purpose="Check if audio.pause method exists" result="PASS" /><testcase id="audio_pause_method_type" purpose="Check if audio.pause is of type function" result="PASS" /><testcase id="audio_pause_mp3" purpose="Check if the audio element can pause the MP3 decoding format audio file" result="PASS" /><testcase id="audio_pause_mp4_aac" purpose="Check if the audio element can pause the AAC decoding format audio file" result="PASS" /><testcase id="audio_pause_ogg_vorbis" purpose="Check if user agent is able to pause playing audio playback for stream ogg vorbis" result="PASS" /><testcase id="audio_pause_wav_pcm" purpose="Check if user agent is able to pause playing audio playback for stream wav pcm" result="PASS" /><testcase id="audio_pause_webm_vorbis" purpose="Check if user agent is able to pause playing audio playback for stream webm vorbis" result="PASS" /><testcase id="audio_playbackRate_attribute_exists" purpose="Check if the audio.playbackRate attribute exists" result="PASS" /><testcase id="audio_playbackRate_attribute_type" purpose="Check if the type of audio.playbackRate attribute is number" result="PASS" /><testcase id="audio_playbackRate_basic" purpose="Check if the audio.playbackRate attribute that on getting it must return 4.0 it was set to 4.0" result="PASS" /><testcase id="audio_playbackRate_default_value" purpose="Check if the audio.playbackRate attribute value is 1.0 if it hasn't yet been set" result="PASS" /><testcase id="audio_playbackRate_not_effect_by_controller" purpose="Check if audio.playbackRate attributes have no effect when the media element has a current media controller" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_playbackRate_value_null" purpose="Check if the audio.playbackRate attribute return 0 it was set to null" result="PASS" /><testcase id="audio_playbackRate_value_zero" purpose="Check if the audio.playbackRate attribute that on getting it must return 0 it was set to 0" result="PASS" /><testcase id="audio_played_attribute_exists" purpose="Check if the type of audio.played attribute is [object TimeRanges]" result="PASS" /><testcase id="audio_played_attribute_readonly" purpose="Check if audio.played attribute is readonly" result="PASS" /><testcase id="audio_played_attribute_type" purpose="Check if the type of attribute audio.played is object" result="PASS" /><testcase id="audio_played_length_default_value" purpose="Check if default value of the attribute audio.played.length is 0" result="PASS" /><testcase id="audio_play_aac" purpose="Check if the audio element can play the AAC decoding format and the container format is aac" result="PASS" /><testcase id="audio_play_amr" purpose="Check if the audio element can play the AMR-NB decoding format audio file" result="PASS" /><testcase id="audio_play_method_exists" purpose="Check if audio.play method exists" result="PASS" /><testcase id="audio_play_method_type" purpose="Check if audio.play method is of type function" result="PASS" /><testcase id="audio_play_mp3" purpose="Check if the audio element can play the MP3 decoding format audio file" result="PASS" /><testcase id="audio_play_mp4_aac" purpose="Check if the audio element can play the AAC decoding format audio file" result="PASS" /><testcase id="audio_play_ogg_vorbis" purpose="Check if user agent is able to play audio stream ogg theora vorbis with event ended fired when ended playback" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="audio_play_webm_vorbis" purpose="Check if user agent is able to play audio stream webm vorbis with event ended fired when ended playback" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="audio_preload_attribute_type" purpose="Check if the type of audio.preload is string" result="PASS" /><testcase id="audio_preload_auto" purpose="Check if audio.preload can be set to 'auto'" result="PASS" /><testcase id="audio_preload_property_exists" purpose="Check if audio.preload property exists" result="PASS" /><testcase id="audio_preload_reflects_auto_value" purpose="Check that audio.preload reflects 'auto' value" result="PASS" /><testcase id="audio_preload_reflects_metadata" purpose="Check that audio.preload reflects 'metadata' value" result="PASS" /><testcase id="audio_preload_reflects_none" purpose="Check that audio.preload reflects 'none' value" result="PASS" /><testcase id="audio_preload_reflects_none_autoplay" purpose="Check that audio.preload reflects 'none' value even if autoplay attribute is present" result="PASS" /><testcase id="audio_readyState_attribute_type" purpose="Check if the type of audio.readyState attribute is number" result="PASS" /><testcase id="audio_readystate_property_exists" purpose="Check if the audio.readyState property exists" result="PASS" /><testcase id="audio_resume_ogg_vorbis" purpose="Check if user agent is able to resume paused audio playback for stream ogg vorbis" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="audio_resume_webm_vorbis" purpose="Check if user agent is able to resume paused audio playback for stream webm vorbis" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="audio_seekable_attribute_exists" purpose="Check if attribute audio.seekable attribute exists" result="PASS" /><testcase id="audio_seekable_attribute_readonly" purpose="Check if audio.seekable attribute is readonly" result="PASS" /><testcase id="audio_seekable_attribute_type" purpose="Check if the type of audio.seekable attribute is boolean" result="PASS" /><testcase id="audio_seekable_length_default_value" purpose="Check if the default value of attribute audio.seekable.length is 0" result="PASS" /><testcase id="audio_seeking_attribute_exists" purpose="Check if the audio.seeking attribute exists" result="PASS" /><testcase id="audio_seeking_attribute_readonly" purpose="Check if the audio.seeking attribute is readonly" result="PASS" /><testcase id="audio_seeking_attribute_type" purpose="Check if the type of audio.seeking attribute is boolean" result="PASS" /><testcase id="audio_seeking_default_value" purpose="Check if the audio.seeking attribute must initially have the value false" result="PASS" /><testcase id="audio_seeking_value_true" purpose="Check if the audio.seeking attribute returns true if the user agent is currently seeking" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1831 XWALK-1831]]</testcase><testcase id="audio_seek_ogg_vorbis" purpose="Check if user agent is able to seek audio playback with currentTime attribute for stream ogg vorbis" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audio_seek_webm_vorbis" purpose="Check if user agent is able to seek audio playback with currentTime attribute for stream webm vorbis" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audio_src_attribute_exists" purpose="Check if audio.src exists" result="PASS" /><testcase id="audio_src_attribute_type" purpose="Check if the type of audio.src is string" result="PASS" /><testcase id="audio_src_basic" purpose="Check if audio.src can get src attibute value" result="PASS" /><testcase id="audio_src_changed_trigger_loadstart" purpose="Check if a audio.src attribute of a media element is set or changed, the user agent must invoke the media element's media element load algorithm" result="PASS" /><testcase id="audio_src_default_value" purpose="Check if the default value of audio.src is a empty string" result="PASS" /><testcase id="audio_src_modify" purpose="Check if audio.src can be modified" result="PASS" /><testcase id="audio_src_null" purpose="Check if audio.src return empty string when you set it null" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audio_src_reflects_no_value" purpose="Check that audio.src is empty if there is no source" result="PASS" /><testcase id="audio_src_removal_does_not_trigger_loadstart" purpose="Check that removing audio.src attribute tiggers loadstart event" result="PASS" /><testcase id="audio_stop_ogg_vorbis" purpose="Check if user agent is able to stop audio playback for stream ogg vorbis" result="PASS" /><testcase id="audio_stop_wav_pcm" purpose="Check if user agent is able to stop audio playback for stream wav pcm" result="PASS" /><testcase id="audio_stop_webm_vorbis" purpose="Check if user agent is able to stop audio playback for stream webm vorbis" result="PASS" /><testcase id="audio_TimeRanges_end_exists" purpose="Check if audio.TimeRanges.end exists" result="PASS" /><testcase id="audio_TimeRanges_end_INDEX_SIZE_ERR" purpose="Check if throw INDEX_SIZE_ERR exception when if the audio.TimeRanges.end method index is out of range" result="PASS" /><testcase id="audio_TimeRanges_length_exists" purpose="Check if audio.TimeRanges.length exists" result="PASS" /><testcase id="audio_TimeRanges_length_readonly" purpose="Check if audio.TimeRanges.length is readonly" result="PASS" /><testcase id="audio_TimeRanges_length_type" purpose="Check if audio.TimeRanges.length is of type number" result="PASS" /><testcase id="audio_TimeRanges_start_exists" purpose="Check if audio.TimeRanges.start exists" result="PASS" /><testcase id="audio_TimeRanges_start_INDEX_SIZE_ERR" purpose="Check if throw INDEX_SIZE_ERR exception when if the audio.TimeRanges.start method index is out of range" result="PASS" /><testcase id="audio_two_inside_color_not_show" purpose="Check that color content inside the audio element can not be shown" result="PASS" /><testcase id="audio_volume_attribute_exists" purpose="Check if audio.volume attribute exists" result="PASS" /><testcase id="audio_volume_attribute_type" purpose="Check if the type of audio.volume attribute is number" result="PASS" /><testcase id="audio_volume_exception_lower" purpose="Check that user agent is able to get an INDEX_SIZE_ERR exception if set audio.volume with new value less than 0.0" result="PASS" /><testcase id="audio_volume_exception_upper" purpose="Check that user agent is able to get an INDEX_SIZE_ERR exception if set audio.volume with new value more than 1.0" result="PASS" /><testcase id="audio_volume_initial" purpose="Check if the intial value of the audio.volume is in the range 0.0 to 1.0 inclusive" result="PASS" /><testcase id="audio_volume_loudest" purpose="Check if user agent is able to set audio.volume with new value 1.0" result="PASS" /><testcase id="audio_volume_normal" purpose="Check if user agent is able to set audio.volume with new value in the range 0.0 to 1.0 inclusive" result="PASS" /><testcase id="audio_volume_silent" purpose="Check if user agent is able to set audio.volume with new value 0.0" result="PASS" /><testcase id="audio_volume_volumechange" purpose="Check that volumechange event is triggered if audio.volume is changed" result="PASS" /><testcase id="canplaytype_application_octet_stream_with_codecs_mp4a" purpose="Check that audio.canPlayType method support mp4 format" result="PASS" /><testcase id="canplaytype_application_octet_stream_with_codecs_vorbis" purpose="Check that audio.canPlayType method support vorbis format" result="PASS" /><testcase id="content_audio_readystate_during_canplay" purpose="Check that audio.readyState is greater than or equal to HAVE_FUTURE_DATA if canplay event is triggered" result="PASS" /><testcase id="content_audio_readystate_during_canplaythrough" purpose="Check that audio.readyState is HAVE_ENOUGH_DATA if canplaythrough event is triggered" result="PASS" /><testcase id="content_audio_readystate_during_loadeddata" purpose="Check that audio.readyState is greater than or equal to HAVE_CURRENT_DATA if loadeddata event is triggered" result="PASS" /><testcase id="content_audio_readystate_during_loadedmetadata" purpose="Check that audio.readyState is greater than or equal to HAVE_METADATA_DATA if loadedMETAdata event is triggered" result="PASS" /><testcase id="content_audio_readystate_during_playing" purpose="Check that audio.readyState is greater than or equal to HAVE_FUTURE_DATA if playing event is triggered" result="PASS" /><testcase id="content_audio_readystate_initial" purpose="Check that audio.readyState initial value is HAVE_NOTHING" result="PASS" /><testcase id="content_audio_src_reflects_attribute_not_source_elements" purpose="Check that audio.src reflects the content attribute of the same name" result="PASS" /><testcase id="error_null_no_source" purpose="Check that the property of audio.error is null if no source" result="PASS" /></category><category name="W3C_HTML5 APIs/Media/HTML5 The video element"><testcase id="video_000" purpose="Check that a video loads but is not playing, since the default state is paused" result="PASS" /><testcase id="video_011" purpose="The 'src' IDL attribute of media elements reflects the content attribute (relative URI)" result="PASS" /><testcase id="video_controls_present_manual" purpose="Check if the controls attribute is present in the video element that expecting the user agent exposes a controller user interface" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="video_loop_current_media_controller" purpose="Check if the video element has a current media controller that expecting the loop attribute has no effect" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_muted_overriding_volume_manual" purpose="Check if the muted attribute is present in the video element with volume is set to loudest that expecting the user hears no sound" result="PASS" /><testcase id="video_muted_present_manual" purpose="Check if the muted attribute is present in the video element that expecting the user hears no sound" result="PASS" /><testcase id="video_playback_h263" purpose="Check if video element can play the H.263 decoding format video file." result="PASS" /><testcase id="video_playback_h264" purpose="Check if video element can play the H.264 decoding format video file." result="PASS" /><testcase id="video_playback_mpeg4" purpose="Check if video element can play the MPEG4 decoding format video file." result="PASS" /><testcase id="video_volume_loudest_manual" purpose="Check if the volume attribute is set to 1.0 as loudest in the video element that expecting the user hears sound loudly" result="PASS" /><testcase id="video_volume_silent_manual" purpose="Check if the volume attribute is set to 0.0 as silent in the video element that expecting the user hears no sound" result="PASS" /><testcase id="canplaytype_application_octet_stream_with_codecs_avc_mp4a" purpose="Check if the video.canPlayType supports application/octet-stream with codecs='avc1.42E01E, mp4a.40.2'" result="PASS" /><testcase id="canplaytype_application_octet_stream_with_codecs_theora_vorbis" purpose="Check if the video.canPlayType supports application/octet-stream with codecs='theora, vorbis'" result="PASS" /><testcase id="canplaytype_application_octet_stream_with_codecs_vp8_vorbis" purpose="Check if video.canPlayType supports application/octet-stream with codecs='vp8, vorbis'" result="PASS" /><testcase id="canplaytype_codecs_order_avc_mp4a" purpose="Check if the video.canPlayType supports video/webm after ordered the codecs's parameter(avc1.42E01E, mp4a.40.2)" result="PASS" /><testcase id="canplaytype_codecs_order_theora_vorbis" purpose="Check if the video.canPlayType supports video/webm after ordered the codecs's parameter(theora, vorbis)" result="PASS" /><testcase id="canplaytype_codecs_order_vp8_vorbis" purpose="Check if the video.canPlayType supports video/webm after ordered the codecs's parameter(vp8, vorbis)" result="PASS" /><testcase id="canplaytype_two_codecs_theora_vorbis_implies_one_theora" purpose="Check if the video.canPlayType has ability to play two codecs(theora, vorbis) implies the ability to play one(theora)" result="PASS" /><testcase id="canplaytype_two_codecs_theora_vorbis_implies_one_vorbis" purpose="Check if the video.canPlayType has ability to play two codecs(theora, vorbis) implies the ability to play one(vorbis)" result="PASS" /><testcase id="canplaytype_two_codecs_vp8_vorbis_implies_one_vorbis" purpose="Check if the video.canPlayType has ability to play two codecs(vp8, vorbis) implies the ability to play one(vorbis)" result="PASS" /><testcase id="canplaytype_two_codecs_vp8_vorbis_implies_one_vp8" purpose="Check if the video.canPlayType has ability to play two codecs(vp8, vorbis) implies the ability to play one(vp8)" result="PASS" /><testcase id="canplaytype_webm_supported_but_no_codecs_parameter" purpose="Check if the video.canPlayType supports video webm" result="PASS" /><testcase id="error_null" purpose="Check that the video.error return null if there is no source" result="PASS" /><testcase id="video_addTextTrack_captions" purpose="Check if the video.addTextTrack invoked successfully when the first arg is captions" result="PASS" /><testcase id="video_addTextTrack_chapters" purpose="Check if the video.addTextTrack invoked successfully when the first arg is chapters" result="PASS" /><testcase id="video_addTextTrack_descriptions" purpose="Check if the video.addTextTrack invoked successfully when the first arg is descriptions" result="PASS" /><testcase id="video_addTextTrack_exist" purpose="Check if the vedio.addTextTrack method exists" result="PASS" /><testcase id="video_addTextTrack_metadata" purpose="Check if the video.addTextTrack invoked successfully when the first arg is metadata" result="PASS" /><testcase id="video_addTextTrack_subtitles" purpose="Check if the video.addTextTrack invoked successfully when the first arg is subtitles" result="PASS" /><testcase id="video_addTextTrack_three_argument" purpose="Check if the video.addTextTrack invoked successfully when it has three argument" result="PASS" /><testcase id="video_addTextTrack_two_argument" purpose="Check if the video.addTextTrack invoked successfully when the third arg is ommited" result="PASS" /><testcase id="video_addTextTrack_type" purpose="Check if the vedio.addTextTrack attribute is of type function" result="PASS" /><testcase id="video_autoplay_attribute_exists" purpose="Check if the video.autoplay attritbute exists" result="PASS" /><testcase id="video_autoplay_attribute_type" purpose="Check if the type of video.autoplay attribute is boolean" result="PASS" /><testcase id="video_autoplay_default_value" purpose="Check if the video.autoplay attribute default is false" result="PASS" /><testcase id="video_autoplay_empty_string" purpose="Check if the attribute video.autoplay is false when set it empty string" result="PASS" /><testcase id="video_autoplay_null" purpose="Check if the value of attribute of video.autoplay is false when you set it null" result="PASS" /><testcase id="video_autoplay_onloadedmetadata" purpose="Check if video.autoplay attribute invoked,then video.onloadedmetadata() function triggered" result="PASS" /><testcase id="video_autoplay_true_autoplay_present" purpose="Check if video.autoplay returns true when the controls attribute is present in the video element" result="PASS" /><testcase id="video_buffered_end_type" purpose="Check if the type of video.buffered.end is function" result="PASS" /><testcase id="video_buffered_exists" purpose="Check if the video.buffered attribute exists" result="PASS" /><testcase id="video_buffered_length_default_value" purpose="Check if the video.buffered length is zero,typically this will be a single range anchored at the zero point" result="PASS" /><testcase id="video_buffered_readonly" purpose="Check if the video.buffered attribute is readonly" result="PASS" /><testcase id="video_buffered_start_type" purpose="Check if the type of video.buffered.start is function" result="PASS" /><testcase id="video_buffered_type" purpose="Check if the type of video.buffered is a TimeRanges object" result="PASS" /><testcase id="video_canplaytype_application_octet_stream" purpose="Check if the video.canPlayType supports application/octet-stream" result="PASS" /><testcase id="video_canplaytype_bogus_type" purpose="Check if the video.canPlayType supports bogus type" result="PASS" /><testcase id="video_canPlayType_codecs_mp4-avc" purpose="Check if the video.canPlayType supports video/mp4 of codecs's parameter(avc1.42E01E)" result="PASS" /><testcase id="video_canPlayType_codecs_mp4-avc-mp4a" purpose="Check if the video.canPlayType supports video/mp4 of codecs's parameter(avc1.42E01E, mp4a.40.2)" result="PASS" /><testcase id="video_canPlayType_codecs_mp4-avc-mp4v" purpose="Check if the video.canPlayType supports video/mp4 of codecs's parameter(avc1.42E01E, mp4a.40)" result="PASS" /><testcase id="video_canPlayType_empty_string" purpose="Check if video.canPlayType return empty string if arguments is a empty string" result="PASS" /><testcase id="video_canplaytype_method_exists" purpose="Check if the video.canPlayType supports existence of canPlayType method" result="PASS" /><testcase id="video_canPlayType_method_type" purpose="Check if the type of video.canPlayType is 'function'" result="PASS" /><testcase id="video_canplaytype_mp4_supported_but_no_codecs_parameter" purpose="Check if the video.canPlayType supports video mp4" result="PASS" /><testcase id="video_canPlayType_null" purpose="Check if video.canPlayType return empty string if arguments is null" result="PASS" /><testcase id="video_canplaytype_ogg_supported_but_no_codecs_parameter" purpose="Check if the video.canPlayType supports video ogg" result="PASS" /><testcase id="video_controller_attribute_exists" purpose="Check if the video.controller attribute exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_controller_attribute_type" purpose="Check if the type of video.controller is object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_controller_default_value" purpose="Check if the defaut value of video.controller is null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_controller_MediaControllerl" purpose="Check if the attribute video.controller is not null when set it an object MediaController" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_controls_attribute_exists" purpose="Check if the video.controls attribute exists" result="PASS" /><testcase id="video_controls_attribute_type" purpose="Check if the type of video.controls is boolean" result="PASS" /><testcase id="video_controls_empty_string" purpose="Check if the value of attribute video.controls is false when set it empty string" result="PASS" /><testcase id="video_controls_false_controls_absent" purpose="Check if video.controls returns false when the controls attribute is absent in the video element" result="PASS" /><testcase id="video_controls_null" purpose="Check if the value of attribute video.controls is false when set it null" result="PASS" /><testcase id="video_controls_reflects_false" purpose="Check if the video.controls can be set to false" result="PASS" /><testcase id="video_controls_reflects_true" purpose="Check if the video.controls can be set to true" result="PASS" /><testcase id="video_controls_true_controls_present" purpose="Check that the video.controls returns true if the controls attribute is present in the video element" result="PASS" /><testcase id="video_currentSrc_attribute_type" purpose="Check if the type of video.currentSrc is string" result="PASS" /><testcase id="video_currentsrc_empty_if_no_src" purpose="Check that the video.currentSrc returns empty if there is no source" result="PASS" /><testcase id="video_currentsrc_nonempty_after_adding_source_child" purpose="Check that the video.currentSrc returns non-empty if add source element" result="PASS" /><testcase id="video_currentsrc_nonempty_after_setting_src" purpose="Check that the video.currentSrc returns non-empty if src attribute give right address of the media resource" result="PASS" /><testcase id="video_currentsrc_property_exists" purpose="Check if the video.currentSrc property exists" result="PASS" /><testcase id="video_currentSrc_readonly" purpose="Check if the video.currentSrc attribute is readonly" result="PASS" /><testcase id="video_currentSrc_src_null" purpose="Check if video.currentSrc is empty string when set the video.src null" result="PASS" /><testcase id="video_currentTime_attribute_exists" purpose="Check if the video.currentTime attribute exists" result="PASS" /><testcase id="video_currentTime_attribute_type" purpose="Check if the type of video.currentTime attribute is number" result="PASS" /><testcase id="video_currentTime_basic" purpose="Check if the video.currentTime attribute return the current playback position it was set to 10" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2953 XWLAK-2953]]</testcase><testcase id="video_currentTime_less_than_zero" purpose="Check if user agent displays correctly when browser does not support media elements (Seeking to a value less than 'startTime' seeks to 'startTime')" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="video_currentTime_value_duration" purpose="Check if the video.currentTime attribute return the end playback position it was set to duration" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="video_currentTime_value_later_end" purpose="Check if the video.currentTime attribute return the end playback position it was set to later than the end of the media resource" result="PASS" /><testcase id="video_currentTime_value_null" purpose="Check if the video.currentTime attribute on getting it must return 0 it was set to null" result="PASS" /><testcase id="video_defaultMuted_attribute_exists" purpose="Check if the video.defaultMuted attribute exists" result="PASS" /><testcase id="video_defaultMuted_attribute_initial" purpose="Check if the video.defaultMuted initial value is false" result="PASS" /><testcase id="video_defaultMuted_attribute_type" purpose="Check if the type of video.defaultMuted is boolean" result="PASS" /><testcase id="video_defaultMuted_empty_string" purpose="Check if the value of the attribute video.defaultMuted set empty string,then compare media.defaultMuted is false" result="PASS" /><testcase id="video_defaultMuted_false_muted_absent" purpose="Check that the video.defaultMuted returns false if the muted attribute is absent in the video element" result="PASS" /><testcase id="video_defaultMuted_no_dynamic_effect" purpose="Check that the video.defaultMuted returns false if the muted attribute is set to true and the muted attribute is asent in the video element" result="PASS" /><testcase id="video_defaultMuted_no_dynamic_effect_muted" purpose="Check that the media.defaultMuted returns true if the muted attribute is set to false and the muted attribute is present in the video element" result="PASS" /><testcase id="video_defaultMuted_null" purpose="Check if the value of the attribute video.defaultMuted set null,then compare media.defaultMuted is false" result="PASS" /><testcase id="video_defaultMuted_true_muted_present" purpose="Check that the video.defaultMuted returns true if the muted attribute is present in the video element" result="PASS" /><testcase id="video_defaultPlaybackRate_attribute_exists" purpose="Check if the video.defaultPlaybackRate attribute exists" result="PASS" /><testcase id="video_defaultPlaybackRate_attribute_type" purpose="Check if the type of video.defaultPlaybackRate attribute is number" result="PASS" /><testcase id="video_defaultPlaybackRate_basic" purpose="Check if the video.defaultPlaybackRate attribute that on getting it must return 0.5 it was set to 0.5" result="PASS" /><testcase id="video_defaultPlaybackRate_default_value" purpose="Check if the video.defaultPlaybackRate attribute return 1.0 if it hasn't yet been set" result="PASS" /><testcase id="video_defaultPlaybackRate_not_effect_by_controller" purpose="Check if video.defaultPlaybackRate attributes have no effect when the media element has a current media controller" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_defaultPlaybackRate_value_null" purpose="Check if the video.defaultPlaybackRate attribute that on getting it must return 0 it was set to null" result="PASS" /><testcase id="video_defaultPlaybackRate_value_zero" purpose="Check if the video.defaultPlaybackRate attribute that on getting it must return 0 it was set to 0" result="PASS" /><testcase id="video_duration_attribute_exists" purpose="Check if the video.duration attribute exists" result="PASS" /><testcase id="video_duration_attribute_readonly" purpose="Check if the video.duration attribute is readonly" result="PASS" /><testcase id="video_duration_attribute_type" purpose="Check if the type of video.duration attribute is number" result="PASS" /><testcase id="video_duration_attribute_value_NaN" purpose="Check if the video.duration attribute return the Not-a-Number (NaN) value if no media data is available" result="PASS" /><testcase id="video_duration_attribute_value_resource" purpose="Check if the video.duration attribute return the time of the end of the media resource" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="video_element" purpose="Check if element returns same video element twice" result="PASS" /><testcase id="video_ended_attribute_exists" purpose="Check if  the video.ended attribute exists" result="PASS" /><testcase id="video_ended_attribute_readonly" purpose="Check if video.ended is readonly" result="PASS" /><testcase id="video_ended_attribute_type" purpose="Check if the type of video.ended is boolean" result="PASS" /><testcase id="video_ended_canplaythrough" purpose="Check if the attribute video.ended should be false during canplaythrough event" result="PASS" /><testcase id="video_ended_currentTime_duration" purpose="Check if the value of attribute video.ended is true when set currentTime video.durations" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="video_ended_default_value" purpose="Check if the default value of attribute video.ended is false" result="PASS" /><testcase id="video_ended_loaddata" purpose="Check if the value of attribute video.ended is false during loadeddata event" result="PASS" /><testcase id="video_ended_playing" purpose="Check if the value of attribute video.ended is false during playing event" result="PASS" /><testcase id="video_error_attribute_type" purpose="Check if the type of video.error is object" result="PASS" /><testcase id="video_error_property_exists" purpose="Check if the video.error property exists" result="PASS" /><testcase id="video_error_readonly" purpose="Check if the video.error attribute is readonly" result="PASS" /><testcase id="video_event_canplay" purpose="Check that the canplay event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="video_event_canplaythrough" purpose="Check that the canplaythrough event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="video_event_loadeddata" purpose="Check that the loadeddata event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="video_event_loadedmetadata" purpose="Check that the loadedmetadata event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="video_event_loadstart" purpose="Check that the loadstart event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="video_event_order_canplay_canplaythrough" purpose="Check that the canplay event is triggered before the canplaythrough event if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="video_event_order_canplay_playing" purpose="Check that the canplay event is triggered before the playing event if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="video_event_order_loadedmetadata_loadeddata" purpose="Check that the loadedmetadata event is triggered before the loadeddata event if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="video_event_order_loadstart_progress" purpose="Check that the loadstart event triggered before the progress event if autoplay attribute present and src attribute give right address of the media resource" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2201 XWALK-2201]]</testcase><testcase id="video_event_play" purpose="Check that play event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="video_event_playing" purpose="Check that the playing event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="PASS" /><testcase id="video_event_progress" purpose="Check that the progress event is triggered if autoplay attribute present and src attribute give right address of the media resource" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2201 XWALK-2201]]</testcase><testcase id="video_HAVE_CURRENT_DATA_constant_exists" purpose="Check if the video.HAVE_CURRENT_DATA exists" result="PASS" /><testcase id="video_HAVE_CURRENT_DATA_constant_type" purpose="Check if the type of video.HAVE_CURRENT_DATA is number" result="PASS" /><testcase id="video_HAVE_CURRENT_DATA_constant_value" purpose="Check if the value of video.HAVE_CURRENT_DATA is 2" result="PASS" /><testcase id="video_HAVE_ENOUGH_DATA_constant_exists" purpose="Check if the video.HAVE_ENOUGH_DATA exists" result="PASS" /><testcase id="video_HAVE_ENOUGH_DATA_constant_type" purpose="Check if the type of  video.HAVE_ENOUGH_DATA is number" result="PASS" /><testcase id="video_HAVE_ENOUGH_DATA_constant_value" purpose="Check if the value of video.HAVE_ENOUGH_DATA is 4" result="PASS" /><testcase id="video_HAVE_FUTURE_DATA_constant_exists" purpose="Check if the video.HAVE_FUTURE_DATA exists" result="PASS" /><testcase id="video_HAVE_FUTURE_DATA_constant_type" purpose="Check if the type of video.HAVE_FUTURE_DATA is number" result="PASS" /><testcase id="video_HAVE_FUTURE_DATA_constant_value" purpose="Check if the value of video.HAVE_FUTURE_DATA is 3" result="PASS" /><testcase id="video_HAVE_METADATA_constant_exists" purpose="Check if the video.HAVE_METADATA exists" result="PASS" /><testcase id="video_HAVE_METADATA_constant_type" purpose="Check if the type of video.HAVE_METADATA is number" result="PASS" /><testcase id="video_HAVE_METADATA_constant_value" purpose="Check if the value of video.HAVE_METADATA is 1" result="PASS" /><testcase id="video_HAVE_NOTHING_constant_exists" purpose="Check if the video.HAVE_NOTHING exists" result="PASS" /><testcase id="video_HAVE_NOTHING_constant_type" purpose="Check if the type of video.HAVE_NOTHING is number" result="PASS" /><testcase id="video_HAVE_NOTHING_constant_value" purpose="Check if the constant value of video.HAVE_NOTHING is 0" result="PASS" /><testcase id="video_height_attribute_exists" purpose="Check if the video.height attribute exists" result="PASS" /><testcase id="video_height_attribute_type" purpose="Check if the type of video.height is number" result="PASS" /><testcase id="video_height_initial" purpose="Check if the video.height intial value is a valid non-negative integer in the range 0 to 2147483647 inclusive" result="PASS" /><testcase id="video_height_reflects_float" purpose="Check that the video.height returns a shortest integer number if the height attribute is set to a floating-point number" result="PASS" /><testcase id="video_height_reflects_integer" purpose="Check that the video.height returns the integer number if the height attribute is set to a valid non-negative integer in the range 0 to 2147483647" result="PASS" /><testcase id="video_height_reflects_invalid" purpose="Check that the video.height returns zero if the height attribute is set to an invlid non-negative integer" result="PASS" /><testcase id="video_height_reflects_max" purpose="Check that the video.height returns maximum non-negative integer if the height attribute is set to the maximum non-negative integer" result="PASS" /><testcase id="video_height_reflects_negative" purpose="Check that the video.height returns zero if the height attribute is set to a negative integer" result="PASS" /><testcase id="video_height_reflects_upper" purpose="Check that the video.height returns zero if the height attribute is set to a number greater than the maximum non-negative integer" result="PASS" /><testcase id="video_height_reflects_zero" purpose="Check that the video.height returns zero if the height attribute is set to zero" result="PASS" /><testcase id="video_load_method" purpose="Check if video.load can start selecting and loading a new media resource from scratch" result="PASS" /><testcase id="video_load_method_exists" purpose="Check if the video.load attribute exists" result="PASS" /><testcase id="video_load_method_type" purpose="Check if the type of video.load is 'function'" result="PASS" /><testcase id="video_loop_attribute_exists" purpose="Check if the video.loop attribute exists" result="PASS" /><testcase id="video_loop_attribute_initial" purpose="Check if the video.loop initial value is false" result="PASS" /><testcase id="video_loop_attribute_type" purpose="Check if the type of video.loop is boolean" result="PASS" /><testcase id="video_loop_base" purpose="Check that the seeking event is triggered more than once  if the video.loop is set to true" result="PASS" /><testcase id="video_loop_empty_string" purpose="Check if the value of the attribute video.loop is false if set it empty string" result="PASS" /><testcase id="video_loop_false_loop_absent" purpose="Check if video.loop returns false when the loop attribute is absent in the video element" result="PASS" /><testcase id="video_loop_null" purpose="Check if the value of the attribute video.loop is false if set it null" result="PASS" /><testcase id="video_loop_reflects_false" purpose="Check if the video.loop can be set to false" result="PASS" /><testcase id="video_loop_reflects_true" purpose="Check if the video.loop can be set to true" result="PASS" /><testcase id="video_loop_true_loop_present" purpose="Check that the video.loop returns true if the loop attribute is present in the video element" result="PASS" /><testcase id="video_MediaController_buffered_exists" purpose="Check if the video.MediaController.buffered exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_buffered_readonly" purpose="Check if video.MediaController.buffered is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_buffered_type" purpose="Check if video.MediaController.buffered is of type object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_currentTime_exists" purpose="Check if the video.MediaController.currentTime exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_currentTime_type" purpose="Check if video.MediaController.currentTime is of type number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_defaultPlaybackRate_exists" purpose="Check if the video.MediaController.defaultPlaybackRate exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_defaultPlaybackRate_type" purpose="Check if video.MediaController.defaultPlaybackRate is of type number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_duration_exists" purpose="Check if the video.MediaController.duration exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_duration_readonly" purpose="Check if video.MediaController.duration is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_duration_type" purpose="Check if video.MediaController.duration is of type number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_ended" purpose="Check if video.controller.onended event occurs" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="video_MediaController_muted_exists" purpose="Check if the video.MediaController.muted exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_muted_type" purpose="Check if video.MediaController.muted is of type boolean" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_oncanplaythrough_event" purpose="Check if video.controller.canplaythrough event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_oncanplay_event" purpose="Check if video.controller.canplay event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_onemptied_event" purpose="Check if video.controller.emptied event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_onloadeddata_event" purpose="Check if video.controller.loadeddata event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_onloadedmetadata_event" purpose="Check if video.controller.loadedmetadata event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_onpause_event" purpose="Check if video.controller.pause event occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_onplaying_event" purpose="Check if video.controller.onplaying is exists" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_onplay_event" purpose="Check if video.controller.onplay occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_onratechange_event" purpose="Check if video.controller.onratechange is exists" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_onvolumechange_event" purpose="Check if video.controller.onvolumechange is exists" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_onwaiting_event" purpose="Check if video.controller.onwaiting occurs" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_paused_exists" purpose="Check if the video.MediaController.paused exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_paused_readonly" purpose="Check if video.MediaController.paused is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_paused_type" purpose="Check if video.MediaController.paused is of type boolean" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_pause_exists" purpose="Check if the video.MediaController.pause exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_pause_type" purpose="Check if video.MediaController.pause is of type function" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_playbackRate_exists" purpose="Check if the video.MediaController.playbackRate exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_playbackRate_type" purpose="Check if video.MediaController.playbackRate is of type number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_playbackState_ended" purpose="Check if video.MediaController.playbackState attribute is ended" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="video_MediaController_playbackState_exists" purpose="Check if the video.MediaController.playbackState attribute exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_playbackState_playing" purpose="Check if video.MediaController.playbackState attribute is playing" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_playbackState_readonly" purpose="Check if video.MediaController.playbackState attribute is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_playbackState_type" purpose="Check if the type of video.MediaController.playbackState attribute is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_playbackState_waiting" purpose="Check if video.MediaController.playbackState attribute is waiting" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_played_exists" purpose="Check if the video.MediaController.played exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_played_readonly" purpose="Check if video.MediaController.played is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_played_type" purpose="Check if video.MediaController.played is of type object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_play_exists" purpose="Check if the video.MediaController.play exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_play_type" purpose="Check if video.MediaController.play is of type function" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_seekable_exists" purpose="Check if the video.MediaController.seekable exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_seekable_readonly" purpose="Check if video.MediaController.seekable is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_seekable_type" purpose="Check if video.MediaController.seekable is of type object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_unpause_base" purpose="Check if video.MediaController.unpause method, calling unpause method paused false callback play event" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_unpause_exists" purpose="Check if the video.MediaController.unpause method exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_unpause_type" purpose="Check if the type of video.MediaController.unpause method is function" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_volume_exists" purpose="Check if the video.MediaController.volume exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaController_volume_type" purpose="Check if video.MediaController.volume is of type number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_MediaError_code_exists" purpose="Check if the video.error.code exists" result="PASS" /><testcase id="video_MediaError_code_readonly" purpose="Check if video.error.code is readonly" result="PASS" /><testcase id="video_MediaError_code_type" purpose="Check if the type of video.error.code is 'number'" result="PASS" /><testcase id="video_MediaError_MEDIA_ERR_ABORTED_constant_exists" purpose="Check if the video.error.MEDIA_ERR_ABORTED exists" result="PASS" /><testcase id="video_MediaError_MEDIA_ERR_ABORTED_constant_type" purpose="Check if the type of video.error.MEDIA_ERR_ABORTED is 'number'" result="PASS" /><testcase id="video_MediaError_MEDIA_ERR_ABORTED_constant_value" purpose="Check if video.error.MEDIA_ERR_ABORTED const value is 1" result="PASS" /><testcase id="video_MediaError_MEDIA_ERR_DECODE_constant_exists" purpose="Check if the video.error.MEDIA_ERR_DECODE exists" result="PASS" /><testcase id="video_MediaError_MEDIA_ERR_DECODE_constant_type" purpose="Check if the type of video.error.MEDIA_ERR_DECODE is 'number'" result="PASS" /><testcase id="video_MediaError_MEDIA_ERR_DECODE_constant_value" purpose="Check if video.error.MEDIA_ERR_DECODE const value is 3" result="PASS" /><testcase id="video_MediaError_MEDIA_ERR_NETWORK_constant_exists" purpose="Check if the video.error.MEDIA_ERR_NETWORK exists" result="PASS" /><testcase id="video_MediaError_MEDIA_ERR_NETWORK_constant_type" purpose="Check if the type of video.error.MEDIA_ERR_NETWORK is 'number'" result="PASS" /><testcase id="video_MediaError_MEDIA_ERR_NETWORK_constant_value" purpose="Check if video.error.MEDIA_ERR_NETWORK const value is 2" result="PASS" /><testcase id="video_MediaError_MEDIA_ERR_SRC_NOT_SUPPORTED_constant_exists" purpose="Check if the video.error.MEDIA_ERR_SRC_NOT_SUPPORTED exists" result="PASS" /><testcase id="video_mediaGroup_attribute_exists" purpose="Check if the video.mediaGroup exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_mediaGroup_attribute_type" purpose="Check if the type of video.mediaGroup is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_mediaGroup_empty_string" purpose="Check if the value of attribute of video.mediaGroup is empty string when you set it empty string" result="PASS" /><testcase id="video_mediaGroup_null" purpose="Check if the value of attribute video.mediaGroup when set it null" result="PASS" /><testcase id="video_mediaGroup_valid_value" purpose="Check if the value of video.mediaGroup is valid" result="PASS" /><testcase id="video_muted_attribute_exists" purpose="Check if the video.muted exists" result="PASS" /><testcase id="video_muted_attribute_initial" purpose="Check if the video.muted initial value is false" result="PASS" /><testcase id="video_muted_attribute_type" purpose="Check if the type of video.muted is boolean" result="PASS" /><testcase id="video_muted_innerHTML_get" purpose="Check that video.muted can be get with muted='' (innerHTML-created)" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2906 XWALK-2906]]</testcase><testcase id="video_muted_load_notupdate" purpose="Check if the load algorithm does not update the muted IDL attribute to match the content attribute" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2906 XWALK-2906]]</testcase><testcase id="video_muted_notpresent_get" purpose="Check that video.muted returns false if the muted attribute is not present in the video element" result="PASS" /><testcase id="video_muted_notpresent_set" purpose="Check if the video.muted can be set if the muted attribute is not present in the video element" result="PASS" /><testcase id="video_muted_present_get" purpose="Check that video.muted returns true if the muted attribute is present in the video element" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2906 XWALK-2906]]</testcase><testcase id="video_muted_present_set" purpose="Check if the video.muted can be set if the muted attribute is present in the video element" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2906 XWALK-2906]]</testcase><testcase id="video_muted_script_get1" purpose="Check that video.muted can be get (script-created)" result="PASS" /><testcase id="video_muted_script_get2" purpose="Check that video.muted can be get with muted='' (script-created)" result="PASS" /><testcase id="video_muted_script_set1" purpose="Check that video.muted can be set (script-created)" result="PASS" /><testcase id="video_muted_script_set2" purpose="Check that video.muted can be set with muted='' (script-created)" result="PASS" /><testcase id="video_muted_volumechange" purpose="Check that the volumechange event is triggered at the media element if the video.muted is changed" result="PASS" /><testcase id="video_muted_write_get" purpose="Check that video.muted can be get with muted='' (document.write-created)" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2906 XWALK-2906]]</testcase><testcase id="video_networkState_attribute_type" purpose="Check if the type of video.networkState is number" result="PASS" /><testcase id="video_networkstate_initial" purpose="Check if the default value of video.networState is NETWORK_EMPTY" result="PASS" /><testcase id="video_networkstate_property_exists" purpose="Check if the video.networkState property exists" result="PASS" /><testcase id="video_networkState_readonly" purpose="Check if the video.networkState attribute is readonly" result="PASS" /><testcase id="video_NETWORK_EMPTY_constant_exists" purpose="Check if the video.NETWORK_EMPTY exists" result="PASS" /><testcase id="video_NETWORK_EMPTY_constant_type" purpose="Check if the type of video.NETWORK_EMPTY is number" result="PASS" /><testcase id="video_NETWORK_EMPTY_constant_value" purpose="Check if the video.NETWORK_EMPTY const value is 0" result="PASS" /><testcase id="video_NETWORK_IDLE_constant_exists" purpose="Check if the video.NETWORK_IDLE exists" result="PASS" /><testcase id="video_NETWORK_IDLE_constant_type" purpose="Check if the type of video.NETWORK_IDLE is number" result="PASS" /><testcase id="video_NETWORK_IDLE_constant_value" purpose="Check if the value of video.NETWORK_IDLE const is 1" result="PASS" /><testcase id="video_NETWORK_LOADING_constant_exists" purpose="Check if the video.NETWORK_LOADING exists" result="PASS" /><testcase id="video_NETWORK_LOADING_constant_type" purpose="Check if the type of video.NETWORK_LOADING is number" result="PASS" /><testcase id="video_NETWORK_LOADING_constant_value" purpose="Check if the value of video.NETWORK_LOADING const is 2" result="PASS" /><testcase id="video_NETWORK_NO_SOURCE_constant_exists" purpose="Check if the video.NETWORK_NO_SOURCE exists" result="PASS" /><testcase id="video_NETWORK_NO_SOURCE_constant_type" purpose="Check if the type of video.NETWORK_NO_SOURCE is number" result="PASS" /><testcase id="video_NETWORK_NO_SOURCE_constant_value" purpose="Check if the value of video.NETWORK_NO_SOURCE const is 3" result="PASS" /><testcase id="video_ondurationchange_event" purpose="Check if the event video.ondurationchange occurs" result="PASS" /><testcase id="video_onemptied_event" purpose="Check if the event video.onemptied occurs" result="PASS" /><testcase id="video_onended_event" purpose="Check if the event video.onended occurs when media resource is end" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="video_onerror_event" purpose="Check if the event video.onerror occurs" result="PASS" /><testcase id="video_onpause_event" purpose="Check if the event video.onpause occurs" result="PASS" /><testcase id="video_onratechange_event_defaultPlaybackRate" purpose="Check if the event video.onratechange occurs when defaultPlaybackRate changed" result="PASS" /><testcase id="video_onratechange_event_playbackRate" purpose="Check if the event video.onratechange occurs when playbackRate changed" result="PASS" /><testcase id="video_onseeking_event" purpose="Check if the event video.onseeking occurs" result="PASS" /><testcase id="video_ontimeupdate_event" purpose="Check if the event video.ontimeupdate occurs" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="video_onvolumechange_event_muted" purpose="Check if the event video.onvolumechange occurs when muted changed" result="PASS" /><testcase id="video_onvolumechange_event_volume" purpose="Check if the event video.onvolumechange occurs when volume changed" result="PASS" /><testcase id="video_onwaiting_event" purpose="Check if the event video.onwaiting occurs" result="PASS" /><testcase id="video_paused_attribute_default_value" purpose="Check if the video.paused attribute must initially be true" result="PASS" /><testcase id="video_paused_attribute_exists" purpose="Check if the video.paused attribute exists" result="PASS" /><testcase id="video_paused_attribute_readonly" purpose="Check if the video.paused attribute is readonly" result="PASS" /><testcase id="video_paused_attribute_type" purpose="Check if the type of video.paused attribute is boolean" result="PASS" /><testcase id="video_paused_false_during_play" purpose="Check that video.paused is false if play event is triggered" result="PASS" /><testcase id="video_paused_true_during_pause" purpose="Check that video.paused is true if pause event is triggered" result="PASS" /><testcase id="video_pause_3gp_h263_aac" purpose="Check if the video element can pause the H.263 decoding format video file" result="PASS" /><testcase id="video_pause_3gp_mpeg4_amr" purpose="Check if the video element can pause the MPEG-4 part 2 decoding format video file" result="PASS" /><testcase id="video_pause_method_exists" purpose="Check if the video.pause method exists" result="PASS" /><testcase id="video_pause_method_type" purpose="Check if video.pause is of type function" result="PASS" /><testcase id="video_pause_mp4_h264_aac" purpose="Check if the user agent supports mp4-h264-acc video playing, pause" result="PASS" /><testcase id="video_pause_ogg_theora_vorbis" purpose="Check if user agent is able to pause playing video playback for stream ogg theora vorbis" result="PASS" /><testcase id="video_pause_webm_vp8_vorbis" purpose="Check if user agent is able to pause playing video playback for stream webm vp8 vorbis" result="PASS" /><testcase id="video_playbackRate_attribute_exists" purpose="Check if the video.playbackRate attribute exists" result="PASS" /><testcase id="video_playbackRate_attribute_type" purpose="Check if the type of video.playbackRate attribute is number" result="PASS" /><testcase id="video_playbackRate_basic" purpose="Check if the video.playbackRate attribute that on getting it must return 2.0 it was set to 2.0" result="PASS" /><testcase id="video_playbackRate_default_value" purpose="Check if the video.playbackRate attribute value is 1.0 if it hasn't yet been set" result="PASS" /><testcase id="video_playbackRate_not_effect_by_controller" purpose="Check if video.playbackRate attributes have no effect when the media element has a current media controller" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_playbackRate_value_null" purpose="Check if the video.playbackRate attribute return 0 it was set to null" result="PASS" /><testcase id="video_playbackRate_value_zero" purpose="Check if the video.playbackRate attribute that on getting it must return 0 it was set to 0" result="PASS" /><testcase id="video_played_attribute_exists" purpose="Check if the type of video.played attribute is [object TimeRanges]" result="PASS" /><testcase id="video_played_attribute_readonly" purpose="Check if video.played attribute is readonly" result="PASS" /><testcase id="video_played_attribute_type" purpose="Check if the type of attribute video.played is object" result="PASS" /><testcase id="video_played_length_default_value" purpose="Check if default value of the attribute video.played.length is 0" result="PASS" /><testcase id="video_play_3gp_h263_aac" purpose="Check if the video element can play the H.263 decoding format video file" result="PASS" /><testcase id="video_play_3gp_mpeg4_amr" purpose="Check if the video element can play the MPEG-4 part 2 decoding format video file" result="PASS" /><testcase id="video_play_method_exists" purpose="Check if the video.play method exists" result="PASS" /><testcase id="video_play_method_type" purpose="Check if video.play method is of type function" result="PASS" /><testcase id="video_play_mp4_h264_aac" purpose="Check if the user agent supports mp4-h264-acc video playing" result="PASS" /><testcase id="video_play_ogg_theora_vorbis" purpose="Check if user agent is able to play video stream ogg theora vorbis with event ended fired when ended playback" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="video_play_webm_vp8_vorbis" purpose="Check if user agent is able to play video stream webm vp8 vorbis with event ended fired when ended playback" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="video_poster_attribute_exists" purpose="Check if the video.poster exists" result="PASS" /><testcase id="video_poster_attribute_type" purpose="Check if the type of video.poster is string" result="PASS" /><testcase id="video_preload_attribute_type" purpose="Check if the type of video.preload is string" result="PASS" /><testcase id="video_preload_auto" purpose="Check if video.preload can be set to 'auto'" result="PASS" /><testcase id="video_preload_property_exists" purpose="Check if the video.preload property exists" result="PASS" /><testcase id="video_preload_reflects_auto_value" purpose="Check if video.preload reflects 'auto' value" result="PASS" /><testcase id="video_preload_reflects_metadata" purpose="Check if the video.preload reflects 'metadata' value" result="PASS" /><testcase id="video_preload_reflects_none" purpose="Check if the video.preload reflects 'none' value" result="PASS" /><testcase id="video_preload_reflects_none_autoplay" purpose="Check that video.preload reflects 'none' value even if autoplay attribute is present" result="PASS" /><testcase id="video_readyState_attribute_type" purpose="Check if the type of video.readyState attribute is number" result="PASS" /><testcase id="video_readystate_during_canplay" purpose="Check that the video.readyState is greater than or equal to HAVE_FUTURE_DATA if canplay event is triggered" result="PASS" /><testcase id="video_readystate_during_canplaythrough" purpose="Check that the video.readyState is HAVE_FUTURE_DATA if canplaythrough event is triggered" result="PASS" /><testcase id="video_readystate_during_loadeddata" purpose="Check that video.readyState is greater than or equal to HAVE_FUTURE_DATA if the loadeddata event is triggered" result="PASS" /><testcase id="video_readystate_during_loadedmetadata" purpose="Check that the video.readyState is greater than or equal to HAVE_FUTURE_DATA if loadedmetadata event is triggered" result="PASS" /><testcase id="video_readystate_during_playing" purpose="Check that video.readyState is greater than or equal to HAVE_FUTURE_DATA if playing event is triggered" result="PASS" /><testcase id="video_readystate_initial" purpose="Check if the default video.readyState begins with HAVE_NOTHING" result="PASS" /><testcase id="video_readystate_property_exists" purpose="Check if the video.readyState property exists" result="PASS" /><testcase id="video_resume_ogg_theora_vorbis" purpose="Check if user agent is able to resume paused video playback for stream ogg theora vorbis" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="video_resume_webm_vp8_vorbis" purpose="Check if user agent is able to resume paused video playback for stream webm vp8 vorbis" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="video_seekable_attribute_exists" purpose="Check if the video.seekable attribute exists" result="PASS" /><testcase id="video_seekable_attribute_readonly" purpose="Check if video.seekable attribute is readonly" result="PASS" /><testcase id="video_seekable_attribute_type" purpose="Check if the type of video.seekable attribute is TimeRanges object" result="PASS" /><testcase id="video_seekable_length_default_value" purpose="Check if the default value of attribute video.seekable.length is 0" result="PASS" /><testcase id="video_seeking_attribute_exists" purpose="Check if the video.seeking attribute exists" result="PASS" /><testcase id="video_seeking_attribute_readonly" purpose="Check if the video.seeking attribute is readonly" result="PASS" /><testcase id="video_seeking_attribute_type" purpose="Check if the type of video.seeking attribute is boolean" result="PASS" /><testcase id="video_seeking_default_value" purpose="Check if the video.seeking attribute must initially have the value false" result="PASS" /><testcase id="video_seeking_value_true" purpose="Check if the video.seeking attribute returns true if the user agent is currently seeking" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1832 XWALK-1832]]</testcase><testcase id="video_seek_ogg_theora_vorbis" purpose="Check if user agent is able to seek video playback with currentTime attribute for stream ogg theora vorbis" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="video_seek_webm_vp8_vorbis" purpose="Check if user agent is able to seek video playback with currentTime attribute for stream webm vp8 vorbis" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="video_src_attribute_exists" purpose="Check if the video.src attribute exists" result="PASS" /><testcase id="video_src_attribute_type" purpose="Check if the type of video.src is string" result="PASS" /><testcase id="video_src_basic" purpose="Check if video.src can get src attibute value" result="PASS" /><testcase id="video_src_null" purpose="Check if video.src return empty string when you set it null" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="video_src_reflects_attribute_not_source_elements" purpose="Check if video.src reflect src attribute, not source child elements" result="PASS" /><testcase id="video_src_reflects_no_value" purpose="Check that the video.src is empty if there is no source" result="PASS" /><testcase id="video_src_removal_does_not_trigger_loadstart" purpose="Check that the loadstart event isnot triggered if remove video.src attribute source" result="PASS" /><testcase id="video_stop_ogg_theora_vorbis" purpose="Check if user agent is able to stop video playback for stream ogg theora vorbis" result="PASS" /><testcase id="video_stop_webm_vp8_vorbis" purpose="Check if user agent is able to stop video playback for stream webm vp8 vorbis" result="PASS" /><testcase id="video_textTracks" purpose="Check if the video.textTracks attribute is valid" result="PASS" /><testcase id="video_textTracks_exist" purpose="Check if the vedio.textTracks attribute exists" result="PASS" /><testcase id="video_textTracks_readonly" purpose="Check if the vedio.textTracks attribute is readonly" result="PASS" /><testcase id="video_textTracks_type" purpose="Check if the type of vedio.textTracks attribute is object" result="PASS" /><testcase id="video_textTracks_valid_value" purpose="Check if the textTracks attribute of media elements must return an array host object for objects of type TextTrack" result="PASS" /><testcase id="video_TimeRanges_end_exists" purpose="Check if the video.TimeRanges.end attribute exists" result="PASS" /><testcase id="video_TimeRanges_end_INDEX_SIZE_ERR" purpose="Check if throw INDEX_SIZE_ERR exception when if the video.TimeRanges.end method index is out of range" result="PASS" /><testcase id="video_TimeRanges_length_exists" purpose="Check if the video.TimeRanges.length attribute exists" result="PASS" /><testcase id="video_TimeRanges_length_readonly" purpose="Check if video.TimeRanges.length is readonly" result="PASS" /><testcase id="video_TimeRanges_length_type" purpose="Check if video.TimeRanges.length is of type number" result="PASS" /><testcase id="video_TimeRanges_start_exists" purpose="Check if the video.TimeRanges.start method exists" result="PASS" /><testcase id="video_TimeRanges_start_INDEX_SIZE_ERR" purpose="Check if throw INDEX_SIZE_ERR exception when if the video.TimeRanges.start method index is out of range" result="PASS" /><testcase id="video_videoHeght_media_resource_available" purpose="Check if video.videoheight return the intrinsic height of the video when have a media resource" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2960 XWALK-2960]]</testcase><testcase id="video_videoHeight_attribute_exists" purpose="Check if the video.videoHeight attribute exists" result="PASS" /><testcase id="video_videoHeight_attribute_type" purpose="Check if the type of video.videoHihgt is number" result="PASS" /><testcase id="video_videoHeight_default_value" purpose="Check if the default value of video.videoHeight is 0" result="PASS" /><testcase id="video_videoHeight_readonly" purpose="Check if the videoHeight attribute is readonly" result="PASS" /><testcase id="video_videoHeight_readState_HAVE_NOTHING" purpose="Check if readyState attribute is HAVE_NOTHING, then video.videoHeight must return 0" result="PASS" /><testcase id="video_videoWidth_attribute_exists" purpose="Check if the video.videoWidth attribute exists" result="PASS" /><testcase id="video_videoWidth_attribute_type" purpose="Check if the type of video.videoWidth is number" result="PASS" /><testcase id="video_videoWidth_default_value" purpose="Check if the default value of video.videoWidth is 0" result="PASS" /><testcase id="video_videoWidth_media_resource_available" purpose="Check if video.videoWidth return the intrinsic width of the video when have a media resource" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2960 XWALK-2960]]</testcase><testcase id="video_videoWidth_readonly" purpose="Check if the videoWidth attribute is readonly" result="PASS" /><testcase id="video_volume_attribute_exists" purpose="Check if the video.volume attribute exists" result="PASS" /><testcase id="video_volume_attribute_type" purpose="Check if the type of video.volume attribute is number" result="PASS" /><testcase id="video_volume_exception_lower" purpose="Check that user agent is able to get an INDEX_SIZE_ERR exception if set video.volume with new value less than 0.0" result="PASS" /><testcase id="video_volume_exception_upper" purpose="Check that user agent is able to get an INDEX_SIZE_ERR exception if set video.volume with new value more than 1.0" result="PASS" /><testcase id="video_volume_initial" purpose="Check if the intial value of the video.volume is in the range 0.0 to 1.0 inclusive" result="PASS" /><testcase id="video_volume_loudest" purpose="Check if user agent is able to set video.volume with new value 1.0" result="PASS" /><testcase id="video_volume_normal" purpose="Check if user agent is able to set video.volume with new value in the range 0.0 to 1.0 inclusive" result="PASS" /><testcase id="video_volume_silent" purpose="Check if user agent is able to set video.volume with new value 0.0" result="PASS" /><testcase id="video_volume_volumechange" purpose="Check that the volumechange event is triggered at the media element if video.volume is changed" result="PASS" /><testcase id="video_width_attribute_exists" purpose="Check if the video.width attribute exists" result="PASS" /><testcase id="video_width_attribute_type" purpose="Check if the type of video.width is number" result="PASS" /><testcase id="video_width_initial" purpose="Check if the video.width intial value is a valid non-negative integer in the range 0 to 2147483647 inclusive" result="PASS" /><testcase id="video_width_reflects_float" purpose="Check that the video.width returns a shortest integer number if the width attribute is set to a floating-point number" result="PASS" /><testcase id="video_width_reflects_integer" purpose="Check that the video.width returns the integer number if the width attribute is set to a valid non-negative integer in the range 0 to 2147483647" result="PASS" /><testcase id="video_width_reflects_invalid" purpose="Check that the video.width returns zero if the width attribute is set to an invlid non-negative integer" result="PASS" /><testcase id="video_width_reflects_max" purpose="Check that the video.width returns maximum non-negative integer if the width attribute is set to the maximum non-negative integer" result="PASS" /><testcase id="video_width_reflects_negative" purpose="Check that the video.width returns zero if the width attribute is set to a negative integer" result="PASS" /><testcase id="video_width_reflects_upper" purpose="Check that the video.width returns zero if the width attribute is set to a number greater than the maximum non-negative integer" result="PASS" /><testcase id="video_width_reflects_zero" purpose="Check that the video.width returns zero if the width attribute is set to zero" result="PASS" /><testcase id="video_zero_default_state" purpose="Check that a video loads the default pause state is true" result="PASS" /></category><category name="W3C_HTML5 APIs/Media/Web Speech API"><testcase id="SpeechRecognitionAlternative_confidence" purpose="Test if the confidence represents a numeric estimate between 0 and 1 of how confident the recognition system is that the recognition is correct" result="PASS" /><testcase id="SpeechRecognitionEvent_emma" purpose="Test if emma attribute is EMMA 1.0 representation of this result" result="PASS" /><testcase id="SpeechRecognitionEvent_interpretation" purpose="Test if the interpretation represents the semantic meaning from what the user said, current options are null or a copy of the transcript" result="PASS" /><testcase id="SpeechRecognitionEvent_resultIndex" purpose="Test if the resultIndex is set to the lowest index in the results array that has changed" result="PASS" /><testcase id="SpeechRecognitionResultList_item" purpose="Test if SpeechRecognitionResultList item returns null when index is greater than or equal to length" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4343 XWALK-4343]]</testcase><testcase id="SpeechRecognitionResultList_length" purpose="Test if the length attribute indicates how many results are represented in the item array" result="PASS" /><testcase id="SpeechRecognitionResult_final" purpose="Test if the final boolean is set to true if this is the final time the speech service will return this particular index value" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4342 XWALK-4342]]</testcase><testcase id="SpeechRecognitionResult_item" purpose="Test if SpeechRecognitionResult item returns null when index is greater than or equal to length" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4343 XWALK-4343]]</testcase><testcase id="SpeechRecognitionResult_length" purpose="Test if the long attribute represents how many n-best alternatives are represented in the item array" result="PASS" /><testcase id="SpeechRecognition_continuous" purpose="Test if the user agent must return zero or more final results representing multiple consecutive recognitions in response to starting recognition when the continuous attribute is set to true" result="PASS" /><testcase id="SpeechRecognition_interimResults" purpose="Test if interim results will be returned when the interim attribute is set to true" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4342 XWALK-4342]]</testcase><testcase id="SpeechRecognition_manual" purpose="Test checks if SpeechRecognition interface works well" result="PASS" /><testcase id="SpeechRecognition_maxAlternatives" purpose="Test if the maximum number of SpeechRecognitionAlternatives per result is maxAlternatives when maxAlternatives is set" result="PASS" /><testcase id="SpeechSynthesisEvent_results" purpose="Test if the results exists and contains the array of all current recognition results for this session" result="PASS" /><testcase id="SpeechSynthesisUtterance_error" purpose="Test if onerror fired if there was an error that prevented successful speaking of this utterance" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesis_manual" purpose="Test checks if SpeechSynthesis interface works well" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesis_speak" purpose="Check if speak method of SpeechSynthesis returns value" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechGrammarList_addFromString" purpose="Check if addFromString method of SpeechGrammarList without optional argument works properly" result="PASS" /><testcase id="SpeechGrammarList_addFromString_exist" purpose="Check if addFromString method of SpeechGrammarList exists" result="PASS" /><testcase id="SpeechGrammarList_addFromString_missarg" purpose="Check if addFromString method of SpeechGrammarList without argument throws an exception" result="PASS" /><testcase id="SpeechGrammarList_addFromString_with_weight" purpose="Check if addFromString method of SpeechGrammarList with all argument works properly" result="PASS" /><testcase id="SpeechGrammarList_addFromURI" purpose="Check if addFromURI method of SpeechGrammarList without optional argument works properly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_exist" purpose="Check if addFromURI method of SpeechGrammarList exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_item_equals_1" purpose="Test the item(0) of SpeechGrammarList equals SpeechGrammarList[0]" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_item_equals_2" purpose="Test the item(1) of SpeechGrammarList equals SpeechGrammarList[1]" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_item_equals_3" purpose="Test the item(2) of SpeechGrammarList equals SpeechGrammarList[2]" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_item_null_1" purpose="Test the actual item(1) of SpeechGrammarList is null after adding one" result="PASS" /><testcase id="SpeechGrammarList_addFromURI_item_null_2" purpose="Test the actual item(-1) of SpeechGrammarList is null after adding one" result="PASS" /><testcase id="SpeechGrammarList_addFromURI_item_src_1" purpose="Test the src attribute of the actual item(0) of SpeechGrammarList" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_item_src_2" purpose="Test the src attribute of the actual item(1) of SpeechGrammarList" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_item_src_3" purpose="Test the src attribute of the actual item(2) of SpeechGrammarList" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_item_src_4" purpose="Test the src attribute of the SpeechGrammarList[2]" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_item_undefined_1" purpose="Test the actual SpeechGrammarList[1] is undefined after adding one" result="PASS" /><testcase id="SpeechGrammarList_addFromURI_item_undefined_2" purpose="Test the actual SpeechGrammarList[-1] is undefined after adding one" result="PASS" /><testcase id="SpeechGrammarList_addFromURI_item_weight_1" purpose="Test the weight attribute of the actual item(0) of SpeechGrammarList" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_item_weight_2" purpose="Test the weight attribute of the actual item(1) of SpeechGrammarList" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_item_weight_3" purpose="Test the weight attribute of the actual item(2) of SpeechGrammarList" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_item_weight_4" purpose="Test the weight attribute of the SpeechGrammarList[2]" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_length_1" purpose="Test the actual length attributes of SpeechGrammarList after adding one 1" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_length_2" purpose="Test the actual length attributes of SpeechGrammarList after adding one 2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_length_3" purpose="Test the actual length attributes of SpeechGrammarList after adding one 3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_addFromURI_missarg" purpose="Check if addFromURI method of SpeechGrammarList without argument throws an exception" result="PASS" /><testcase id="SpeechGrammarList_addFromURI_with_weight" purpose="Check if addFromURI method of SpeechGrammarList with all argument works properly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3745 XWALK-3745]]</testcase><testcase id="SpeechGrammarList_constructor" purpose="Check if SpeechGrammarList constructor is valid" result="PASS" /><testcase id="SpeechGrammarList_default_length" purpose="Test default length of SpeechGrammarList" result="PASS" /><testcase id="SpeechGrammarList_existence" purpose="Test SpeechGrammarList existence" result="PASS" /><testcase id="SpeechGrammarList_extend" purpose="Check if SpeechGrammarList object is extensible" result="PASS" /><testcase id="SpeechGrammarList_item" purpose="Check if item method of SpeechGrammarList works properly with item index of grammar" result="PASS" /><testcase id="SpeechGrammarList_item_exist" purpose="Check if item method of SpeechGrammarList exists" result="PASS" /><testcase id="SpeechGrammarList_item_missarg" purpose="Check if item method of SpeechGrammarList works properly without argument" result="PASS" /><testcase id="SpeechGrammarList_item_null_1" purpose="Test item(0) of SpeechGrammarList is null" result="PASS" /><testcase id="SpeechGrammarList_item_null_2" purpose="Test item(-1) of SpeechGrammarList is null" result="PASS" /><testcase id="SpeechGrammarList_item_undefined_1" purpose="Test SpeechGrammarList[0] is undefined" result="PASS" /><testcase id="SpeechGrammarList_item_undefined_2" purpose="Test SpeechGrammarList[-1] is undefined" result="PASS" /><testcase id="SpeechGrammarList_length_attribute" purpose="Check if length attribute of webspeechGrammarList exists" result="PASS" /><testcase id="SpeechGrammarList_value" purpose="Test new SpeechGrammarList is not null" result="PASS" /><testcase id="SpeechGrammar_constructor" purpose="Check if SpeechGrammar constructor is valid" result="PASS" /><testcase id="SpeechGrammar_default_src" purpose="Test default src of SpeechGrammar" result="PASS" /><testcase id="SpeechGrammar_default_weight" purpose="Test default weight of SpeechGrammar" result="PASS" /><testcase id="SpeechGrammar_existence" purpose="Test SpeechGrammar existence" result="PASS" /><testcase id="SpeechGrammar_extend" purpose="Check if SpeechGrammar object is extensible" result="PASS" /><testcase id="SpeechGrammar_setting_src_1" purpose="Test setting the src attribute of SpeechGrammar 1" result="PASS" /><testcase id="SpeechGrammar_setting_src_2" purpose="Test setting the src attribute of SpeechGrammar 2" result="PASS" /><testcase id="SpeechGrammar_setting_src_3" purpose="Test setting the src attribute of SpeechGrammar 3" result="PASS" /><testcase id="SpeechGrammar_setting_weight" purpose="Test setting the weight attribute of SpeechGrammar" result="PASS" /><testcase id="SpeechGrammar_src_attribute" purpose="Check if src attribute of SpeechGrammar exists" result="PASS" /><testcase id="SpeechGrammar_value" purpose="Test new SpeechGrammar is not null" result="PASS" /><testcase id="SpeechGrammar_weight_attribute" purpose="Check if weight attribute of SpeechGrammar exists" result="PASS" /><testcase id="SpeechRecognitionError_error" purpose="Check if error attribute exists in SpeechRecognitionError and a readonly attribute" result="PASS" /><testcase id="SpeechRecognitionError_extend" purpose="Check if webspeechRecognitionError object is extensible" result="PASS" /><testcase id="SpeechRecognitionError_interface_existence" purpose="Test SpeechRecognitionError existence" result="PASS" /><testcase id="SpeechRecognitionError_message" purpose="Check if message attribute exists in SpeechRecognitionError and a readonly attribute" result="PASS" /><testcase id="SpeechRecognitionError_value" purpose="Test SpeechRecognitionError is not null" result="PASS" /><testcase id="SpeechRecognitionEvent_existence" purpose="Existence of SpeechRecognitionEvent interface" result="PASS" /><testcase id="SpeechRecognitionEvent_extend" purpose="Check if webspeechRecognitionEvent object is extensible" result="PASS" /><testcase id="SpeechRecognitionEvent_prototype" purpose="Prototype of SpeechRecognitionEvent" result="PASS" /><testcase id="SpeechRecognitionEvent_value" purpose="Value of SpeechRecognitionEvent object" result="PASS" /><testcase id="SpeechRecognition_abort_existence" purpose="Test abort existence" result="PASS" /><testcase id="SpeechRecognition_abort_extra_argument" purpose="Check if SpeechRecognition abort extra argument" result="PASS" /><testcase id="SpeechRecognition_addEventListener_existence" purpose="Test addEventListener existence" result="PASS" /><testcase id="SpeechRecognition_constructor" purpose="Check if SpeechRecognition constructor" result="PASS" /><testcase id="SpeechRecognition_constructor_existence" purpose="Test SpeechRecognition existence" result="PASS" /><testcase id="SpeechRecognition_continuous_attribute" purpose="Check if SpeechRecognition continuous attribute" result="PASS" /><testcase id="SpeechRecognition_continuous_default_value" purpose="Test default value of continuous" result="PASS" /><testcase id="SpeechRecognition_continuous_existence" purpose="Test continuous existence" result="PASS" /><testcase id="SpeechRecognition_dispatchEvent_existence" purpose="Test dispatchEvent existence" result="PASS" /><testcase id="SpeechRecognition_extend" purpose="Check if SpeechRecognition is extensible" result="PASS" /><testcase id="SpeechRecognition_grammars_attribute" purpose="Check if SpeechRecognition grammars attribute" result="PASS" /><testcase id="SpeechRecognition_grammars_default_value" purpose="Test grammars is not null" result="PASS" /><testcase id="SpeechRecognition_grammars_existence" purpose="Test grammars existence" result="PASS" /><testcase id="SpeechRecognition_grammars_length" purpose="Test length of grammars" result="PASS" /><testcase id="SpeechRecognition_interimResults_attribute" purpose="Check if SpeechRecognition interimResults attribute" result="PASS" /><testcase id="SpeechRecognition_interimResults_existence" purpose="Test interimResults existence" result="PASS" /><testcase id="SpeechRecognition_lang_attribute" purpose="Check if SpeechRecognition lang attribute" result="PASS" /><testcase id="SpeechRecognition_lang_default_value" purpose="Test default value of lang" result="PASS" /><testcase id="SpeechRecognition_lang_existence" purpose="Test lang existence" result="PASS" /><testcase id="SpeechRecognition_maxAlternatives_attribute" purpose="Check if SpeechRecognition maxAlternatives attribute" result="PASS" /><testcase id="SpeechRecognition_maxAlternatives_default_value" purpose="Test default value of maxAlternatives" result="PASS" /><testcase id="SpeechRecognition_maxAlternatives_existence" purpose="Test maxAlternatives existence" result="PASS" /><testcase id="SpeechRecognition_onaudioend_existence" purpose="Test onaudioend existence" result="PASS" /><testcase id="SpeechRecognition_onaudiostart_existence" purpose="Test onaudiostart existence" result="PASS" /><testcase id="SpeechRecognition_onend_existence" purpose="Test onend existence" result="PASS" /><testcase id="SpeechRecognition_onerror_existence" purpose="Test onerror existence" result="PASS" /><testcase id="SpeechRecognition_onnomatch_existence" purpose="Test onnomatch existence" result="PASS" /><testcase id="SpeechRecognition_onresult_existence" purpose="Test onresult existence" result="PASS" /><testcase id="SpeechRecognition_onsoundend_existence" purpose="Test onsoundend existence" result="PASS" /><testcase id="SpeechRecognition_onsoundstart_existence" purpose="Test onsoundstart existence" result="PASS" /><testcase id="SpeechRecognition_onspeechend_existence" purpose="Test onspeechend existence" result="PASS" /><testcase id="SpeechRecognition_onspeechstart_existence" purpose="Test onspeechstart existence" result="PASS" /><testcase id="SpeechRecognition_onstart_existence" purpose="Test onstart existence" result="PASS" /><testcase id="SpeechRecognition_removeEventListener_existence" purpose="Test removeEventListener existence" result="PASS" /><testcase id="SpeechRecognition_serviceURI_attribute" purpose="Check if SpeechRecognition serviceURI attribute" result="PASS" /><testcase id="SpeechRecognition_start" purpose="Check if SpeechRecognition start" result="PASS" /><testcase id="SpeechRecognition_start_exception" purpose="Test getting an exception when calling start() in the Speech JavaScript API" result="PASS" /><testcase id="SpeechRecognition_start_existence" purpose="Test start existence" result="PASS" /><testcase id="SpeechRecognition_start_extra_argument" purpose="Check if SpeechRecognition start extra argument" result="PASS" /><testcase id="SpeechRecognition_stop_existence" purpose="Test stop existence" result="PASS" /><testcase id="SpeechRecognition_stop_extra_argument" purpose="Check if SpeechRecognition stop extra argument" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-4077 XWALK-4077]]</testcase><testcase id="SpeechRecognition_value" purpose="Test SpeechRecognition is not null" result="PASS" /><testcase id="SpeechSynthesisEvent_charIndex" purpose="Test if character index into the original utterance string that most closely approximates the current speaking position of the speech engine" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisEvent_charIndex_attribute" purpose="Check if CharIndex attribute of SpeechSynthesisEvent is readOnly" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisEvent_elapsedTime_attribute" purpose="Check if elapsedTime attribute of SpeechSynthesisEvent is readOnly" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisEvent_existence" purpose="Existence of SpeechSynthesisEvent interface" result="PASS" /><testcase id="SpeechSynthesisEvent_extend" purpose="Check if SpeechSynthesisEvent is extensible" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisEvent_name" purpose="Test if name should return undefined for start event" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisEvent_name_attribute" purpose="Check if name attribute of SpeechSynthesisEvent is readOnly" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisEvent_prototype" purpose="Prototype of SpeechSynthesisEvent" result="PASS" /><testcase id="SpeechSynthesisEvent_value" purpose="Value of SpeechSynthesisEvent object" result="PASS" /><testcase id="SpeechSynthesisGetter_notexist" purpose="Check if SpeechSynthesisGetter is NoInterfaceObject" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisUtterance_constructor_text" purpose="Check if SpeechSynthesisUtterance constructor with text constructor supported" result="PASS" /><testcase id="SpeechSynthesisUtterance_existence" purpose="Existence of SpeechSynthesisUtterance interface" result="PASS" /><testcase id="SpeechSynthesisUtterance_lang" purpose="Test if default to use the lang of the html document root element" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisUtterance_lang_attribute" purpose="Check if lang attribute of SpeechSynthesisUtterance exist and writable" result="PASS" /><testcase id="SpeechSynthesisUtterance_lang_existence" purpose="Existence of lang attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_lang_set" purpose="Set value for lang attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_mark" purpose="Test if onmark fired when this utterance has begun to be spoken" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisUtterance_onboundary_existence" purpose="Existence of onboundary attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_onend_existence" purpose="Existence of onend attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_onerror_existence" purpose="Existence of onerror attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_onmark_existence" purpose="Existence of onmark attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_onpause_existence" purpose="Existence of onpause attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_onresume_existence" purpose="Existence of onresume attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_onstart_existence" purpose="Existence of onstart attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_pause" purpose="Test if fired when and if this utterance is paused mid-utterance" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisUtterance_pitch_1" purpose="Test if pitch is a default of 1" result="PASS" /><testcase id="SpeechSynthesisUtterance_pitch_2" purpose="Test if pitch is 0 being the lowest pitch" result="PASS" /><testcase id="SpeechSynthesisUtterance_pitch_3" purpose="Test if pitch is 2 being the highest pitch" result="PASS" /><testcase id="SpeechSynthesisUtterance_pitch_attribute" purpose="Check if pitch attribute of SpeechSynthesisUtterance exist and writable" result="PASS" /><testcase id="SpeechSynthesisUtterance_pitch_existence" purpose="Existence of pitch attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_pitch_max_value" purpose="Max value of pitch attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_pitch_min_value" purpose="Min value of pitch attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_pitch_set" purpose="Set value for pitch attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_pitch_value" purpose="Default value of pitch attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_rate_1" purpose="Test if rate is a default of 1" result="PASS" /><testcase id="SpeechSynthesisUtterance_rate_2" purpose="Test if rate is 0.1 being the lowest rate" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisUtterance_rate_3" purpose="Test if rate is 10 being the highest rate" result="PASS" /><testcase id="SpeechSynthesisUtterance_rate_attribute" purpose="Check if rate attribute of SpeechSynthesisUtterance exist and writable" result="PASS" /><testcase id="SpeechSynthesisUtterance_rate_existence" purpose="Existence of rate attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_rate_max_value" purpose="Max value of rate attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_rate_min_value" purpose="Min value of rate attribute" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisUtterance_rate_set" purpose="Set value for rate attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_rate_value" purpose="Default value of rate attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_resume" purpose="Test if onresume fired when and if this utterance is resumed after being paused mid-utterance" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisUtterance_start" purpose="Test if onstart fired when this utterance has begun to be spoken" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisUtterance_text" purpose="Test if text can be a complete, well-formed SSML document" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisUtterance_text_attribute" purpose="Check if text attribute of SpeechSynthesisUtterance exists and writable" result="PASS" /><testcase id="SpeechSynthesisUtterance_text_existence" purpose="Existence of text attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_text_set" purpose="Set value for text attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_value" purpose="Value of SpeechSynthesisUtterance object" result="PASS" /><testcase id="SpeechSynthesisUtterance_voice" purpose="Test that can get synthesizer voices from SpeechSynthesisUtterance" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisUtterance_voiceURI_attribute" purpose="Check if voiceURI attribute of SpeechSynthesisUtterance exist and writable" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisUtterance_voiceURI_existence" purpose="Existence of voiceURI attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_voiceURI_set" purpose="Set value for voiceURI attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_volume_1" purpose="Test if volume is a default of 1" result="PASS" /><testcase id="SpeechSynthesisUtterance_volume_2" purpose="Test if volume is 0 being the lowest volume" result="PASS" /><testcase id="SpeechSynthesisUtterance_volume_3" purpose="Test if volume is 1 being the highest volume" result="PASS" /><testcase id="SpeechSynthesisUtterance_volume_attribute" purpose="Check if volume attribute of SpeechSynthesisUtterance exist and writable" result="PASS" /><testcase id="SpeechSynthesisUtterance_volume_existence" purpose="Existence of volume attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_volume_max_value" purpose="Max value of volume attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_volume_min_value" purpose="Min value of volume attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_volume_set" purpose="Set value for volume attribute" result="PASS" /><testcase id="SpeechSynthesisUtterance_volume_value" purpose="Default value of volume attribute" result="PASS" /><testcase id="SpeechSynthesisVoiceList_extend" purpose="Check if SpeechSynthesisVoiceList is extensible" result="PASS" /><testcase id="SpeechSynthesisVoiceList_item" purpose="Check if item method of SpeechSynthesisVoiceList works properly" result="PASS" /><testcase id="SpeechSynthesisVoiceList_item_exists" purpose="Check if item method of SpeechSynthesisVoiceList exists" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisVoiceList_item_getter" purpose="Test if SpeechSynthesisVoiceList item returns null when index is greater than or equal to length" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisVoiceList_item_missarg" purpose="Check if item method of SpeechSynthesisVoiceList throws exception when non optional argument missing" result="PASS" /><testcase id="SpeechSynthesisVoiceList_length_attribute" purpose="Check if length attribute of SpeechSynthesisVoiceList is readonly" result="PASS" /><testcase id="SpeechSynthesisVoice_default_attribute" purpose="Check if default attribute of SpeechSynthesisVoice is readOnly" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisVoice_extend" purpose="Check if SpeechSynthesisVoice can be extended" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisVoice_lang_attribute" purpose="Check if lang attribute of SpeechSynthesisVoice is readOnly" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisVoice_localService_attribute" purpose="Check if localService attribute of SpeechSynthesisVoice is readOnly" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisVoice_name_attribute" purpose="Check if name attribute of SpeechSynthesisVoice is readOnly" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesisVoice_voiceURI_attribute" purpose="Check if voiceURI attribute of SpeechSynthesisVoice is readOnly" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesis_basic_mechanisms" purpose="Test that the basic mechanisms of speaking text work, including sending the job and receving the callback" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesis_boundary" purpose="Test a speech job will generate the correct boundary events" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesis_cancel" purpose="Test that cancelling a speech job fires the right events" result="PASS" /><testcase id="SpeechSynthesis_cancel_existence" purpose="Existence of cancel method" result="PASS" /><testcase id="SpeechSynthesis_cancel_extra_argument" purpose="Check if cancel method of SpeechSynthesis works properly with extra argument" result="PASS" /><testcase id="SpeechSynthesis_exist" purpose="Check if webspeechSynthesis exists" result="PASS" /><testcase id="SpeechSynthesis_extend" purpose="Check if SpeechSynthesisGetter is extensible" result="PASS" /><testcase id="SpeechSynthesis_getVoices" purpose="Check if getVoices method of SpeechSynthesis works properly" result="PASS" /><testcase id="SpeechSynthesis_getVoices_existence" purpose="Existence of getVoices method" result="PASS" /><testcase id="SpeechSynthesis_getVoices_extra_argument" purpose="Check if getVoices method of SpeechSynthesis works properly with extra argument" result="PASS" /><testcase id="SpeechSynthesis_getVoices_type" purpose="Type of speechSynthesis.getVoices()" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesis_pause" purpose="Check if pause method of SpeechSynthesis changes state of pause" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesis_paused_attribute" purpose="Check if paused attribute of SpeechSynthesis exists" result="PASS" /><testcase id="SpeechSynthesis_paused_existence" purpose="Existence of paused attribute" result="PASS" /><testcase id="SpeechSynthesis_paused_value" purpose="Value of paused attribute" result="PASS" /><testcase id="SpeechSynthesis_pause_existence" purpose="Existence of pause method" result="PASS" /><testcase id="SpeechSynthesis_pause_extra_argument" purpose="Check if pause method of SpeechSynthesis works properly with extra argument" result="PASS" /><testcase id="SpeechSynthesis_pausing_resuming" purpose="Test that pausing/resuming speech jobs works as expected" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesis_pending_attribute" purpose="Check if pending attribute of SpeechSynthesis exists" result="PASS" /><testcase id="SpeechSynthesis_pending_existence" purpose="Existence of pending attribute" result="PASS" /><testcase id="SpeechSynthesis_pending_value" purpose="Initial value of pending attribute" result="PASS" /><testcase id="SpeechSynthesis_resume" purpose="Check if resume method of SpeechSynthesis returns value" result="BLOCK">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesis_resume_existence" purpose="Existence of resume method" result="PASS" /><testcase id="SpeechSynthesis_resume_extra_argument" purpose="Check if resume method of SpeechSynthesis works properly with extra argument" result="PASS" /><testcase id="SpeechSynthesis_speaking_attribute" purpose="Check if speaking attribute of SpeechSynthesis exists" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="SpeechSynthesis_speaking_existence" purpose="Existence of speaking  attribute" result="PASS" /><testcase id="SpeechSynthesis_speaking_value" purpose="Value of speaking attribute" result="PASS" /><testcase id="SpeechSynthesis_speak_existence" purpose="Existence of speak method" result="PASS" /><testcase id="SpeechSynthesis_speak_missarg" purpose="Check if speak method of SpeechSynthesis without argument throws an exception" result="PASS" /><testcase id="SpeechSynthesis_type" purpose="Type of window.speechSynthesis" result="PASS" /><testcase id="SpeechSynthesis_TypeError_exception" purpose="Test that passing an argument other than a SpeechSynthesisUtterance to speechSynthesis.speak throws a TypeError exception" result="PASS" /><testcase id="SpeechSynthesis_value" purpose="Value of window.speechSynthesis object" result="PASS" /><testcase id="SpeechSynthesis_voice" purpose="Test that can get synthesizer voices from SpeechSynthesis" result="FAIL">Speech Synthesis partly implement [[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase></category><category name="W3C_HTML5 APIs/Performance and Optimization/Page Visibility"><testcase id="pagevisibility_DocumentVisibility_Hidden_lockScreen" purpose="Check if hidden attribute is false while the webpage from lock screen change to visible" result="PASS" /><testcase id="pagevisibility_DocumentVisibility_Hidden_minimize" purpose="Check if hidden attribute is false while the webpage from minimize change to visible" result="PASS" /><testcase id="test_attributes_exist_1" purpose="Check if document.hidden is defined and not null" result="PASS" /><testcase id="test_attributes_exist_2" purpose="Check if document.visibilityState is defined and not null" result="PASS" /><testcase id="test_child_document_10" purpose="Check if document.visibilityState for frame with 'display:none' style that is equals to visible" result="PASS" /><testcase id="test_child_document_12" purpose="Check if document.hidden is defined for frame with 'visibility:hidden' style" result="PASS" /><testcase id="test_child_document_13" purpose="Check if document.visibilityState is defined for frame with 'visibility:hidden' style" result="PASS" /><testcase id="test_child_document_14" purpose="Check if document.visibilityState for frame with 'visibility:hidden' style that is equals to visible" result="PASS" /><testcase id="test_child_document_4" purpose="Check if document.hidden is defined for frame with no style attribute" result="PASS" /><testcase id="test_child_document_5" purpose="Check if document.visibilityState is defined for frame with no style attribute" result="PASS" /><testcase id="test_child_document_6" purpose="Check if document.visibilityState for frame with no style attribute that is equals to visible" result="PASS" /><testcase id="test_child_document_8" purpose="Check if document.hidden is defined for frame with 'display:none' style" result="PASS" /><testcase id="test_child_document_9" purpose="Check if document.visibilityState is defined for frame with 'display:none' style" result="PASS" /><testcase id="test_default_view_3" purpose="Check if windowless subdocument generated for test has a null default view" result="PASS" /><testcase id="test_default_view_4" purpose="Check if document.hidden is definedwindowless subdocument" result="PASS" /><testcase id="test_default_view_5" purpose="Check if document.visibilityState is definedwindowless subdocument" result="PASS" /><testcase id="test_default_view_6" purpose="Check if hidden is equals to true for windowless subdocuments with a null default view" result="PASS" /><testcase id="test_default_view_7" purpose="Check if visibilityState is equals to hidden for windowless subdocuments with a null default view" result="PASS" /><testcase id="test_read_only_3" purpose="Check if document.hidden is readonly" result="PASS" /><testcase id="test_read_only_4" purpose="Check if document.visibilityState is readonly" result="PASS" /></category><category name="W3C_HTML5 APIs/Performance and Optimization/Timing control for script-based animations"><testcase id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_boolean" purpose="Check whether window.cancelAnimationFrame can be used normally with invalid parameter boolean" result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_neg10" purpose="Check whether window.cancelAnimationFrame can be used normally with invalid parameter negative number" result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_string" purpose="Check whether window.cancelAnimationFrame can be used normally with invalid parameter string" result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_undefined" purpose="Check whether window.cancelAnimationFrame can be used normally with invalid parameter undefined" result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_validhandle" purpose="Check window.cancelAnimationFrame can be called normally with the parameter returned by window.requestAnimationFrame" result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_cancelAnimationFrame" purpose="Check if window.cancelAnimationFrame and window.requestAnimationFrame invoked sucessfully" result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_singleAnimation" purpose="check if window.requestAnimationFrame only schedules a single animation" result="PASS" /><testcase id="AnimationTiming_Callback_FrameRequestCallback_ignoreOptionalArgs" purpose="check if FrameRquestCallback ignores optional passed arguments" result="PASS" /><testcase id="AnimationTiming_Callback_FrameRequestCallback_multipleCalls" purpose="Multiple callback registrations occur.Callback 4 of 4" result="PASS" /><testcase id="AnimationTiming_Callback_FrameRequestCallback_validTimestamp" purpose="Check whether FrameRequestCallback contains a valid timestamp" result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_cancelAnimationFrame_exist" purpose="Check if window.cancelAnimationFrame is defined and not null." result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_AcceptInlineScript" purpose="Check whether window.requestAnimationFrame accepts inline script" result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_callback_03" purpose="Check whether window.requestAnimationFrame can return a valid callback handle." result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_exist_01" purpose="Check if window.requestAnimationFrame is defined and not null." result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_hidden" purpose="Check if document's hidden attribute is false, window.requestAnimationFrame invoked sucessfully" result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_ignoreOptionalArgs" purpose="check if window.requestAnimationFrame performs callback when optional arguments are passed" result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_invokeSecondCallback" purpose="Check whether window.requestAnimationFrame can invoke second callback normally" result="PASS" /><testcase id="AnimationTiming_WindowAnimationTiming_requestAnimationFrame_NeedParameter" purpose="Check whether window.requestAnimationFrame expects parameter" result="PASS" /></category><category name="W3C_HTML5 APIs/Storage/File API"><testcase id="Blob_size_type" purpose="Check the attribute of the interface Blob size is number type" result="PASS" /><testcase id="Blob_type_normal" purpose="Check if the attribute type value of interface Blob return the media type" result="PASS" /><testcase id="Blob_type_type" purpose="Check if the attribute type value of interface Blob is string type" result="PASS" /><testcase id="filelist_multiple_selected_1" purpose="Check if the fileList length is 2 when selected two files" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4238 XWALK-4238]]</testcase><testcase id="filelist_multiple_selected_2" purpose="Check if the item method returns the files interface when selected two files" result="PASS" /><testcase id="filelist_multiple_selected_3" purpose="Check if item(1) is not null when selected two files" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4238 XWALK-4238]]</testcase><testcase id="filelist_multiple_selected_4" purpose="Check if item(2) is null when selected two files" result="PASS" /><testcase id="filelist_multiple_selected_5" purpose="Check if the file name string is the name of selected files upload.txt and upload.zip" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4238 XWALK-4238]]</testcase><testcase id="filelist_selected_1" purpose="Check if the fileList length is 1 when selected one file" result="PASS" /><testcase id="filelist_selected_2" purpose="Check if the item method returns the File interface when selected one file" result="PASS" /><testcase id="filelist_selected_3" purpose="Check if item(0) is not null when selected one file" result="PASS" /><testcase id="filelist_selected_4" purpose="Check if item(1) is null when selected one file only" result="PASS" /><testcase id="filelist_selected_5" purpose="Check if the file name string is the selected upload.txt" result="PASS" /><testcase id="Blob-constructor_100" purpose="Check if Blob method slice partial [ArrayBufferView(A-P),3,5], blob(squiggle), string(foo) as blobParts slice(8,10) get igglefoo" result="PASS" /><testcase id="Blob-constructor_102" purpose="Check if Blob method slice partial [ArrayBufferView(A-P),3,5], blob(squiggle), string(foo) as blobParts slice(4,8) get Hsquiggl" result="PASS" /><testcase id="Blob-constructor_104" purpose="Check if Blob method slice 3, int8View(A-P), string(foo) as blobParts slice(0,8) get 3ABCDEFG" result="PASS" /><testcase id="Blob-constructor_106" purpose="Check if Blob method slice 3, int8View(A-P), string(foo) as blobParts slice(8,10) get HIJKLMNOPf" result="PASS" /><testcase id="Blob-constructor_108" purpose="Check if Blob method slice 3, int8View(A-P), string(foo) as blobParts slice(17,4) get foo" result="PASS" /><testcase id="Blob-constructor_110" purpose="Check if Blob method slice 3, int8View(A-P), string(foo) as blobParts slice(4,8) get foo" result="PASS" /><testcase id="Blob-constructor_44" purpose="Check if Blob method slice 3 strings(foo bar baz) as blobParts slice(0,9) get foobarbaz" result="PASS" /><testcase id="Blob-constructor_46" purpose="Check if Blob method slice 3 strings(foo bar baz) as blobParts slice(0,3) get foo" result="PASS" /><testcase id="Blob-constructor_56" purpose="Check if Blob method slice 3 strings(foo bar baz) as blobParts slice(0,11) get foobarbaz" result="PASS" /><testcase id="Blob-constructor_58" purpose="Check if Blob method slice 3 strings(foo bar baz) as blobParts slice(10,5) get null" result="PASS" /><testcase id="Blob-constructor_62" purpose="Check if Blob method slice string(foo), Blob(squiggle), string(baz) as blobParts slice from(3,8) get squiggle" result="PASS" /><testcase id="Blob-constructor_64" purpose="Check if Blob method slice string(foo), Blob(squiggle), string(baz) as blobParts slice from(2,2) get os" result="PASS" /><testcase id="Blob-constructor_92" purpose="Check if Blob method slice ArrayBufferView(A-P), Blob(squiggle), string(foo) as blobParts slice(8,10) get IJKLMNOPsq" result="PASS" /><testcase id="Blob-constructor_98" purpose="Check if Blob method slice partial [ArrayBufferView(A-P),3,5], blob(squiggle), string(foo) as blobParts slice(0,8) get DEFGHsqu" result="PASS" /><testcase id="Blob_size_normal" purpose="Check if the attribute of the interface Blob size is not null" result="PASS" /><testcase id="Blob_slice_overflow" purpose="Check the value of Blob.slice when processing the slice call with user agent normalized from 1998 to 2999" result="PASS" /><testcase id="Blob_slice_two_five" purpose="Check if the method slice value of interface Blob,when processing the slice call,user agents must normalize start to 2 and end to 5" result="PASS" /><testcase id="Blob_slice_zero" purpose="Check if the method slice value of interface Blob, when processing the slice call, user agents must normalize start to 0 and end to 10" result="PASS" /><testcase id="Blob_slice_zero_five" purpose="Check if the method slice value of interface Blob,when processing the slice call,user agents must normalize start to 0 and end to 5" result="PASS" /><testcase id="Blob_slice_zero_size" purpose="Check if the method slice value of interface Blob, when processing the slice call, user agents must normalize start to 0 and end to size" result="PASS" /><testcase id="filelist_1" purpose="Check if window has a FileList property" result="PASS" /><testcase id="filelist_2" purpose="Check if the FileList length default is 0" result="PASS" /><testcase id="filelist_3" purpose="Check if item is a instanceof Function" result="PASS" /><testcase id="filelist_4" purpose="Check if item is a method of fileList" result="PASS" /><testcase id="filelist_5" purpose="Check if the item method returns null when no file selected" result="PASS" /><testcase id="filelist_7" purpose="Check if the fileList length is 0 when no file selected" result="PASS" /><testcase id="FileList_item_exist" purpose="Check if FileList.item attribute exists" result="PASS" /><testcase id="FileList_length_exist" purpose="Check if FileList.length attribute exists" result="PASS" /><testcase id="FileList_length_zero" purpose="Check if the attribute length value of interface FileList return 0" result="PASS" /><testcase id="FileReaderSync_readAsArrayBuffer_base" purpose="Check if obtain an ArrayBuffer object using the readAsArrayBuffer method by FileReaderSync interface" result="PASS" /><testcase id="FileReaderSync_readAsArrayBuffer_Blob_invalid" purpose="Check if FileReaderSync.readAsArrayBuffer throws an exception when the argument is invalid" result="PASS" /><testcase id="FileReaderSync_readAsArrayBuffer_empty_string" purpose="Check if FileReaderSync.readAsArrayBuffer throws an exception when the argument is empty string" result="PASS" /><testcase id="FileReaderSync_readAsArrayBuffer_exist" purpose="Check if FileReaderSync.readAsArrayBuffer exists" result="PASS" /><testcase id="FileReaderSync_readAsArrayBuffer_no_argument" purpose="Check if FileReaderSync.readAsArrayBuffer has no argument that expecting an exception is to be thrown" result="PASS" /><testcase id="FileReaderSync_readAsArrayBuffer_return_arraybuffer" purpose="Check if FileReaderSync.readAsArrayBuffer has a valid argument that expecting the data contents of blob as an ArrayBuffer is to be returned" result="PASS" /><testcase id="FileReaderSync_readAsArrayBuffer_return_type" purpose="Check if the return value of FileReaderSync.readAsArrayBuffer is of ArrayBuffer object type" result="PASS" /><testcase id="FileReaderSync_readAsArrayBuffer_set_null" purpose="Check if FileReaderSync.readAsArrayBuffer throws an exception when the argument is null" result="PASS" /><testcase id="FileReaderSync_readAsBinaryString_base" purpose="Check if read a blob text using readAsBinaryString method by FileReaderSync interface" result="PASS" /><testcase id="FileReaderSync_readAsBinaryString_Blob_invalid" purpose="Check if FileReaderSync.readAsBinaryString has a invalid argument that expecting an exception is to be thrown" result="PASS" /><testcase id="FileReaderSync_readAsBinaryString_empty_string" purpose="Check if FileReaderSync.readAsBinaryString throws an exception when the argument is empty string" result="PASS" /><testcase id="FileReaderSync_readAsBinaryString_no_argument" purpose="Check if FileReaderSync.readAsBinaryString has no argument that expecting an exception is to be thrown" result="PASS" /><testcase id="FileReaderSync_readAsBinaryString_return_string" purpose="Check if FileReaderSync.readAsBinaryString has a valid argument that expecting the data contents of blob as an binary string is to be returned" result="PASS" /><testcase id="FileReaderSync_readAsBinaryString_return_type" purpose="Check if the return value of FileReaderSync.readAsBinaryString is of type string" result="PASS" /><testcase id="FileReaderSync_readAsBinaryString_set_null" purpose="Check if FileReaderSync.readAsBinaryString throws an exception when the argument is null" result="PASS" /><testcase id="FileReaderSync_readAsDataURL_base" purpose="Check if returns the data of blob as a Data URL by FileReaderSync interface" result="PASS" /><testcase id="FileReaderSync_readAsDataURL_Blob_invalid" purpose="Check if FileReaderSync.readAsDataURL throws an exception when the argument is invalid" result="PASS" /><testcase id="FileReaderSync_readAsDataURL_empty_string" purpose="Check if FileReaderSync.readAsDataURL throws an exception when the argument is empty string" result="PASS" /><testcase id="FileReaderSync_readAsDataURL_exist" purpose="Check if FileReaderSync.readAsDataURL exists" result="PASS" /><testcase id="FileReaderSync_readAsDataURL_no_argument" purpose="Check if FileReaderSync.readAsDataURL has no argument that expecting an exception is to be thrown" result="PASS" /><testcase id="FileReaderSync_readAsDataURL_return_string" purpose="Check if FileReaderSync.readAsDataURL has a valid argument that expecting the data contents of blob as a Data URL is to be returned" result="PASS" /><testcase id="FileReaderSync_readAsDataURL_return_type" purpose="Check if the return value of FileReaderSync.readAsDataURL is of type string" result="PASS" /><testcase id="FileReaderSync_readAsDataURL_set_null" purpose="Check if FileReaderSync.readAsDataURL throws an exception when the argument is null" result="PASS" /><testcase id="FileReaderSync_readAsText_base" purpose="Check if read a blob text using readAsText by FileReaderSync interface" result="PASS" /><testcase id="FileReaderSync_readAsText_Blob_invalid" purpose="Check if FileReaderSync.readAsText throws an exception when the argument is invalid" result="PASS" /><testcase id="FileReaderSync_readAsText_empty_string" purpose="Check if FileReaderSync.readAsText throws an exception when the argument is empty string" result="PASS" /><testcase id="FileReaderSync_readAsText_exist" purpose="Check if FileReaderSync.readAsText exists" result="PASS" /><testcase id="FileReaderSync_readAsText_no_argument" purpose="Check if FileReaderSync.readAsText has no argument that expecting an exception is to be thrown" result="PASS" /><testcase id="FileReaderSync_readAsText_return_string" purpose="Check if FileReaderSync.readAsText has a valid argument that expecting the data contents of blob using the encoding determination algorithm is to be returned" result="PASS" /><testcase id="FileReaderSync_readAsText_return_type" purpose="Check if the return value of FileReaderSync.readAsText is of type string" result="PASS" /><testcase id="FileReaderSync_readAsText_set_null" purpose="Check if FileReaderSync.readAsText throws an exception when the argument is null" result="PASS" /><testcase id="FileReader_abort_exist" purpose="Check if FileReader.abort exists" result="PASS" /><testcase id="FileReader_construct" purpose="Check if the construct of the interface FileReader" result="PASS" /><testcase id="FileReader_constructor_base" purpose="Check if the user agent must return a new FileReader object when the FileReader() constructor is invoked" result="PASS" /><testcase id="FileReader_constructor_in_worker" purpose="Check if FileReader's constructor must be available when in environments where the global object is represented by a WorkerGlobalScope object" result="PASS" /><testcase id="FileReader_DONE_exist" purpose="Check if the constant FileReader.DONE exists" result="PASS" /><testcase id="FileReader_DONE_type" purpose="Check if the constant FileReader.DONE is of type number" result="PASS" /><testcase id="FileReader_DONE_value" purpose="Check if the value of constant FileReader.DONE is 2" result="PASS" /><testcase id="FileReader_EMPTY_exist" purpose="Check if the constant FileReader.EMPTY exists" result="PASS" /><testcase id="FileReader_EMPTY_type" purpose="Check if the constant FileReader.EMPTY is of type number" result="PASS" /><testcase id="FileReader_EMPTY_value" purpose="Check if the value of constant FileReader.EMPTY is 0" result="PASS" /><testcase id="FileReader_error_exist" purpose="Check if FileReader.error method exists" result="PASS" /><testcase id="FileReader_error_readonly" purpose="Check if FileReader.error is readonly" result="PASS" /><testcase id="FileReader_LOADING_exist" purpose="Check if the constant FileReader.LOADING exists" result="PASS" /><testcase id="FileReader_LOADING_type" purpose="Check if the constant FileReader.LOADING is of type number" result="PASS" /><testcase id="FileReader_LOADING_value" purpose="Check if the value of constant FileReader.EMPTY is 1" result="PASS" /><testcase id="FileReader_onabort_exist" purpose="Check if FileReader.onabort method exists" result="PASS" /><testcase id="FileReader_onerror_exist" purpose="Check if FileReader.onerror method exists" result="PASS" /><testcase id="FileReader_onloadend_exist" purpose="Check if FileReader.onloadend method exists" result="PASS" /><testcase id="FileReader_onloadstart_exist" purpose="Check if FileReader.onloadstart method exists" result="PASS" /><testcase id="FileReader_onload_exist" purpose="Check if FileReader.onload method exists" result="PASS" /><testcase id="FileReader_onprogress_exist" purpose="Check if FileReader.onprogress method exists" result="PASS" /><testcase id="FileReader_readAsArrayBuffer_Blob_invalid" purpose="Check if the method readAsArrayBuffer value of FileReader interface set invalid value blo has error" result="PASS" /><testcase id="FileReader_readAsArrayBuffer_empty_string" purpose="Check if the method readAsArrayBuffer value of FileReader interface set empty string will Normal execution" result="PASS" /><testcase id="FileReader_readAsArrayBuffer_exist" purpose="Check if FileReader.readAsArrayBuffer exists" result="PASS" /><testcase id="FileReader_readAsArrayBuffer_no_argument" purpose="Check if the method readAsArrayBuffer value of FileReader interface is not Parameter" result="PASS" /><testcase id="FileReader_readAsBinaryString_Blob_invalid" purpose="Check if the method readAsBinaryString value of FileReader interface set blo" result="PASS" /><testcase id="FileReader_readAsBinaryString_empty_string" purpose="Check if the method readAsBinaryString value of FileReader interface set empty string will Normal execution" result="PASS" /><testcase id="FileReader_readAsBinaryString_no_argument" purpose="To check the method readAsBinaryString value of FileReader interface is not Parameter" result="PASS" /><testcase id="FileReader_readAsDataURL_Blob_invalid" purpose="Check if the method readAsDataURL value of FileReader interface set blo" result="PASS" /><testcase id="FileReader_readAsDataURL_empty_string" purpose="Check if the method readAsDataURL value of FileReader interface set empty string will Normal execution" result="PASS" /><testcase id="FileReader_readAsDataURL_exist" purpose="Check if FileReader.readAsDataURL exists" result="PASS" /><testcase id="FileReader_readAsDataURL_no_argument" purpose="Check if the method readAsDataURL of FileReader interface is not parameter" result="PASS" /><testcase id="FileReader_readAsText_Blob_invalid" purpose="Check if the method readAsText value of FileReader interface set blo" result="PASS" /><testcase id="FileReader_readAsText_empty_string" purpose="Check if the method readAsText value of FileReader interface set empty string will Normal execution" result="PASS" /><testcase id="FileReader_readAsText_exist" purpose="Check if FileReader.readAsText exists" result="PASS" /><testcase id="FileReader_readAsText_no_argument" purpose="Check if the method readAsText value of FileReader interface is not parameter" result="PASS" /><testcase id="FileReader_readyState_exist" purpose="Check if FileReader.readyState method exists" result="PASS" /><testcase id="FileReader_readyState_readonly" purpose="Check if FileReader.readyState is readonly" result="PASS" /><testcase id="FileReader_readyState_type" purpose="Check if FileReader.readyState is of type number" result="PASS" /><testcase id="FileReader_result_default_value" purpose="Check if the default value of FileReader.result is null" result="PASS" /><testcase id="FileReader_result_readonly" purpose="Check if FileReader.result is readonly" result="PASS" /><testcase id="FileReader_result_when_readyState_zero" purpose="Check if the value of result is null when the readState is EMPTY" result="PASS" /><testcase id="URL_createObjectURL_blob_invalid" purpose="Check if URL.createObjectURL returns null when this method is called with a Blob argument that is NOT valid" result="PASS" /><testcase id="URL_createObjectURL_exist" purpose="Check if URL.createObjectURL exists" result="PASS" /><testcase id="URL_createObjectURL_no_argument" purpose="Check if URL.createObjectURL has no argument that expecting a exception is to be thrown" result="PASS" /><testcase id="URL_in_webworker" purpose="Check if WorkerUtils implements URL" result="PASS" /><testcase id="URL_revokeObjectURL_exist" purpose="Check if URL.revokeObjectURL exists" result="PASS" /><testcase id="URL_revokeObjectURL_no_argument" purpose="Check if URL.revokeObjectURL has no argument that expecting a exception is to be thrown" result="PASS" /><testcase id="URL_revokeObjectURL_url_invalid" purpose="Check if URL.revokeObjectURL call does nothing and user agents MAY display a message on the error console when the url refers to a Blob that is NOT valid" result="PASS" /></category><category name="W3C_HTML5 APIs/System Apps/Device Capabilities"><testcase id="AudioCodec_m" purpose="Check if the information of AudioCodec is valid according to the test device" result="PASS" /><testcase id="DeviceCapabilities_ondisplayconnect" purpose="Check if the implementation of DeviceCapabilities ondisplayconnect event is valid" result="PASS" /><testcase id="DeviceCapabilities_ondisplaydisconnect" purpose="Check if the implementation of DeviceCapabilities ondisplaydisconnect event is valid" result="PASS" /><testcase id="DeviceCapabilities_onstorageattach" purpose="Check if the implementation of DeviceCapabilities onstorageattach event is valid" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2667 XWALK-2667]]</testcase><testcase id="DeviceCapabilities_onstoragedetach" purpose="Check if the implementation of DeviceCapabilities onstoragedetach event is valid" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2667 XWALK-2667]]</testcase><testcase id="DisplayUnit_m" purpose="Check if if the information of DisplayUnit is valid according to the test device" result="PASS" /><testcase id="StorageUnit_m" purpose="Check if the information of StorageUnit is valid according to the test device" result="PASS" /><testcase id="SystemCPU_m" purpose="Check if the information of SystemCPU is valid according to the test device" result="PASS" /><testcase id="SystemDisplayEvent_DisplayUnit-manual" purpose="Check if the readonly attribute SystemDisplayEvent.DisplayUnit exists and typeof object" result="PASS" /><testcase id="SystemDisplayEvent_DisplayUnit_Connect" purpose="Check if the implementation of SystemDisplayEvent DisplayUnit attribute is not null  when connect a display" result="PASS" /><testcase id="SystemDisplayEvent_DisplayUnit_Disconnect" purpose="Check if the implementation of SystemDisplayEvent DisplayUnit attribute is not null when disconnect a display" result="PASS" /><testcase id="SystemMemory_m" purpose="Check if the information of SystemMemory is valid according to the test device" result="PASS" /><testcase id="SystemStorageEvent_StorageUnit-manual" purpose="Check if the readonly attribute SystemStorageEvent.StorageUnit exists and typeof object" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2667 XWALK-2667]]</testcase><testcase id="SystemStorageEvent_StorageUnit_Attach" purpose="Check if the implementation of SystemStorageEvent StorageUnit attribute is not null when attach a storage" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2667 XWALK-2667]]</testcase><testcase id="SystemStorageEvent_StorageUnit_Detach" purpose="Check if the implementation of SystemStorageEvent StorageUnit attribute is not null when detach a storage" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2667 XWALK-2667]]</testcase><testcase id="VideoCodec_m" purpose="Check if the information of VideoCodec is valid according to the test device" result="PASS" /><testcase id="AudioCodec_format" purpose="Check if the implementation of AudioCodec format attribute is valid" result="PASS" /><testcase id="AudioCodec_format_attribute" purpose="Check if the readonly attribute AudioCodec.format exists and typeof string" result="PASS" /><testcase id="DeviceCapabilities_getAVCodecs" purpose="Check if getAVCodecs method of DeviceCapabilities can work properly" result="PASS" /><testcase id="DeviceCapabilities_getAVCodecs_method" purpose="Check if the DeviceCapabilities.getAVCodecs exists and typeof function" result="PASS" /><testcase id="DeviceCapabilities_getCPUInfo" purpose="Check if getCPUInfo method of DeviceCapabilities can work properly" result="PASS" /><testcase id="DeviceCapabilities_getCPUInfo_method" purpose="Check if the DeviceCapabilities.getCPUInfo exists and typeof function" result="PASS" /><testcase id="DeviceCapabilities_getDisplayInfo" purpose="Check if getDisplayInfo method of DeviceCapabilities can work properly" result="PASS" /><testcase id="DeviceCapabilities_getDisplayInfo_method" purpose="Check if the DeviceCapabilities.getDisplayInfo exists and typeof function" result="PASS" /><testcase id="DeviceCapabilities_getMemoryInfo" purpose="Check if getMemoryInfo method of DeviceCapabilities can work properly" result="PASS" /><testcase id="DeviceCapabilities_getMemoryInfo_method" purpose="Check if the DeviceCapabilities.getMemoryInfo exists and typeof function" result="PASS" /><testcase id="DeviceCapabilities_getStorageInfo" purpose="Check if getStorageInfo method of DeviceCapabilities can work properly" result="PASS" /><testcase id="DeviceCapabilities_getStorageInfo_method" purpose="Check if the DeviceCapabilities.getStorageInfo exists and typeof function" result="PASS" /><testcase id="DisplayUnit_availHeight" purpose="Check if the implementation of  DisplayUnit availHeight attribute is valid" result="PASS" /><testcase id="DisplayUnit_availHeight_height" purpose="Check if the DisplayUnit availHeight attribute must not be greater than height" result="PASS" /><testcase id="DisplayUnit_availWidth" purpose="Check if the implementation of  DisplayUnit availWidth attribute is valid" result="PASS" /><testcase id="DisplayUnit_availWidth_width" purpose="Check if the DisplayUnit availWidth attribute must not be greater than width" result="PASS" /><testcase id="DisplayUnit_colorDepth" purpose="Check if the implementation of  DisplayUnit colorDepth attribute is valid" result="PASS" /><testcase id="DisplayUnit_deviceXDPI" purpose="Check if the implementation of  DisplayUnit deviceXDPI attribute is valid" result="PASS" /><testcase id="DisplayUnit_deviceXDPI_attribute" purpose="Check if the readonly attribute DisplayUnit.deviceXDPI exists and typeof number" result="PASS" /><testcase id="DisplayUnit_deviceYDPI" purpose="Check if the implementation of  DisplayUnit deviceYDPI attribute is valid" result="PASS" /><testcase id="DisplayUnit_deviceYDPI_attribute" purpose="Check if the readonly attribute DisplayUnit.deviceYDPI exists and typeof number" result="PASS" /><testcase id="DisplayUnit_external" purpose="Check if the implementation of  DisplayUnit external attribute is valid" result="PASS" /><testcase id="DisplayUnit_external_attribute" purpose="Check if the readonly attribute DisplayUnit.external exists and typeof boolean" result="PASS" /><testcase id="DisplayUnit_height" purpose="Check if the implementation of  DisplayUnit height attribute is valid" result="PASS" /><testcase id="DisplayUnit_id" purpose="Check if the implementation of DisplayUnit id attribute is valid" result="PASS" /><testcase id="DisplayUnit_id_attribute" purpose="Check if the readonly attribute DisplayUnit.id exists and typeof string" result="PASS" /><testcase id="DisplayUnit_name" purpose="Check if the implementation of  DisplayUnit name attribute is valid" result="PASS" /><testcase id="DisplayUnit_name_attribute" purpose="Check if the readonly attribute DisplayUnit.name exists and typeof string" result="PASS" /><testcase id="DisplayUnit_pixelDepth" purpose="Check if the implementation of  DisplayUnit pixelDepth attribute is valid" result="PASS" /><testcase id="DisplayUnit_primary" purpose="Check if the implementation of  DisplayUnit primary attribute is valid" result="PASS" /><testcase id="DisplayUnit_primary_attribute" purpose="Check if the readonly attribute DisplayUnit.primary exists and typeof boolean" result="PASS" /><testcase id="DisplayUnit_width" purpose="Check if the implementation of  DisplayUnit width attribute is valid" result="PASS" /><testcase id="Navigator_system" purpose="Check if the Navigator system attribute must not be null" result="PASS" /><testcase id="Navigator_system_attribute" purpose="Check if the readonly attribute Navigator.system exists and typeof object" result="PASS" /><testcase id="StorageUnit_capacity" purpose="Check if the implementation of StorageUnit capacity attribute is valid" result="PASS" /><testcase id="StorageUnit_capacity_attribute" purpose="Check if the readonly attribute StorageUnit.capacity exists and typeof number" result="PASS" /><testcase id="StorageUnit_id" purpose="Check if the implementation of StorageUnit id attribute is valid" result="PASS" /><testcase id="StorageUnit_id_attribute" purpose="Check if the readonly attribute StorageUnit.id exists and typeof string" result="PASS" /><testcase id="StorageUnit_name" purpose="Check if the implementation of StorageUnit name attribute is valid" result="PASS" /><testcase id="StorageUnit_name_attribute" purpose="Check if the readonly attribute StorageUnit.name exists and typeof string" result="PASS" /><testcase id="StorageUnit_type" purpose="Check if the implementation of StorageUnit type attribute is valid" result="PASS" /><testcase id="StorageUnit_type_attribute" purpose="Check if the readonly attribute StorageUnit.type exists and typeof string" result="PASS" /><testcase id="SystemAVCodecs_audioCodecs" purpose="Check if the SystemAVCodecs audioCodecs attribute must not be null when getAVCodecs method is invoked" result="PASS" /><testcase id="SystemAVCodecs_audioCodecs_attribute" purpose="Check if the readonly attribute SystemAVCodecs.audioCodecs exists and typeof object" result="PASS" /><testcase id="SystemAVCodecs_videoCodecs" purpose="Check if the SystemAVCodecs videoCodecs attribute must not be null when getAVCodecs method is invoked" result="PASS" /><testcase id="SystemAVCodecs_videoCodecs_attribute" purpose="Check if the readonly attribute SystemAVCodecs.videoCodecs exists and typeof object" result="PASS" /><testcase id="SystemCPU_archName" purpose="Check if the impelmentation of SystemCPU archName attribute is valid" result="PASS" /><testcase id="SystemCPU_archName_attribute" purpose="Check if the readonly attribute SystemCPU.archName exists and typeof string" result="PASS" /><testcase id="SystemCPU_load" purpose="Check if the impelmentation of SystemCPU load attribute is valid" result="PASS" /><testcase id="SystemCPU_load_attribute" purpose="Check if the readonly attribute SystemCPU.load exists and typeof number" result="PASS" /><testcase id="SystemCPU_load_range" purpose="Check if the cpu load is between 0 and 1" result="PASS" /><testcase id="SystemCPU_numOfProcessors" purpose="Check if the impelmentation of SystemCPU numOfProcessors attribute is valid" result="PASS" /><testcase id="SystemCPU_numOfProcessors_attribute" purpose="Check if the readonly attribute SystemCPU.numOfProcessors exists and typeof number" result="PASS" /><testcase id="SystemDisplay_displays" purpose="Check if the SystemDisplay displays attribute must not be null when getDisplayInfo method is invoked" result="PASS" /><testcase id="SystemDisplay_displays_attribute" purpose="Check if the readonly attribute SystemDisplay.displays exists and typeof object" result="PASS" /><testcase id="SystemMemory_availCapacity" purpose="Check if the impelmentation of SystemMemory availCapacity attribute is valid" result="PASS" /><testcase id="SystemMemory_availCapacity_attribute" purpose="Check if the readonly attribute SystemMemory.availCapacity exists and typeof number" result="PASS" /><testcase id="SystemMemory_capacity" purpose="Check if the implementation of  SystemMemory capacity attribute is valid" result="PASS" /><testcase id="SystemMemory_capacity_attribute" purpose="Check if the readonly attribute SystemMemory.capacity exists and typeof number" result="PASS" /><testcase id="SystemMemory_capacity_availCapacity" purpose="Check if availCapacity must not be greater than capacity" result="PASS" /><testcase id="SystemStorage_storages" purpose="Check if the SystemStorage storages attribute must not be null when getStorageInfo method is invoked" result="PASS" /><testcase id="SystemStorage_storages_attribute" purpose="Check if the readonly attribute SystemStorage.storages exists and typeof object" result="PASS" /><testcase id="VideoCodec_encode" purpose="Check if the implementation of VideoCodec encode attribute is vaild" result="PASS" /><testcase id="VideoCodec_encode_attribute" purpose="Check if the readonly attribute VideoCodec.encode exists and typeof boolean" result="PASS" /><testcase id="VideoCodec_format" purpose="Check if the implementation of VideoCodec format attribute is vaild" result="PASS" /><testcase id="VideoCodec_format_attribute" purpose="Check if the readonly attribute VideoCodec.format exists and typeof string" result="PASS" /><testcase id="VideoCodec_hwAccel" purpose="Check if the implementation of VideoCodec hwAccel attribute is vaild" result="PASS" /><testcase id="VideoCodec_hwAccel_attribute" purpose="Check if the readonly attribute VideoCodec.hwAccel exists and typeof boolean" result="PASS" /></category><category name="W3C_HTML5 APIs/System Apps/Messaging"><testcase id="MmsManager_onreceived" purpose="Check if onreceived event can be fired when a new message is received on this messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_onserviceadded" purpose="Check if onserviceadded event can be fired whenever a new messaging service is enabled on this messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_onserviceremoved" purpose="Check if onserviceremoved event can be fired when an existing messaging service is disabled on this messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_received_event" purpose="Check if set up the received event successful for mmsManager using the type received" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_serviceadded_event" purpose="Check if set up the serviceadded event successful for mmsManager using the type serviceadded" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_serviceremoved_event" purpose="Check if set up the serviceremoved event successful for mmsManager using the type serviceremoved" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="SmsManager_onreceived" purpose="Check if onreceived event can be fired when a new message is received on this messaging service manager" result="PASS" /><testcase id="SmsManager_onserviceadded" purpose="Check if onserviceadded event can be fired whenever a new messaging service is enabled on this messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="SmsManager_onserviceremoved" purpose="Check if onserviceremoved event can be fired when an existing messaging service is disabled on this messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="SmsManager_received_event" purpose="Check if set up the received event successful for SmsManager using the type received" result="PASS" /><testcase id="SmsManager_serviceadded_event" purpose="Check if set up the serviceadded event successful for SmsManager using the type serviceadded" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="SmsManager_serviceremoved_event" purpose="Check if set up the serviceremoved event successful for SmsManager using the type serviceremoved" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="Conversation_conversationID" purpose="Check if the conversationID attribute of conversation is valid" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="Conversation_cursor" purpose="Check if the cursor of Conversation return the MessageCursor to access the message in this conversation" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="Conversation_lastMessageID" purpose="Check if the lastMessageID of Conversation is the identifier of the message in the conversation with the most recent timestamp" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="Conversation_messageCount" purpose="Check if the messageCount of Conversation is the number of messages in the conversation" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="Conversation_messageTypes" purpose="Check if the messageTypes of Conversation is an array contining the different types of messages included in the conversation" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="Conversation_participants" purpose="Check if the participants of Conversation is an array containing the participants in the conversation" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="Conversation_subject" purpose="Check if the subject of Conversation is the subject of the conversation" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="Conversation_type_participants" purpose="Check if the type of Conversation is participants if the conversation is defined as the set of messages exchanged among the same set of parties" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="Conversation_type_subject" purpose="Check if the type of Conversation is subject if the conversation is defined as the set of messages with the same subject" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="Conversation_unreadCount" purpose="Check if the unreadCount of Conversation is the number of unread messages in the conversation" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="deleteConversation_zero" purpose="Check if the deleteConversation method which has no params can not work normally" result="PASS" /><testcase id="deleteMessage_zero" purpose="Check if the deleteMessage method which has no params can not work normally" result="PASS" /><testcase id="findConversations_one" purpose="Check if the findConversations method which has only one params can not work normally" result="PASS" /><testcase id="findMessages_one" purpose="Check if the findMessages method which has only one params can not work normally" result="PASS" /><testcase id="getMessage_zero" purpose="Check if the getMessage method which has no params can not work normally" result="PASS" /><testcase id="markConversationRead_one" purpose="CCheck if the markConversationRead method which has only one params can not work normally" result="PASS" /><testcase id="markMessageRead_one" purpose="Check if the markMessageRead method which has only one params can not work normally." result="PASS" /><testcase id="MessagingCursor_element" purpose="Check if the element of MessagingCursor is the currently accessed element" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MessagingCursor_next" purpose="Check if the next method of MessagingCursor can access to the next element" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MessagingCursor_previous" purpose="Check if the previous method of MessagingCursor can access to the previous element" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MessagingManager_deleteConversation" purpose="Check if the deleteConversation method of message can delete the conversation by the conversationID" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MessagingManager_deleteConversation_basic" purpose="Check if the deleteConversation function of MessagingManager exists and type of function" result="PASS" /><testcase id="MessagingManager_deleteMessage" purpose="Check if the deleteMessage of message can delete the message by messageID" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MessagingManager_deleteMessage_basic" purpose="Check if the deleteMessage function of MessagingManager exists and type of function" result="PASS" /><testcase id="MessagingManager_findConversations" purpose="Check if the findConversations method of message can return a conversation object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MessagingManager_findConversations_basic" purpose="Check if the findConversations function of MessagingManager exists and type of function" result="PASS" /><testcase id="MessagingManager_findMessages" purpose="Check if the findMessages methos of message can return a MessagingCursor object" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MessagingManager_findMessages_basic" purpose="Check if the findMessages function of MessagingManager exists and type of function" result="PASS" /><testcase id="MessagingManager_getMessage" purpose="Check if the getMessage method of message can return a message object" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2940 XWALK-2940]]</testcase><testcase id="MessagingManager_getMessage_basic" purpose="Check if the getMessage function of MessagingManager exists and type of function" result="PASS" /><testcase id="MessagingManager_markConversationRead" purpose="Check if the markConversationRead method of message which has three params can change conversation status successful" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2140 XWALK-2140]]</testcase><testcase id="MessagingManager_markConversationRead_basic" purpose="Check if the markConversationRead function of MessagingManager exists and type of function" result="PASS" /><testcase id="MessagingManager_markConversationRead_true" purpose="Check if the markConversationRead method of message can change conversation status" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2140 XWALK-2140]]</testcase><testcase id="MessagingManager_markMessageRead_basic" purpose="Check if the markMessageRead function of MessagingManager exists and type of function" result="PASS" /><testcase id="MessagingManager_markMessageRead_false" purpose="Check if the markMessageRead of message can change message status" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2140 XWALK-2140]]</testcase><testcase id="MessagingManager_markMessageRead_true" purpose="Check if the markMessageRead of message which has three params can change message status" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2140 XWALK-2140]]</testcase><testcase id="MessagingManager_mms_basic" purpose="Check if the readonly attribute mms of MessagingManager exists and type of object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MessagingManager_sms_basic" purpose="Check if the readonly attribute sms of MessagingManager exists and type of object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_clear" purpose="Check if the clear method of mmsManager delete all the messages associated to the messaging service" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_clear_basic" purpose="Check if the clear function of MmsManager exists and type of function" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_deliveryfailure_event" purpose="Check if set up the deliveryfailure event successful for mmsManager using the type deliveryfailure" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_deliverysuccess_event" purpose="Check if set up the deliverysuccess event successful for mmsManager using the type deliverysuccess" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_fetch" purpose="Check if the fetch method requests to fetch an MMS message with identifier equal to the indicated in the messageID parameter" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_fetch_basic" purpose="Check if the fetch function of MmsManager exists and type of function" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_fetch_zero" purpose="Check if the fetch method of MmsManager which has no params can not work normally" result="PASS" /><testcase id="MmsManager_getFetchMode" purpose="Check if the getFetchMode method requests to retrieve the fetch mode associated to a specific service" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_getFetchMode_basic" purpose="Check if the getFetchMode function of MmsManager exists and type of function" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_ondeliveryerror_basic" purpose="Check if the ondeliveryerror event of MmsManager is exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_ondeliveryfailure" purpose="Check if ondeliveryfailure event can be fired when a new failure delivery report is received on this messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_ondeliverysuccess" purpose="Check if ondeliverysuccess event can be fired when a new succesful delivery report is received on this messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_ondeliverysuccess_basic" purpose="Check if the ondeliverysuccess event of MmsManager is exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_onreaderror" purpose="Check if onreaderror event can be fired when a new failure read report is received on this messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_onreaderror_basic" purpose="Check if the onreaderror event of MmsManager is exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_onreadsuccess" purpose="Check if onreadsuccess event can be fired when a new succesful read report is received on this messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_onreadsuccess_basic" purpose="Check if the onreadsuccess event of MmsManager is exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_onreceived_basic" purpose="Check if the onreceived event of MmsManager is exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_onsent" purpose="Check if onsent event can be fired when a new message is sent using this messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsManager_onsent_basic" purpose="Check if the onsent event of MmsManager is exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_onserviceadded_basic" purpose="Check if the onserviceadded event of MmsManager is exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_onserviceremoved_basic" purpose="Check if the onserviceremoved event of MmsManager is exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_readerror_event" purpose="Check if set up the readerror event successful for mmsManager using the type readerror" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_readsuccess_event" purpose="Check if set up the readsuccess event successful for mmsManager using the type readsuccess" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_send" purpose="Check if the send method of mmsManager can send a MMS message successfully" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_send_basic" purpose="Check if the send function of MmsManager exists and type of function" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_send_type" purpose="Check if the send method of MmsManager which has wrong type params can not work normally" result="PASS" /><testcase id="MmsManager_send_zero" purpose="Check if the send method of MmsManager which has no params can not work normally" result="PASS" /><testcase id="MmsManager_sent_event" purpose="Check if set up the sent event successful for mmsManager using the type sent" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_serviceIDs" purpose="Check if the serviceIDs attribute is the identifier of the different services for this type of messaging service" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_serviceIDs_basic" purpose="Check if the readonly attribute serviceIDs of MmsManager exists and type of array" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_setFetchMode" purpose="Check if the setFetchMode method request to the messaging system to set the MMS message fetch mode for the service" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_setFetchMode_basic" purpose="Check if the setFetchMode function of MmsManager exists and type of function" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_type" purpose="Check if the type attribute is the type of the messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsManager_type_basic" purpose="Check if the readonly attribute type of MmsManager is exists and type of string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-862 XWALK-862]]</testcase><testcase id="MmsMessage_attachments" purpose="Check if the attachments of MmsMessage is the set of attachments of the MMS message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_attachments_basic" purpose="Check if the readonly attribute attachments of MmsMessage exists and type of array" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_bcc" purpose="Check if the bcc of MmsMessage is an array containing the recipient(s) included in the Bcc field of the MMS message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_bcc_basic" purpose="Check if the readonly attribute bcc of MmsMessage exists and type of array" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_cc" purpose="Check if the cc of MmsMessage is an array containing the recipient(s) included in the Cc field of the MMS message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_cc_basic" purpose="Check if the readonly attribute cc of MmsMessage exists and type of array" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_deliveryInfo" purpose="Check if the deliveryInfo of MmsMessage is an array with each of the items indicating the delivery status" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_deliveryInfo_basic" purpose="Check if the readonly attribute deliveryInfo of MmsMessage exists and type of array" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_expiry" purpose="Check if the expiry of MmsMessage is the number of seconds the message will be stored in the Multimedia Messaging Service Center and thus available for download" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_expiry_basic" purpose="Check if the readonly attribute expiry of MmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_from" purpose="Check if the from of MmsMessage is the sender of the message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_from_basic" purpose="Check if the readonly attribute from of MmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_messageID" purpose="Check if the messageID of MmsMessage is the identifier of the message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_messageID_basic" purpose="Check if the readonly attribute messageID of MmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_readReportRequested_basic" purpose="Check if the readonly attribute readReportRequested of MmsMessage exists and type of boolean" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_read_basic" purpose="Check if the readonly attribute read of MmsMessage exists and type of boolean" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_read_false" purpose="Check if the read of MmsMessage is false if the message has not been marked as read" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_read_true" purpose="Check if the read of MmsMessage is type of boolean" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_serviceID" purpose="Check if the serviceID of MmsMessage is the messaging service id used to send / receive this message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_serviceID_basic" purpose="Check if the readonly attribute serviceID of MmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_smil" purpose="Check if the smil of MmsMessage is the SMIL" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_smil_basic" purpose="Check if the readonly attribute smil of MmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_state" purpose="Check if the state of MmsMessage is in the states of MmsState" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_state_basic" purpose="Check if the readonly attribute state of MmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_subject" purpose="Check if the subject of MmsMessage is the subject of the MMS message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_subject_basic" purpose="Check if the readonly attribute subject of MmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_timestamp" purpose="Check if the timestamp of MmsMessage is the time the message reached the Multimedia Message Center" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_timestamp_basic" purpose="Check if the readonly attribute timestamp of MmsMessage exists and type of date" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_to" purpose="Check if the to of MmsMessage is an array containing the recipient(s) included in the To field of the MMS message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_to_basic" purpose="Check if the readonly attribute to of MmsMessage exists and type of array" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_type" purpose="Check if the type of MmsMessage is the type of message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="MmsMessage_type_basic" purpose="Check if the readonly attribute type of MmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsManager_clear" purpose="Check if the clear method of SmsManager delete all the messages associated to the messaging service" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2140 XWALK-2140]]</testcase><testcase id="SmsManager_clear_basic" purpose="Check if the clear function of SmsManager exists and type of function" result="PASS" /><testcase id="SmsManager_deliveryfailure_event" purpose="Check if set up the deliveryfailure event successful for SmsManager using the type deliveryfailure" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsManager_deliverysuccess_event" purpose="Check if set up the deliverysuccess event successful for SmsManager using the type deliverysuccess" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsManager_ondeliveryerror_basic" purpose="Check if the ondeliveryerror event of SmsManager exists" result="PASS" /><testcase id="SmsManager_ondeliveryfailure" purpose="Check if ondeliveryfailure event can be fired when a new failure delivery report is received on this messaging service manager" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsManager_ondeliverysuccess" purpose="Check if ondeliverysuccess event can be fired when a new succesful delivery report is received on this messaging service manager" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsManager_ondeliverysuccess_basic" purpose="Check if the ondeliverysuccess event of SmsManager exists" result="PASS" /><testcase id="SmsManager_onreceived_basic" purpose="Check if the onreceived event of SmsManager exists" result="PASS" /><testcase id="SmsManager_onsent" purpose="Check if onsent event can be fired when a new message is sent using this messaging service manager" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsManager_onsent_basic" purpose="Check if the onsent event of SmsManager exists" result="PASS" /><testcase id="SmsManager_onserviceadded_basic" purpose="Check if the onserviceadded event of SmsManager exists" result="PASS" /><testcase id="SmsManager_onserviceremoved_basic" purpose="Check if the onserviceremoved event of SmsManager exists" result="PASS" /><testcase id="SmsManager_segmentInfo_basic" purpose="Check if the segmentInfo function of SmsManager exists and type of function" result="PASS" /><testcase id="SmsManager_segmentInfo_zero" purpose="Check if the segmentInfo method of SmsManager which has no params can not work normally" result="PASS" /><testcase id="SmsManager_send" purpose="Check if the send method of SmsManager can send a message successfully" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2140 XWALK-2140]]</testcase><testcase id="SmsManager_send_basic" purpose="Check if the send function of SmsManager exists and type of function" result="PASS" /><testcase id="SmsManager_send_one" purpose="Check if the send method of SmsManager which has one param can not work normally" result="PASS" /><testcase id="SmsManager_send_type" purpose="Check if the send method of SmsManager which has wrong type params can not work normally" result="PASS" /><testcase id="SmsManager_send_zero" purpose="Check if the send method of SmsManager which has no param can not work normally" result="PASS" /><testcase id="SmsManager_sent_event" purpose="Check if set up the sent event successful for SmsManager using the type sent" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsManager_serviceIDs" purpose="Check if the serviceIDs attribute is the identifier of the different services for this type of messaging service" result="PASS" /><testcase id="SmsManager_serviceIDs_basic" purpose="Check if the readonly attribute serviceIDs of SmsManager exists and type of array" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsManager_SmsSegmentInfo_charsAvailableInLastSegment" purpose="Check if the charsAvailableInLastSegment of SmsSegmentInfo is the maximum number of available characters in the last segment needed to send the input string" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2140 XWALK-2140]]</testcase><testcase id="SmsManager_SmsSegmentInfo_charsPerSegment" purpose="Check if the charsPerSegment of SmsSegmentInfo is the number of characters available per SMS segment as per the encoding to be used to send the SMS message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2140 XWALK-2140]]</testcase><testcase id="SmsManager_SmsSegmentInfo_segments" purpose="Check if the segments of SmsSegmentInfo is the total number of SMS segments needed to send the input string" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2140 XWALK-2140]]</testcase><testcase id="SmsManager_type" purpose="Check if the type attribute is the type of the messaging service manager" result="PASS" /><testcase id="SmsManager_type_basic" purpose="Check if the readonly attribute type of SmsManager exists and type of string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_body" purpose="Check if the body of SmsMessage is the text of the SMS message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_body_basic" purpose="Check if the readonly attribute body of SmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_deliveryStatus" purpose="Check if the deliveryStatus of SmsMessage is in the states of DeliveryStatus" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_deliveryStatus_basic" purpose="Check if the readonly attribute deliveryStatus of SmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_deliveryTimestamp_basic" purpose="Check if the readonly attribute deliveryTimestamp of SmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_deliveryTimestamp_normal" purpose="Check if the deliveryTimestamp of SmsMessage for sent messages the delivery date as reported in the TP-Discharge-Time (TP DT) parameter included in the SMS-STATUS-REPORT Protocol Data Unit" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_deliveryTimestamp_null_1" purpose="Check if the deliveryTimestamp of SmsMessage is exit" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_deliveryTimestamp_null_2" purpose="Check if the deliveryTimestamp of SmsMessage is null if there is no positive knowledge about the delivery of the message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_from" purpose="Check if the from of SmsMessage is the sender of the message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_from_basic" purpose="Check if the readonly attribute from of SmsMessage exists and type of string" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_messageClass" purpose="Check if the messageClass of SmsMessage is in the states of MessageClass" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_messageClass_basic" purpose="Check if the readonly attribute messageClass of SmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_messageID" purpose="Check if the messageID of SmsMessage is the identifier of the message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_messageID_basic" purpose="Check if the readonly attribute messageID of SmsMessage exists and type of string" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_read_basic" purpose="Check if the readonly attribute read of SmsMessage exists and type of boolean" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_read_false" purpose="Check if the read of SmsMessage is type of boolean" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_read_true" purpose="Check if the read of SmsMessage is exit!" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_serviceID" purpose="Check if the serviceID of SmsMessage is the messaging service id used to send / receive this message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_serviceID_basic" purpose="Check if the readonly attribute serviceID of SmsMessage exists and type of string" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_state" purpose="Check if the state of SmsMessage is in the states of SmsState" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_state_basic" purpose="Check if the readonly attribute state of SmsMessage exists and type of String" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_timestamp" purpose="Check if the timestamp of SmsMessage is the time the message reached the Short Message Center" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_timestamp_basic" purpose="Check if the readonly attribute timestamp of SmsMessage exists and type of Date" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_to" purpose="Check if the to of SmsMessage is the recipient of the message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_to_basic" purpose="Check if the readonly attribute to of SmsMessage exists and type of string" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_type" purpose="Check if the type of SmsMessage is the type of message" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase><testcase id="SmsMessage_type_basic" purpose="Check if the readonly attribute type of SmsMessage exists and type of string" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2938 XWALK-2938]]</testcase></category><category name="W3C_HTML5 APIs/UI/Web Notifications"><testcase id="notification_body" purpose="Check if the notification body show correct" result="PASS" /><testcase id="notification_tag" purpose="Check if the notification tag can work" result="PASS" /><testcase id="notification_close_exist" purpose="Check if notification.close attribute exists" result="PASS" /><testcase id="notification_close_type" purpose="Check if the type notification.close attribute is function" result="PASS" /><testcase id="notification_constructor" purpose="Check if Notification has all valid arguments that expecting an notification is to be created" result="PASS" /><testcase id="notification_onclick_exist" purpose="Check if notification.onclick attribute exists" result="PASS" /><testcase id="notification_onclick_type" purpose="Check if the type notification.onclick attribute is object" result="PASS" /><testcase id="notification_onclose_exist" purpose="Check if notification.onclose attribute exists" result="PASS" /><testcase id="notification_onclose_type" purpose="Check if the type notification.onclose attribute is object" result="PASS" /><testcase id="notification_onerror_exist" purpose="Check if notification.onerror attribute exists" result="PASS" /><testcase id="notification_onerror_type" purpose="Check if the type notification.onerror attribute is object" result="PASS" /><testcase id="notification_onshow_exist" purpose="Check if notification.onshow attribute exists" result="PASS" /><testcase id="notification_onshow_type" purpose="Check if the type notification.onshow attribute is object" result="PASS" /><testcase id="notification_requestPermission_exist" purpose="Check if notification.requestPermission method exists" result="PASS" /><testcase id="notification_requestPermission_type" purpose="Check if the type notification.requestPermission method is function" result="PASS" /><testcase id="notification_supports" purpose="Check if notification supports" result="PASS" /><testcase id="onshow_using" purpose="Check if the notification.onshow event can work" result="PASS" /></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/Semantics"><testcase id="figcaption_element_support" purpose="Check the figcaption element visual effect" result="PASS" /><testcase id="figure_element_support" purpose="Check the figure element visual effect" result="PASS" /><testcase id="mark_background_is_yellow" purpose="Check if the mark background is yellow" result="PASS" /><testcase id="textarea-placeholder" purpose="Check if there is a 'Placeholder Text' in the text area, and if the 'Placeholder Text' disappears after type in any character" result="PASS" /><testcase id="abbr_element_support" purpose="Check if the abbr element supports" result="PASS" /><testcase id="abbr_node_created" purpose="Check if abbr node created" result="PASS" /><testcase id="article_element_support" purpose="Check if the article element supports" result="PASS" /><testcase id="article_node_created" purpose="Check if article node created" result="PASS" /><testcase id="aside_element_support" purpose="Check if the aside element supports" result="PASS" /><testcase id="aside_node_created" purpose="Check if aside node created" result="PASS" /><testcase id="a_element_download_exist" purpose="Check if the a.download exist" result="PASS" /><testcase id="compatMode_attribute_support" purpose="Check if the compatMode attribute support" result="PASS" /><testcase id="contentEditable_attribute_support" purpose="check if contentEditable attribute supports" result="PASS" /><testcase id="datalist_element_support" purpose="Check if the datalist element supported" result="PASS" /><testcase id="dataset_delete_data-" purpose="Check that the 'data-' attribute should be removed if element.dataset[''] is deleted" result="PASS" /><testcase id="dataset_delete_data--" purpose="Check that the 'data--' attribute should be removed if element.dataset['-'] is deleted" result="PASS" /><testcase id="dataset_delete_data---foo" purpose="Check that the 'data---foo' attribute should be removed if element.dataset['-Foo'] is deleted" result="PASS" /><testcase id="dataset_delete_data--foo" purpose="Check that the 'data--foo' attribute should be removed if element.dataset['-foo'] is deleted" result="PASS" /><testcase id="dataset_delete_data--foo_capitalized" purpose="Check that the 'data--foo' attribute should be removed if element.dataset['Foo'] is deleted" result="PASS" /><testcase id="dataset_delete_data-E0" purpose="Check that the 'data-xE0' attribute should be removed if element.dataset['xE0'] is deleted" result="PASS" /><testcase id="dataset_delete_data-foo" purpose="Check that the 'data-foo' attribute should be removed if element.dataset['foo'] is deleted" result="PASS" /><testcase id="dataset_delete_data-foo-bar" purpose="Check that the 'data-foo-bar' attribute should be removed if element.dataset['fooBar'] is deleted" result="PASS" /><testcase id="dataset_delete_data-foo_noadd" purpose="Check that an exception should not be thrown if element.dataset['foo'] is deleted even though there is no data-foo attribute in element" result="PASS" /><testcase id="dataset_enumeration" purpose="Check if the dataset attribute of xhtml5 is enumaratable" result="PASS" /><testcase id="dataset_enumeration_qualified" purpose="Check if the non-dataset attribute of xhtml5 is enumaratable" result="PASS" /><testcase id="dataset_get_" purpose="Check that dataFoo attribute does not make an entry in the dataset DOMStringMap" result="PASS" /><testcase id="dataset_get_data-" purpose="Check that element.dataset[''] should return the value of element.getAttribute('data-')" result="PASS" /><testcase id="dataset_get_data--" purpose="Check that element.dataset['-'] should return the value of element.getAttribute('data--')" result="PASS" /><testcase id="dataset_get_data---foo" purpose="Check that element.dataset['-Foo'] should return the value of element.getAttribute('data---foo')" result="PASS" /><testcase id="dataset_get_data--foo" purpose="Check that element.dataset['Foo'] should return the value of element.getAttribute('data--foo')" result="PASS" /><testcase id="dataset_get_data-E0" purpose="Check that element.dataset['xE0'] should return the value of element.getAttribute('data-xE0')" result="PASS" /><testcase id="dataset_get_data-Foo" purpose="Check that element.dataset['foo'] should return the value of element.getAttribute('data-Foo')" result="PASS" /><testcase id="dataset_get_data-foo" purpose="Check that element.dataset['foo'] should return the value of element.getAttribute('data-foo')" result="PASS" /><testcase id="dataset_get_data-foo-bar" purpose="Check that element.dataset['fooBar'] should return the value of element.getAttribute('data-foo-bar')" result="PASS" /><testcase id="dataset_instanceof" purpose="Check if an element's dataset property is an instance of a DOMStringMap" result="PASS" /><testcase id="dataset_set_-foo" purpose="Check that SYNTAX_ERR exception should be thrown if set element.dataset['-foo']" result="PASS" /><testcase id="dataset_set_data-" purpose="Check that the value of element.getAttribute('data-') should be changed if set element.dataset['']" result="PASS" /><testcase id="dataset_set_data--" purpose="Check that the value of element.getAttribute('data--') should be changed if set element.dataset['-']" result="PASS" /><testcase id="dataset_set_data---foo" purpose="Check that the value of element.getAttribute('data---foo') should be changed if set element.dataset['-Foo']" result="PASS" /><testcase id="dataset_set_data--foo" purpose="Check that the value of element.getAttribute('data--foo') should be changed if set element.dataset['Foo']" result="PASS" /><testcase id="dataset_set_data-E0" purpose="Check that the value of element.getAttribute('data-xE0') should be changed if set element.dataset['xE0']" result="PASS" /><testcase id="dataset_set_data-foo" purpose="Check that the value of element.getAttribute('data-foo') should be changed if set element.dataset['foo']" result="PASS" /><testcase id="dataset_set_data-foo-bar" purpose="Check that the value of element.getAttribute('data-foo-bar') should be changed if set element.dataset['fooBar']" result="PASS" /><testcase id="dataset_set_foo_20" purpose="Check that INVALID_CHARACTER_ERR exception should be thrown if set element.dataset['foox20']" result="PASS" /><testcase id="dataset_set_foo_F900" purpose="Check that INVALID_CHARACTER_ERR exception should be thrown if set element.dataset['foouF900']" result="PASS" /><testcase id="datetime_1" purpose="Check if the date type support on input 'date' element" result="PASS" /><testcase id="datetime_15" purpose="Check if the datetime type support on input 'datetime' element" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1891 XWALK-1891]]</testcase><testcase id="datetime_17" purpose="Check if the min attribute must have a value that is a valid global date and time string when type='datetime'" result="PASS" /><testcase id="datetime_18" purpose="Check if the max attribute must have a value that is a valid global date and time string when type='datetime'" result="PASS" /><testcase id="datetime_19" purpose="Check if the step attribute must be expressed in seconds when type='datetime'" result="PASS" /><testcase id="datetime_20" purpose="Check if the stepUp method support on input 'datetime' element" result="PASS" /><testcase id="datetime_21" purpose="Check if the stepDown method support on input 'datetime' element" result="PASS" /><testcase id="datetime_26" purpose="Check if the step attribute must be expressed in seconds when type='month'" result="PASS" /><testcase id="datetime_28" purpose="Check if the stepDown method support on input 'month' element" result="PASS" /><testcase id="datetime_29" purpose="Check if the week type support on input element" result="PASS" /><testcase id="datetime_3" purpose="Check if the min attribute must have a value that is a valid global date and time string when type='date'" result="PASS" /><testcase id="datetime_31" purpose="Check if the min attribute must have a value that is a valid global date and time string when type='week'" result="PASS" /><testcase id="datetime_32" purpose="Check if the max attribute must have a value that is a valid global date and time string when type='week'" result="PASS" /><testcase id="datetime_33" purpose="Check if the step attribute must be expressed in seconds when type='week'" result="PASS" /><testcase id="datetime_34" purpose="Check if the stepUp method support on input 'week' element" result="PASS" /><testcase id="datetime_35" purpose="Check if the stepDown method support on input 'week' element" result="PASS" /><testcase id="datetime_4" purpose="Check if the max attribute must have a value that is a valid global date and time string when type='date'" result="PASS" /><testcase id="datetime_5" purpose="Check if the step attribute must be expressed in seconds type='date'" result="PASS" /><testcase id="datetime_6" purpose="Check if the stepUp method support on input 'date' element" result="PASS" /><testcase id="datetime_7" purpose="Check if the stepDown method support on input 'date' element" result="PASS" /><testcase id="datetime_local_max" purpose="Check if max exists in input 'datetime-local' element" result="PASS" /><testcase id="datetime_local_min" purpose="Check if min exists in input 'datetime-local' element" result="PASS" /><testcase id="datetime_local_step" purpose="Check if step exists in input 'datetime-local' element" result="PASS" /><testcase id="datetime_local_stepDown_1" purpose="Check if stepDown exists in input 'datetime-local' element" result="PASS" /><testcase id="datetime_local_stepUp" purpose="Check if stepUp exists in input 'datetime-local' element" result="PASS" /><testcase id="datetime_local_support" purpose="Check if the datetime-local type support on input 'datetime-local' element" result="PASS" /><testcase id="datetime_local_valueAsNumber" purpose="Check if valueAsNumber exists in input 'datetime-local' element" result="PASS" /><testcase id="designMode_attribute_support" purpose="Check if designMode attribute supports" result="PASS" /><testcase id="details_element_support" purpose="Check if the details element supports" result="PASS" /><testcase id="details_open_support" purpose="Check if details.open exists" result="PASS" /><testcase id="details_open_value" purpose="Check if details open default value is false" result="PASS" /><testcase id="fieldset_elements_check" purpose="Check the fieldset elements attribute exists" result="PASS" /><testcase id="fieldset_element_support" purpose="Check if the fieldset element supported" result="PASS" /><testcase id="figcaption_element_exists" purpose="Check if figcaption element exists" result="PASS" /><testcase id="figcaption_node_created" purpose="Check if figcaption node created" result="PASS" /><testcase id="figure_element_exists" purpose="Check if figure element exists" result="PASS" /><testcase id="figure_node_created" purpose="Check if figure node created" result="PASS" /><testcase id="fixture_dataset_alpha" purpose="Check if the value of fixture.dataset.alpha is right" result="PASS" /><testcase id="fixture_dataset_enumerable" purpose="Check if the enum value of fixture.dataset are right" result="PASS" /><testcase id="fixture_dataset_length" purpose="Check if the value of fixture.dataset.length is 1" result="PASS" /><testcase id="fixture_getAttribute" purpose="Check if the value of fixture.getAttribute is right" result="PASS" /><testcase id="footer_element_support" purpose="Check if the footer element supports" result="PASS" /><testcase id="footer_node_created" purpose="Check if footer node created" result="PASS" /><testcase id="form_noValidate_exist" purpose="Check if noValidate attribute in form element" result="PASS" /><testcase id="header_element_support" purpose="Check if the header element supports" result="PASS" /><testcase id="header_node_created" purpose="Check if header node created" result="PASS" /><testcase id="hidden_attribute_support" purpose="Check if the hidden attribute support" result="PASS" /><testcase id="iframe_supported" purpose="Check if the iframe tag supported" result="PASS" /><testcase id="input_autocomplete_exist" purpose="Check if autocomplete attribute in input element" result="PASS" /><testcase id="input_autofocus_exist" purpose="Check if autofocus attribute in input element" result="PASS" /><testcase id="input_checkValidity_exist" purpose="Check if checkValidity attribute in input element" result="PASS" /><testcase id="input_dirName_exist" purpose="Check if dirName  attribute in input element" result="PASS" /><testcase id="input_email_invalid" purpose="Check if the value of input type=email is valid" result="PASS" /><testcase id="input_email_support" purpose="Check if the input element type=email supported" result="PASS" /><testcase id="input_formAction_exist" purpose="Check if formAction attribute in input element" result="PASS" /><testcase id="input_formEnctype_exist" purpose="Check if formEnctype attribute in input element" result="PASS" /><testcase id="input_formMethod_exist" purpose="Check if formMethod attribute in input element" result="PASS" /><testcase id="input_formNoValidate_exist" purpose="Check if formNoValidate attribute in input element" result="PASS" /><testcase id="input_formTarget_exist" purpose="Check if formTarget attribute in input element" result="PASS" /><testcase id="input_form_exist" purpose="Check if form attribute in input element" result="PASS" /><testcase id="input_image_height" purpose="Check if the height exist in input 'image' element" result="PASS" /><testcase id="input_image_support" purpose="Check if the image type support on input 'image' element" result="PASS" /><testcase id="input_image_width" purpose="Check if the width exist in input 'image' element" result="PASS" /><testcase id="input_labels_exist" purpose="Check if labels attribute in input element" result="PASS" /><testcase id="input_list_exist" purpose="Check if list attribute in input element" result="PASS" /><testcase id="input_maxlength_exist" purpose="Check if maxlength attribute in input element" result="PASS" /><testcase id="input_max_exist" purpose="Check if max attribute in input element" result="PASS" /><testcase id="input_min_exist" purpose="Check if min attribute in input element" result="PASS" /><testcase id="input_number_6" purpose="Check if the value only set number" result="PASS" /><testcase id="input_pattern_attribute" purpose="Check the Fields pattern attribute exists" result="PASS" /><testcase id="input_placeholder_exist" purpose="Check if placeholder attribute in input element" result="PASS" /><testcase id="input_range_4" purpose="Check if the step attribute default value is 1" result="PASS" /><testcase id="input_required_attribute" purpose="Check the Fields required attribute exists" result="PASS" /><testcase id="input_selectionDirection_exist" purpose="Check if selectionDirection attribute in input element" result="PASS" /><testcase id="input_step_exist" purpose="Check if step attribute in input element" result="PASS" /><testcase id="input_text_support" purpose="Check input element type=text supported" result="PASS" /><testcase id="input_type_attribute_1" purpose="Check if the datetime.valueAsDate exists" result="PASS" /><testcase id="input_type_attribute_10" purpose="Check if the number.validity exists" result="PASS" /><testcase id="input_type_attribute_11" purpose="Check if the number.min exists" result="PASS" /><testcase id="input_type_attribute_12" purpose="Check if the number.max exists" result="PASS" /><testcase id="input_type_attribute_13" purpose="heck if the number.valueAsNumber exists" result="PASS" /><testcase id="input_type_attribute_14" purpose="Check if the number.stepDown exists" result="PASS" /><testcase id="input_type_attribute_15" purpose="Check if the number.stepUp exists" result="PASS" /><testcase id="input_type_attribute_16" purpose="Check if the range.valueAsNumber exists" result="PASS" /><testcase id="input_type_attribute_17" purpose="Check if the file type support on input element" result="PASS" /><testcase id="input_type_attribute_18" purpose="Check if the file.files exists" result="PASS" /><testcase id="input_type_attribute_19" purpose="Check if the datetime.valueAsNumber exists" result="PASS" /><testcase id="input_type_attribute_2" purpose="Check if the date.value is set invalid" result="PASS" /><testcase id="input_type_attribute_20" purpose="Check if the date.valueAsNumber exists" result="PASS" /><testcase id="input_type_attribute_21" purpose="Check if the month.valueAsNumber exists" result="PASS" /><testcase id="input_type_attribute_22" purpose="Check if the week.valueAsNumber exists" result="PASS" /><testcase id="input_type_attribute_23" purpose="Check if the time.valueAsNumber exists" result="PASS" /><testcase id="input_type_attribute_3" purpose="Check if the date.valueAsDate exists" result="PASS" /><testcase id="input_type_attribute_4" purpose="Check if the month.min exists" result="PASS" /><testcase id="input_type_attribute_5" purpose="Check if the month.max exists" result="PASS" /><testcase id="input_type_attribute_6" purpose="Check if the month.valueAsDate exists" result="PASS" /><testcase id="input_type_attribute_7" purpose="Check if the week.valueAsDate exists" result="PASS" /><testcase id="input_type_attribute_8" purpose="Check if the time.valueAsDate exists" result="PASS" /><testcase id="input_type_attribute_9" purpose="Check if the number type support on input element" result="PASS" /><testcase id="input_url_invalid" purpose="Check if the value of input type=url is valid" result="PASS" /><testcase id="input_url_support" purpose="Check input element type=url supported" result="PASS" /><testcase id="interfaces" purpose="Check if the elements should implement its interfaces" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="label_control_exist" purpose="Check if control attribute in label element" result="PASS" /><testcase id="main_element_support" purpose="Check if the main element support" result="PASS" /><testcase id="mark_element_support" purpose="Check if the mark element supports" result="PASS" /><testcase id="mark_node_created" purpose="Check if mark node created" result="PASS" /><testcase id="meter_element_support" purpose="Check if the meter element supported" result="PASS" /><testcase id="month_1" purpose="Check if the month type support on input element" result="PASS" /><testcase id="month_9" purpose="Check if when value is given invalid value to non-empty valid string, the value must be same as before when type='month'" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="nav_element_support" purpose="Check if the nav element supports" result="PASS" /><testcase id="nav_node_created" purpose="Check if nav node created" result="PASS" /><testcase id="outerHTML" purpose="Check if element.outerHTML to verify HTML fragment serialization algorithm" result="PASS" /><testcase id="output_element_support" purpose="Check if the output element supported" result="PASS" /><testcase id="progress_element_support" purpose="Check if the progress element supported" result="PASS" /><testcase id="range_1" purpose="Check if the range type support on input 'range' element" result="PASS" /><testcase id="range_19" purpose="Check if the stepUp function support on input Element when type='range'" result="PASS" /><testcase id="range_2" purpose="Check if the min attribute support on input 'range' element" result="PASS" /><testcase id="range_20" purpose="Check if the stepDown function support on input Element when type='range'" result="PASS" /><testcase id="range_3" purpose="Check if the max attribute support on input 'range' element" result="PASS" /><testcase id="range_6" purpose="Check if the converting an illegal string to the default step when type='range'" result="PASS" /><testcase id="reversed_on_ol_element" purpose="Check if the reversed attribute on ol element" result="PASS" /><testcase id="rp_element_support" purpose="Check if rp element supports" result="PASS" /><testcase id="search_input_support" purpose="Check if the input element type=search supported" result="PASS" /><testcase id="section_element_support" purpose="Check if the section element supports" result="PASS" /><testcase id="section_node_created" purpose="Check if section node created" result="PASS" /><testcase id="select_element_inrange" purpose="Check the select inrange attribute exists" result="PASS" /><testcase id="select_element_invalid" purpose="Check the select invalid attribute exists" result="PASS" /><testcase id="select_element_readonly" purpose="Check the select readonly attribute exists" result="PASS" /><testcase id="select_element_readwrite" purpose="Check the select readwrite attribute exists" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="select_element_required_check" purpose="Check the select required attribute exists" result="PASS" /><testcase id="select_element_support" purpose="Check if the select element supported" result="PASS" /><testcase id="select_element_valid" purpose="Check the select valid attribute exists" result="PASS" /><testcase id="spellcheck_attribute_support" purpose="Check if the spellcheck attribute supports" result="PASS" /><testcase id="telephone_support" purpose="Check if the input element type=tel supported" result="PASS" /><testcase id="textarea_element_maxLength" purpose="Check the textarea maxlength attribute exists" result="PASS" /><testcase id="textarea_element_support" purpose="Check if the textarea element supported" result="PASS" /><testcase id="textarea_wrap_exist" purpose="Check the textarea wrap attribute exists" result="PASS" /><testcase id="time_10" purpose="Check if the stepDown function support on input Element when type='time'" result="PASS" /><testcase id="time_32" purpose="Check if set value on not time format value when type='time'" result="PASS" /><testcase id="time_5" purpose="Check if the type attribute support on input element when type='time'" result="PASS" /><testcase id="time_6" purpose="Check if the max attribute support on input element when type='time'" result="PASS" /><testcase id="time_7" purpose="Check if the min attribute support on input element when type='time'" result="PASS" /><testcase id="time_8" purpose="Check if the step attribute support on input element when type='time'" result="PASS" /><testcase id="time_9" purpose="Check if the stepUp function support on input Element when type='time'" result="PASS" /><testcase id="track_attributes_1" purpose="Check if the track.kind exists" result="PASS" /><testcase id="track_attributes_3" purpose="Check if the track.src exists" result="PASS" /><testcase id="track_attributes_5" purpose="Check if the track.srclang exists" result="PASS" /><testcase id="track_attributes_7" purpose="Check if the track.label exists" result="PASS" /><testcase id="track_attributes_9" purpose="Check if the track.default exists" result="PASS" /><testcase id="track_element_support" purpose="Check if the track element supports" result="PASS" /><testcase id="valueMode_18" purpose="Check if value IDL attribute of input type datetime-local with value attribute" result="PASS" /><testcase id="video_element_support" purpose="Check if the type of video is HTMLElement" result="PASS" /><testcase id="video_node_created" purpose="Check if the video node created" result="PASS" /><testcase id="wbr_element_support" purpose="Check if the wbr element support" result="PASS" /></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/Xhtml5"><testcase id="body_link" purpose="Check xhtml5 body element supports link attribute" result="PASS" /><testcase id="img_border_percent" purpose="Check if xhtml5 img element supports border attribute in percentage" result="PASS" /><testcase id="object_border_perc" purpose="Check if xhtml5 object element supports border attribute in percentage" result="PASS" /><testcase id="object_border_pixel" purpose="Check if xhtml5 object element supports border attribute in pixel" result="PASS" /><testcase id="area_noref" purpose="Check if xhtml5 area element supports nohref attribute" result="PASS" /><testcase id="body_onhashchange_check" purpose="Check if the onhashchange is TreatNonCallableAsNull" result="PASS" /><testcase id="body_text_00ffff" purpose="Check xhtml5 body element supports text attribute in the RGB Hexadecimal color" result="PASS" /><testcase id="html_style_in_comment" purpose="Check if xhtml5 supports css style in comment" result="PASS" /><testcase id="onoffline_attribute_support" purpose="Check if HTMLBodyElement.onoffline exists" result="PASS" /><testcase id="ononline_attribute_support" purpose="Check if HTMLBodyElement.ononline exists" result="PASS" /></category><category name="Crosswalk APIs/Native File System"><testcase id="DirectoryEntry_createReader_exist" purpose="Check if DirectoryEntry.createReader exists" result="PASS" /><testcase id="DirectoryEntry_getDirectory_exist" purpose="Check if DirectoryEntry.getDirectory exists" result="PASS" /><testcase id="DirectoryEntry_getFile_base" purpose="Check if getFile() has all valid arguments that expecting successCallback() to be invoke" result="PASS" /><testcase id="DirectoryEntry_getFile_exist" purpose="Check if DirectoryEntry.getFile exists" result="PASS" /><testcase id="DirectoryEntry_removeRecursively_exist" purpose="Check if DirectoryEntry.removeRecursively exists" result="PASS" /><testcase id="DirectoryReader_readEntries_exist" purpose="Check if DirectoryReader.readEntries exists" result="PASS" /><testcase id="EntriesCallback_handleEvent_entries_type" purpose="Check if the type of the parameter entries is Entry[] in EntryCallback interface" result="PASS" /><testcase id="EntriesCallback_handleEvent_exist" purpose="Check if EntriesCallback.handleEvent exists" result="PASS" /><testcase id="EntryCallback_handleEvent_entry_type" purpose="Check if the type of the parameter entry is Entry in EntryCallback interface" result="PASS" /><testcase id="EntryCallback_handleEvent_exist" purpose="Check if EntryCallback.handleEvent exists" result="PASS" /><testcase id="Entry_copyTo_base" purpose="Check if can copy a file to a different location on the file system" result="PASS" /><testcase id="Entry_copyTo_exist" purpose="Check if Entry.copyTo exists" result="PASS" /><testcase id="Entry_fullPath_exist" purpose="Check if Entry.fullPath exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4040 XWALK-4040]]</testcase><testcase id="Entry_fullPath_readonly" purpose="Check if the Entry.fullPath attribute is readonly" result="PASS" /><testcase id="Entry_fullPath_type" purpose="Check if the type of Entry.fullPath is DOMString" result="PASS" /><testcase id="Entry_getMetadata_exist" purpose="Check if Entry.getMetadata exists" result="PASS" /><testcase id="Entry_getParent_exist" purpose="Check if Entry.getParent exists" result="PASS" /><testcase id="Entry_isDirectory_exist" purpose="Check if Entry.isDirectory exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4040 XWALK-4040]]</testcase><testcase id="Entry_isDirectory_false" purpose="Check if the Entry is not a directory" result="PASS" /><testcase id="Entry_isDirectory_readonly" purpose="Check if the Entry.isDirectory attribute is readonly" result="PASS" /><testcase id="Entry_isDirectory_true" purpose="Check if the Entry is a directory" result="PASS" /><testcase id="Entry_isDirectory_type" purpose="Check if the type of Entry.isDirectory attribute is boolean" result="PASS" /><testcase id="Entry_isFile_exist" purpose="Check if Entry.isFile exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4040 XWALK-4040]]</testcase><testcase id="Entry_isFile_false" purpose="Check if the Entry is not a file" result="PASS" /><testcase id="Entry_isFile_readonly" purpose="Check if the Entry.isFile attribute is readonly" result="PASS" /><testcase id="Entry_isFile_true" purpose="Check if the Entry is a file" result="PASS" /><testcase id="Entry_isFile_type" purpose="Check if the type of Entry.isFile attribute is boolean" result="PASS" /><testcase id="Entry_moveTo_exist" purpose="Check if Entry.moveTo exists" result="PASS" /><testcase id="Entry_name_exist" purpose="Check if Entry.name exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4040 XWALK-4040]]</testcase><testcase id="Entry_name_readonly" purpose="Check if the type of Entry.name attribute is readonly" result="PASS" /><testcase id="Entry_name_type" purpose="Check if the type of Entry.name attribute is DOMString" result="PASS" /><testcase id="Entry_nativefilesystem_exist" purpose="Check if Entry.nativefilesystem exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4040 XWALK-4040]]</testcase><testcase id="Entry_nativefilesystem_readonly" purpose="Check if the Entry.nativefilesystem attribute is readonly" result="PASS" /><testcase id="Entry_nativefilesystem_type" purpose="Check if the type of Entry.nativefilesystem attribute is object" result="PASS" /><testcase id="Entry_remove_exist" purpose="Check if Entry.remove exists" result="PASS" /><testcase id="Entry_toURL_exist" purpose="Check if Entry.toURL exists" result="PASS" /><testcase id="FileCallback_handleEvent_exist" purpose="Check if FileCallback.handleEvent exists" result="PASS" /><testcase id="FileEntry_createWriter_exist" purpose="Check if FileEntry.createWriter exists" result="PASS" /><testcase id="FileEntry_file_exist" purpose="Check if FileEntry.file exists" result="PASS" /><testcase id="FileWriterCallback_handleEvent_exist" purpose="Check if FileWriterCallback.handleEvent exists" result="PASS" /><testcase id="MetadataCallback_handleEvent_exist" purpose="Check if MetadataCallback.handleEvent exists" result="PASS" /><testcase id="MetadataCallback_handleEvent_metadata_type" purpose="Check if the type of the parameter metadata is Metadata in MetadataCallback interface" result="PASS" /><testcase id="NativeFileSystem_name_base" purpose="Check if NativeFileSystem.name is the name of the file system" result="PASS" /><testcase id="NativeFileSystem_name_exist" purpose="Check if NativeFileSystem.name exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4040 XWALK-4040]]</testcase><testcase id="NativeFileSystem_name_readonly" purpose="Check if the NativeFileSystem.name attribute is readonly" result="PASS" /><testcase id="NativeFileSystem_name_type" purpose="Check if the type of NativeFileSystem.name is string" result="PASS" /><testcase id="NativeFileSystem_requestNativeFileSystem_base" purpose="Check if the requestNativeFileSystem base" result="PASS" /><testcase id="NativeFileSystem_requestNativeFileSystem_exist" purpose="Check if the requestNativeFileSystem exists" result="PASS" /><testcase id="NativeFileSystem_root_base" purpose="Check if NativeFileSystem.root is the root directory of the file system" result="PASS" /><testcase id="NativeFileSystem_root_readonly" purpose="Check if the NativeFileSystem.root attribute is readonly" result="PASS" /><testcase id="NativeFileSystem_root_type" purpose="Check if the type of NativeFileSystem.root is DirectoryEntry" result="PASS" /><testcase id="VoidCallback_handleEvent_exists" purpose="Check if VoidCallback.handleEvent exists" result="PASS" /></category><category name="Supplementary APIs/Fullscreen API - Mozilla"><testcase id="FullScreen_cancelFullScreen_exists" purpose="Check if FullScreen has cancelFullScreen method" result="PASS" /><testcase id="FullScreen_fullScreenEnabled_exists" purpose="Check if document has fullScreenEnabled attribute" result="PASS" /><testcase id="FullScreen_fullScreenEnabled_readonly" purpose="Check if document.fullScreenEnabled is readonly" result="PASS" /><testcase id="FullScreen_fullScreenEnabled_type" purpose="Check if document.fullScreenEnabled type is boolean" result="PASS" /><testcase id="FullScreen_fullscreen_exists" purpose="Check if document has fullScreen attribute" result="PASS" /><testcase id="FullScreen_fullscreen_readonly" purpose="Check if document.fullScreen is readonly" result="PASS" /><testcase id="FullScreen_fullScreen_type" purpose="Check if the type of FullScreen.fullScreen is boolean" result="PASS" /><testcase id="FullScreen_onfullscreenchange_exists" purpose="Check if Element has onfullscreenchange attribute" result="PASS" /><testcase id="FullScreen_requestFullScreen_exists" purpose="Check if Element has requestFullScreen method" result="PASS" /></category><category name="Supplementary APIs/Promises"><testcase id="promise_01" purpose="Test checks if the onFulfilled is called once with the implementation of promises" result="PASS" /><testcase id="promise_02" purpose="Test checks if the onFulfilled is called once with the implementation of promises" result="PASS" /><testcase id="promise_03" purpose="Test checks if promise resolution procedure fulfills promise with the value thenable" result="PASS" /><testcase id="promise_04" purpose="Test checks if promise resolution procedure rejects promise with the value thenable" result="PASS" /></category><category name="Supplementary APIs/SIMD"><testcase id="Float32Array_view_basic/1" purpose="Check Float32Array view basic (0, 12, 12)/1" result="PASS" /><testcase id="Float32Array_view_basic/10" purpose="Check Float32Array view basic (0, 12, 12)/10" result="PASS" /><testcase id="Float32Array_view_basic/11" purpose="Check Float32Array view basic (0, 12, 12)/11" result="PASS" /><testcase id="Float32Array_view_basic/12" purpose="Check Float32Array view basic (0, 12, 12)/12" result="PASS" /><testcase id="Float32Array_view_basic/2" purpose="Check Float32Array view basic (0, 12, 12)/2" result="PASS" /><testcase id="Float32Array_view_basic/3" purpose="Check Float32Array view basic (0, 12, 12)/3" result="PASS" /><testcase id="Float32Array_view_basic/4" purpose="Check Float32Array view basic (0, 12, 12)/4" result="PASS" /><testcase id="Float32Array_view_basic/5" purpose="Check Float32Array view basic (0, 12, 12)/5" result="PASS" /><testcase id="Float32Array_view_basic/6" purpose="Check Float32Array view basic (0, 12, 12)/6" result="PASS" /><testcase id="Float32Array_view_basic/7" purpose="Check Float32Array view basic (0, 12, 12)/7" result="PASS" /><testcase id="Float32Array_view_basic/8" purpose="Check Float32Array view basic (0, 12, 12)/8" result="PASS" /><testcase id="Float32Array_view_basic/9" purpose="Check Float32Array view basic (0, 12, 12)/9" result="PASS" /><testcase id="Float32Array_view_values/1" purpose="Check Float32Array view values (0, 48, 48)/1" result="PASS" /><testcase id="Float32Array_view_values/10" purpose="Check Float32Array view values (0, 48, 48)/10" result="PASS" /><testcase id="Float32Array_view_values/11" purpose="Check Float32Array view values (0, 48, 48)/11" result="PASS" /><testcase id="Float32Array_view_values/12" purpose="Check Float32Array view values (0, 48, 48)/12" result="PASS" /><testcase id="Float32Array_view_values/13" purpose="Check Float32Array view values (0, 48, 48)/13" result="PASS" /><testcase id="Float32Array_view_values/14" purpose="Check Float32Array view values (0, 48, 48)/14" result="PASS" /><testcase id="Float32Array_view_values/15" purpose="Check Float32Array view values (0, 48, 48)/15" result="PASS" /><testcase id="Float32Array_view_values/16" purpose="Check Float32Array view values (0, 48, 48)/16" result="PASS" /><testcase id="Float32Array_view_values/17" purpose="Check Float32Array view values (0, 48, 48)/17" result="PASS" /><testcase id="Float32Array_view_values/18" purpose="Check Float32Array view values (0, 48, 48)/18" result="PASS" /><testcase id="Float32Array_view_values/19" purpose="Check Float32Array view values (0, 48, 48)/19" result="PASS" /><testcase id="Float32Array_view_values/2" purpose="Check Float32Array view values (0, 48, 48)/2" result="PASS" /><testcase id="Float32Array_view_values/20" purpose="Check Float32Array view values (0, 48, 48)/20" result="PASS" /><testcase id="Float32Array_view_values/21" purpose="Check Float32Array view values (0, 48, 48)/21" result="PASS" /><testcase id="Float32Array_view_values/22" purpose="Check Float32Array view values (0, 48, 48)/22" result="PASS" /><testcase id="Float32Array_view_values/23" purpose="Check Float32Array view values (0, 48, 48)/23" result="PASS" /><testcase id="Float32Array_view_values/24" purpose="Check Float32Array view values (0, 48, 48)/24" result="PASS" /><testcase id="Float32Array_view_values/25" purpose="Check Float32Array view values (0, 48, 48)/25" result="PASS" /><testcase id="Float32Array_view_values/26" purpose="Check Float32Array view values (0, 48, 48)/26" result="PASS" /><testcase id="Float32Array_view_values/27" purpose="Check Float32Array view values (0, 48, 48)/27" result="PASS" /><testcase id="Float32Array_view_values/28" purpose="Check Float32Array view values (0, 48, 48)/28" result="PASS" /><testcase id="Float32Array_view_values/29" purpose="Check Float32Array view values (0, 48, 48)/29" result="PASS" /><testcase id="Float32Array_view_values/3" purpose="Check Float32Array view values (0, 48, 48)/3" result="PASS" /><testcase id="Float32Array_view_values/30" purpose="Check Float32Array view values (0, 48, 48)/30" result="PASS" /><testcase id="Float32Array_view_values/31" purpose="Check Float32Array view values (0, 48, 48)/31" result="PASS" /><testcase id="Float32Array_view_values/32" purpose="Check Float32Array view values (0, 48, 48)/32" result="PASS" /><testcase id="Float32Array_view_values/33" purpose="Check Float32Array view values (0, 48, 48)/33" result="PASS" /><testcase id="Float32Array_view_values/34" purpose="Check Float32Array view values (0, 48, 48)/34" result="PASS" /><testcase id="Float32Array_view_values/35" purpose="Check Float32Array view values (0, 48, 48)/35" result="PASS" /><testcase id="Float32Array_view_values/36" purpose="Check Float32Array view values (0, 48, 48)/36" result="PASS" /><testcase id="Float32Array_view_values/37" purpose="Check Float32Array view values (0, 48, 48)/37" result="PASS" /><testcase id="Float32Array_view_values/38" purpose="Check Float32Array view values (0, 48, 48)/38" result="PASS" /><testcase id="Float32Array_view_values/39" purpose="Check Float32Array view values (0, 48, 48)/39" result="PASS" /><testcase id="Float32Array_view_values/4" purpose="Check Float32Array view values (0, 48, 48)/4" result="PASS" /><testcase id="Float32Array_view_values/40" purpose="Check Float32Array view values (0, 48, 48)/40" result="PASS" /><testcase id="Float32Array_view_values/41" purpose="Check Float32Array view values (0, 48, 48)/41" result="PASS" /><testcase id="Float32Array_view_values/42" purpose="Check Float32Array view values (0, 48, 48)/42" result="PASS" /><testcase id="Float32Array_view_values/43" purpose="Check Float32Array view values (0, 48, 48)/43" result="PASS" /><testcase id="Float32Array_view_values/44" purpose="Check Float32Array view values (0, 48, 48)/44" result="PASS" /><testcase id="Float32Array_view_values/45" purpose="Check Float32Array view values (0, 48, 48)/45" result="PASS" /><testcase id="Float32Array_view_values/46" purpose="Check Float32Array view values (0, 48, 48)/46" result="PASS" /><testcase id="Float32Array_view_values/47" purpose="Check Float32Array view values (0, 48, 48)/47" result="PASS" /><testcase id="Float32Array_view_values/48" purpose="Check Float32Array view values (0, 48, 48)/48" result="PASS" /><testcase id="Float32Array_view_values/5" purpose="Check Float32Array view values (0, 48, 48)/5" result="PASS" /><testcase id="Float32Array_view_values/6" purpose="Check Float32Array view values (0, 48, 48)/6" result="PASS" /><testcase id="Float32Array_view_values/7" purpose="Check Float32Array view values (0, 48, 48)/7" result="PASS" /><testcase id="Float32Array_view_values/8" purpose="Check Float32Array view values (0, 48, 48)/8" result="PASS" /><testcase id="Float32Array_view_values/9" purpose="Check Float32Array view values (0, 48, 48)/9" result="PASS" /><testcase id="Float32x4Array_copy/1" purpose="Check float32x4Array copy (0, 24, 24)/1" result="PASS" /><testcase id="Float32x4Array_copy/10" purpose="Check float32x4Array copy (0, 24, 24)/10" result="PASS" /><testcase id="Float32x4Array_copy/11" purpose="Check float32x4Array copy (0, 24, 24)/11" result="PASS" /><testcase id="Float32x4Array_copy/12" purpose="Check float32x4Array copy (0, 24, 24)/12" result="PASS" /><testcase id="Float32x4Array_copy/13" purpose="Check float32x4Array copy (0, 24, 24)/13" result="PASS" /><testcase id="Float32x4Array_copy/14" purpose="Check float32x4Array copy (0, 24, 24)/14" result="PASS" /><testcase id="Float32x4Array_copy/15" purpose="Check float32x4Array copy (0, 24, 24)/15" result="PASS" /><testcase id="Float32x4Array_copy/16" purpose="Check float32x4Array copy (0, 24, 24)/16" result="PASS" /><testcase id="Float32x4Array_copy/17" purpose="Check float32x4Array copy (0, 24, 24)/17" result="PASS" /><testcase id="Float32x4Array_copy/18" purpose="Check float32x4Array copy (0, 24, 24)/18" result="PASS" /><testcase id="Float32x4Array_copy/19" purpose="Check float32x4Array copy (0, 24, 24)/19" result="PASS" /><testcase id="Float32x4Array_copy/2" purpose="Check float32x4Array copy (0, 24, 24)/2" result="PASS" /><testcase id="Float32x4Array_copy/20" purpose="Check float32x4Array copy (0, 24, 24)/20" result="PASS" /><testcase id="Float32x4Array_copy/21" purpose="Check float32x4Array copy (0, 24, 24)/21" result="PASS" /><testcase id="Float32x4Array_copy/22" purpose="Check float32x4Array copy (0, 24, 24)/22" result="PASS" /><testcase id="Float32x4Array_copy/23" purpose="Check float32x4Array copy (0, 24, 24)/23" result="PASS" /><testcase id="Float32x4Array_copy/24" purpose="Check float32x4Array copy (0, 24, 24)/24" result="PASS" /><testcase id="Float32x4Array_copy/3" purpose="Check float32x4Array copy (0, 24, 24)/3" result="PASS" /><testcase id="Float32x4Array_copy/4" purpose="Check float32x4Array copy (0, 24, 24)/4" result="PASS" /><testcase id="Float32x4Array_copy/5" purpose="Check float32x4Array copy (0, 24, 24)/5" result="PASS" /><testcase id="Float32x4Array_copy/6" purpose="Check float32x4Array copy (0, 24, 24)/6" result="PASS" /><testcase id="Float32x4Array_copy/7" purpose="Check float32x4Array copy (0, 24, 24)/7" result="PASS" /><testcase id="Float32x4Array_copy/8" purpose="Check float32x4Array copy (0, 24, 24)/8" result="PASS" /><testcase id="Float32x4Array_copy/9" purpose="Check float32x4Array copy (0, 24, 24)/9" result="PASS" /><testcase id="Float32x4Array_exceptions/1" purpose="Check float32x4Array exceptions (0, 4, 4)/1" result="PASS" /><testcase id="Float32x4Array_exceptions/2" purpose="Check float32x4Array exceptions (0, 4, 4)/2" result="PASS" /><testcase id="Float32x4Array_exceptions/3" purpose="Check float32x4Array exceptions (0, 4, 4)/3" result="PASS" /><testcase id="Float32x4Array_exceptions/4" purpose="Check float32x4Array exceptions (0, 4, 4)/4" result="PASS" /><testcase id="Float32x4Array_set_and_get/1" purpose="Check float32x4Array set and get (0, 16, 16)/1" result="PASS" /><testcase id="Float32x4Array_set_and_get/10" purpose="Check float32x4Array set and get (0, 16, 16)/10" result="PASS" /><testcase id="Float32x4Array_set_and_get/11" purpose="Check float32x4Array set and get (0, 16, 16)/11" result="PASS" /><testcase id="Float32x4Array_set_and_get/12" purpose="Check float32x4Array set and get (0, 16, 16)/12" result="PASS" /><testcase id="Float32x4Array_set_and_get/13" purpose="Check float32x4Array set and get (0, 16, 16)/13" result="PASS" /><testcase id="Float32x4Array_set_and_get/14" purpose="Check float32x4Array set and get (0, 16, 16)/14" result="PASS" /><testcase id="Float32x4Array_set_and_get/15" purpose="Check float32x4Array set and get (0, 16, 16)/15" result="PASS" /><testcase id="Float32x4Array_set_and_get/16" purpose="Check float32x4Array set and get (0, 16, 16)/16" result="PASS" /><testcase id="Float32x4Array_set_and_get/2" purpose="Check float32x4Array set and get (0, 16, 16)/2" result="PASS" /><testcase id="Float32x4Array_set_and_get/3" purpose="Check float32x4Array set and get (0, 16, 16)/3" result="PASS" /><testcase id="Float32x4Array_set_and_get/4" purpose="Check float32x4Array set and get (0, 16, 16)/4" result="PASS" /><testcase id="Float32x4Array_set_and_get/5" purpose="Check float32x4Array set and get (0, 16, 16)/5" result="PASS" /><testcase id="Float32x4Array_set_and_get/6" purpose="Check float32x4Array set and get (0, 16, 16)/6" result="PASS" /><testcase id="Float32x4Array_set_and_get/7" purpose="Check float32x4Array set and get (0, 16, 16)/7" result="PASS" /><testcase id="Float32x4Array_set_and_get/8" purpose="Check float32x4Array set and get (0, 16, 16)/8" result="PASS" /><testcase id="Float32x4Array_set_and_get/9" purpose="Check float32x4Array set and get (0, 16, 16)/9" result="PASS" /><testcase id="Float32x4Array_simple/1" purpose="Check float32x4Array simple (0, 12, 12)/1" result="PASS" /><testcase id="Float32x4Array_simple/10" purpose="Check float32x4Array simple (0, 12, 12)/10" result="PASS" /><testcase id="Float32x4Array_simple/11" purpose="Check float32x4Array simple (0, 12, 12)/11" result="PASS" /><testcase id="Float32x4Array_simple/12" purpose="Check float32x4Array simple (0, 12, 12)/12" result="PASS" /><testcase id="Float32x4Array_simple/2" purpose="Check float32x4Array simple (0, 12, 12)/2" result="PASS" /><testcase id="Float32x4Array_simple/3" purpose="Check float32x4Array simple (0, 12, 12)/3" result="PASS" /><testcase id="Float32x4Array_simple/4" purpose="Check float32x4Array simple (0, 12, 12)/4" result="PASS" /><testcase id="Float32x4Array_simple/5" purpose="Check float32x4Array simple (0, 12, 12)/5" result="PASS" /><testcase id="Float32x4Array_simple/6" purpose="Check float32x4Array simple (0, 12, 12)/6" result="PASS" /><testcase id="Float32x4Array_simple/7" purpose="Check float32x4Array simple (0, 12, 12)/7" result="PASS" /><testcase id="Float32x4Array_simple/8" purpose="Check float32x4Array simple (0, 12, 12)/8" result="PASS" /><testcase id="Float32x4Array_simple/9" purpose="Check float32x4Array simple (0, 12, 12)/9" result="PASS" /><testcase id="Float32x4Array_swap/1" purpose="Check float32x4Array swap (0, 16, 16)/1" result="PASS" /><testcase id="Float32x4Array_swap/10" purpose="Check float32x4Array swap (0, 16, 16)/10" result="PASS" /><testcase id="Float32x4Array_swap/11" purpose="Check float32x4Array swap (0, 16, 16)/11" result="PASS" /><testcase id="Float32x4Array_swap/12" purpose="Check float32x4Array swap (0, 16, 16)/12" result="PASS" /><testcase id="Float32x4Array_swap/13" purpose="Check float32x4Array swap (0, 16, 16)/13" result="PASS" /><testcase id="Float32x4Array_swap/14" purpose="Check float32x4Array swap (0, 16, 16)/14" result="PASS" /><testcase id="Float32x4Array_swap/15" purpose="Check float32x4Array swap (0, 16, 16)/15" result="PASS" /><testcase id="Float32x4Array_swap/16" purpose="Check float32x4Array swap (0, 16, 16)/16" result="PASS" /><testcase id="Float32x4Array_swap/2" purpose="Check float32x4Array swap (0, 16, 16)/2" result="PASS" /><testcase id="Float32x4Array_swap/3" purpose="Check float32x4Array swap (0, 16, 16)/3" result="PASS" /><testcase id="Float32x4Array_swap/4" purpose="Check float32x4Array swap (0, 16, 16)/4" result="PASS" /><testcase id="Float32x4Array_swap/5" purpose="Check float32x4Array swap (0, 16, 16)/5" result="PASS" /><testcase id="Float32x4Array_swap/6" purpose="Check float32x4Array swap (0, 16, 16)/6" result="PASS" /><testcase id="Float32x4Array_swap/7" purpose="Check float32x4Array swap (0, 16, 16)/7" result="PASS" /><testcase id="Float32x4Array_swap/8" purpose="Check float32x4Array swap (0, 16, 16)/8" result="PASS" /><testcase id="Float32x4Array_swap/9" purpose="Check float32x4Array swap (0, 16, 16)/9" result="PASS" /><testcase id="float32x4_abs/1" purpose="Check float32x4 abs (0, 8, 8)/1" result="PASS" /><testcase id="float32x4_abs/2" purpose="Check float32x4 abs (0, 8, 8)/2" result="PASS" /><testcase id="float32x4_abs/3" purpose="Check float32x4 abs (0, 8, 8)/3" result="PASS" /><testcase id="float32x4_abs/4" purpose="Check float32x4 abs (0, 8, 8)/4" result="PASS" /><testcase id="float32x4_abs/5" purpose="Check float32x4 abs (0, 8, 8)/5" result="PASS" /><testcase id="float32x4_abs/6" purpose="Check float32x4 abs (0, 8, 8)/6" result="PASS" /><testcase id="float32x4_abs/7" purpose="Check float32x4 abs (0, 8, 8)/7" result="PASS" /><testcase id="float32x4_abs/8" purpose="Check float32x4 abs (0, 8, 8)/8" result="PASS" /><testcase id="float32x4_add/1" purpose="Check float32x4 add (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_add/2" purpose="Check float32x4 add (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_add/3" purpose="Check float32x4 add (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_add/4" purpose="Check float32x4 add (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_clamp/1" purpose="Check float32x4 clamp (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_clamp/2" purpose="Check float32x4 clamp (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_clamp/3" purpose="Check float32x4 clamp (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_clamp/4" purpose="Check float32x4 clamp (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_comparisons/1" purpose="Check float32x4 comparisons (0, 24, 24)/1" result="PASS" /><testcase id="float32x4_comparisons/10" purpose="Check float32x4 comparisons (0, 24, 24)/10" result="PASS" /><testcase id="float32x4_comparisons/11" purpose="Check float32x4 comparisons (0, 24, 24)/11" result="PASS" /><testcase id="float32x4_comparisons/12" purpose="Check float32x4 comparisons (0, 24, 24)/12" result="PASS" /><testcase id="float32x4_comparisons/13" purpose="Check float32x4 comparisons (0, 24, 24)/13" result="PASS" /><testcase id="float32x4_comparisons/14" purpose="Check float32x4 comparisons (0, 24, 24)/14" result="PASS" /><testcase id="float32x4_comparisons/15" purpose="Check float32x4 comparisons (0, 24, 24)/15" result="PASS" /><testcase id="float32x4_comparisons/16" purpose="Check float32x4 comparisons (0, 24, 24)/16" result="PASS" /><testcase id="float32x4_comparisons/17" purpose="Check float32x4 comparisons (0, 24, 24)/17" result="PASS" /><testcase id="float32x4_comparisons/18" purpose="Check float32x4 comparisons (0, 24, 24)/18" result="PASS" /><testcase id="float32x4_comparisons/19" purpose="Check float32x4 comparisons (0, 24, 24)/19" result="PASS" /><testcase id="float32x4_comparisons/2" purpose="Check float32x4 comparisons (0, 24, 24)/2" result="PASS" /><testcase id="float32x4_comparisons/20" purpose="Check float32x4 comparisons (0, 24, 24)/20" result="PASS" /><testcase id="float32x4_comparisons/21" purpose="Check float32x4 comparisons (0, 24, 24)/21" result="PASS" /><testcase id="float32x4_comparisons/22" purpose="Check float32x4 comparisons (0, 24, 24)/22" result="PASS" /><testcase id="float32x4_comparisons/23" purpose="Check float32x4 comparisons (0, 24, 24)/23" result="PASS" /><testcase id="float32x4_comparisons/24" purpose="Check float32x4 comparisons (0, 24, 24)/24" result="PASS" /><testcase id="float32x4_comparisons/3" purpose="Check float32x4 comparisons (0, 24, 24)/3" result="PASS" /><testcase id="float32x4_comparisons/4" purpose="Check float32x4 comparisons (0, 24, 24)/4" result="PASS" /><testcase id="float32x4_comparisons/5" purpose="Check float32x4 comparisons (0, 24, 24)/5" result="PASS" /><testcase id="float32x4_comparisons/6" purpose="Check float32x4 comparisons (0, 24, 24)/6" result="PASS" /><testcase id="float32x4_comparisons/7" purpose="Check float32x4 comparisons (0, 24, 24)/7" result="PASS" /><testcase id="float32x4_comparisons/8" purpose="Check float32x4 comparisons (0, 24, 24)/8" result="PASS" /><testcase id="float32x4_comparisons/9" purpose="Check float32x4 comparisons (0, 24, 24)/9" result="PASS" /><testcase id="float32x4_constructor/1" purpose="Check float32x4 constructor (0, 2, 2)/1" result="PASS" /><testcase id="float32x4_constructor/2" purpose="Check float32x4 constructor (0, 2, 2)/2" result="PASS" /><testcase id="float32x4_constructor/3" purpose="Check float32x4 constructor (0, 2, 2)/3" result="PASS" /><testcase id="float32x4_constructor/4" purpose="Check float32x4 constructor (0, 2, 2)/4" result="PASS" /><testcase id="float32x4_constructor/5" purpose="Check float32x4 constructor (0, 2, 2)/5" result="PASS" /><testcase id="float32x4_constructor/6" purpose="Check float32x4 constructor (0, 2, 2)/6" result="PASS" /><testcase id="float32x4_div/1" purpose="Check float32x4 div (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_div/2" purpose="Check float32x4 div (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_div/3" purpose="Check float32x4 div (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_div/4" purpose="Check float32x4 div (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_exception_load/1" purpose="Check if the load method of float32x4 throw exception normally./1" result="PASS" /><testcase id="float32x4_exception_load/2" purpose="Check if the load method of float32x4 throw exception normally./2" result="PASS" /><testcase id="float32x4_exception_load/3" purpose="Check if the load method of float32x4 throw exception normally./3" result="PASS" /><testcase id="float32x4_exception_load/4" purpose="Check if the load method of float32x4 throw exception normally./4" result="PASS" /><testcase id="float32x4_exception_loadX/1" purpose="Check if the loadX method of float32x4 throw exception normally./1" result="PASS" /><testcase id="float32x4_exception_loadX/2" purpose="Check if the loadX method of float32x4 throw exception normally./2" result="PASS" /><testcase id="float32x4_exception_loadX/3" purpose="Check if the loadX method of float32x4 throw exception normally./3" result="PASS" /><testcase id="float32x4_exception_loadX/4" purpose="Check if the loadX method of float32x4 throw exception normally./4" result="PASS" /><testcase id="float32x4_exception_loadXY/1" purpose="Check if the loadXY method of float32x4 throw exception normally./1" result="PASS" /><testcase id="float32x4_exception_loadXY/2" purpose="Check if the loadXY method of float32x4 throw exception normally./2" result="PASS" /><testcase id="float32x4_exception_loadXY/3" purpose="Check if the loadXY method of float32x4 throw exception normally./3" result="PASS" /><testcase id="float32x4_exception_loadXY/4" purpose="Check if the loadXY method of float32x4 throw exception normally./4" result="PASS" /><testcase id="float32x4_exception_loadXYZ/1" purpose="Check if the loadXYZ method of float32x4 throw exception normally./1" result="PASS" /><testcase id="float32x4_exception_loadXYZ/2" purpose="Check if the loadXYZ method of float32x4 throw exception normally./2" result="PASS" /><testcase id="float32x4_exception_loadXYZ/3" purpose="Check if the loadXYZ method of float32x4 throw exception normally./3" result="PASS" /><testcase id="float32x4_exception_loadXYZ/4" purpose="Check if the loadXYZ method of float32x4 throw exception normally./4" result="PASS" /><testcase id="float32x4_exception_store/1" purpose="Check if the store method of float32x4 throw exception normally./1" result="PASS" /><testcase id="float32x4_exception_store/2" purpose="Check if the store method of float32x4 throw exception normally./2" result="PASS" /><testcase id="float32x4_exception_store/3" purpose="Check if the store method of float32x4 throw exception normally./3" result="PASS" /><testcase id="float32x4_exception_store/4" purpose="Check if the store method of float32x4 throw exception normally./4" result="PASS" /><testcase id="float32x4_exception_store/5" purpose="Check if the store method of float32x4 throw exception normally./5" result="PASS" /><testcase id="float32x4_exception_storeX/1" purpose="Check if the storeX method of float32x4 throw exception normally./1" result="PASS" /><testcase id="float32x4_exception_storeX/2" purpose="Check if the storeX method of float32x4 throw exception normally./2" result="PASS" /><testcase id="float32x4_exception_storeX/3" purpose="Check if the storeX method of float32x4 throw exception normally./3" result="PASS" /><testcase id="float32x4_exception_storeX/4" purpose="Check if the storeX method of float32x4 throw exception normally./4" result="PASS" /><testcase id="float32x4_exception_storeX/5" purpose="Check if the storeX method of float32x4 throw exception normally./5" result="PASS" /><testcase id="float32x4_exception_storeXY/1" purpose="Check if the storeXY method of float32x4 throw exception normally./1" result="PASS" /><testcase id="float32x4_exception_storeXY/2" purpose="Check if the storeXY method of float32x4 throw exception normally./2" result="PASS" /><testcase id="float32x4_exception_storeXY/3" purpose="Check if the storeXY method of float32x4 throw exception normally./3" result="PASS" /><testcase id="float32x4_exception_storeXY/4" purpose="Check if the storeXY method of float32x4 throw exception normally./4" result="PASS" /><testcase id="float32x4_exception_storeXY/5" purpose="Check if the storeXY method of float32x4 throw exception normally./5" result="PASS" /><testcase id="float32x4_exception_storeXYZ/1" purpose="Check if the storeXYZ method of float32x4 throw exception normally./1" result="PASS" /><testcase id="float32x4_exception_storeXYZ/2" purpose="Check if the storeXYZ method of float32x4 throw exception normally./2" result="PASS" /><testcase id="float32x4_exception_storeXYZ/3" purpose="Check if the storeXYZ method of float32x4 throw exception normally./3" result="PASS" /><testcase id="float32x4_exception_storeXYZ/4" purpose="Check if the storeXYZ method of float32x4 throw exception normally./4" result="PASS" /><testcase id="float32x4_exception_storeXYZ/5" purpose="Check if the storeXYZ method of float32x4 throw exception normally./5" result="PASS" /><testcase id="Float32x4_fromFloat64x2/1" purpose="Check if the fromFloat64x2 method of float32x4 is valid./1" result="PASS" /><testcase id="Float32x4_fromFloat64x2/2" purpose="Check if the fromFloat64x2 method of float32x4 is valid./2" result="PASS" /><testcase id="Float32x4_fromFloat64x2/3" purpose="Check if the fromFloat64x2 method of float32x4 is valid./3" result="PASS" /><testcase id="Float32x4_fromFloat64x2/4" purpose="Check if the fromFloat64x2 method of float32x4 is valid./4" result="PASS" /><testcase id="Float32x4_fromFloat64x2Bits/1" purpose="Check if the fromFloat64x2Bits method of float32x4 is valid./1" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="Float32x4_fromFloat64x2Bits/2" purpose="Check if the fromFloat64x2Bits method of float32x4 is valid./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="Float32x4_fromFloat64x2Bits/3" purpose="Check if the fromFloat64x2Bits method of float32x4 is valid./3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="Float32x4_fromFloat64x2Bits/4" purpose="Check if the fromFloat64x2Bits method of float32x4 is valid./4" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="Float32x4_fromInt32x4/1" purpose="Check if the fromInt32x4 method of float32x4 is valid./1" result="PASS" /><testcase id="Float32x4_fromInt32x4/2" purpose="Check if the fromInt32x4 method of float32x4 is valid./2" result="PASS" /><testcase id="Float32x4_fromInt32x4/3" purpose="Check if the fromInt32x4 method of float32x4 is valid./3" result="PASS" /><testcase id="Float32x4_fromInt32x4/4" purpose="Check if the fromInt32x4 method of float32x4 is valid./4" result="PASS" /><testcase id="Float32x4_fromInt32x4Bits/1" purpose="Check if the fromInt32x4Bits method of float32x4 is valid./1" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4148 XWALK-4148]]</testcase><testcase id="Float32x4_fromInt32x4Bits/2" purpose="Check if the fromInt32x4Bits method of float32x4 is valid./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4148 XWALK-4148]]</testcase><testcase id="Float32x4_fromInt32x4Bits/3" purpose="Check if the fromInt32x4Bits method of float32x4 is valid./3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4148 XWALK-4148]]</testcase><testcase id="Float32x4_fromInt32x4Bits/4" purpose="Check if the fromInt32x4Bits method of float32x4 is valid./4" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4148 XWALK-4148]]</testcase><testcase id="float32x4_int32x4_conversion/1" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/1" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/10" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/10" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/11" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/11" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/12" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/12" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/13" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/13" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/14" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/14" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/15" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/15" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/16" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/16" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/17" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/17" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/18" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/18" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/19" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/19" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/2" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/20" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/20" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/3" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/4" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/4" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/5" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/5" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/6" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/6" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/7" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/7" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/8" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/8" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_int32x4_conversion/9" purpose="Check float32x4 int32x4 conversion (0, 20, 20)/9" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4147 XWALK-4147]]</testcase><testcase id="float32x4_load/1" purpose="Check if the load method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_load/10" purpose="Check if the load method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_load/11" purpose="Check if the load method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_load/12" purpose="Check if the load method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_load/13" purpose="Check if the load method of float32x4 is valid./13" result="PASS" /><testcase id="float32x4_load/14" purpose="Check if the load method of float32x4 is valid./14" result="PASS" /><testcase id="float32x4_load/15" purpose="Check if the load method of float32x4 is valid./15" result="PASS" /><testcase id="float32x4_load/16" purpose="Check if the load method of float32x4 is valid./16" result="PASS" /><testcase id="float32x4_load/17" purpose="Check if the load method of float32x4 is valid./17" result="PASS" /><testcase id="float32x4_load/18" purpose="Check if the load method of float32x4 is valid./18" result="PASS" /><testcase id="float32x4_load/19" purpose="Check if the load method of float32x4 is valid./19" result="PASS" /><testcase id="float32x4_load/2" purpose="Check if the load method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_load/20" purpose="Check if the load method of float32x4 is valid./20" result="PASS" /><testcase id="float32x4_load/3" purpose="Check if the load method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_load/4" purpose="Check if the load method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_load/5" purpose="Check if the load method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_load/6" purpose="Check if the load method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_load/7" purpose="Check if the load method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_load/8" purpose="Check if the load method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_load/9" purpose="Check if the load method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_loadX/1" purpose="Check if the loadX method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_loadX/10" purpose="Check if the loadX method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_loadX/11" purpose="Check if the loadX method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_loadX/12" purpose="Check if the loadX method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_loadX/13" purpose="Check if the loadX method of float32x4 is valid./13" result="PASS" /><testcase id="float32x4_loadX/14" purpose="Check if the loadX method of float32x4 is valid./14" result="PASS" /><testcase id="float32x4_loadX/15" purpose="Check if the loadX method of float32x4 is valid./15" result="PASS" /><testcase id="float32x4_loadX/16" purpose="Check if the loadX method of float32x4 is valid./16" result="PASS" /><testcase id="float32x4_loadX/17" purpose="Check if the loadX method of float32x4 is valid./17" result="PASS" /><testcase id="float32x4_loadX/18" purpose="Check if the loadX method of float32x4 is valid./18" result="PASS" /><testcase id="float32x4_loadX/19" purpose="Check if the loadX method of float32x4 is valid./19" result="PASS" /><testcase id="float32x4_loadX/2" purpose="Check if the loadX method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_loadX/20" purpose="Check if the loadX method of float32x4 is valid./20" result="PASS" /><testcase id="float32x4_loadX/21" purpose="Check if the loadX method of float32x4 is valid./21" result="PASS" /><testcase id="float32x4_loadX/22" purpose="Check if the loadX method of float32x4 is valid./22" result="PASS" /><testcase id="float32x4_loadX/23" purpose="Check if the loadX method of float32x4 is valid./23" result="PASS" /><testcase id="float32x4_loadX/24" purpose="Check if the loadX method of float32x4 is valid./24" result="PASS" /><testcase id="float32x4_loadX/25" purpose="Check if the loadX method of float32x4 is valid./25" result="PASS" /><testcase id="float32x4_loadX/26" purpose="Check if the loadX method of float32x4 is valid./26" result="PASS" /><testcase id="float32x4_loadX/27" purpose="Check if the loadX method of float32x4 is valid./27" result="PASS" /><testcase id="float32x4_loadX/28" purpose="Check if the loadX method of float32x4 is valid./28" result="PASS" /><testcase id="float32x4_loadX/29" purpose="Check if the loadX method of float32x4 is valid./29" result="PASS" /><testcase id="float32x4_loadX/3" purpose="Check if the loadX method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_loadX/30" purpose="Check if the loadX method of float32x4 is valid./30" result="PASS" /><testcase id="float32x4_loadX/31" purpose="Check if the loadX method of float32x4 is valid./31" result="PASS" /><testcase id="float32x4_loadX/32" purpose="Check if the loadX method of float32x4 is valid./32" result="PASS" /><testcase id="float32x4_loadX/4" purpose="Check if the loadX method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_loadX/5" purpose="Check if the loadX method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_loadX/6" purpose="Check if the loadX method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_loadX/7" purpose="Check if the loadX method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_loadX/8" purpose="Check if the loadX method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_loadX/9" purpose="Check if the loadX method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_loadXY/1" purpose="Check if the loadXY method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_loadXY/10" purpose="Check if the loadXY method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_loadXY/11" purpose="Check if the loadXY method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_loadXY/12" purpose="Check if the loadXY method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_loadXY/13" purpose="Check if the loadXY method of float32x4 is valid./13" result="PASS" /><testcase id="float32x4_loadXY/14" purpose="Check if the loadXY method of float32x4 is valid./14" result="PASS" /><testcase id="float32x4_loadXY/15" purpose="Check if the loadXY method of float32x4 is valid./15" result="PASS" /><testcase id="float32x4_loadXY/16" purpose="Check if the loadXY method of float32x4 is valid./16" result="PASS" /><testcase id="float32x4_loadXY/17" purpose="Check if the loadXY method of float32x4 is valid./17" result="PASS" /><testcase id="float32x4_loadXY/18" purpose="Check if the loadXY method of float32x4 is valid./18" result="PASS" /><testcase id="float32x4_loadXY/19" purpose="Check if the loadXY method of float32x4 is valid./19" result="PASS" /><testcase id="float32x4_loadXY/2" purpose="Check if the loadXY method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_loadXY/20" purpose="Check if the loadXY method of float32x4 is valid./20" result="PASS" /><testcase id="float32x4_loadXY/21" purpose="Check if the loadXY method of float32x4 is valid./21" result="PASS" /><testcase id="float32x4_loadXY/22" purpose="Check if the loadXY method of float32x4 is valid./22" result="PASS" /><testcase id="float32x4_loadXY/23" purpose="Check if the loadXY method of float32x4 is valid./23" result="PASS" /><testcase id="float32x4_loadXY/24" purpose="Check if the loadXY method of float32x4 is valid./24" result="PASS" /><testcase id="float32x4_loadXY/25" purpose="Check if the loadXY method of float32x4 is valid./25" result="PASS" /><testcase id="float32x4_loadXY/26" purpose="Check if the loadXY method of float32x4 is valid./26" result="PASS" /><testcase id="float32x4_loadXY/27" purpose="Check if the loadXY method of float32x4 is valid./27" result="PASS" /><testcase id="float32x4_loadXY/28" purpose="Check if the loadXY method of float32x4 is valid./28" result="PASS" /><testcase id="float32x4_loadXY/3" purpose="Check if the loadXY method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_loadXY/4" purpose="Check if the loadXY method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_loadXY/5" purpose="Check if the loadXY method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_loadXY/6" purpose="Check if the loadXY method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_loadXY/7" purpose="Check if the loadXY method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_loadXY/8" purpose="Check if the loadXY method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_loadXY/9" purpose="Check if the loadXY method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_loadXYZ/1" purpose="Check if the loadXYZ method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_loadXYZ/10" purpose="Check if the loadXYZ method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_loadXYZ/11" purpose="Check if the loadXYZ method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_loadXYZ/12" purpose="Check if the loadXYZ method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_loadXYZ/13" purpose="Check if the loadXYZ method of float32x4 is valid./13" result="PASS" /><testcase id="float32x4_loadXYZ/14" purpose="Check if the loadXYZ method of float32x4 is valid./14" result="PASS" /><testcase id="float32x4_loadXYZ/15" purpose="Check if the loadXYZ method of float32x4 is valid./15" result="PASS" /><testcase id="float32x4_loadXYZ/16" purpose="Check if the loadXYZ method of float32x4 is valid./16" result="PASS" /><testcase id="float32x4_loadXYZ/17" purpose="Check if the loadXYZ method of float32x4 is valid./17" result="PASS" /><testcase id="float32x4_loadXYZ/18" purpose="Check if the loadXYZ method of float32x4 is valid./18" result="PASS" /><testcase id="float32x4_loadXYZ/19" purpose="Check if the loadXYZ method of float32x4 is valid./19" result="PASS" /><testcase id="float32x4_loadXYZ/2" purpose="Check if the loadXYZ method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_loadXYZ/20" purpose="Check if the loadXYZ method of float32x4 is valid./20" result="PASS" /><testcase id="float32x4_loadXYZ/21" purpose="Check if the loadXYZ method of float32x4 is valid./21" result="PASS" /><testcase id="float32x4_loadXYZ/22" purpose="Check if the loadXYZ method of float32x4 is valid./22" result="PASS" /><testcase id="float32x4_loadXYZ/23" purpose="Check if the loadXYZ method of float32x4 is valid./23" result="PASS" /><testcase id="float32x4_loadXYZ/24" purpose="Check if the loadXYZ method of float32x4 is valid./24" result="PASS" /><testcase id="float32x4_loadXYZ/25" purpose="Check if the loadXYZ method of float32x4 is valid./25" result="PASS" /><testcase id="float32x4_loadXYZ/26" purpose="Check if the loadXYZ method of float32x4 is valid./26" result="PASS" /><testcase id="float32x4_loadXYZ/27" purpose="Check if the loadXYZ method of float32x4 is valid./27" result="PASS" /><testcase id="float32x4_loadXYZ/28" purpose="Check if the loadXYZ method of float32x4 is valid./28" result="PASS" /><testcase id="float32x4_loadXYZ/3" purpose="Check if the loadXYZ method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_loadXYZ/4" purpose="Check if the loadXYZ method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_loadXYZ/5" purpose="Check if the loadXYZ method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_loadXYZ/6" purpose="Check if the loadXYZ method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_loadXYZ/7" purpose="Check if the loadXYZ method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_loadXYZ/8" purpose="Check if the loadXYZ method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_loadXYZ/9" purpose="Check if the loadXYZ method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_max/1" purpose="Check float32x4 max (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_max/2" purpose="Check float32x4 max (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_max/3" purpose="Check float32x4 max (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_max/4" purpose="Check float32x4 max (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_min/1" purpose="Check float32x4 min (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_min/2" purpose="Check float32x4 min (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_min/3" purpose="Check float32x4 min (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_min/4" purpose="Check float32x4 min (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_mul/1" purpose="Check float32x4 mul (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_mul/2" purpose="Check float32x4 mul (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_mul/3" purpose="Check float32x4 mul (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_mul/4" purpose="Check float32x4 mul (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_neg/1" purpose="Check float32x4 neg (0, 8, 8)/1" result="PASS" /><testcase id="float32x4_neg/2" purpose="Check float32x4 neg (0, 8, 8)/2" result="PASS" /><testcase id="float32x4_neg/3" purpose="Check float32x4 neg (0, 8, 8)/3" result="PASS" /><testcase id="float32x4_neg/4" purpose="Check float32x4 neg (0, 8, 8)/4" result="PASS" /><testcase id="float32x4_neg/5" purpose="Check float32x4 neg (0, 8, 8)/5" result="PASS" /><testcase id="float32x4_neg/6" purpose="Check float32x4 neg (0, 8, 8)/6" result="PASS" /><testcase id="float32x4_neg/7" purpose="Check float32x4 neg (0, 8, 8)/7" result="PASS" /><testcase id="float32x4_neg/8" purpose="Check float32x4 neg (0, 8, 8)/8" result="PASS" /><testcase id="float32x4_overaligned_load/1" purpose="Check if the overaligned load method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_overaligned_load/10" purpose="Check if the overaligned load method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_overaligned_load/11" purpose="Check if the overaligned load method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_overaligned_load/12" purpose="Check if the overaligned load method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_overaligned_load/2" purpose="Check if the overaligned load method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_overaligned_load/3" purpose="Check if the overaligned load method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_overaligned_load/4" purpose="Check if the overaligned load method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_overaligned_load/5" purpose="Check if the overaligned load method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_overaligned_load/6" purpose="Check if the overaligned load method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_overaligned_load/7" purpose="Check if the overaligned load method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_overaligned_load/8" purpose="Check if the overaligned load method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_overaligned_load/9" purpose="Check if the overaligned load method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_overaligned_loadX/1" purpose="Check if the overaligned loadX method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_overaligned_loadX/10" purpose="Check if the overaligned loadX method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_overaligned_loadX/11" purpose="Check if the overaligned loadX method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_overaligned_loadX/12" purpose="Check if the overaligned loadX method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_overaligned_loadX/13" purpose="Check if the overaligned loadX method of float32x4 is valid./13" result="PASS" /><testcase id="float32x4_overaligned_loadX/14" purpose="Check if the overaligned loadX method of float32x4 is valid./14" result="PASS" /><testcase id="float32x4_overaligned_loadX/15" purpose="Check if the overaligned loadX method of float32x4 is valid./15" result="PASS" /><testcase id="float32x4_overaligned_loadX/16" purpose="Check if the overaligned loadX method of float32x4 is valid./16" result="PASS" /><testcase id="float32x4_overaligned_loadX/2" purpose="Check if the overaligned loadX method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_overaligned_loadX/3" purpose="Check if the overaligned loadX method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_overaligned_loadX/4" purpose="Check if the overaligned loadX method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_overaligned_loadX/5" purpose="Check if the overaligned loadX method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_overaligned_loadX/6" purpose="Check if the overaligned loadX method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_overaligned_loadX/7" purpose="Check if the overaligned loadX method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_overaligned_loadX/8" purpose="Check if the overaligned loadX method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_overaligned_loadX/9" purpose="Check if the overaligned loadX method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_overaligned_loadXY/1" purpose="Check if the overaligned loadXY method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_overaligned_loadXY/10" purpose="Check if the overaligned loadXY method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_overaligned_loadXY/11" purpose="Check if the overaligned loadXY method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_overaligned_loadXY/12" purpose="Check if the overaligned loadXY method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_overaligned_loadXY/13" purpose="Check if the overaligned loadXY method of float32x4 is valid./13" result="PASS" /><testcase id="float32x4_overaligned_loadXY/14" purpose="Check if the overaligned loadXY method of float32x4 is valid./14" result="PASS" /><testcase id="float32x4_overaligned_loadXY/15" purpose="Check if the overaligned loadXY method of float32x4 is valid./15" result="PASS" /><testcase id="float32x4_overaligned_loadXY/16" purpose="Check if the overaligned loadXY method of float32x4 is valid./16" result="PASS" /><testcase id="float32x4_overaligned_loadXY/2" purpose="Check if the overaligned loadXY method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_overaligned_loadXY/3" purpose="Check if the overaligned loadXY method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_overaligned_loadXY/4" purpose="Check if the overaligned loadXY method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_overaligned_loadXY/5" purpose="Check if the overaligned loadXY method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_overaligned_loadXY/6" purpose="Check if the overaligned loadXY method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_overaligned_loadXY/7" purpose="Check if the overaligned loadXY method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_overaligned_loadXY/8" purpose="Check if the overaligned loadXY method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_overaligned_loadXY/9" purpose="Check if the overaligned loadXY method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/1" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/10" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/11" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/12" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/13" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./13" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/14" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./14" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/15" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./15" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/16" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./16" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/2" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/3" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/4" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/5" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/6" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/7" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/8" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_overaligned_loadXYZ/9" purpose="Check if the overaligned loadXYZ method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_overaligned_store/1" purpose="Check if the overaligned store method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_overaligned_store/10" purpose="Check if the overaligned store method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_overaligned_store/11" purpose="Check if the overaligned store method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_overaligned_store/12" purpose="Check if the overaligned store method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_overaligned_store/2" purpose="Check if the overaligned store method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_overaligned_store/3" purpose="Check if the overaligned store method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_overaligned_store/4" purpose="Check if the overaligned store method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_overaligned_store/5" purpose="Check if the overaligned store method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_overaligned_store/6" purpose="Check if the overaligned store method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_overaligned_store/7" purpose="Check if the overaligned store method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_overaligned_store/8" purpose="Check if the overaligned store method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_overaligned_store/9" purpose="Check if the overaligned store method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_overaligned_storeX/1" purpose="Check if the overaligned storeX method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_overaligned_storeX/2" purpose="Check if the overaligned storeX method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_overaligned_storeX/3" purpose="Check if the overaligned storeX method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_overaligned_storeX/4" purpose="Check if the overaligned storeX method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_overaligned_storeXY/1" purpose="Check if the overaligned storeXY method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_overaligned_storeXY/2" purpose="Check if the overaligned storeXY method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_overaligned_storeXY/3" purpose="Check if the overaligned storeXY method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_overaligned_storeXY/4" purpose="Check if the overaligned storeXY method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_overaligned_storeXY/5" purpose="Check if the overaligned storeXY method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_overaligned_storeXY/6" purpose="Check if the overaligned storeXY method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_overaligned_storeXY/7" purpose="Check if the overaligned storeXY method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_overaligned_storeXY/8" purpose="Check if the overaligned storeXY method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/1" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/10" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/11" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/12" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/2" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/3" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/4" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/5" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/6" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/7" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/8" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_overaligned_storeXYZ/9" purpose="Check if the overaligned storeXYZ method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_reciprocal/1" purpose="Check float32x4 reciprocal (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_reciprocal/2" purpose="Check float32x4 reciprocal (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_reciprocal/3" purpose="Check float32x4 reciprocal (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_reciprocal/4" purpose="Check float32x4 reciprocal (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_reciprocal_sqrt/1" purpose="Check float32x4 reciprocal sqrt (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_reciprocal_sqrt/2" purpose="Check float32x4 reciprocal sqrt (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_reciprocal_sqrt/3" purpose="Check float32x4 reciprocal sqrt (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_reciprocal_sqrt/4" purpose="Check float32x4 reciprocal sqrt (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_scalar_getters/1" purpose="Check float32x4 scalar getters (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_scalar_getters/2" purpose="Check float32x4 scalar getters (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_scalar_getters/3" purpose="Check float32x4 scalar getters (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_scalar_getters/4" purpose="Check float32x4 scalar getters (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_scale/1" purpose="Check float32x4 scale (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_scale/2" purpose="Check float32x4 scale (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_scale/3" purpose="Check float32x4 scale (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_scale/4" purpose="Check float32x4 scale (0, 4, 4)/4" result="PASS" /><testcase id="Float32x4_select/1" purpose="Check if the select method of float32x4 is valid./1" result="PASS" /><testcase id="Float32x4_select/2" purpose="Check if the select method of float32x4 is valid./2" result="PASS" /><testcase id="Float32x4_select/3" purpose="Check if the select method of float32x4 is valid./3" result="PASS" /><testcase id="Float32x4_select/4" purpose="Check if the select method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_shuffle/1" purpose="Check shuffle method of float32x4 is valid/1" result="PASS" /><testcase id="float32x4_shuffle/10" purpose="Check shuffle method of float32x4 is valid/10" result="PASS" /><testcase id="float32x4_shuffle/11" purpose="Check shuffle method of float32x4 is valid/11" result="PASS" /><testcase id="float32x4_shuffle/12" purpose="Check shuffle method of float32x4 is valid/12" result="PASS" /><testcase id="float32x4_shuffle/13" purpose="Check shuffle method of float32x4 is valid/13" result="PASS" /><testcase id="float32x4_shuffle/14" purpose="Check shuffle method of float32x4 is valid/14" result="PASS" /><testcase id="float32x4_shuffle/15" purpose="Check shuffle method of float32x4 is valid/15" result="PASS" /><testcase id="float32x4_shuffle/16" purpose="Check shuffle method of float32x4 is valid/16" result="PASS" /><testcase id="float32x4_shuffle/17" purpose="Check shuffle method of float32x4 is valid/17" result="PASS" /><testcase id="float32x4_shuffle/18" purpose="Check shuffle method of float32x4 is valid/18" result="PASS" /><testcase id="float32x4_shuffle/19" purpose="Check shuffle method of float32x4 is valid/19" result="PASS" /><testcase id="float32x4_shuffle/2" purpose="Check shuffle method of float32x4 is valid/2" result="PASS" /><testcase id="float32x4_shuffle/20" purpose="Check shuffle method of float32x4 is valid/20" result="PASS" /><testcase id="float32x4_shuffle/21" purpose="Check shuffle method of float32x4 is valid/21" result="PASS" /><testcase id="float32x4_shuffle/22" purpose="Check shuffle method of float32x4 is valid/22" result="PASS" /><testcase id="float32x4_shuffle/23" purpose="Check shuffle method of float32x4 is valid/23" result="PASS" /><testcase id="float32x4_shuffle/24" purpose="Check shuffle method of float32x4 is valid/24" result="PASS" /><testcase id="float32x4_shuffle/3" purpose="Check shuffle method of float32x4 is valid/3" result="PASS" /><testcase id="float32x4_shuffle/4" purpose="Check shuffle method of float32x4 is valid/4" result="PASS" /><testcase id="float32x4_shuffle/5" purpose="Check shuffle method of float32x4 is valid/5" result="PASS" /><testcase id="float32x4_shuffle/6" purpose="Check shuffle method of float32x4 is valid/6" result="PASS" /><testcase id="float32x4_shuffle/7" purpose="Check shuffle method of float32x4 is valid/7" result="PASS" /><testcase id="float32x4_shuffle/8" purpose="Check shuffle method of float32x4 is valid/8" result="PASS" /><testcase id="float32x4_shuffle/9" purpose="Check shuffle method of float32x4 is valid/9" result="PASS" /><testcase id="float32x4_signMask_getter/1" purpose="Check float32x4 signMask getter (0, 3, 3)/1" result="PASS" /><testcase id="float32x4_signMask_getter/2" purpose="Check float32x4 signMask getter (0, 3, 3)/2" result="PASS" /><testcase id="float32x4_signMask_getter/3" purpose="Check float32x4 signMask getter (0, 3, 3)/3" result="PASS" /><testcase id="Float32x4_splat/1" purpose="Check if the splat function of float32x4 can change the parameter to specified value./1" result="PASS" /><testcase id="Float32x4_splat/2" purpose="Check if the splat function of float32x4 can change the parameter to specified value./2" result="PASS" /><testcase id="Float32x4_splat/3" purpose="Check if the splat function of float32x4 can change the parameter to specified value./3" result="PASS" /><testcase id="Float32x4_splat/4" purpose="Check if the splat function of float32x4 can change the parameter to specified value./4" result="PASS" /><testcase id="float32x4_sqrt/1" purpose="Check float32x4 sqrt (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_sqrt/2" purpose="Check float32x4 sqrt (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_sqrt/3" purpose="Check float32x4 sqrt (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_sqrt/4" purpose="Check float32x4 sqrt (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_store/1" purpose="Check if the store method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_store/10" purpose="Check if the store method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_store/11" purpose="Check if the store method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_store/12" purpose="Check if the store method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_store/2" purpose="Check if the store method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_store/3" purpose="Check if the store method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_store/4" purpose="Check if the store method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_store/5" purpose="Check if the store method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_store/6" purpose="Check if the store method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_store/7" purpose="Check if the store method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_store/8" purpose="Check if the store method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_store/9" purpose="Check if the store method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_storeX/1" purpose="Check if the storeX method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_storeX/2" purpose="Check if the storeX method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_storeX/3" purpose="Check if the storeX method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_storeX/4" purpose="Check if the storeX method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_storeXY/1" purpose="Check if the storeXY method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_storeXY/2" purpose="Check if the storeXY method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_storeXY/3" purpose="Check if the storeXY method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_storeXY/4" purpose="Check if the storeXY method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_storeXY/5" purpose="Check if the storeXY method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_storeXY/6" purpose="Check if the storeXY method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_storeXY/7" purpose="Check if the storeXY method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_storeXY/8" purpose="Check if the storeXY method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_storeXYZ/1" purpose="Check if the storeXYZ method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_storeXYZ/2" purpose="Check if the storeXYZ method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_storeXYZ/3" purpose="Check if the storeXYZ method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_storeXYZ/4" purpose="Check if the storeXYZ method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_storeXYZ/5" purpose="Check if the storeXYZ method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_storeXYZ/6" purpose="Check if the storeXYZ method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_storeXYZ/7" purpose="Check if the storeXYZ method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_storeXYZ/8" purpose="Check if the storeXYZ method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_storeXYZ/9" purpose="Check if the storeXYZ method of float32x4 is valid./9" result="PASS" /><testcase id="Float32x4_store_smi_check/1" purpose="Check if the store method of float32x4 with smi check./1" result="PASS" /><testcase id="Float32x4_store_smi_check/10" purpose="Check if the store method of float32x4 with smi check./10" result="PASS" /><testcase id="Float32x4_store_smi_check/11" purpose="Check if the store method of float32x4 with smi check./11" result="PASS" /><testcase id="Float32x4_store_smi_check/12" purpose="Check if the store method of float32x4 with smi check./12" result="PASS" /><testcase id="Float32x4_store_smi_check/2" purpose="Check if the store method of float32x4 with smi check./2" result="PASS" /><testcase id="Float32x4_store_smi_check/3" purpose="Check if the store method of float32x4 with smi check./3" result="PASS" /><testcase id="Float32x4_store_smi_check/4" purpose="Check if the store method of float32x4 with smi check./4" result="PASS" /><testcase id="Float32x4_store_smi_check/5" purpose="Check if the store method of float32x4 with smi check./5" result="PASS" /><testcase id="Float32x4_store_smi_check/6" purpose="Check if the store method of float32x4 with smi check./6" result="PASS" /><testcase id="Float32x4_store_smi_check/7" purpose="Check if the store method of float32x4 with smi check./7" result="PASS" /><testcase id="Float32x4_store_smi_check/8" purpose="Check if the store method of float32x4 with smi check./8" result="PASS" /><testcase id="Float32x4_store_smi_check/9" purpose="Check if the store method of float32x4 with smi check./9" result="PASS" /><testcase id="float32x4_sub/1" purpose="Check float32x4 sub (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_sub/2" purpose="Check float32x4 sub (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_sub/3" purpose="Check float32x4 sub (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_sub/4" purpose="Check float32x4 sub (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_unaligned_load/1" purpose="Check if the unaligned load method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_unaligned_load/10" purpose="Check if the unaligned load method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_unaligned_load/11" purpose="Check if the unaligned load method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_unaligned_load/12" purpose="Check if the unaligned load method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_unaligned_load/13" purpose="Check if the unaligned load method of float32x4 is valid./13" result="PASS" /><testcase id="float32x4_unaligned_load/14" purpose="Check if the unaligned load method of float32x4 is valid./14" result="PASS" /><testcase id="float32x4_unaligned_load/15" purpose="Check if the unaligned load method of float32x4 is valid./15" result="PASS" /><testcase id="float32x4_unaligned_load/16" purpose="Check if the unaligned load method of float32x4 is valid./16" result="PASS" /><testcase id="float32x4_unaligned_load/17" purpose="Check if the unaligned load method of float32x4 is valid./17" result="PASS" /><testcase id="float32x4_unaligned_load/18" purpose="Check if the unaligned load method of float32x4 is valid./18" result="PASS" /><testcase id="float32x4_unaligned_load/19" purpose="Check if the unaligned load method of float32x4 is valid./19" result="PASS" /><testcase id="float32x4_unaligned_load/2" purpose="Check if the unaligned load method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_unaligned_load/20" purpose="Check if the unaligned load method of float32x4 is valid./20" result="PASS" /><testcase id="float32x4_unaligned_load/3" purpose="Check if the unaligned load method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_unaligned_load/4" purpose="Check if the unaligned load method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_unaligned_load/5" purpose="Check if the unaligned load method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_unaligned_load/6" purpose="Check if the unaligned load method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_unaligned_load/7" purpose="Check if the unaligned load method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_unaligned_load/8" purpose="Check if the unaligned load method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_unaligned_load/9" purpose="Check if the unaligned load method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_unaligned_loadX/1" purpose="Check if the unaligned loadX method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_unaligned_loadX/10" purpose="Check if the unaligned loadX method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_unaligned_loadX/11" purpose="Check if the unaligned loadX method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_unaligned_loadX/12" purpose="Check if the unaligned loadX method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_unaligned_loadX/13" purpose="Check if the unaligned loadX method of float32x4 is valid./13" result="PASS" /><testcase id="float32x4_unaligned_loadX/14" purpose="Check if the unaligned loadX method of float32x4 is valid./14" result="PASS" /><testcase id="float32x4_unaligned_loadX/15" purpose="Check if the unaligned loadX method of float32x4 is valid./15" result="PASS" /><testcase id="float32x4_unaligned_loadX/16" purpose="Check if the unaligned loadX method of float32x4 is valid./16" result="PASS" /><testcase id="float32x4_unaligned_loadX/17" purpose="Check if the unaligned loadX method of float32x4 is valid./17" result="PASS" /><testcase id="float32x4_unaligned_loadX/18" purpose="Check if the unaligned loadX method of float32x4 is valid./18" result="PASS" /><testcase id="float32x4_unaligned_loadX/19" purpose="Check if the unaligned loadX method of float32x4 is valid./19" result="PASS" /><testcase id="float32x4_unaligned_loadX/2" purpose="Check if the unaligned loadX method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_unaligned_loadX/20" purpose="Check if the unaligned loadX method of float32x4 is valid./20" result="PASS" /><testcase id="float32x4_unaligned_loadX/21" purpose="Check if the unaligned loadX method of float32x4 is valid./21" result="PASS" /><testcase id="float32x4_unaligned_loadX/22" purpose="Check if the unaligned loadX method of float32x4 is valid./22" result="PASS" /><testcase id="float32x4_unaligned_loadX/23" purpose="Check if the unaligned loadX method of float32x4 is valid./23" result="PASS" /><testcase id="float32x4_unaligned_loadX/24" purpose="Check if the unaligned loadX method of float32x4 is valid./24" result="PASS" /><testcase id="float32x4_unaligned_loadX/25" purpose="Check if the unaligned loadX method of float32x4 is valid./25" result="PASS" /><testcase id="float32x4_unaligned_loadX/26" purpose="Check if the unaligned loadX method of float32x4 is valid./26" result="PASS" /><testcase id="float32x4_unaligned_loadX/27" purpose="Check if the unaligned loadX method of float32x4 is valid./27" result="PASS" /><testcase id="float32x4_unaligned_loadX/28" purpose="Check if the unaligned loadX method of float32x4 is valid./28" result="PASS" /><testcase id="float32x4_unaligned_loadX/29" purpose="Check if the unaligned loadX method of float32x4 is valid./29" result="PASS" /><testcase id="float32x4_unaligned_loadX/3" purpose="Check if the unaligned loadX method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_unaligned_loadX/30" purpose="Check if the unaligned loadX method of float32x4 is valid./30" result="PASS" /><testcase id="float32x4_unaligned_loadX/31" purpose="Check if the unaligned loadX method of float32x4 is valid./31" result="PASS" /><testcase id="float32x4_unaligned_loadX/32" purpose="Check if the unaligned loadX method of float32x4 is valid./32" result="PASS" /><testcase id="float32x4_unaligned_loadX/4" purpose="Check if the unaligned loadX method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_unaligned_loadX/5" purpose="Check if the unaligned loadX method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_unaligned_loadX/6" purpose="Check if the unaligned loadX method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_unaligned_loadX/7" purpose="Check if the unaligned loadX method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_unaligned_loadX/8" purpose="Check if the unaligned loadX method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_unaligned_loadX/9" purpose="Check if the unaligned loadX method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_unaligned_loadXY/1" purpose="Check if the unaligned loadXY method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_unaligned_loadXY/10" purpose="Check if the unaligned loadXY method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_unaligned_loadXY/11" purpose="Check if the unaligned loadXY method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_unaligned_loadXY/12" purpose="Check if the unaligned loadXY method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_unaligned_loadXY/13" purpose="Check if the unaligned loadXY method of float32x4 is valid./13" result="PASS" /><testcase id="float32x4_unaligned_loadXY/14" purpose="Check if the unaligned loadXY method of float32x4 is valid./14" result="PASS" /><testcase id="float32x4_unaligned_loadXY/15" purpose="Check if the unaligned loadXY method of float32x4 is valid./15" result="PASS" /><testcase id="float32x4_unaligned_loadXY/16" purpose="Check if the unaligned loadXY method of float32x4 is valid./16" result="PASS" /><testcase id="float32x4_unaligned_loadXY/17" purpose="Check if the unaligned loadXY method of float32x4 is valid./17" result="PASS" /><testcase id="float32x4_unaligned_loadXY/18" purpose="Check if the unaligned loadXY method of float32x4 is valid./18" result="PASS" /><testcase id="float32x4_unaligned_loadXY/19" purpose="Check if the unaligned loadXY method of float32x4 is valid./19" result="PASS" /><testcase id="float32x4_unaligned_loadXY/2" purpose="Check if the unaligned loadXY method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_unaligned_loadXY/20" purpose="Check if the unaligned loadXY method of float32x4 is valid./20" result="PASS" /><testcase id="float32x4_unaligned_loadXY/21" purpose="Check if the unaligned loadXY method of float32x4 is valid./21" result="PASS" /><testcase id="float32x4_unaligned_loadXY/22" purpose="Check if the unaligned loadXY method of float32x4 is valid./22" result="PASS" /><testcase id="float32x4_unaligned_loadXY/23" purpose="Check if the unaligned loadXY method of float32x4 is valid./23" result="PASS" /><testcase id="float32x4_unaligned_loadXY/24" purpose="Check if the unaligned loadXY method of float32x4 is valid./24" result="PASS" /><testcase id="float32x4_unaligned_loadXY/25" purpose="Check if the unaligned loadXY method of float32x4 is valid./25" result="PASS" /><testcase id="float32x4_unaligned_loadXY/26" purpose="Check if the unaligned loadXY method of float32x4 is valid./26" result="PASS" /><testcase id="float32x4_unaligned_loadXY/27" purpose="Check if the unaligned loadXY method of float32x4 is valid./27" result="PASS" /><testcase id="float32x4_unaligned_loadXY/28" purpose="Check if the unaligned loadXY method of float32x4 is valid./28" result="PASS" /><testcase id="float32x4_unaligned_loadXY/3" purpose="Check if the unaligned loadXY method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_unaligned_loadXY/4" purpose="Check if the unaligned loadXY method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_unaligned_loadXY/5" purpose="Check if the unaligned loadXY method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_unaligned_loadXY/6" purpose="Check if the unaligned loadXY method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_unaligned_loadXY/7" purpose="Check if the unaligned loadXY method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_unaligned_loadXY/8" purpose="Check if the unaligned loadXY method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_unaligned_loadXY/9" purpose="Check if the unaligned loadXY method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/1" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/10" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/11" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/12" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/13" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./13" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/14" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./14" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/15" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./15" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/16" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./16" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/17" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./17" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/18" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./18" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/19" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./19" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/2" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/20" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./20" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/21" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./21" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/22" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./22" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/23" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./23" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/24" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./24" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/25" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./25" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/26" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./26" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/27" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./27" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/28" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./28" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/3" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/4" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/5" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/6" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/7" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/8" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_unaligned_loadXYZ/9" purpose="Check if the unaligned loadXYZ method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_unaligned_store/1" purpose="Check if the unaligned store method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_unaligned_store/10" purpose="Check if the unaligned store method of float32x4 is valid./10" result="PASS" /><testcase id="float32x4_unaligned_store/11" purpose="Check if the unaligned store method of float32x4 is valid./11" result="PASS" /><testcase id="float32x4_unaligned_store/12" purpose="Check if the unaligned store method of float32x4 is valid./12" result="PASS" /><testcase id="float32x4_unaligned_store/2" purpose="Check if the unaligned store method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_unaligned_store/3" purpose="Check if the unaligned store method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_unaligned_store/4" purpose="Check if the unaligned store method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_unaligned_store/5" purpose="Check if the unaligned store method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_unaligned_store/6" purpose="Check if the unaligned store method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_unaligned_store/7" purpose="Check if the unaligned store method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_unaligned_store/8" purpose="Check if the unaligned store method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_unaligned_store/9" purpose="Check if the unaligned store method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_unaligned_storeX/1" purpose="Check if the unaligned storeX method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_unaligned_storeX/2" purpose="Check if the unaligned storeX method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_unaligned_storeX/3" purpose="Check if the unaligned storeX method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_unaligned_storeX/4" purpose="Check if the unaligned storeX method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_unaligned_storeXY/1" purpose="Check if the unaligned storeXY method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_unaligned_storeXY/2" purpose="Check if the unaligned storeXY method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_unaligned_storeXY/3" purpose="Check if the unaligned storeXY method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_unaligned_storeXY/4" purpose="Check if the unaligned storeXY method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_unaligned_storeXY/5" purpose="Check if the unaligned storeXY method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_unaligned_storeXY/6" purpose="Check if the unaligned storeXY method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_unaligned_storeXY/7" purpose="Check if the unaligned storeXY method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_unaligned_storeXY/8" purpose="Check if the unaligned storeXY method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_unaligned_storeXYZ/1" purpose="Check if the unaligned storeXYZ method of float32x4 is valid./1" result="PASS" /><testcase id="float32x4_unaligned_storeXYZ/2" purpose="Check if the unaligned storeXYZ method of float32x4 is valid./2" result="PASS" /><testcase id="float32x4_unaligned_storeXYZ/3" purpose="Check if the unaligned storeXYZ method of float32x4 is valid./3" result="PASS" /><testcase id="float32x4_unaligned_storeXYZ/4" purpose="Check if the unaligned storeXYZ method of float32x4 is valid./4" result="PASS" /><testcase id="float32x4_unaligned_storeXYZ/5" purpose="Check if the unaligned storeXYZ method of float32x4 is valid./5" result="PASS" /><testcase id="float32x4_unaligned_storeXYZ/6" purpose="Check if the unaligned storeXYZ method of float32x4 is valid./6" result="PASS" /><testcase id="float32x4_unaligned_storeXYZ/7" purpose="Check if the unaligned storeXYZ method of float32x4 is valid./7" result="PASS" /><testcase id="float32x4_unaligned_storeXYZ/8" purpose="Check if the unaligned storeXYZ method of float32x4 is valid./8" result="PASS" /><testcase id="float32x4_unaligned_storeXYZ/9" purpose="Check if the unaligned storeXYZ method of float32x4 is valid./9" result="PASS" /><testcase id="float32x4_vector_getters/1" purpose="Check float32x4 vector getters (0, 20, 20)/1" result="PASS" /><testcase id="float32x4_vector_getters/10" purpose="Check float32x4 vector getters (0, 20, 20)/10" result="PASS" /><testcase id="float32x4_vector_getters/11" purpose="Check float32x4 vector getters (0, 20, 20)/11" result="PASS" /><testcase id="float32x4_vector_getters/12" purpose="Check float32x4 vector getters (0, 20, 20)/12" result="PASS" /><testcase id="float32x4_vector_getters/13" purpose="Check float32x4 vector getters (0, 20, 20)/13" result="PASS" /><testcase id="float32x4_vector_getters/14" purpose="Check float32x4 vector getters (0, 20, 20)/14" result="PASS" /><testcase id="float32x4_vector_getters/15" purpose="Check float32x4 vector getters (0, 20, 20)/15" result="PASS" /><testcase id="float32x4_vector_getters/16" purpose="Check float32x4 vector getters (0, 20, 20)/16" result="PASS" /><testcase id="float32x4_vector_getters/17" purpose="Check float32x4 vector getters (0, 20, 20)/17" result="PASS" /><testcase id="float32x4_vector_getters/18" purpose="Check float32x4 vector getters (0, 20, 20)/18" result="PASS" /><testcase id="float32x4_vector_getters/19" purpose="Check float32x4 vector getters (0, 20, 20)/19" result="PASS" /><testcase id="float32x4_vector_getters/2" purpose="Check float32x4 vector getters (0, 20, 20)/2" result="PASS" /><testcase id="float32x4_vector_getters/20" purpose="Check float32x4 vector getters (0, 20, 20)/20" result="PASS" /><testcase id="float32x4_vector_getters/3" purpose="Check float32x4 vector getters (0, 20, 20)/3" result="PASS" /><testcase id="float32x4_vector_getters/4" purpose="Check float32x4 vector getters (0, 20, 20)/4" result="PASS" /><testcase id="float32x4_vector_getters/5" purpose="Check float32x4 vector getters (0, 20, 20)/5" result="PASS" /><testcase id="float32x4_vector_getters/6" purpose="Check float32x4 vector getters (0, 20, 20)/6" result="PASS" /><testcase id="float32x4_vector_getters/7" purpose="Check float32x4 vector getters (0, 20, 20)/7" result="PASS" /><testcase id="float32x4_vector_getters/8" purpose="Check float32x4 vector getters (0, 20, 20)/8" result="PASS" /><testcase id="float32x4_vector_getters/9" purpose="Check float32x4 vector getters (0, 20, 20)/9" result="PASS" /><testcase id="float32x4_withW/1" purpose="Check float32x4 withW (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_withW/2" purpose="Check float32x4 withW (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_withW/3" purpose="Check float32x4 withW (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_withW/4" purpose="Check float32x4 withW (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_withX/1" purpose="Check float32x4 withX (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_withX/2" purpose="Check float32x4 withX (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_withX/3" purpose="Check float32x4 withX (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_withX/4" purpose="Check float32x4 withX (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_withY/1" purpose="Check float32x4 withY (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_withY/2" purpose="Check float32x4 withY (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_withY/3" purpose="Check float32x4 withY (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_withY/4" purpose="Check float32x4 withY (0, 4, 4)/4" result="PASS" /><testcase id="float32x4_withZ/1" purpose="Check float32x4 withZ (0, 4, 4)/1" result="PASS" /><testcase id="float32x4_withZ/2" purpose="Check float32x4 withZ (0, 4, 4)/2" result="PASS" /><testcase id="float32x4_withZ/3" purpose="Check float32x4 withZ (0, 4, 4)/3" result="PASS" /><testcase id="float32x4_withZ/4" purpose="Check float32x4 withZ (0, 4, 4)/4" result="PASS" /><testcase id="Float32x4_zero/1" purpose="Check if the zero function of float32x4 can change the parameter to 0.0./1" result="PASS" /><testcase id="Float32x4_zero/2" purpose="Check if the zero function of float32x4 can change the parameter to 0.0./2" result="PASS" /><testcase id="Float32x4_zero/3" purpose="Check if the zero function of float32x4 can change the parameter to 0.0./3" result="PASS" /><testcase id="Float32x4_zero/4" purpose="Check if the zero function of float32x4 can change the parameter to 0.0./4" result="PASS" /><testcase id="float64x2_abs/1" purpose="Check if the abs method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_abs/2" purpose="Check if the abs method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_add/1" purpose="Check if the add method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_add/2" purpose="Check if the add method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_clamp/1" purpose="Check if the clamp method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_clamp/2" purpose="Check if the clamp method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_construct/1" purpose="Check if float64x2 object can be creat successful./1" result="PASS" /><testcase id="float64x2_construct/2" purpose="Check if float64x2 object can be creat successful./2" result="PASS" /><testcase id="float64x2_construct/3" purpose="Check if float64x2 object can be creat successful./3" result="PASS" /><testcase id="float64x2_construct/4" purpose="Check if float64x2 object can be creat successful./4" result="PASS" /><testcase id="float64x2_div/1" purpose="Check if the div method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_div/2" purpose="Check if the div method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_fromFloat32x4/1" purpose="Check if the fromFloat32x4 method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_fromFloat32x4/2" purpose="Check if the fromFloat32x4 method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_fromFloat32x4/3" purpose="Check if the fromFloat32x4 method of float64x2 is valid./3" result="PASS" /><testcase id="float64x2_fromFloat32x4/4" purpose="Check if the fromFloat32x4 method of float64x2 is valid./4" result="PASS" /><testcase id="float64x2_fromFloat32x4Bits/1" purpose="Check if the fromFloat32x4Bits method of float64x2 is valid./1" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="float64x2_fromFloat32x4Bits/2" purpose="Check if the fromFloat32x4Bits method of float64x2 is valid./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="float64x2_fromFloat32x4Bits/3" purpose="Check if the fromFloat32x4Bits method of float64x2 is valid./3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="float64x2_fromFloat32x4Bits/4" purpose="Check if the fromFloat32x4Bits method of float64x2 is valid./4" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="float64x2_fromInt32x4/1" purpose="Check if the fromInt32x4 method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_fromInt32x4/2" purpose="Check if the fromInt32x4 method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_fromInt32x4/3" purpose="Check if the fromInt32x4 method of float64x2 is valid./3" result="PASS" /><testcase id="float64x2_fromInt32x4/4" purpose="Check if the fromInt32x4 method of float64x2 is valid./4" result="PASS" /><testcase id="float64x2_fromInt32x4Bits/1" purpose="Check if the fromInt32x4Bits method of float64x2 is valid./1" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="float64x2_fromInt32x4Bits/2" purpose="Check if the fromInt32x4Bits method of float64x2 is valid./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="float64x2_fromInt32x4Bits/3" purpose="Check if the fromInt32x4Bits method of float64x2 is valid./3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="float64x2_fromInt32x4Bits/4" purpose="Check if the fromInt32x4Bits method of float64x2 is valid./4" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="float64x2_load/1" purpose="Check if the load method of float64x4 is valid./1" result="PASS" /><testcase id="float64x2_load/10" purpose="Check if the load method of float64x4 is valid./10" result="PASS" /><testcase id="float64x2_load/11" purpose="Check if the load method of float64x4 is valid./11" result="PASS" /><testcase id="float64x2_load/12" purpose="Check if the load method of float64x4 is valid./12" result="PASS" /><testcase id="float64x2_load/13" purpose="Check if the load method of float64x4 is valid./13" result="PASS" /><testcase id="float64x2_load/14" purpose="Check if the load method of float64x4 is valid./14" result="PASS" /><testcase id="float64x2_load/2" purpose="Check if the load method of float64x4 is valid./2" result="PASS" /><testcase id="float64x2_load/3" purpose="Check if the load method of float64x4 is valid./3" result="PASS" /><testcase id="float64x2_load/4" purpose="Check if the load method of float64x4 is valid./4" result="PASS" /><testcase id="float64x2_load/5" purpose="Check if the load method of float64x4 is valid./5" result="PASS" /><testcase id="float64x2_load/6" purpose="Check if the load method of float64x4 is valid./6" result="PASS" /><testcase id="float64x2_load/7" purpose="Check if the load method of float64x4 is valid./7" result="PASS" /><testcase id="float64x2_load/8" purpose="Check if the load method of float64x4 is valid./8" result="PASS" /><testcase id="float64x2_load/9" purpose="Check if the load method of float64x4 is valid./9" result="PASS" /><testcase id="float64x2_loadX/1" purpose="Check if the loadX method of float64x4 is valid./1" result="PASS" /><testcase id="float64x2_loadX/10" purpose="Check if the loadX method of float64x4 is valid./10" result="PASS" /><testcase id="float64x2_loadX/11" purpose="Check if the loadX method of float64x4 is valid./11" result="PASS" /><testcase id="float64x2_loadX/12" purpose="Check if the loadX method of float64x4 is valid./12" result="PASS" /><testcase id="float64x2_loadX/13" purpose="Check if the loadX method of float64x4 is valid./13" result="PASS" /><testcase id="float64x2_loadX/14" purpose="Check if the loadX method of float64x4 is valid./14" result="PASS" /><testcase id="float64x2_loadX/15" purpose="Check if the loadX method of float64x4 is valid./15" result="PASS" /><testcase id="float64x2_loadX/16" purpose="Check if the loadX method of float64x4 is valid./16" result="PASS" /><testcase id="float64x2_loadX/2" purpose="Check if the loadX method of float64x4 is valid./2" result="PASS" /><testcase id="float64x2_loadX/3" purpose="Check if the loadX method of float64x4 is valid./3" result="PASS" /><testcase id="float64x2_loadX/4" purpose="Check if the loadX method of float64x4 is valid./4" result="PASS" /><testcase id="float64x2_loadX/5" purpose="Check if the loadX method of float64x4 is valid./5" result="PASS" /><testcase id="float64x2_loadX/6" purpose="Check if the loadX method of float64x4 is valid./6" result="PASS" /><testcase id="float64x2_loadX/7" purpose="Check if the loadX method of float64x4 is valid./7" result="PASS" /><testcase id="float64x2_loadX/8" purpose="Check if the loadX method of float64x4 is valid./8" result="PASS" /><testcase id="float64x2_loadX/9" purpose="Check if the loadX method of float64x4 is valid./9" result="PASS" /><testcase id="float64x2_loadX_exception/1" purpose="Check if the loadX method of float64x4 throw exception noramlly./1" result="PASS" /><testcase id="float64x2_loadX_exception/2" purpose="Check if the loadX method of float64x4 throw exception noramlly./2" result="PASS" /><testcase id="float64x2_loadX_exception/3" purpose="Check if the loadX method of float64x4 throw exception noramlly./3" result="PASS" /><testcase id="float64x2_loadX_exception/4" purpose="Check if the loadX method of float64x4 throw exception noramlly./4" result="PASS" /><testcase id="float64x2_load_exception/1" purpose="Check if the load method of float64x4 throw exception noramlly./1" result="PASS" /><testcase id="float64x2_load_exception/2" purpose="Check if the load method of float64x4 throw exception noramlly./2" result="PASS" /><testcase id="float64x2_load_exception/3" purpose="Check if the load method of float64x4 throw exception noramlly./3" result="PASS" /><testcase id="float64x2_load_exception/4" purpose="Check if the load method of float64x4 throw exception noramlly./4" result="PASS" /><testcase id="float64x2_max/1" purpose="Check if the max method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_max/2" purpose="Check if the max method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_min/1" purpose="Check if the min method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_min/2" purpose="Check if the min method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_mul/1" purpose="Check if the mul method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_mul/2" purpose="Check if the mul method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_neg/1" purpose="Check if the neg method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_neg/2" purpose="Check if the neg method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_scale/1" purpose="Check if the scale method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_scale/2" purpose="Check if the scale method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_shuffle/1" purpose="Check shuffle method of float64x2 is valid/1" result="PASS" /><testcase id="float64x2_shuffle/10" purpose="Check shuffle method of float64x2 is valid/10" result="PASS" /><testcase id="float64x2_shuffle/11" purpose="Check shuffle method of float64x2 is valid/11" result="PASS" /><testcase id="float64x2_shuffle/12" purpose="Check shuffle method of float64x2 is valid/12" result="PASS" /><testcase id="float64x2_shuffle/13" purpose="Check shuffle method of float64x2 is valid/13" result="PASS" /><testcase id="float64x2_shuffle/14" purpose="Check shuffle method of float64x2 is valid/14" result="PASS" /><testcase id="float64x2_shuffle/15" purpose="Check shuffle method of float64x2 is valid/15" result="PASS" /><testcase id="float64x2_shuffle/16" purpose="Check shuffle method of float64x2 is valid/16" result="PASS" /><testcase id="float64x2_shuffle/2" purpose="Check shuffle method of float64x2 is valid/2" result="PASS" /><testcase id="float64x2_shuffle/3" purpose="Check shuffle method of float64x2 is valid/3" result="PASS" /><testcase id="float64x2_shuffle/4" purpose="Check shuffle method of float64x2 is valid/4" result="PASS" /><testcase id="float64x2_shuffle/5" purpose="Check shuffle method of float64x2 is valid/5" result="PASS" /><testcase id="float64x2_shuffle/6" purpose="Check shuffle method of float64x2 is valid/6" result="PASS" /><testcase id="float64x2_shuffle/7" purpose="Check shuffle method of float64x2 is valid/7" result="PASS" /><testcase id="float64x2_shuffle/8" purpose="Check shuffle method of float64x2 is valid/8" result="PASS" /><testcase id="float64x2_shuffle/9" purpose="Check shuffle method of float64x2 is valid/9" result="PASS" /><testcase id="float64x2_splat/1" purpose="Check if the splat function of float64x2 can change the parameter to specified value./1" result="PASS" /><testcase id="float64x2_splat/2" purpose="Check if the splat function of float64x2 can change the parameter to specified value./2" result="PASS" /><testcase id="float64x2_sqrt/1" purpose="Check if the sqrt method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_sqrt/2" purpose="Check if the sqrt method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_store/1" purpose="Check if the store method of float64x4 is valid./1" result="PASS" /><testcase id="float64x2_store/2" purpose="Check if the store method of float64x4 is valid./2" result="PASS" /><testcase id="float64x2_store/3" purpose="Check if the store method of float64x4 is valid./3" result="PASS" /><testcase id="float64x2_store/4" purpose="Check if the store method of float64x4 is valid./4" result="PASS" /><testcase id="float64x2_store/5" purpose="Check if the store method of float64x4 is valid./5" result="PASS" /><testcase id="float64x2_store/6" purpose="Check if the store method of float64x4 is valid./6" result="PASS" /><testcase id="float64x2_storeX/1" purpose="Check if the storeX method of float64x4 is valid./1" result="PASS" /><testcase id="float64x2_storeX/2" purpose="Check if the storeX method of float64x4 is valid./2" result="PASS" /><testcase id="float64x2_storeX/3" purpose="Check if the storeX method of float64x4 is valid./3" result="PASS" /><testcase id="float64x2_storeX/4" purpose="Check if the storeX method of float64x4 is valid./4" result="PASS" /><testcase id="float64x2_storeX_exception/1" purpose="Check if the storeX method of float64x4 throw exception noramlly./1" result="PASS" /><testcase id="float64x2_storeX_exception/2" purpose="Check if the storeX method of float64x4 throw exception noramlly./2" result="PASS" /><testcase id="float64x2_storeX_exception/3" purpose="Check if the storeX method of float64x4 throw exception noramlly./3" result="PASS" /><testcase id="float64x2_storeX_exception/4" purpose="Check if the storeX method of float64x4 throw exception noramlly./4" result="PASS" /><testcase id="float64x2_storeX_exception/5" purpose="Check if the storeX method of float64x4 throw exception noramlly./5" result="PASS" /><testcase id="float64x2_store_exception/1" purpose="Check if the store method of float64x4 throw exception noramlly./1" result="PASS" /><testcase id="float64x2_store_exception/2" purpose="Check if the store method of float64x4 throw exception noramlly./2" result="PASS" /><testcase id="float64x2_store_exception/3" purpose="Check if the store method of float64x4 throw exception noramlly./3" result="PASS" /><testcase id="float64x2_store_exception/4" purpose="Check if the store method of float64x4 throw exception noramlly./4" result="PASS" /><testcase id="float64x2_store_exception/5" purpose="Check if the store method of float64x4 throw exception noramlly./5" result="PASS" /><testcase id="float64x2_sub/1" purpose="Check if the sub method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_sub/2" purpose="Check if the sub method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_swizzle/1" purpose="Check swizzle method of float64x2 is valid/1" result="PASS" /><testcase id="float64x2_swizzle/2" purpose="Check swizzle method of float64x2 is valid/2" result="PASS" /><testcase id="float64x2_swizzle/3" purpose="Check swizzle method of float64x2 is valid/3" result="PASS" /><testcase id="float64x2_swizzle/4" purpose="Check swizzle method of float64x2 is valid/4" result="PASS" /><testcase id="float64x2_swizzle/5" purpose="Check swizzle method of float64x2 is valid/5" result="PASS" /><testcase id="float64x2_swizzle/6" purpose="Check swizzle method of float64x2 is valid/6" result="PASS" /><testcase id="float64x2_swizzle/7" purpose="Check swizzle method of float64x2 is valid/7" result="PASS" /><testcase id="float64x2_swizzle/8" purpose="Check swizzle method of float64x2 is valid/8" result="PASS" /><testcase id="float64x2_unaligned_load/1" purpose="Check if the unaligned load method of float64x4 is valid./1" result="PASS" /><testcase id="float64x2_unaligned_load/10" purpose="Check if the unaligned load method of float64x4 is valid./10" result="PASS" /><testcase id="float64x2_unaligned_load/11" purpose="Check if the unaligned load method of float64x4 is valid./11" result="PASS" /><testcase id="float64x2_unaligned_load/12" purpose="Check if the unaligned load method of float64x4 is valid./12" result="PASS" /><testcase id="float64x2_unaligned_load/13" purpose="Check if the unaligned load method of float64x4 is valid./13" result="PASS" /><testcase id="float64x2_unaligned_load/14" purpose="Check if the unaligned load method of float64x4 is valid./14" result="PASS" /><testcase id="float64x2_unaligned_load/2" purpose="Check if the unaligned load method of float64x4 is valid./2" result="PASS" /><testcase id="float64x2_unaligned_load/3" purpose="Check if the unaligned load method of float64x4 is valid./3" result="PASS" /><testcase id="float64x2_unaligned_load/4" purpose="Check if the unaligned load method of float64x4 is valid./4" result="PASS" /><testcase id="float64x2_unaligned_load/5" purpose="Check if the unaligned load method of float64x4 is valid./5" result="PASS" /><testcase id="float64x2_unaligned_load/6" purpose="Check if the unaligned load method of float64x4 is valid./6" result="PASS" /><testcase id="float64x2_unaligned_load/7" purpose="Check if the unaligned load method of float64x4 is valid./7" result="PASS" /><testcase id="float64x2_unaligned_load/8" purpose="Check if the unaligned load method of float64x4 is valid./8" result="PASS" /><testcase id="float64x2_unaligned_load/9" purpose="Check if the unaligned load method of float64x4 is valid./9" result="PASS" /><testcase id="float64x2_unaligned_loadX/1" purpose="Check if the unaligned loadX method of float64x4 is valid./1" result="PASS" /><testcase id="float64x2_unaligned_loadX/10" purpose="Check if the unaligned loadX method of float64x4 is valid./10" result="PASS" /><testcase id="float64x2_unaligned_loadX/11" purpose="Check if the unaligned loadX method of float64x4 is valid./11" result="PASS" /><testcase id="float64x2_unaligned_loadX/12" purpose="Check if the unaligned loadX method of float64x4 is valid./12" result="PASS" /><testcase id="float64x2_unaligned_loadX/13" purpose="Check if the unaligned loadX method of float64x4 is valid./13" result="PASS" /><testcase id="float64x2_unaligned_loadX/14" purpose="Check if the unaligned loadX method of float64x4 is valid./14" result="PASS" /><testcase id="float64x2_unaligned_loadX/15" purpose="Check if the unaligned loadX method of float64x4 is valid./15" result="PASS" /><testcase id="float64x2_unaligned_loadX/16" purpose="Check if the unaligned loadX method of float64x4 is valid./16" result="PASS" /><testcase id="float64x2_unaligned_loadX/2" purpose="Check if the unaligned loadX method of float64x4 is valid./2" result="PASS" /><testcase id="float64x2_unaligned_loadX/3" purpose="Check if the unaligned loadX method of float64x4 is valid./3" result="PASS" /><testcase id="float64x2_unaligned_loadX/4" purpose="Check if the unaligned loadX method of float64x4 is valid./4" result="PASS" /><testcase id="float64x2_unaligned_loadX/5" purpose="Check if the unaligned loadX method of float64x4 is valid./5" result="PASS" /><testcase id="float64x2_unaligned_loadX/6" purpose="Check if the unaligned loadX method of float64x4 is valid./6" result="PASS" /><testcase id="float64x2_unaligned_loadX/7" purpose="Check if the unaligned loadX method of float64x4 is valid./7" result="PASS" /><testcase id="float64x2_unaligned_loadX/8" purpose="Check if the unaligned loadX method of float64x4 is valid./8" result="PASS" /><testcase id="float64x2_unaligned_loadX/9" purpose="Check if the unaligned loadX method of float64x4 is valid./9" result="PASS" /><testcase id="float64x2_unaligned_store/1" purpose="Check if the unaligned store method of float64x4 is valid./1" result="PASS" /><testcase id="float64x2_unaligned_store/2" purpose="Check if the unaligned store method of float64x4 is valid./2" result="PASS" /><testcase id="float64x2_unaligned_store/3" purpose="Check if the unaligned store method of float64x4 is valid./3" result="PASS" /><testcase id="float64x2_unaligned_store/4" purpose="Check if the unaligned store method of float64x4 is valid./4" result="PASS" /><testcase id="float64x2_unaligned_store/5" purpose="Check if the unaligned store method of float64x4 is valid./5" result="PASS" /><testcase id="float64x2_unaligned_store/6" purpose="Check if the unaligned store method of float64x4 is valid./6" result="PASS" /><testcase id="float64x2_unaligned_storeX/1" purpose="Check if the unaligned storeX method of float64x4 is valid./1" result="PASS" /><testcase id="float64x2_unaligned_storeX/2" purpose="Check if the unaligned storeX method of float64x4 is valid./2" result="PASS" /><testcase id="float64x2_unaligned_storeX/3" purpose="Check if the unaligned storeX method of float64x4 is valid./3" result="PASS" /><testcase id="float64x2_unaligned_storeX/4" purpose="Check if the unaligned storeX method of float64x4 is valid./4" result="PASS" /><testcase id="float64x2_withX/1" purpose="Check if the withX method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_withX/2" purpose="Check if the withX method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_withY/1" purpose="Check if the withY method of float64x2 is valid./1" result="PASS" /><testcase id="float64x2_withY/2" purpose="Check if the withY method of float64x2 is valid./2" result="PASS" /><testcase id="float64x2_zero/1" purpose="Check if the zero function of float64x2 can change the parameter to 0.0./1" result="PASS" /><testcase id="float64x2_zero/2" purpose="Check if the zero function of float64x2 can change the parameter to 0.0./2" result="PASS" /><testcase id="int32x4_add/1" purpose="Check int32x4 add (0, 4, 4)/1" result="PASS" /><testcase id="int32x4_add/2" purpose="Check int32x4 add (0, 4, 4)/2" result="PASS" /><testcase id="int32x4_add/3" purpose="Check int32x4 add (0, 4, 4)/3" result="PASS" /><testcase id="int32x4_add/4" purpose="Check int32x4 add (0, 4, 4)/4" result="PASS" /><testcase id="int32x4_and/1" purpose="Check int32x4 and (0, 20, 20)/1" result="PASS" /><testcase id="int32x4_and/10" purpose="Check int32x4 and (0, 20, 20)/10" result="PASS" /><testcase id="int32x4_and/11" purpose="Check int32x4 and (0, 20, 20)/11" result="PASS" /><testcase id="int32x4_and/12" purpose="Check int32x4 and (0, 20, 20)/12" result="PASS" /><testcase id="int32x4_and/13" purpose="Check int32x4 and (0, 20, 20)/13" result="PASS" /><testcase id="int32x4_and/14" purpose="Check int32x4 and (0, 20, 20)/14" result="PASS" /><testcase id="int32x4_and/15" purpose="Check int32x4 and (0, 20, 20)/15" result="PASS" /><testcase id="int32x4_and/16" purpose="Check int32x4 and (0, 20, 20)/16" result="PASS" /><testcase id="int32x4_and/17" purpose="Check int32x4 and (0, 20, 20)/17" result="PASS" /><testcase id="int32x4_and/18" purpose="Check int32x4 and (0, 20, 20)/18" result="PASS" /><testcase id="int32x4_and/19" purpose="Check int32x4 and (0, 20, 20)/19" result="PASS" /><testcase id="int32x4_and/2" purpose="Check int32x4 and (0, 20, 20)/2" result="PASS" /><testcase id="int32x4_and/20" purpose="Check int32x4 and (0, 20, 20)/20" result="PASS" /><testcase id="int32x4_and/3" purpose="Check int32x4 and (0, 20, 20)/3" result="PASS" /><testcase id="int32x4_and/4" purpose="Check int32x4 and (0, 20, 20)/4" result="PASS" /><testcase id="int32x4_and/5" purpose="Check int32x4 and (0, 20, 20)/5" result="PASS" /><testcase id="int32x4_and/6" purpose="Check int32x4 and (0, 20, 20)/6" result="PASS" /><testcase id="int32x4_and/7" purpose="Check int32x4 and (0, 20, 20)/7" result="PASS" /><testcase id="int32x4_and/8" purpose="Check int32x4 and (0, 20, 20)/8" result="PASS" /><testcase id="int32x4_and/9" purpose="Check int32x4 and (0, 20, 20)/9" result="PASS" /><testcase id="Int32x4_bool/1" purpose="Check if the bool function of int32x4 can change the parameter to (-1, 0, -1, 0)./1" result="PASS" /><testcase id="Int32x4_bool/2" purpose="Check if the bool function of int32x4 can change the parameter to (-1, 0, -1, 0)./2" result="PASS" /><testcase id="Int32x4_bool/3" purpose="Check if the bool function of int32x4 can change the parameter to (-1, 0, -1, 0)./3" result="PASS" /><testcase id="Int32x4_bool/4" purpose="Check if the bool function of int32x4 can change the parameter to (-1, 0, -1, 0)./4" result="PASS" /><testcase id="Int32x4_constructor/1" purpose="Check if int32x4 object can be creat successful./1" result="PASS" /><testcase id="Int32x4_constructor/2" purpose="Check if int32x4 object can be creat successful./2" result="PASS" /><testcase id="Int32x4_constructor/3" purpose="Check if int32x4 object can be creat successful./3" result="PASS" /><testcase id="Int32x4_constructor/4" purpose="Check if int32x4 object can be creat successful./4" result="PASS" /><testcase id="Int32x4_constructor/5" purpose="Check if int32x4 object can be creat successful./5" result="PASS" /><testcase id="Int32x4_constructor/6" purpose="Check if int32x4 object can be creat successful./6" result="PASS" /><testcase id="Int32x4_flagW/1" purpose="Check if the flagW of int32x4 object can be got and type of boolean./1" result="PASS" /><testcase id="Int32x4_flagW/2" purpose="Check if the flagW of int32x4 object can be got and type of boolean./2" result="PASS" /><testcase id="Int32x4_flagX/1" purpose="Check if the flagX of int32x4 object can be got and type of boolean./1" result="PASS" /><testcase id="Int32x4_flagX/2" purpose="Check if the flagX of int32x4 object can be got and type of boolean./2" result="PASS" /><testcase id="Int32x4_flagY/1" purpose="Check if the flagY of int32x4 object can be got and type of boolean./1" result="PASS" /><testcase id="Int32x4_flagY/2" purpose="Check if the flagY of int32x4 object can be got and type of boolean./2" result="PASS" /><testcase id="Int32x4_flagZ/1" purpose="Check if the flagZ of int32x4 object can be got and type of boolean./1" result="PASS" /><testcase id="Int32x4_flagZ/2" purpose="Check if the flagZ of int32x4 object can be got and type of boolean./2" result="PASS" /><testcase id="Int32x4_fromFloat32x4/1" purpose="Check if the fromFloat32x4 method of int32x4 is valid./1" result="PASS" /><testcase id="Int32x4_fromFloat32x4/2" purpose="Check if the fromFloat32x4 method of int32x4 is valid./2" result="PASS" /><testcase id="Int32x4_fromFloat32x4/3" purpose="Check if the fromFloat32x4 method of int32x4 is valid./3" result="PASS" /><testcase id="Int32x4_fromFloat32x4/4" purpose="Check if the fromFloat32x4 method of int32x4 is valid./4" result="PASS" /><testcase id="Int32x4_fromFloat32x4Bits/1" purpose="Check if the fromFloat32x4Bits method of int32x4 is valid./1" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4148 XWALK-4148]]</testcase><testcase id="Int32x4_fromFloat32x4Bits/2" purpose="Check if the fromFloat32x4Bits method of int32x4 is valid./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4148 XWALK-4148]]</testcase><testcase id="Int32x4_fromFloat32x4Bits/3" purpose="Check if the fromFloat32x4Bits method of int32x4 is valid./3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4148 XWALK-4148]]</testcase><testcase id="Int32x4_fromFloat32x4Bits/4" purpose="Check if the fromFloat32x4Bits method of int32x4 is valid./4" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4148 XWALK-4148]]</testcase><testcase id="Int32x4_fromFloat64x2/1" purpose="Check if the fromFloat64x2 method of int32x4 is valid./1" result="PASS" /><testcase id="Int32x4_fromFloat64x2/2" purpose="Check if the fromFloat64x2 method of int32x4 is valid./2" result="PASS" /><testcase id="Int32x4_fromFloat64x2/3" purpose="Check if the fromFloat64x2 method of int32x4 is valid./3" result="PASS" /><testcase id="Int32x4_fromFloat64x2/4" purpose="Check if the fromFloat64x2 method of int32x4 is valid./4" result="PASS" /><testcase id="Int32x4_fromFloat64x2Bits/1" purpose="Check if the fromFloat64x2Bits method of int32x4 is valid./1" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="Int32x4_fromFloat64x2Bits/2" purpose="Check if the fromFloat64x2Bits method of int32x4 is valid./2" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="Int32x4_fromFloat64x2Bits/3" purpose="Check if the fromFloat64x2Bits method of int32x4 is valid./3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="Int32x4_fromFloat64x2Bits/4" purpose="Check if the fromFloat64x2Bits method of int32x4 is valid./4" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4222 XWALK-4222]]</testcase><testcase id="Int32x4_getW/1" purpose="Check if the w value of int32x4 object can be got./1" result="PASS" /><testcase id="Int32x4_getW/2" purpose="Check if the w value of int32x4 object can be got./2" result="PASS" /><testcase id="Int32x4_getX/1" purpose="Check if the x value of int32x4 object can be got./1" result="PASS" /><testcase id="Int32x4_getX/2" purpose="Check if the x value of int32x4 object can be got./2" result="PASS" /><testcase id="Int32x4_getY/1" purpose="Check if the y value of int32x4 object can be got./1" result="PASS" /><testcase id="Int32x4_getY/2" purpose="Check if the y value of int32x4 object can be got./2" result="PASS" /><testcase id="Int32x4_getZ/1" purpose="Check if the z value of int32x4 object can be got./1" result="PASS" /><testcase id="Int32x4_getZ/2" purpose="Check if the z value of int32x4 object can be got./2" result="PASS" /><testcase id="int32x4_load/1" purpose="Check if the load method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_load/10" purpose="Check if the load method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_load/11" purpose="Check if the load method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_load/12" purpose="Check if the load method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_load/13" purpose="Check if the load method of int32x4 is valid./13" result="PASS" /><testcase id="int32x4_load/14" purpose="Check if the load method of int32x4 is valid./14" result="PASS" /><testcase id="int32x4_load/15" purpose="Check if the load method of int32x4 is valid./15" result="PASS" /><testcase id="int32x4_load/16" purpose="Check if the load method of int32x4 is valid./16" result="PASS" /><testcase id="int32x4_load/17" purpose="Check if the load method of int32x4 is valid./17" result="PASS" /><testcase id="int32x4_load/18" purpose="Check if the load method of int32x4 is valid./18" result="PASS" /><testcase id="int32x4_load/19" purpose="Check if the load method of int32x4 is valid./19" result="PASS" /><testcase id="int32x4_load/2" purpose="Check if the load method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_load/20" purpose="Check if the load method of int32x4 is valid./20" result="PASS" /><testcase id="int32x4_load/3" purpose="Check if the load method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_load/4" purpose="Check if the load method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_load/5" purpose="Check if the load method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_load/6" purpose="Check if the load method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_load/7" purpose="Check if the load method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_load/8" purpose="Check if the load method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_load/9" purpose="Check if the load method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_loadX/1" purpose="Check if the loadX method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_loadX/10" purpose="Check if the loadX method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_loadX/11" purpose="Check if the loadX method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_loadX/12" purpose="Check if the loadX method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_loadX/13" purpose="Check if the loadX method of int32x4 is valid./13" result="PASS" /><testcase id="int32x4_loadX/14" purpose="Check if the loadX method of int32x4 is valid./14" result="PASS" /><testcase id="int32x4_loadX/15" purpose="Check if the loadX method of int32x4 is valid./15" result="PASS" /><testcase id="int32x4_loadX/16" purpose="Check if the loadX method of int32x4 is valid./16" result="PASS" /><testcase id="int32x4_loadX/17" purpose="Check if the loadX method of int32x4 is valid./17" result="PASS" /><testcase id="int32x4_loadX/18" purpose="Check if the loadX method of int32x4 is valid./18" result="PASS" /><testcase id="int32x4_loadX/19" purpose="Check if the loadX method of int32x4 is valid./19" result="PASS" /><testcase id="int32x4_loadX/2" purpose="Check if the loadX method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_loadX/20" purpose="Check if the loadX method of int32x4 is valid./20" result="PASS" /><testcase id="int32x4_loadX/21" purpose="Check if the loadX method of int32x4 is valid./21" result="PASS" /><testcase id="int32x4_loadX/22" purpose="Check if the loadX method of int32x4 is valid./22" result="PASS" /><testcase id="int32x4_loadX/23" purpose="Check if the loadX method of int32x4 is valid./23" result="PASS" /><testcase id="int32x4_loadX/24" purpose="Check if the loadX method of int32x4 is valid./24" result="PASS" /><testcase id="int32x4_loadX/25" purpose="Check if the loadX method of int32x4 is valid./25" result="PASS" /><testcase id="int32x4_loadX/26" purpose="Check if the loadX method of int32x4 is valid./26" result="PASS" /><testcase id="int32x4_loadX/27" purpose="Check if the loadX method of int32x4 is valid./27" result="PASS" /><testcase id="int32x4_loadX/28" purpose="Check if the loadX method of int32x4 is valid./28" result="PASS" /><testcase id="int32x4_loadX/29" purpose="Check if the loadX method of int32x4 is valid./29" result="PASS" /><testcase id="int32x4_loadX/3" purpose="Check if the loadX method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_loadX/30" purpose="Check if the loadX method of int32x4 is valid./30" result="PASS" /><testcase id="int32x4_loadX/31" purpose="Check if the loadX method of int32x4 is valid./31" result="PASS" /><testcase id="int32x4_loadX/32" purpose="Check if the loadX method of int32x4 is valid./32" result="PASS" /><testcase id="int32x4_loadX/4" purpose="Check if the loadX method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_loadX/5" purpose="Check if the loadX method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_loadX/6" purpose="Check if the loadX method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_loadX/7" purpose="Check if the loadX method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_loadX/8" purpose="Check if the loadX method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_loadX/9" purpose="Check if the loadX method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_loadXY/1" purpose="Check if the loadXY method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_loadXY/10" purpose="Check if the loadXY method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_loadXY/11" purpose="Check if the loadXY method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_loadXY/12" purpose="Check if the loadXY method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_loadXY/13" purpose="Check if the loadXY method of int32x4 is valid./13" result="PASS" /><testcase id="int32x4_loadXY/14" purpose="Check if the loadXY method of int32x4 is valid./14" result="PASS" /><testcase id="int32x4_loadXY/15" purpose="Check if the loadXY method of int32x4 is valid./15" result="PASS" /><testcase id="int32x4_loadXY/16" purpose="Check if the loadXY method of int32x4 is valid./16" result="PASS" /><testcase id="int32x4_loadXY/17" purpose="Check if the loadXY method of int32x4 is valid./17" result="PASS" /><testcase id="int32x4_loadXY/18" purpose="Check if the loadXY method of int32x4 is valid./18" result="PASS" /><testcase id="int32x4_loadXY/19" purpose="Check if the loadXY method of int32x4 is valid./19" result="PASS" /><testcase id="int32x4_loadXY/2" purpose="Check if the loadXY method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_loadXY/20" purpose="Check if the loadXY method of int32x4 is valid./20" result="PASS" /><testcase id="int32x4_loadXY/21" purpose="Check if the loadXY method of int32x4 is valid./21" result="PASS" /><testcase id="int32x4_loadXY/22" purpose="Check if the loadXY method of int32x4 is valid./22" result="PASS" /><testcase id="int32x4_loadXY/23" purpose="Check if the loadXY method of int32x4 is valid./23" result="PASS" /><testcase id="int32x4_loadXY/24" purpose="Check if the loadXY method of int32x4 is valid./24" result="PASS" /><testcase id="int32x4_loadXY/25" purpose="Check if the loadXY method of int32x4 is valid./25" result="PASS" /><testcase id="int32x4_loadXY/26" purpose="Check if the loadXY method of int32x4 is valid./26" result="PASS" /><testcase id="int32x4_loadXY/27" purpose="Check if the loadXY method of int32x4 is valid./27" result="PASS" /><testcase id="int32x4_loadXY/28" purpose="Check if the loadXY method of int32x4 is valid./28" result="PASS" /><testcase id="int32x4_loadXY/3" purpose="Check if the loadXY method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_loadXY/4" purpose="Check if the loadXY method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_loadXY/5" purpose="Check if the loadXY method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_loadXY/6" purpose="Check if the loadXY method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_loadXY/7" purpose="Check if the loadXY method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_loadXY/8" purpose="Check if the loadXY method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_loadXY/9" purpose="Check if the loadXY method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_loadXYZ/1" purpose="Check if the loadXYZ method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_loadXYZ/10" purpose="Check if the loadXYZ method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_loadXYZ/11" purpose="Check if the loadXYZ method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_loadXYZ/12" purpose="Check if the loadXYZ method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_loadXYZ/13" purpose="Check if the loadXYZ method of int32x4 is valid./13" result="PASS" /><testcase id="int32x4_loadXYZ/14" purpose="Check if the loadXYZ method of int32x4 is valid./14" result="PASS" /><testcase id="int32x4_loadXYZ/15" purpose="Check if the loadXYZ method of int32x4 is valid./15" result="PASS" /><testcase id="int32x4_loadXYZ/16" purpose="Check if the loadXYZ method of int32x4 is valid./16" result="PASS" /><testcase id="int32x4_loadXYZ/17" purpose="Check if the loadXYZ method of int32x4 is valid./17" result="PASS" /><testcase id="int32x4_loadXYZ/18" purpose="Check if the loadXYZ method of int32x4 is valid./18" result="PASS" /><testcase id="int32x4_loadXYZ/19" purpose="Check if the loadXYZ method of int32x4 is valid./19" result="PASS" /><testcase id="int32x4_loadXYZ/2" purpose="Check if the loadXYZ method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_loadXYZ/20" purpose="Check if the loadXYZ method of int32x4 is valid./20" result="PASS" /><testcase id="int32x4_loadXYZ/21" purpose="Check if the loadXYZ method of int32x4 is valid./21" result="PASS" /><testcase id="int32x4_loadXYZ/22" purpose="Check if the loadXYZ method of int32x4 is valid./22" result="PASS" /><testcase id="int32x4_loadXYZ/23" purpose="Check if the loadXYZ method of int32x4 is valid./23" result="PASS" /><testcase id="int32x4_loadXYZ/24" purpose="Check if the loadXYZ method of int32x4 is valid./24" result="PASS" /><testcase id="int32x4_loadXYZ/25" purpose="Check if the loadXYZ method of int32x4 is valid./25" result="PASS" /><testcase id="int32x4_loadXYZ/26" purpose="Check if the loadXYZ method of int32x4 is valid./26" result="PASS" /><testcase id="int32x4_loadXYZ/27" purpose="Check if the loadXYZ method of int32x4 is valid./27" result="PASS" /><testcase id="int32x4_loadXYZ/28" purpose="Check if the loadXYZ method of int32x4 is valid./28" result="PASS" /><testcase id="int32x4_loadXYZ/3" purpose="Check if the loadXYZ method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_loadXYZ/4" purpose="Check if the loadXYZ method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_loadXYZ/5" purpose="Check if the loadXYZ method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_loadXYZ/6" purpose="Check if the loadXYZ method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_loadXYZ/7" purpose="Check if the loadXYZ method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_loadXYZ/8" purpose="Check if the loadXYZ method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_loadXYZ/9" purpose="Check if the loadXYZ method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_loadXYZ_exceptions/1" purpose="Check if the loadXYZ method of int32x4 throw exception noramlly./1" result="PASS" /><testcase id="int32x4_loadXYZ_exceptions/2" purpose="Check if the loadXYZ method of int32x4 throw exception noramlly./2" result="PASS" /><testcase id="int32x4_loadXYZ_exceptions/3" purpose="Check if the loadXYZ method of int32x4 throw exception noramlly./3" result="PASS" /><testcase id="int32x4_loadXYZ_exceptions/4" purpose="Check if the loadXYZ method of int32x4 throw exception noramlly./4" result="PASS" /><testcase id="int32x4_loadXY_exceptions/1" purpose="Check if the loadXY method of int32x4 throw exception noramlly./1" result="PASS" /><testcase id="int32x4_loadXY_exceptions/2" purpose="Check if the loadXY method of int32x4 throw exception noramlly./2" result="PASS" /><testcase id="int32x4_loadXY_exceptions/3" purpose="Check if the loadXY method of int32x4 throw exception noramlly./3" result="PASS" /><testcase id="int32x4_loadXY_exceptions/4" purpose="Check if the loadXY method of int32x4 throw exception noramlly./4" result="PASS" /><testcase id="int32x4_loadX_exceptions/1" purpose="Check if the loadX method of int32x4 throw exception noramlly./1" result="PASS" /><testcase id="int32x4_loadX_exceptions/2" purpose="Check if the loadX method of int32x4 throw exception noramlly./2" result="PASS" /><testcase id="int32x4_loadX_exceptions/3" purpose="Check if the loadX method of int32x4 throw exception noramlly./3" result="PASS" /><testcase id="int32x4_loadX_exceptions/4" purpose="Check if the loadX method of int32x4 throw exception noramlly./4" result="PASS" /><testcase id="int32x4_load_exceptions/1" purpose="Check if the load method of int32x4 throw exception noramlly./1" result="PASS" /><testcase id="int32x4_load_exceptions/2" purpose="Check if the load method of int32x4 throw exception noramlly./2" result="PASS" /><testcase id="int32x4_load_exceptions/3" purpose="Check if the load method of int32x4 throw exception noramlly./3" result="PASS" /><testcase id="int32x4_load_exceptions/4" purpose="Check if the load method of int32x4 throw exception noramlly./4" result="PASS" /><testcase id="int32x4_mul/1" purpose="Check int32x4 mul (0, 4, 4)/1" result="PASS" /><testcase id="int32x4_mul/2" purpose="Check int32x4 mul (0, 4, 4)/2" result="PASS" /><testcase id="int32x4_mul/3" purpose="Check int32x4 mul (0, 4, 4)/3" result="PASS" /><testcase id="int32x4_mul/4" purpose="Check int32x4 mul (0, 4, 4)/4" result="PASS" /><testcase id="int32x4_neg/1" purpose="Check int32x4 neg (0, 8, 8)/1" result="PASS" /><testcase id="int32x4_neg/2" purpose="Check int32x4 neg (0, 8, 8)/2" result="PASS" /><testcase id="int32x4_neg/3" purpose="Check int32x4 neg (0, 8, 8)/3" result="PASS" /><testcase id="int32x4_neg/4" purpose="Check int32x4 neg (0, 8, 8)/4" result="PASS" /><testcase id="int32x4_neg/5" purpose="Check int32x4 neg (0, 8, 8)/5" result="PASS" /><testcase id="int32x4_neg/6" purpose="Check int32x4 neg (0, 8, 8)/6" result="PASS" /><testcase id="int32x4_neg/7" purpose="Check int32x4 neg (0, 8, 8)/7" result="PASS" /><testcase id="int32x4_neg/8" purpose="Check int32x4 neg (0, 8, 8)/8" result="PASS" /><testcase id="int32x4_or/1" purpose="Check int32x4 or (0, 8, 8)/1" result="PASS" /><testcase id="int32x4_or/2" purpose="Check int32x4 or (0, 8, 8)/2" result="PASS" /><testcase id="int32x4_or/3" purpose="Check int32x4 or (0, 8, 8)/3" result="PASS" /><testcase id="int32x4_or/4" purpose="Check int32x4 or (0, 8, 8)/4" result="PASS" /><testcase id="int32x4_or/5" purpose="Check int32x4 or (0, 8, 8)/5" result="PASS" /><testcase id="int32x4_or/6" purpose="Check int32x4 or (0, 8, 8)/6" result="PASS" /><testcase id="int32x4_or/7" purpose="Check int32x4 or (0, 8, 8)/7" result="PASS" /><testcase id="int32x4_or/8" purpose="Check int32x4 or (0, 8, 8)/8" result="PASS" /><testcase id="int32x4_overaligned_load/1" purpose="Check if the overaligned load method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_overaligned_load/10" purpose="Check if the overaligned load method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_overaligned_load/11" purpose="Check if the overaligned load method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_overaligned_load/12" purpose="Check if the overaligned load method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_overaligned_load/2" purpose="Check if the overaligned load method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_overaligned_load/3" purpose="Check if the overaligned load method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_overaligned_load/4" purpose="Check if the overaligned load method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_overaligned_load/5" purpose="Check if the overaligned load method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_overaligned_load/6" purpose="Check if the overaligned load method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_overaligned_load/7" purpose="Check if the overaligned load method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_overaligned_load/8" purpose="Check if the overaligned load method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_overaligned_load/9" purpose="Check if the overaligned load method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_overaligned_loadX/1" purpose="Check if the overaligned loadX method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_overaligned_loadX/10" purpose="Check if the overaligned loadX method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_overaligned_loadX/11" purpose="Check if the overaligned loadX method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_overaligned_loadX/12" purpose="Check if the overaligned loadX method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_overaligned_loadX/13" purpose="Check if the overaligned loadX method of int32x4 is valid./13" result="PASS" /><testcase id="int32x4_overaligned_loadX/14" purpose="Check if the overaligned loadX method of int32x4 is valid./14" result="PASS" /><testcase id="int32x4_overaligned_loadX/15" purpose="Check if the overaligned loadX method of int32x4 is valid./15" result="PASS" /><testcase id="int32x4_overaligned_loadX/16" purpose="Check if the overaligned loadX method of int32x4 is valid./16" result="PASS" /><testcase id="int32x4_overaligned_loadX/17" purpose="Check if the overaligned loadX method of int32x4 is valid./17" result="PASS" /><testcase id="int32x4_overaligned_loadX/18" purpose="Check if the overaligned loadX method of int32x4 is valid./18" result="PASS" /><testcase id="int32x4_overaligned_loadX/19" purpose="Check if the overaligned loadX method of int32x4 is valid./19" result="PASS" /><testcase id="int32x4_overaligned_loadX/2" purpose="Check if the overaligned loadX method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_overaligned_loadX/20" purpose="Check if the overaligned loadX method of int32x4 is valid./20" result="PASS" /><testcase id="int32x4_overaligned_loadX/21" purpose="Check if the overaligned loadX method of int32x4 is valid./21" result="PASS" /><testcase id="int32x4_overaligned_loadX/22" purpose="Check if the overaligned loadX method of int32x4 is valid./22" result="PASS" /><testcase id="int32x4_overaligned_loadX/23" purpose="Check if the overaligned loadX method of int32x4 is valid./23" result="PASS" /><testcase id="int32x4_overaligned_loadX/24" purpose="Check if the overaligned loadX method of int32x4 is valid./24" result="PASS" /><testcase id="int32x4_overaligned_loadX/25" purpose="Check if the overaligned loadX method of int32x4 is valid./25" result="PASS" /><testcase id="int32x4_overaligned_loadX/26" purpose="Check if the overaligned loadX method of int32x4 is valid./26" result="PASS" /><testcase id="int32x4_overaligned_loadX/27" purpose="Check if the overaligned loadX method of int32x4 is valid./27" result="PASS" /><testcase id="int32x4_overaligned_loadX/28" purpose="Check if the overaligned loadX method of int32x4 is valid./28" result="PASS" /><testcase id="int32x4_overaligned_loadX/29" purpose="Check if the overaligned loadX method of int32x4 is valid./29" result="PASS" /><testcase id="int32x4_overaligned_loadX/3" purpose="Check if the overaligned loadX method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_overaligned_loadX/30" purpose="Check if the overaligned loadX method of int32x4 is valid./30" result="PASS" /><testcase id="int32x4_overaligned_loadX/31" purpose="Check if the overaligned loadX method of int32x4 is valid./31" result="PASS" /><testcase id="int32x4_overaligned_loadX/32" purpose="Check if the overaligned loadX method of int32x4 is valid./32" result="PASS" /><testcase id="int32x4_overaligned_loadX/4" purpose="Check if the overaligned loadX method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_overaligned_loadX/5" purpose="Check if the overaligned loadX method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_overaligned_loadX/6" purpose="Check if the overaligned loadX method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_overaligned_loadX/7" purpose="Check if the overaligned loadX method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_overaligned_loadX/8" purpose="Check if the overaligned loadX method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_overaligned_loadX/9" purpose="Check if the overaligned loadX method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_overaligned_loadXY/1" purpose="Check if the overaligned loadXY method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_overaligned_loadXY/10" purpose="Check if the overaligned loadXY method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_overaligned_loadXY/11" purpose="Check if the overaligned loadXY method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_overaligned_loadXY/12" purpose="Check if the overaligned loadXY method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_overaligned_loadXY/13" purpose="Check if the overaligned loadXY method of int32x4 is valid./13" result="PASS" /><testcase id="int32x4_overaligned_loadXY/14" purpose="Check if the overaligned loadXY method of int32x4 is valid./14" result="PASS" /><testcase id="int32x4_overaligned_loadXY/15" purpose="Check if the overaligned loadXY method of int32x4 is valid./15" result="PASS" /><testcase id="int32x4_overaligned_loadXY/16" purpose="Check if the overaligned loadXY method of int32x4 is valid./16" result="PASS" /><testcase id="int32x4_overaligned_loadXY/2" purpose="Check if the overaligned loadXY method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_overaligned_loadXY/3" purpose="Check if the overaligned loadXY method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_overaligned_loadXY/4" purpose="Check if the overaligned loadXY method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_overaligned_loadXY/5" purpose="Check if the overaligned loadXY method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_overaligned_loadXY/6" purpose="Check if the overaligned loadXY method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_overaligned_loadXY/7" purpose="Check if the overaligned loadXY method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_overaligned_loadXY/8" purpose="Check if the overaligned loadXY method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_overaligned_loadXY/9" purpose="Check if the overaligned loadXY method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/1" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/10" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/11" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/12" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/13" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./13" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/14" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./14" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/15" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./15" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/16" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./16" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/2" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/3" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/4" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/5" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/6" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/7" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/8" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_overaligned_loadXYZ/9" purpose="Check if the overaligned loadXYZ method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_overaligned_store/1" purpose="Check if the overaligned store method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_overaligned_store/10" purpose="Check if the overaligned store method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_overaligned_store/11" purpose="Check if the overaligned store method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_overaligned_store/12" purpose="Check if the overaligned store method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_overaligned_store/2" purpose="Check if the overaligned store method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_overaligned_store/3" purpose="Check if the overaligned store method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_overaligned_store/4" purpose="Check if the overaligned store method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_overaligned_store/5" purpose="Check if the overaligned store method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_overaligned_store/6" purpose="Check if the overaligned store method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_overaligned_store/7" purpose="Check if the overaligned store method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_overaligned_store/8" purpose="Check if the overaligned store method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_overaligned_store/9" purpose="Check if the overaligned store method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_overaligned_storeX/1" purpose="Check if the overaligned storeX method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_overaligned_storeX/2" purpose="Check if the overaligned storeX method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_overaligned_storeX/3" purpose="Check if the overaligned storeX method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_overaligned_storeX/4" purpose="Check if the overaligned storeX method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_overaligned_storeXY/1" purpose="Check if the overaligned storeXY method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_overaligned_storeXY/2" purpose="Check if the overaligned storeXY method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_overaligned_storeXY/3" purpose="Check if the overaligned storeXY method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_overaligned_storeXY/4" purpose="Check if the overaligned storeXY method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_overaligned_storeXY/5" purpose="Check if the overaligned storeXY method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_overaligned_storeXY/6" purpose="Check if the overaligned storeXY method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_overaligned_storeXY/7" purpose="Check if the overaligned storeXY method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_overaligned_storeXY/8" purpose="Check if the overaligned storeXY method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/1" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/10" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/11" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/12" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/2" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/3" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/4" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/5" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/6" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/7" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/8" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_overaligned_storeXYZ/9" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_select/1" purpose="Check int32x4 select (0, 4, 4)/1" result="PASS" /><testcase id="int32x4_select/2" purpose="Check int32x4 select (0, 4, 4)/2" result="PASS" /><testcase id="int32x4_select/3" purpose="Check int32x4 select (0, 4, 4)/3" result="PASS" /><testcase id="int32x4_select/4" purpose="Check int32x4 select (0, 4, 4)/4" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/1" purpose="Check shiftLeftByScalar method of int32x4 is valid/1" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/10" purpose="Check shiftLeftByScalar method of int32x4 is valid/10" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/11" purpose="Check shiftLeftByScalar method of int32x4 is valid/11" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/12" purpose="Check shiftLeftByScalar method of int32x4 is valid/12" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/13" purpose="Check shiftLeftByScalar method of int32x4 is valid/13" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/14" purpose="Check shiftLeftByScalar method of int32x4 is valid/14" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/15" purpose="Check shiftLeftByScalar method of int32x4 is valid/15" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/16" purpose="Check shiftLeftByScalar method of int32x4 is valid/16" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/2" purpose="Check shiftLeftByScalar method of int32x4 is valid/2" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/3" purpose="Check shiftLeftByScalar method of int32x4 is valid/3" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/4" purpose="Check shiftLeftByScalar method of int32x4 is valid/4" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/5" purpose="Check shiftLeftByScalar method of int32x4 is valid/5" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/6" purpose="Check shiftLeftByScalar method of int32x4 is valid/6" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/7" purpose="Check shiftLeftByScalar method of int32x4 is valid/7" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/8" purpose="Check shiftLeftByScalar method of int32x4 is valid/8" result="PASS" /><testcase id="int32x4_shiftLeftByScalar/9" purpose="Check shiftLeftByScalar method of int32x4 is valid/9" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/1" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/1" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/10" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/10" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/11" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/11" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/12" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/12" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/13" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/13" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/14" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/14" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/15" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/15" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/16" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/16" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/2" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/2" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/3" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/3" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/4" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/4" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/5" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/5" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/6" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/6" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/7" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/7" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/8" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/8" result="PASS" /><testcase id="int32x4_shiftRightArithmeticByScalar/9" purpose="Check shiftRightArithmeticByScalar method of int32x4 is valid/9" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/1" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/1" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/10" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/10" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/11" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/11" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/12" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/12" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/13" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/13" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/14" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/14" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/15" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/15" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/16" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/16" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/2" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/2" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/3" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/3" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/4" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/4" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/5" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/5" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/6" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/6" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/7" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/7" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/8" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/8" result="PASS" /><testcase id="int32x4_shiftRightLogicalByScalar/9" purpose="Check shiftRightLogicalByScalar method of int32x4 is valid/9" result="PASS" /><testcase id="int32x4_shuffle/1" purpose="Check shuffle method of int32x4 is valid/1" result="PASS" /><testcase id="int32x4_shuffle/10" purpose="Check shuffle method of int32x4 is valid/10" result="PASS" /><testcase id="int32x4_shuffle/11" purpose="Check shuffle method of int32x4 is valid/11" result="PASS" /><testcase id="int32x4_shuffle/12" purpose="Check shuffle method of int32x4 is valid/12" result="PASS" /><testcase id="int32x4_shuffle/13" purpose="Check shuffle method of int32x4 is valid/13" result="PASS" /><testcase id="int32x4_shuffle/14" purpose="Check shuffle method of int32x4 is valid/14" result="PASS" /><testcase id="int32x4_shuffle/15" purpose="Check shuffle method of int32x4 is valid/15" result="PASS" /><testcase id="int32x4_shuffle/16" purpose="Check shuffle method of int32x4 is valid/16" result="PASS" /><testcase id="int32x4_shuffle/17" purpose="Check shuffle method of int32x4 is valid/17" result="PASS" /><testcase id="int32x4_shuffle/18" purpose="Check shuffle method of int32x4 is valid/18" result="PASS" /><testcase id="int32x4_shuffle/19" purpose="Check shuffle method of int32x4 is valid/19" result="PASS" /><testcase id="int32x4_shuffle/2" purpose="Check shuffle method of int32x4 is valid/2" result="PASS" /><testcase id="int32x4_shuffle/20" purpose="Check shuffle method of int32x4 is valid/20" result="PASS" /><testcase id="int32x4_shuffle/21" purpose="Check shuffle method of int32x4 is valid/21" result="PASS" /><testcase id="int32x4_shuffle/22" purpose="Check shuffle method of int32x4 is valid/22" result="PASS" /><testcase id="int32x4_shuffle/23" purpose="Check shuffle method of int32x4 is valid/23" result="PASS" /><testcase id="int32x4_shuffle/24" purpose="Check shuffle method of int32x4 is valid/24" result="PASS" /><testcase id="int32x4_shuffle/3" purpose="Check shuffle method of int32x4 is valid/3" result="PASS" /><testcase id="int32x4_shuffle/4" purpose="Check shuffle method of int32x4 is valid/4" result="PASS" /><testcase id="int32x4_shuffle/5" purpose="Check shuffle method of int32x4 is valid/5" result="PASS" /><testcase id="int32x4_shuffle/6" purpose="Check shuffle method of int32x4 is valid/6" result="PASS" /><testcase id="int32x4_shuffle/7" purpose="Check shuffle method of int32x4 is valid/7" result="PASS" /><testcase id="int32x4_shuffle/8" purpose="Check shuffle method of int32x4 is valid/8" result="PASS" /><testcase id="int32x4_shuffle/9" purpose="Check shuffle method of int32x4 is valid/9" result="PASS" /><testcase id="int32x4_signMask_getter/1" purpose="Check int32x4 signMask getter (0, 3, 3)/1" result="PASS" /><testcase id="int32x4_signMask_getter/2" purpose="Check int32x4 signMask getter (0, 3, 3)/2" result="PASS" /><testcase id="int32x4_signMask_getter/3" purpose="Check int32x4 signMask getter (0, 3, 3)/3" result="PASS" /><testcase id="Int32x4_splat/1" purpose="Check if the splat function of int32x4can change the parameter to specified value./1" result="PASS" /><testcase id="Int32x4_splat/2" purpose="Check if the splat function of int32x4can change the parameter to specified value./2" result="PASS" /><testcase id="Int32x4_splat/3" purpose="Check if the splat function of int32x4can change the parameter to specified value./3" result="PASS" /><testcase id="Int32x4_splat/4" purpose="Check if the splat function of int32x4can change the parameter to specified value./4" result="PASS" /><testcase id="int32x4_store/1" purpose="Check if the store method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_store/10" purpose="Check if the store method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_store/11" purpose="Check if the store method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_store/12" purpose="Check if the store method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_store/2" purpose="Check if the store method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_store/3" purpose="Check if the store method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_store/4" purpose="Check if the store method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_store/5" purpose="Check if the store method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_store/6" purpose="Check if the store method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_store/7" purpose="Check if the store method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_store/8" purpose="Check if the store method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_store/9" purpose="Check if the store method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_storeX/1" purpose="Check if the storeX method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_storeX/2" purpose="Check if the storeX method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_storeX/3" purpose="Check if the storeX method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_storeX/4" purpose="Check if the storeX method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_storeXY/1" purpose="Check if the storeXY method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_storeXY/2" purpose="Check if the storeXY method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_storeXY/3" purpose="Check if the storeXY method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_storeXY/4" purpose="Check if the storeXY method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_storeXY/5" purpose="Check if the storeXY method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_storeXY/6" purpose="Check if the storeXY method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_storeXY/7" purpose="Check if the storeXY method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_storeXY/8" purpose="Check if the storeXY method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_storeXYZ/1" purpose="Check if the storeXYZ method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_storeXYZ/2" purpose="Check if the storeXYZ method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_storeXYZ/3" purpose="Check if the storeXYZ method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_storeXYZ/4" purpose="Check if the storeXYZ method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_storeXYZ/5" purpose="Check if the storeXYZ method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_storeXYZ/6" purpose="Check if the storeXYZ method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_storeXYZ/7" purpose="Check if the storeXYZ method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_storeXYZ/8" purpose="Check if the storeXYZ method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_storeXYZ/9" purpose="Check if the storeXYZ method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_storeXYZ_exceptions/1" purpose="Check if the storeXYZ method of int32x4 throw exception noramlly./1" result="PASS" /><testcase id="int32x4_storeXYZ_exceptions/2" purpose="Check if the storeXYZ method of int32x4 throw exception noramlly./2" result="PASS" /><testcase id="int32x4_storeXYZ_exceptions/3" purpose="Check if the storeXYZ method of int32x4 throw exception noramlly./3" result="PASS" /><testcase id="int32x4_storeXYZ_exceptions/4" purpose="Check if the storeXYZ method of int32x4 throw exception noramlly./4" result="PASS" /><testcase id="int32x4_storeXYZ_exceptions/5" purpose="Check if the storeXYZ method of int32x4 throw exception noramlly./5" result="PASS" /><testcase id="int32x4_storeXY_exceptions/1" purpose="Check if the storeXY method of int32x4 throw exception noramlly./1" result="PASS" /><testcase id="int32x4_storeXY_exceptions/2" purpose="Check if the storeXY method of int32x4 throw exception noramlly./2" result="PASS" /><testcase id="int32x4_storeXY_exceptions/3" purpose="Check if the storeXY method of int32x4 throw exception noramlly./3" result="PASS" /><testcase id="int32x4_storeXY_exceptions/4" purpose="Check if the storeXY method of int32x4 throw exception noramlly./4" result="PASS" /><testcase id="int32x4_storeXY_exceptions/5" purpose="Check if the storeXY method of int32x4 throw exception noramlly./5" result="PASS" /><testcase id="int32x4_storeX_exceptions/1" purpose="Check if the storeX method of int32x4 throw exception noramlly./1" result="PASS" /><testcase id="int32x4_storeX_exceptions/2" purpose="Check if the storeX method of int32x4 throw exception noramlly./2" result="PASS" /><testcase id="int32x4_storeX_exceptions/3" purpose="Check if the storeX method of int32x4 throw exception noramlly./3" result="PASS" /><testcase id="int32x4_storeX_exceptions/4" purpose="Check if the storeX method of int32x4 throw exception noramlly./4" result="PASS" /><testcase id="int32x4_storeX_exceptions/5" purpose="Check if the storeX method of int32x4 throw exception noramlly./5" result="PASS" /><testcase id="int32x4_store_exceptions/1" purpose="Check if the store method of int32x4 throw exception noramlly./1" result="PASS" /><testcase id="int32x4_store_exceptions/2" purpose="Check if the store method of int32x4 throw exception noramlly./2" result="PASS" /><testcase id="int32x4_store_exceptions/3" purpose="Check if the store method of int32x4 throw exception noramlly./3" result="PASS" /><testcase id="int32x4_store_exceptions/4" purpose="Check if the store method of int32x4 throw exception noramlly./4" result="PASS" /><testcase id="int32x4_store_exceptions/5" purpose="Check if the store method of int32x4 throw exception noramlly./5" result="PASS" /><testcase id="int32x4_sub/1" purpose="Check int32x4 sub (0, 4, 4)/1" result="PASS" /><testcase id="int32x4_sub/2" purpose="Check int32x4 sub (0, 4, 4)/2" result="PASS" /><testcase id="int32x4_sub/3" purpose="Check int32x4 sub (0, 4, 4)/3" result="PASS" /><testcase id="int32x4_sub/4" purpose="Check int32x4 sub (0, 4, 4)/4" result="PASS" /><testcase id="int32x4_unaligned_load/1" purpose="Check if the unaligned load method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_unaligned_load/10" purpose="Check if the unaligned load method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_unaligned_load/11" purpose="Check if the unaligned load method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_unaligned_load/12" purpose="Check if the unaligned load method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_unaligned_load/13" purpose="Check if the unaligned load method of int32x4 is valid./13" result="PASS" /><testcase id="int32x4_unaligned_load/14" purpose="Check if the unaligned load method of int32x4 is valid./14" result="PASS" /><testcase id="int32x4_unaligned_load/15" purpose="Check if the unaligned load method of int32x4 is valid./15" result="PASS" /><testcase id="int32x4_unaligned_load/16" purpose="Check if the unaligned load method of int32x4 is valid./16" result="PASS" /><testcase id="int32x4_unaligned_load/17" purpose="Check if the unaligned load method of int32x4 is valid./17" result="PASS" /><testcase id="int32x4_unaligned_load/18" purpose="Check if the unaligned load method of int32x4 is valid./18" result="PASS" /><testcase id="int32x4_unaligned_load/19" purpose="Check if the unaligned load method of int32x4 is valid./19" result="PASS" /><testcase id="int32x4_unaligned_load/2" purpose="Check if the unaligned load method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_unaligned_load/20" purpose="Check if the unaligned load method of int32x4 is valid./20" result="PASS" /><testcase id="int32x4_unaligned_load/3" purpose="Check if the unaligned load method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_unaligned_load/4" purpose="Check if the unaligned load method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_unaligned_load/5" purpose="Check if the unaligned load method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_unaligned_load/6" purpose="Check if the unaligned load method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_unaligned_load/7" purpose="Check if the unaligned load method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_unaligned_load/8" purpose="Check if the unaligned load method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_unaligned_load/9" purpose="Check if the unaligned load method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_unaligned_loadX/1" purpose="Check if the unaligned loadX method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_unaligned_loadX/10" purpose="Check if the unaligned loadX method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_unaligned_loadX/11" purpose="Check if the unaligned loadX method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_unaligned_loadX/12" purpose="Check if the unaligned loadX method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_unaligned_loadX/13" purpose="Check if the unaligned loadX method of int32x4 is valid./13" result="PASS" /><testcase id="int32x4_unaligned_loadX/14" purpose="Check if the unaligned loadX method of int32x4 is valid./14" result="PASS" /><testcase id="int32x4_unaligned_loadX/15" purpose="Check if the unaligned loadX method of int32x4 is valid./15" result="PASS" /><testcase id="int32x4_unaligned_loadX/16" purpose="Check if the unaligned loadX method of int32x4 is valid./16" result="PASS" /><testcase id="int32x4_unaligned_loadX/17" purpose="Check if the unaligned loadX method of int32x4 is valid./17" result="PASS" /><testcase id="int32x4_unaligned_loadX/18" purpose="Check if the unaligned loadX method of int32x4 is valid./18" result="PASS" /><testcase id="int32x4_unaligned_loadX/19" purpose="Check if the unaligned loadX method of int32x4 is valid./19" result="PASS" /><testcase id="int32x4_unaligned_loadX/2" purpose="Check if the unaligned loadX method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_unaligned_loadX/20" purpose="Check if the unaligned loadX method of int32x4 is valid./20" result="PASS" /><testcase id="int32x4_unaligned_loadX/21" purpose="Check if the unaligned loadX method of int32x4 is valid./21" result="PASS" /><testcase id="int32x4_unaligned_loadX/22" purpose="Check if the unaligned loadX method of int32x4 is valid./22" result="PASS" /><testcase id="int32x4_unaligned_loadX/23" purpose="Check if the unaligned loadX method of int32x4 is valid./23" result="PASS" /><testcase id="int32x4_unaligned_loadX/24" purpose="Check if the unaligned loadX method of int32x4 is valid./24" result="PASS" /><testcase id="int32x4_unaligned_loadX/25" purpose="Check if the unaligned loadX method of int32x4 is valid./25" result="PASS" /><testcase id="int32x4_unaligned_loadX/26" purpose="Check if the unaligned loadX method of int32x4 is valid./26" result="PASS" /><testcase id="int32x4_unaligned_loadX/27" purpose="Check if the unaligned loadX method of int32x4 is valid./27" result="PASS" /><testcase id="int32x4_unaligned_loadX/28" purpose="Check if the unaligned loadX method of int32x4 is valid./28" result="PASS" /><testcase id="int32x4_unaligned_loadX/29" purpose="Check if the unaligned loadX method of int32x4 is valid./29" result="PASS" /><testcase id="int32x4_unaligned_loadX/3" purpose="Check if the unaligned loadX method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_unaligned_loadX/30" purpose="Check if the unaligned loadX method of int32x4 is valid./30" result="PASS" /><testcase id="int32x4_unaligned_loadX/31" purpose="Check if the unaligned loadX method of int32x4 is valid./31" result="PASS" /><testcase id="int32x4_unaligned_loadX/32" purpose="Check if the unaligned loadX method of int32x4 is valid./32" result="PASS" /><testcase id="int32x4_unaligned_loadX/4" purpose="Check if the unaligned loadX method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_unaligned_loadX/5" purpose="Check if the unaligned loadX method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_unaligned_loadX/6" purpose="Check if the unaligned loadX method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_unaligned_loadX/7" purpose="Check if the unaligned loadX method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_unaligned_loadX/8" purpose="Check if the unaligned loadX method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_unaligned_loadX/9" purpose="Check if the unaligned loadX method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_unaligned_loadXY/1" purpose="Check if the unaligned loadXY method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_unaligned_loadXY/10" purpose="Check if the unaligned loadXY method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_unaligned_loadXY/11" purpose="Check if the unaligned loadXY method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_unaligned_loadXY/12" purpose="Check if the unaligned loadXY method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_unaligned_loadXY/13" purpose="Check if the unaligned loadXY method of int32x4 is valid./13" result="PASS" /><testcase id="int32x4_unaligned_loadXY/14" purpose="Check if the unaligned loadXY method of int32x4 is valid./14" result="PASS" /><testcase id="int32x4_unaligned_loadXY/15" purpose="Check if the unaligned loadXY method of int32x4 is valid./15" result="PASS" /><testcase id="int32x4_unaligned_loadXY/16" purpose="Check if the unaligned loadXY method of int32x4 is valid./16" result="PASS" /><testcase id="int32x4_unaligned_loadXY/17" purpose="Check if the unaligned loadXY method of int32x4 is valid./17" result="PASS" /><testcase id="int32x4_unaligned_loadXY/18" purpose="Check if the unaligned loadXY method of int32x4 is valid./18" result="PASS" /><testcase id="int32x4_unaligned_loadXY/19" purpose="Check if the unaligned loadXY method of int32x4 is valid./19" result="PASS" /><testcase id="int32x4_unaligned_loadXY/2" purpose="Check if the unaligned loadXY method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_unaligned_loadXY/20" purpose="Check if the unaligned loadXY method of int32x4 is valid./20" result="PASS" /><testcase id="int32x4_unaligned_loadXY/21" purpose="Check if the unaligned loadXY method of int32x4 is valid./21" result="PASS" /><testcase id="int32x4_unaligned_loadXY/22" purpose="Check if the unaligned loadXY method of int32x4 is valid./22" result="PASS" /><testcase id="int32x4_unaligned_loadXY/23" purpose="Check if the unaligned loadXY method of int32x4 is valid./23" result="PASS" /><testcase id="int32x4_unaligned_loadXY/24" purpose="Check if the unaligned loadXY method of int32x4 is valid./24" result="PASS" /><testcase id="int32x4_unaligned_loadXY/25" purpose="Check if the unaligned loadXY method of int32x4 is valid./25" result="PASS" /><testcase id="int32x4_unaligned_loadXY/26" purpose="Check if the unaligned loadXY method of int32x4 is valid./26" result="PASS" /><testcase id="int32x4_unaligned_loadXY/27" purpose="Check if the unaligned loadXY method of int32x4 is valid./27" result="PASS" /><testcase id="int32x4_unaligned_loadXY/28" purpose="Check if the unaligned loadXY method of int32x4 is valid./28" result="PASS" /><testcase id="int32x4_unaligned_loadXY/3" purpose="Check if the unaligned loadXY method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_unaligned_loadXY/4" purpose="Check if the unaligned loadXY method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_unaligned_loadXY/5" purpose="Check if the unaligned loadXY method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_unaligned_loadXY/6" purpose="Check if the unaligned loadXY method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_unaligned_loadXY/7" purpose="Check if the unaligned loadXY method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_unaligned_loadXY/8" purpose="Check if the unaligned loadXY method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_unaligned_loadXY/9" purpose="Check if the unaligned loadXY method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/1" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/10" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/11" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/12" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/13" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./13" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/14" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./14" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/15" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./15" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/16" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./16" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/17" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./17" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/18" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./18" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/19" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./19" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/2" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/20" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./20" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/21" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./21" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/22" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./22" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/23" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./23" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/24" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./24" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/25" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./25" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/26" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./26" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/27" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./27" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/28" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./28" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/3" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/4" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/5" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/6" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/7" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/8" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_unaligned_loadXYZ/9" purpose="Check if the unaligned loadXYZ method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_unaligned_store/1" purpose="Check if the unaligned store method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_unaligned_store/10" purpose="Check if the unaligned store method of int32x4 is valid./10" result="PASS" /><testcase id="int32x4_unaligned_store/11" purpose="Check if the unaligned store method of int32x4 is valid./11" result="PASS" /><testcase id="int32x4_unaligned_store/12" purpose="Check if the unaligned store method of int32x4 is valid./12" result="PASS" /><testcase id="int32x4_unaligned_store/2" purpose="Check if the unaligned store method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_unaligned_store/3" purpose="Check if the unaligned store method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_unaligned_store/4" purpose="Check if the unaligned store method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_unaligned_store/5" purpose="Check if the unaligned store method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_unaligned_store/6" purpose="Check if the unaligned store method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_unaligned_store/7" purpose="Check if the unaligned store method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_unaligned_store/8" purpose="Check if the unaligned store method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_unaligned_store/9" purpose="Check if the unaligned store method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_unaligned_storeX/1" purpose="Check if the unaligned storeX method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_unaligned_storeX/2" purpose="Check if the unaligned storeX method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_unaligned_storeX/3" purpose="Check if the unaligned storeX method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_unaligned_storeX/4" purpose="Check if the unaligned storeX method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_unaligned_storeXY/1" purpose="Check if the unaligned storeXY method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_unaligned_storeXY/2" purpose="Check if the unaligned storeXY method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_unaligned_storeXY/3" purpose="Check if the unaligned storeXY method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_unaligned_storeXY/4" purpose="Check if the unaligned storeXY method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_unaligned_storeXY/5" purpose="Check if the unaligned storeXY method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_unaligned_storeXY/6" purpose="Check if the unaligned storeXY method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_unaligned_storeXY/7" purpose="Check if the unaligned storeXY method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_unaligned_storeXY/8" purpose="Check if the unaligned storeXY method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_unaligned_storeXYZ/1" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./1" result="PASS" /><testcase id="int32x4_unaligned_storeXYZ/2" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./2" result="PASS" /><testcase id="int32x4_unaligned_storeXYZ/3" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./3" result="PASS" /><testcase id="int32x4_unaligned_storeXYZ/4" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./4" result="PASS" /><testcase id="int32x4_unaligned_storeXYZ/5" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./5" result="PASS" /><testcase id="int32x4_unaligned_storeXYZ/6" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./6" result="PASS" /><testcase id="int32x4_unaligned_storeXYZ/7" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./7" result="PASS" /><testcase id="int32x4_unaligned_storeXYZ/8" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./8" result="PASS" /><testcase id="int32x4_unaligned_storeXYZ/9" purpose="Check if the overaligned storeXYZ method of int32x4 is valid./9" result="PASS" /><testcase id="int32x4_vector_getters/1" purpose="Check swizzle method of int32x4 is valid/1" result="PASS" /><testcase id="int32x4_vector_getters/10" purpose="Check swizzle method of int32x4 is valid/10" result="PASS" /><testcase id="int32x4_vector_getters/11" purpose="Check swizzle method of int32x4 is valid/11" result="PASS" /><testcase id="int32x4_vector_getters/12" purpose="Check swizzle method of int32x4 is valid/12" result="PASS" /><testcase id="int32x4_vector_getters/13" purpose="Check swizzle method of int32x4 is valid/13" result="PASS" /><testcase id="int32x4_vector_getters/14" purpose="Check swizzle method of int32x4 is valid/14" result="PASS" /><testcase id="int32x4_vector_getters/15" purpose="Check swizzle method of int32x4 is valid/15" result="PASS" /><testcase id="int32x4_vector_getters/16" purpose="Check swizzle method of int32x4 is valid/16" result="PASS" /><testcase id="int32x4_vector_getters/17" purpose="Check swizzle method of int32x4 is valid/17" result="PASS" /><testcase id="int32x4_vector_getters/18" purpose="Check swizzle method of int32x4 is valid/18" result="PASS" /><testcase id="int32x4_vector_getters/19" purpose="Check swizzle method of int32x4 is valid/19" result="PASS" /><testcase id="int32x4_vector_getters/2" purpose="Check swizzle method of int32x4 is valid/2" result="PASS" /><testcase id="int32x4_vector_getters/20" purpose="Check swizzle method of int32x4 is valid/20" result="PASS" /><testcase id="int32x4_vector_getters/3" purpose="Check swizzle method of int32x4 is valid/3" result="PASS" /><testcase id="int32x4_vector_getters/4" purpose="Check swizzle method of int32x4 is valid/4" result="PASS" /><testcase id="int32x4_vector_getters/5" purpose="Check swizzle method of int32x4 is valid/5" result="PASS" /><testcase id="int32x4_vector_getters/6" purpose="Check swizzle method of int32x4 is valid/6" result="PASS" /><testcase id="int32x4_vector_getters/7" purpose="Check swizzle method of int32x4 is valid/7" result="PASS" /><testcase id="int32x4_vector_getters/8" purpose="Check swizzle method of int32x4 is valid/8" result="PASS" /><testcase id="int32x4_vector_getters/9" purpose="Check swizzle method of int32x4 is valid/9" result="PASS" /><testcase id="int32x4_withFlagW/1" purpose="Check int32x4 withFlagW (0, 12, 12)/1" result="PASS" /><testcase id="int32x4_withFlagW/10" purpose="Check int32x4 withFlagW (0, 12, 12)/10" result="PASS" /><testcase id="int32x4_withFlagW/11" purpose="Check int32x4 withFlagW (0, 12, 12)/11" result="PASS" /><testcase id="int32x4_withFlagW/12" purpose="Check int32x4 withFlagW (0, 12, 12)/12" result="PASS" /><testcase id="int32x4_withFlagW/2" purpose="Check int32x4 withFlagW (0, 12, 12)/2" result="PASS" /><testcase id="int32x4_withFlagW/3" purpose="Check int32x4 withFlagW (0, 12, 12)/3" result="PASS" /><testcase id="int32x4_withFlagW/4" purpose="Check int32x4 withFlagW (0, 12, 12)/4" result="PASS" /><testcase id="int32x4_withFlagW/5" purpose="Check int32x4 withFlagW (0, 12, 12)/5" result="PASS" /><testcase id="int32x4_withFlagW/6" purpose="Check int32x4 withFlagW (0, 12, 12)/6" result="PASS" /><testcase id="int32x4_withFlagW/7" purpose="Check int32x4 withFlagW (0, 12, 12)/7" result="PASS" /><testcase id="int32x4_withFlagW/8" purpose="Check int32x4 withFlagW (0, 12, 12)/8" result="PASS" /><testcase id="int32x4_withFlagW/9" purpose="Check int32x4 withFlagW (0, 12, 12)/9" result="PASS" /><testcase id="int32x4_withFlagX/1" purpose="Check int32x4 withFlagX (0, 12, 12)/1" result="PASS" /><testcase id="int32x4_withFlagX/10" purpose="Check int32x4 withFlagX (0, 12, 12)/10" result="PASS" /><testcase id="int32x4_withFlagX/11" purpose="Check int32x4 withFlagX (0, 12, 12)/11" result="PASS" /><testcase id="int32x4_withFlagX/12" purpose="Check int32x4 withFlagX (0, 12, 12)/12" result="PASS" /><testcase id="int32x4_withFlagX/2" purpose="Check int32x4 withFlagX (0, 12, 12)/2" result="PASS" /><testcase id="int32x4_withFlagX/3" purpose="Check int32x4 withFlagX (0, 12, 12)/3" result="PASS" /><testcase id="int32x4_withFlagX/4" purpose="Check int32x4 withFlagX (0, 12, 12)/4" result="PASS" /><testcase id="int32x4_withFlagX/5" purpose="Check int32x4 withFlagX (0, 12, 12)/5" result="PASS" /><testcase id="int32x4_withFlagX/6" purpose="Check int32x4 withFlagX (0, 12, 12)/6" result="PASS" /><testcase id="int32x4_withFlagX/7" purpose="Check int32x4 withFlagX (0, 12, 12)/7" result="PASS" /><testcase id="int32x4_withFlagX/8" purpose="Check int32x4 withFlagX (0, 12, 12)/8" result="PASS" /><testcase id="int32x4_withFlagX/9" purpose="Check int32x4 withFlagX (0, 12, 12)/9" result="PASS" /><testcase id="int32x4_withFlagY/1" purpose="Check int32x4 withFlagY (0, 12, 12)/1" result="PASS" /><testcase id="int32x4_withFlagY/10" purpose="Check int32x4 withFlagY (0, 12, 12)/10" result="PASS" /><testcase id="int32x4_withFlagY/11" purpose="Check int32x4 withFlagY (0, 12, 12)/11" result="PASS" /><testcase id="int32x4_withFlagY/12" purpose="Check int32x4 withFlagY (0, 12, 12)/12" result="PASS" /><testcase id="int32x4_withFlagY/2" purpose="Check int32x4 withFlagY (0, 12, 12)/2" result="PASS" /><testcase id="int32x4_withFlagY/3" purpose="Check int32x4 withFlagY (0, 12, 12)/3" result="PASS" /><testcase id="int32x4_withFlagY/4" purpose="Check int32x4 withFlagY (0, 12, 12)/4" result="PASS" /><testcase id="int32x4_withFlagY/5" purpose="Check int32x4 withFlagY (0, 12, 12)/5" result="PASS" /><testcase id="int32x4_withFlagY/6" purpose="Check int32x4 withFlagY (0, 12, 12)/6" result="PASS" /><testcase id="int32x4_withFlagY/7" purpose="Check int32x4 withFlagY (0, 12, 12)/7" result="PASS" /><testcase id="int32x4_withFlagY/8" purpose="Check int32x4 withFlagY (0, 12, 12)/8" result="PASS" /><testcase id="int32x4_withFlagY/9" purpose="Check int32x4 withFlagY (0, 12, 12)/9" result="PASS" /><testcase id="int32x4_withFlagZ/1" purpose="Check int32x4 withFlagZ (0, 13, 13)/1" result="PASS" /><testcase id="int32x4_withFlagZ/10" purpose="Check int32x4 withFlagZ (0, 13, 13)/10" result="PASS" /><testcase id="int32x4_withFlagZ/11" purpose="Check int32x4 withFlagZ (0, 13, 13)/11" result="PASS" /><testcase id="int32x4_withFlagZ/12" purpose="Check int32x4 withFlagZ (0, 13, 13)/12" result="PASS" /><testcase id="int32x4_withFlagZ/13" purpose="Check int32x4 withFlagZ (0, 13, 13)/13" result="PASS" /><testcase id="int32x4_withFlagZ/2" purpose="Check int32x4 withFlagZ (0, 13, 13)/2" result="PASS" /><testcase id="int32x4_withFlagZ/3" purpose="Check int32x4 withFlagZ (0, 13, 13)/3" result="PASS" /><testcase id="int32x4_withFlagZ/4" purpose="Check int32x4 withFlagZ (0, 13, 13)/4" result="PASS" /><testcase id="int32x4_withFlagZ/5" purpose="Check int32x4 withFlagZ (0, 13, 13)/5" result="PASS" /><testcase id="int32x4_withFlagZ/6" purpose="Check int32x4 withFlagZ (0, 13, 13)/6" result="PASS" /><testcase id="int32x4_withFlagZ/7" purpose="Check int32x4 withFlagZ (0, 13, 13)/7" result="PASS" /><testcase id="int32x4_withFlagZ/8" purpose="Check int32x4 withFlagZ (0, 13, 13)/8" result="PASS" /><testcase id="int32x4_withFlagZ/9" purpose="Check int32x4 withFlagZ (0, 13, 13)/9" result="PASS" /><testcase id="int32x4_withW/1" purpose="Check int32x4 withW (0, 4, 4)/1" result="PASS" /><testcase id="int32x4_withW/2" purpose="Check int32x4 withW (0, 4, 4)/2" result="PASS" /><testcase id="int32x4_withW/3" purpose="Check int32x4 withW (0, 4, 4)/3" result="PASS" /><testcase id="int32x4_withW/4" purpose="Check int32x4 withW (0, 4, 4)/4" result="PASS" /><testcase id="int32x4_withX/1" purpose="Check int32x4 withX (0, 4, 4)/1" result="PASS" /><testcase id="int32x4_withX/2" purpose="Check int32x4 withX (0, 4, 4)/2" result="PASS" /><testcase id="int32x4_withX/3" purpose="Check int32x4 withX (0, 4, 4)/3" result="PASS" /><testcase id="int32x4_withX/4" purpose="Check int32x4 withX (0, 4, 4)/4" result="PASS" /><testcase id="int32x4_withY/1" purpose="Check int32x4 withY (0, 4, 4)/1" result="PASS" /><testcase id="int32x4_withY/2" purpose="Check int32x4 withY (0, 4, 4)/2" result="PASS" /><testcase id="int32x4_withY/3" purpose="Check int32x4 withY (0, 4, 4)/3" result="PASS" /><testcase id="int32x4_withY/4" purpose="Check int32x4 withY (0, 4, 4)/4" result="PASS" /><testcase id="int32x4_withZ/1" purpose="Check int32x4 withZ (0, 4, 4)/1" result="PASS" /><testcase id="int32x4_withZ/2" purpose="Check int32x4 withZ (0, 4, 4)/2" result="PASS" /><testcase id="int32x4_withZ/3" purpose="Check int32x4 withZ (0, 4, 4)/3" result="PASS" /><testcase id="int32x4_withZ/4" purpose="Check int32x4 withZ (0, 4, 4)/4" result="PASS" /><testcase id="int32x4_xor/1" purpose="Check int32x4 xor (0, 12, 12)/1" result="PASS" /><testcase id="int32x4_xor/10" purpose="Check int32x4 xor (0, 12, 12)/10" result="PASS" /><testcase id="int32x4_xor/11" purpose="Check int32x4 xor (0, 12, 12)/11" result="PASS" /><testcase id="int32x4_xor/12" purpose="Check int32x4 xor (0, 12, 12)/12" result="PASS" /><testcase id="int32x4_xor/2" purpose="Check int32x4 xor (0, 12, 12)/2" result="PASS" /><testcase id="int32x4_xor/3" purpose="Check int32x4 xor (0, 12, 12)/3" result="PASS" /><testcase id="int32x4_xor/4" purpose="Check int32x4 xor (0, 12, 12)/4" result="PASS" /><testcase id="int32x4_xor/5" purpose="Check int32x4 xor (0, 12, 12)/5" result="PASS" /><testcase id="int32x4_xor/6" purpose="Check int32x4 xor (0, 12, 12)/6" result="PASS" /><testcase id="int32x4_xor/7" purpose="Check int32x4 xor (0, 12, 12)/7" result="PASS" /><testcase id="int32x4_xor/8" purpose="Check int32x4 xor (0, 12, 12)/8" result="PASS" /><testcase id="int32x4_xor/9" purpose="Check int32x4 xor (0, 12, 12)/9" result="PASS" /><testcase id="View_on_Float32x4Array/1" purpose="Check view on float32x4Array (0, 34, 34)/1" result="PASS" /><testcase id="View_on_Float32x4Array/10" purpose="Check view on float32x4Array (0, 34, 34)/10" result="PASS" /><testcase id="View_on_Float32x4Array/11" purpose="Check view on float32x4Array (0, 34, 34)/11" result="PASS" /><testcase id="View_on_Float32x4Array/12" purpose="Check view on float32x4Array (0, 34, 34)/12" result="PASS" /><testcase id="View_on_Float32x4Array/13" purpose="Check view on float32x4Array (0, 34, 34)/13" result="PASS" /><testcase id="View_on_Float32x4Array/14" purpose="Check view on float32x4Array (0, 34, 34)/14" result="PASS" /><testcase id="View_on_Float32x4Array/15" purpose="Check view on float32x4Array (0, 34, 34)/15" result="PASS" /><testcase id="View_on_Float32x4Array/16" purpose="Check view on float32x4Array (0, 34, 34)/16" result="PASS" /><testcase id="View_on_Float32x4Array/17" purpose="Check view on float32x4Array (0, 34, 34)/17" result="PASS" /><testcase id="View_on_Float32x4Array/18" purpose="Check view on float32x4Array (0, 34, 34)/18" result="PASS" /><testcase id="View_on_Float32x4Array/19" purpose="Check view on float32x4Array (0, 34, 34)/19" result="PASS" /><testcase id="View_on_Float32x4Array/2" purpose="Check view on float32x4Array (0, 34, 34)/2" result="PASS" /><testcase id="View_on_Float32x4Array/20" purpose="Check view on float32x4Array (0, 34, 34)/20" result="PASS" /><testcase id="View_on_Float32x4Array/21" purpose="Check view on float32x4Array (0, 34, 34)/21" result="PASS" /><testcase id="View_on_Float32x4Array/22" purpose="Check view on float32x4Array (0, 34, 34)/22" result="PASS" /><testcase id="View_on_Float32x4Array/23" purpose="Check view on float32x4Array (0, 34, 34)/23" result="PASS" /><testcase id="View_on_Float32x4Array/24" purpose="Check view on float32x4Array (0, 34, 34)/24" result="PASS" /><testcase id="View_on_Float32x4Array/25" purpose="Check view on float32x4Array (0, 34, 34)/25" result="PASS" /><testcase id="View_on_Float32x4Array/26" purpose="Check view on float32x4Array (0, 34, 34)/26" result="PASS" /><testcase id="View_on_Float32x4Array/27" purpose="Check view on float32x4Array (0, 34, 34)/27" result="PASS" /><testcase id="View_on_Float32x4Array/28" purpose="Check view on float32x4Array (0, 34, 34)/28" result="PASS" /><testcase id="View_on_Float32x4Array/29" purpose="Check view on float32x4Array (0, 34, 34)/29" result="PASS" /><testcase id="View_on_Float32x4Array/3" purpose="Check view on float32x4Array (0, 34, 34)/3" result="PASS" /><testcase id="View_on_Float32x4Array/30" purpose="Check view on float32x4Array (0, 34, 34)/30" result="PASS" /><testcase id="View_on_Float32x4Array/31" purpose="Check view on float32x4Array (0, 34, 34)/31" result="PASS" /><testcase id="View_on_Float32x4Array/32" purpose="Check view on float32x4Array (0, 34, 34)/32" result="PASS" /><testcase id="View_on_Float32x4Array/33" purpose="Check view on float32x4Array (0, 34, 34)/33" result="PASS" /><testcase id="View_on_Float32x4Array/34" purpose="Check view on float32x4Array (0, 34, 34)/34" result="PASS" /><testcase id="View_on_Float32x4Array/4" purpose="Check view on float32x4Array (0, 34, 34)/4" result="PASS" /><testcase id="View_on_Float32x4Array/5" purpose="Check view on float32x4Array (0, 34, 34)/5" result="PASS" /><testcase id="View_on_Float32x4Array/6" purpose="Check view on float32x4Array (0, 34, 34)/6" result="PASS" /><testcase id="View_on_Float32x4Array/7" purpose="Check view on float32x4Array (0, 34, 34)/7" result="PASS" /><testcase id="View_on_Float32x4Array/8" purpose="Check view on float32x4Array (0, 34, 34)/8" result="PASS" /><testcase id="View_on_Float32x4Array/9" purpose="Check view on float32x4Array (0, 34, 34)/9" result="PASS" /></category><category name="Supplementary APIs/Typed Arrays - Khronos"><testcase id="ArrayBuffer_byteLength_exist" purpose="Check if the ArrayBuffer.byteLength exists" result="PASS" /><testcase id="ArrayBuffer_byteLength_type" purpose="Check if type of byteLength of ArrayBuffer is number" result="PASS" /><testcase id="ArrayBuffer_constructor_001" purpose="Check if the argument NaN should be interpreted as 0 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_002" purpose="Check if the argument Infinity should be interpreted as 0 for ArrayBuffer constructor" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="ArrayBuffer_constructor_003" purpose="Check if the argument -Infinity should be interpreted as 0 for ArrayBuffer constructor" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="ArrayBuffer_constructor_004" purpose="Check if the argument 0 should be interpreted as 0 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_005" purpose="Check if the argument -0 should be interpreted as 0 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_006" purpose="Check if the argument -0.4 should be interpreted as 0 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_007" purpose="Check if the argument -0.9 should be interpreted as 0 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_008" purpose="Check if the argument 1.1 should be interpreted as 1 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_009" purpose="Check if the argument 2.9 should be interpreted as 2 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_010" purpose="Check if the argument 1 should be interpreted as 1 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_011" purpose="Check if the argument -4043309056 should be interpreted as 251658240 for ArrayBuffer constructor" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="ArrayBuffer_constructor_012" purpose="Check if the argument '1' should be interpreted as 1 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_013" purpose="Check if the argument '1e2' should be interpreted as 100 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_014" purpose="Check if the argument undefined should be interpreted as 0 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_015" purpose="Check if the argument null should be interpreted as 0 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_016" purpose="Check if the argument false should be interpreted as 0 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_constructor_017" purpose="Check if the argument true should be interpreted as 1 for ArrayBuffer constructor" result="PASS" /><testcase id="ArrayBuffer_properties_002" purpose="Check if the byteLength is fixed at construction time and readonly" result="PASS" /><testcase id="ArrayBuffer_properties_003" purpose="Check if the new ArrayBuffer contains all bytes from begin to the end of this ArrayBuffer when the end is unspecified" result="PASS" /><testcase id="ArrayBuffer_properties_004" purpose="Check if the new ArrayBuffer contains the bytes from begin to the end of this ArrayBuffer when the end is specified" result="PASS" /><testcase id="ArrayBuffer_properties_005" purpose="Check if the slice range specified by the begin and end values is clamped to the valid index range for the current array" result="PASS" /><testcase id="ArrayBuffer_properties_006" purpose="Check if it refers to an index from the end of the array when either begin or end is negative" result="PASS" /><testcase id="ArrayBuffer_properties_007" purpose="Check if the length is clamped to zero when the computed length of the new ArrayBuffer is negative" result="PASS" /><testcase id="ArrayBuffer_properties_008" purpose="Check if the isView returns true when the value is an object implementing the ArrayBufferView interface" result="PASS" /><testcase id="ArrayBuffer_properties_009" purpose="Check if the isView returns false when the value is an object not implementing the ArrayBufferView interface" result="PASS" /><testcase id="DataView_constructor_ArrayBuffer" purpose="Check if constructor(arraybuffer) exist of DataView" result="PASS" /><testcase id="DataView_constructor_ArrayBuffer_byteOffset" purpose="Check if constructor(arrarbuffer, byteOffset) exist of DataView" result="PASS" /><testcase id="DataView_constructor_ArrayBuffer_byteOffset_byteLength" purpose="Check constructor(arrarbuffer, byteOffset, byteLength) exist of DataView" result="PASS" /><testcase id="DataView_getFloat32_byteOffset" purpose="Check getFloat32 value with parameter byteOffset of DataView" result="PASS" /><testcase id="DataView_getFloat32_byteOffset_littleEndian" purpose="Check getFloat32 value with parameters byteOffset and littleEndian of DataView" result="PASS" /><testcase id="DataView_getFloat32_exist" purpose="Check if the DataView.getFloat32 exists" result="PASS" /><testcase id="DataView_getFloat32_type" purpose="Check if the getFloat32 of DataView is function" result="PASS" /><testcase id="DataView_getFloat64_byteOffset" purpose="Check getFloat64(byteOffset) of DataView" result="PASS" /><testcase id="DataView_getFloat64_byteOffset_littleEndian" purpose="Check getFloat64(byteOffset, littleEndian) of DataView" result="PASS" /><testcase id="DataView_getFloat64_exist" purpose="Check if the DataView.getFloat64 exists" result="PASS" /><testcase id="DataView_getFloat64_type" purpose="Check if the getFloat64 of DataView is function" result="PASS" /><testcase id="DataView_getInt16_byteOffset" purpose="Check getInt16(byteOffset) of DataView" result="PASS" /><testcase id="DataView_getInt16_byteOffset_littleEndian" purpose="Check getInt16(byteOffset, littleEndian) of DataView" result="PASS" /><testcase id="DataView_getInt16_exist" purpose="Check if the DataView.getInt16 exists" result="PASS" /><testcase id="DataView_getInt16_type" purpose="Check if the getInt16 of DataView is function" result="PASS" /><testcase id="DataView_getInt32_byteOffset" purpose="Check getInt32(byteOffset) of DataView" result="PASS" /><testcase id="DataView_getInt32_byteOffset_littleEndian" purpose="Check getInt32(byteOffset, littleEndian) of DataView" result="PASS" /><testcase id="DataView_getInt32_exist" purpose="Check if the DataView.getInt32 exists" result="PASS" /><testcase id="DataView_getInt32_type" purpose="Check if the getInt32 of DataView is function" result="PASS" /><testcase id="DataView_getInt8_byteOffset" purpose="Check getInt8(byteOffset) of DataView" result="PASS" /><testcase id="DataView_getInt8_exist" purpose="Check if the DataView.getInt8 exists" result="PASS" /><testcase id="DataView_getInt8_type" purpose="Check if the getInt8 of DataView is function" result="PASS" /><testcase id="DataView_getUint16_byteOffset" purpose="Check getUint16(byteOffset) of DataView" result="PASS" /><testcase id="DataView_getUint16_byteOffset_littleEndian" purpose="Check getUint16(byteOffset, littleEndian) of DataView" result="PASS" /><testcase id="DataView_getUint16_exist" purpose="Check if the DataView.getUint16 exists" result="PASS" /><testcase id="DataView_getUint16_type" purpose="Check if the getUInt16 of DataView is function" result="PASS" /><testcase id="DataView_getUint32_byteOffset" purpose="Check getUint32(byteOffset) of DataView" result="PASS" /><testcase id="DataView_getUint32_byteOffset_littleEndian" purpose="Check getUint32(byteOffset, littleEndian) of DataView" result="PASS" /><testcase id="DataView_getUint32_exist" purpose="Check if the DataView.getUint32 exists" result="PASS" /><testcase id="DataView_getUint32_type" purpose="Check if the getUint32 of DataView is function" result="PASS" /><testcase id="DataView_getUint8_byteOffset" purpose="Check getUint8(byteOffset) of DataView" result="PASS" /><testcase id="DataView_getUint8_exist" purpose="Check if the DataView.getUint8 exists" result="PASS" /><testcase id="DataView_setFloat32_byteOffset_value" purpose="Check setFloat32(byteOffset, value) of DataView" result="PASS" /><testcase id="DataView_setFloat32_byteOffset_value_littleEndian" purpose="Check setFloat32(byteOffset, value, littleEndian) of DataView" result="PASS" /><testcase id="DataView_setFloat32_exist" purpose="Check if the DataView.setFloat32 exists" result="PASS" /><testcase id="DataView_setFloat32_type" purpose="Check if the setFloat32 of DataView is function" result="PASS" /><testcase id="DataView_setFloat64_byteOffset_value" purpose="Check setFloat64(byteOffset, value) of DataView" result="PASS" /><testcase id="DataView_setFloat64_byteOffset_value_littleEndian" purpose="Check setFloat64(byteOffset, value, littleEndian) of DataView" result="PASS" /><testcase id="DataView_setFloat64_exist" purpose="Check if the DataView.setFloat64 exists" result="PASS" /><testcase id="DataView_setFloat64_type" purpose="Check if the setFloat64 of DataView is function" result="PASS" /><testcase id="DataView_setInt16_byteOffset_value" purpose="Check setInt16(byteOffset, value) of DataView" result="PASS" /><testcase id="DataView_setInt16_byteOffset_value_littleEndian" purpose="Check setInt16(byteOffset, value, littleEndian) of DataView" result="PASS" /><testcase id="DataView_setInt16_exist" purpose="Check if the DataView.setInt16 exists" result="PASS" /><testcase id="DataView_setInt16_type" purpose="Check if the setInt16 of DataView is function" result="PASS" /><testcase id="DataView_setInt32_byteOffset_value" purpose="Check setInt32(byteOffset, value) of DataView" result="PASS" /><testcase id="DataView_setInt32_byteOffset_value_littleEndian" purpose="Check setInt32(byteOffset, value_littleEndian) of DataView" result="PASS" /><testcase id="DataView_setInt32_exist" purpose="Check if the DataView.setInt32 exists" result="PASS" /><testcase id="DataView_setInt32_type" purpose="Check if the setInt32 of DataView is function" result="PASS" /><testcase id="DataView_setInt8_byteOffset_value" purpose="Check if setInt8(byteOffset, value) of DataView" result="PASS" /><testcase id="DataView_setInt8_exist" purpose="Check if the DataView.setInt8 exists" result="PASS" /><testcase id="DataView_setInt8_type" purpose="Check if the setInt8 of DataView is function" result="PASS" /><testcase id="DataView_setUint16_byteOffset_value" purpose="Check setUint16(byteOffset, value) of DataView" result="PASS" /><testcase id="DataView_setUint16_byteOffset_value_littleEndian" purpose="Check setUint16(byteOffset, value, littleEndian) of DataView" result="PASS" /><testcase id="DataView_setUint16_exist" purpose="Check if the DataView.setUint16 exists" result="PASS" /><testcase id="DataView_setUint16_type" purpose="Check if the setUInt16 of DataView is function" result="PASS" /><testcase id="DataView_setUint32_byteOffset_value" purpose="Check setUint32(byteOffset, value) of DataView" result="PASS" /><testcase id="DataView_setUint32_byteOffset_value_littleEndian" purpose="Check setUint32(byteOffset, value_littleEndian) of DataView" result="PASS" /><testcase id="DataView_setUint32_exist" purpose="Check if the DataView.setUint32 exists" result="PASS" /><testcase id="DataView_setUint32_type" purpose="Check if the setUint32 of DataView is function" result="PASS" /><testcase id="DataView_setUint8_byteOffset_value" purpose="Check if setUint8(byteOffset, value) of DataView" result="PASS" /><testcase id="DataView_setUint8_exist" purpose="Check if the DataView.setUint8 exists" result="PASS" /><testcase id="Float32Array_buffer" purpose="Verify the buffer of Float32Array" result="PASS" /><testcase id="Float32Array_buffer_exist" purpose="Check if the DataView.buffer exists" result="PASS" /><testcase id="Float32Array_buffer_readonly" purpose="Check if the buffer of Float32Array is read-only" result="PASS" /><testcase id="Float32Array_buffer_type" purpose="Check if the buffer of Float32Array is ArrayBuffer" result="PASS" /><testcase id="Float32Array_byteLength" purpose="verify attribute byteLength of Float32Array" result="PASS" /><testcase id="Float32Array_byteLength_exist" purpose="Check if the Float32Array.byteLength exists" result="PASS" /><testcase id="Float32Array_byteLength_readonly" purpose="Check if the byteLength of Float32Array is read-only" result="PASS" /><testcase id="Float32Array_byteLength_type" purpose="Check if the byteLength of Float32Array is number" result="PASS" /><testcase id="Float32Array_byteOffset" purpose="Verify the attribute byteOffset of Float32Array" result="PASS" /><testcase id="Float32Array_byteOffset_exist" purpose="Check if the Float32Array.byteOffset exists" result="PASS" /><testcase id="Float32Array_byteOffset_readonly" purpose="Check if the byteOffset of Float32Array is read-only" result="PASS" /><testcase id="Float32Array_byteOffset_type" purpose="Check if type of byteOffset of Float32Array is number" result="PASS" /><testcase id="Float32Array_BYTES_PER_ELEMENT_const_4" purpose="Verify the BYTES_PER_ELEMENT is 4 of Float32Array" result="PASS" /><testcase id="Float32Array_BYTES_PER_ELEMENT_exist" purpose="Check if the Float32Array.BYTES_PER_ELEMENT exists" result="PASS" /><testcase id="Float32Array_BYTES_PER_ELEMENT_type" purpose="Check if the type of BYTES_PER_ELEMENT of Float32Array is number" result="PASS" /><testcase id="Float32Array_constructor_156" purpose="Check if construtor the argument 0 should be interpreted as 0 for interface Float32Array" result="PASS" /><testcase id="Float32Array_constructor_162" purpose="Check if construtor the argument 1 should be interpreted as 1 for interface Float32Array" result="PASS" /><testcase id="Float32Array_constructor_164" purpose="Check if construtor the argument string 1 should be interpreted as 1 for interface Float32Array" result="PASS" /><testcase id="Float32Array_constructor_array" purpose="Check if the constructor(array) exist of Float32Array" result="PASS" /><testcase id="Float32Array_constructor_ArrayBuffer" purpose="Check if the constructor(arraybuffer) exist of Float32Array" result="PASS" /><testcase id="Float32Array_constructor_ArrayBuffer_byteOffSet" purpose="Check if the constructor(arraybuffer, byteOffset) exist of Float32Array" result="PASS" /><testcase id="Float32Array_constructor_ArrayBuffer_byteOffSet_length" purpose="Check if the constructor(arraybuffer, byteOffset, length) exist of Float32Array" result="PASS" /><testcase id="Float32Array_constructor_TypedArray" purpose="Check if the constructor(Float32Array) exist of Float32Array" result="PASS" /><testcase id="Float32Array_getter" purpose="Check the getter of Float32Array" result="PASS" /><testcase id="Float32Array_length" purpose="Verify the attribute length of Float32Array" result="PASS" /><testcase id="Float32Array_length_exist" purpose="Check if the Float32Array.length exists" result="PASS" /><testcase id="Float32Array_length_readonly" purpose="Check if the length of Float32Array is read-only" result="PASS" /><testcase id="Float32Array_length_type" purpose="Check if the type of length of Float32Array is number" result="PASS" /><testcase id="Float32Array_setter" purpose="Verify the setter of Float32Array" result="PASS" /><testcase id="Float32Array_set_array" purpose="Verify the function set(array) of Float32Array" result="PASS" /><testcase id="Float32Array_set_array_offset" purpose="Verify the function set(array, offset) of Float32Array" result="PASS" /><testcase id="Float32Array_set_exist" purpose="Check if the Float32Array.set exists" result="PASS" /><testcase id="Float32Array_set_type" purpose="Check if the type of set of Float32Array is function" result="PASS" /><testcase id="Float32Array_set_TypedArray" purpose="Verify the function set(Float32Array) of Float32Array" result="PASS" /><testcase id="Float32Array_set_TypedArray_offset" purpose="Verify the function set(Float32Array, offset) of Float32Array" result="PASS" /><testcase id="Float32Array_subarray_begin" purpose="Verify the function subarray with parameter begin of Float32Array" result="PASS" /><testcase id="Float32Array_subarray_begin_end" purpose="Verify the function subarray with parameters begin and end of Float32Array" result="PASS" /><testcase id="Float32Array_subarray_exist" purpose="Check if the Float32Array.subarray exists" result="PASS" /><testcase id="Float32Array_subarray_type" purpose="Check if the type of subarray of Float32Array is function" result="PASS" /><testcase id="Float64Array_buffer" purpose="Verify the attribute buffer of Float64Array" result="PASS" /><testcase id="Float64Array_buffer_exist" purpose="Check if the Float64Array.buffer exists" result="PASS" /><testcase id="Float64Array_buffer_readonly" purpose="Check if the buffer of Float64Array is read-only" result="PASS" /><testcase id="Float64Array_buffer_type" purpose="Check if the buffer of Float64Array is ArrayBuffer" result="PASS" /><testcase id="Float64Array_byteLength" purpose="Verify the attribute byteLength Float64Array" result="PASS" /><testcase id="Float64Array_byteLength_exist" purpose="Check if the Float64Array.byteLength exists" result="PASS" /><testcase id="Float64Array_byteLength_readonly" purpose="Check if the byteLength of Float64Array is read-only" result="PASS" /><testcase id="Float64Array_byteLength_type" purpose="Check if the byteLength of Float64Array is number" result="PASS" /><testcase id="Float64Array_byteOffset" purpose="Verify the attribute byteOffset Float64Array" result="PASS" /><testcase id="Float64Array_byteOffset_exist" purpose="Check if the Float64Array.byteOffset exists" result="PASS" /><testcase id="Float64Array_byteOffset_readonly" purpose="Check if the byteOffset of Float64Array is read-only" result="PASS" /><testcase id="Float64Array_byteOffset_type" purpose="Check if type of byteOffset of Float64Array is number" result="PASS" /><testcase id="Float64Array_BYTES_PER_ELEMENT_const_8" purpose="Verify the const BYTES_PER_ELEMENT is 8 of Float64Array" result="PASS" /><testcase id="Float64Array_BYTES_PER_ELEMENT_exist" purpose="Check if the Float64Array.BYTES_PER_ELEMENT exists" result="PASS" /><testcase id="Float64Array_BYTES_PER_ELEMENT_type" purpose="Check if the type of BYTES_PER_ELEMENT of Float64Array is number" result="PASS" /><testcase id="Float64Array_constructor_176" purpose="Check if construtor the argument 0 should be interpreted as 0 for interface Float64Array" result="PASS" /><testcase id="Float64Array_constructor_182" purpose="Check if construtor the argument 1 should be interpreted as 1 for interface Float64Array" result="PASS" /><testcase id="Float64Array_constructor_184" purpose="Check if construtor the argument string 1 should be interpreted as 1 for interface Float64Array" result="PASS" /><testcase id="Float64Array_constructor_array" purpose="Verify the constructor(array) Float64Array" result="PASS" /><testcase id="Float64Array_constructor_ArrayBuffer" purpose="Verify the constructor(arraybuffer) of Float64Array" result="PASS" /><testcase id="Float64Array_constructor_ArrayBuffer_byteOffSet" purpose="Verify the constructor(arraybuffer, byteOffset) of Float64Array" result="PASS" /><testcase id="Float64Array_constructor_ArrayBuffer_byteOffSet_length" purpose="Verify the constructor(arraybuffer, byteOffset, length) of Float64Array" result="PASS" /><testcase id="Float64Array_constructor_TypedArray" purpose="Verify the constructor(Float64Array) of Float64Array" result="PASS" /><testcase id="Float64Array_getter" purpose="Verify the getter of Float64Array" result="PASS" /><testcase id="Float64Array_length" purpose="Verify the length of Float64Array" result="PASS" /><testcase id="Float64Array_length_exist" purpose="Check if the Float64Array.length exists" result="PASS" /><testcase id="Float64Array_length_readonly" purpose="Check if the length of Float64Array is read-only" result="PASS" /><testcase id="Float64Array_length_type" purpose="Check if the type of length of Float64Array is number" result="PASS" /><testcase id="Float64Array_setter" purpose="Verify the setter of Float64Array" result="PASS" /><testcase id="Float64Array_set_array" purpose="Verify the set(array) of Float64Array" result="PASS" /><testcase id="Float64Array_set_array_offset" purpose="Verify the se(array, offset) of Float64Array" result="PASS" /><testcase id="Float64Array_set_exist" purpose="Check if the Float64Array.set exists" result="PASS" /><testcase id="Float64Array_set_type" purpose="Check if the type of set of Float64Array is function" result="PASS" /><testcase id="Float64Array_set_TypedArray" purpose="Verify the set(Float64Array) of Float64Array" result="PASS" /><testcase id="Float64Array_set_TypedArray_offset" purpose="Verify the set(Float64Array, offset) of Float64Array" result="PASS" /><testcase id="Float64Array_subarray_begin" purpose="Verify the subarray(begin) of Float64Array" result="PASS" /><testcase id="Float64Array_subarray_begin_end" purpose="Verify the subarray(begin, end) of Float64Array" result="PASS" /><testcase id="Float64Array_subarray_exist" purpose="Check if the Float64Array.subarray exists" result="PASS" /><testcase id="Float64Array_subarray_type" purpose="Check if the type of subarray of Float64Array is function" result="PASS" /><testcase id="Int16Array_buffer" purpose="Verify the buffer of Int16Array" result="PASS" /><testcase id="Int16Array_buffer_exist" purpose="Check if the Int16Array.buffer exists" result="PASS" /><testcase id="Int16Array_buffer_readonly" purpose="Check if the buffer of Int16Array is read-only" result="PASS" /><testcase id="Int16Array_buffer_type" purpose="Check if the buffer of Int16Array is ArrayBuffer" result="PASS" /><testcase id="Int16Array_byteLength" purpose="Verify the byteLength of Int16Array" result="PASS" /><testcase id="Int16Array_byteLength_exist" purpose="Check if the Int16Array.byteLength exists" result="PASS" /><testcase id="Int16Array_byteLength_readonly" purpose="Check if the byteLength of Int16Array is read-only" result="PASS" /><testcase id="Int16Array_byteLength_type" purpose="Check if the byteLength of Int16Array is number" result="PASS" /><testcase id="Int16Array_byteOffset" purpose="Verify the byteOffset of Int16Array" result="PASS" /><testcase id="Int16Array_byteOffset_exist" purpose="Check if the Int16Array.byteOffset exists" result="PASS" /><testcase id="Int16Array_byteOffset_readonly" purpose="Check if the byteOffset of Int16Array is read-only" result="PASS" /><testcase id="Int16Array_byteOffset_type" purpose="Check if type of byteOffset of Int16Array is number" result="PASS" /><testcase id="Int16Array_BYTES_PER_ELEMENT_const_2" purpose="Verify the BYTES_PER_ELEMENT of Int16Array" result="PASS" /><testcase id="Int16Array_BYTES_PER_ELEMENT_exist" purpose="Check if the Int16Array.BYTES_PER_ELEMENT exists" result="PASS" /><testcase id="Int16Array_BYTES_PER_ELEMENT_type" purpose="Check if the type of BYTES_PER_ELEMENT of Int16Array is number" result="PASS" /><testcase id="Int16Array_constructor_76" purpose="Check if construtor the argument 0 should be interpreted as 0 for interface Int16Array" result="PASS" /><testcase id="Int16Array_constructor_82" purpose="Check if construtor the argument 1 should be interpreted as 1 for interface Int16Array" result="PASS" /><testcase id="Int16Array_constructor_84" purpose="Check if construtor the argument string 1 should be interpreted as 1 for interface Int16Array" result="PASS" /><testcase id="Int16Array_constructor_array" purpose="Verify the constructor(array) of Int16Array" result="PASS" /><testcase id="Int16Array_constructor_ArrayBuffer" purpose="Verify the constructor(arraybuffer) of Int16Array" result="PASS" /><testcase id="Int16Array_constructor_ArrayBuffer_byteOffSet" purpose="Verify the constructor(arraybuffer, byteOffset) of Int16Array" result="PASS" /><testcase id="Int16Array_constructor_ArrayBuffer_byteOffSet_length" purpose="Verify the constructor(arraybuffer, byteOffset, length) of Int16Array" result="PASS" /><testcase id="Int16Array_constructor_TypedArray" purpose="Verify the constructor(typedarray) of Int16Array" result="PASS" /><testcase id="Int16Array_getter" purpose="Verify the getter of Int16Array" result="PASS" /><testcase id="Int16Array_length" purpose="Verify the length of Int16Array" result="PASS" /><testcase id="Int16Array_length_exist" purpose="Check if the Int16Array.length exists" result="PASS" /><testcase id="Int16Array_length_readonly" purpose="Check if the length of Int16Array is read-only" result="PASS" /><testcase id="Int16Array_length_type" purpose="Check if the type of length of Int16Array is number" result="PASS" /><testcase id="Int16Array_setter" purpose="Verify the setter of Int16Array" result="PASS" /><testcase id="Int16Array_set_array" purpose="Verify the set(array) of Int16Array" result="PASS" /><testcase id="Int16Array_set_array_offset" purpose="Verify the set(array, offset) of Int16Array" result="PASS" /><testcase id="Int16Array_set_exist" purpose="Check if the Int16Array.set exists" result="PASS" /><testcase id="Int16Array_set_type" purpose="Check if the type of set of Int16Array is function" result="PASS" /><testcase id="Int16Array_set_TypedArray" purpose="Verify the set(typedarray) of Int16Array" result="PASS" /><testcase id="Int16Array_set_TypedArray_offset" purpose="Verify the set(typedarray, offset) of Int16Array" result="PASS" /><testcase id="Int16Array_subarray_begin" purpose="Verify the subarray(begin) of Int16Array" result="PASS" /><testcase id="Int16Array_subarray_begin_end" purpose="Verify the subarray(begin, end) of Int16Array" result="PASS" /><testcase id="Int16Array_subarray_exist" purpose="Check if the Int16Array.subarray exists" result="PASS" /><testcase id="Int16Array_subarray_type" purpose="Check if the type of subarray of Int16Array is function" result="PASS" /><testcase id="Int32Array_buffer" purpose="Verify the buffer of Int32Array" result="PASS" /><testcase id="Int32Array_buffer_exist" purpose="Check if the Int32Array.buffer exists" result="PASS" /><testcase id="Int32Array_buffer_readonly" purpose="Check if the buffer of Int32Array is read-only" result="PASS" /><testcase id="Int32Array_buffer_type" purpose="Check if the buffer of Int32Array is ArrayBuffer" result="PASS" /><testcase id="Int32Array_byteLength" purpose="Verify the byteLength of Int32Array" result="PASS" /><testcase id="Int32Array_byteLength_exist" purpose="Check if the Int32Array.byteLength exists" result="PASS" /><testcase id="Int32Array_byteLength_readonly" purpose="Check if the byteLength of Int32Array is read-only" result="PASS" /><testcase id="Int32Array_byteLength_type" purpose="Check if the byteLength of Int32Array is number" result="PASS" /><testcase id="Int32Array_byteOffset" purpose="Verify the byteOffset of Int32Array" result="PASS" /><testcase id="Int32Array_byteOffset_exist" purpose="Check if the Int32Array.byteOffset exists" result="PASS" /><testcase id="Int32Array_byteOffset_readonly" purpose="Check if the byteOffset of Int32Array is read-only" result="PASS" /><testcase id="Int32Array_byteOffset_type" purpose="Check if type of byteOffset of Int32Array is number" result="PASS" /><testcase id="Int32Array_BYTES_PER_ELEMENT_const_4" purpose="Verify the BYTES_PER_ELEMENT of Int32Array is 4" result="PASS" /><testcase id="Int32Array_BYTES_PER_ELEMENT_exist" purpose="Check if the Int32Array.BYTES_PER_ELEMENT exists" result="PASS" /><testcase id="Int32Array_BYTES_PER_ELEMENT_type" purpose="Check if the type of BYTES_PER_ELEMENT of Int32Array is number" result="PASS" /><testcase id="Int32Array_constructor_116" purpose="Check if construtor the argument 0 should be interpreted as 0 for interface Int32Array" result="PASS" /><testcase id="Int32Array_constructor_122" purpose="Check if construtor the argument 1 should be interpreted as 1 for interface Int32Array" result="PASS" /><testcase id="Int32Array_constructor_124" purpose="Check if construtor the argument string 1 should be interpreted as 1 for interface Int32Array" result="PASS" /><testcase id="Int32Array_constructor_array" purpose="Verify the constructor(array) of Int32Array" result="PASS" /><testcase id="Int32Array_constructor_ArrayBuffer" purpose="Verify the constructor(arraybuffer) of Int32Array" result="PASS" /><testcase id="Int32Array_constructor_ArrayBuffer_byteOffSet" purpose="Verify the constructor(arraybuffer, byteOffset) of Int32Array" result="PASS" /><testcase id="Int32Array_constructor_ArrayBuffer_byteOffSet_length" purpose="Verify the constructor(arraybuffer, byteOffset, length) of Int32Array" result="PASS" /><testcase id="Int32Array_constructor_TypedArray" purpose="Verify the constructor(typedarray) of Int32Array" result="PASS" /><testcase id="Int32Array_getter" purpose="Verify the getter of Int32Array" result="PASS" /><testcase id="Int32Array_length" purpose="Verify the length of Int32Array" result="PASS" /><testcase id="Int32Array_length_exist" purpose="Check if the Int32Array.length exists" result="PASS" /><testcase id="Int32Array_length_readonly" purpose="Check if the length of Int32Array is read-only" result="PASS" /><testcase id="Int32Array_length_type" purpose="Check if the type of length of Int32Array is number" result="PASS" /><testcase id="Int32Array_setter" purpose="Verify the setter of Int32Array" result="PASS" /><testcase id="Int32Array_set_array" purpose="Verify the set(array) of Int32Array" result="PASS" /><testcase id="Int32Array_set_array_offset" purpose="Verify the set(array, offset) of Int32Array" result="PASS" /><testcase id="Int32Array_set_exist" purpose="Check if the Int32Array.set exists" result="PASS" /><testcase id="Int32Array_set_type" purpose="Check if the type of set of Int32Array is function" result="PASS" /><testcase id="Int32Array_set_TypedArray" purpose="Verify the set(typedarray) of Int32Array" result="PASS" /><testcase id="Int32Array_set_TypedArray_offset" purpose="Verify the set(typedarray, offset) of Int32Array" result="PASS" /><testcase id="Int32Array_subarray_begin" purpose="Verify the subarray(begin) of Int32Array" result="PASS" /><testcase id="Int32Array_subarray_begin_end" purpose="Verify the subarray(begin, end) of Int32Array" result="PASS" /><testcase id="Int32Array_subarray_exist" purpose="Check if the Int32Array.subarray exists" result="PASS" /><testcase id="Int32Array_subarray_type" purpose="Check if the type of subarray of Int32Array is function" result="PASS" /><testcase id="Int8Array_buffer" purpose="Verify the buffer of Int8Array" result="PASS" /><testcase id="Int8Array_buffer_exist" purpose="Check if the Int8Array.buffer exists" result="PASS" /><testcase id="Int8Array_buffer_readonly" purpose="Check if the buffer of Int8Array is read-only" result="PASS" /><testcase id="Int8Array_buffer_type" purpose="Check if the buffer of Int8Array is ArrayBuffer" result="PASS" /><testcase id="Int8Array_byteLength" purpose="Verify the byteLength of Int8Array" result="PASS" /><testcase id="Int8Array_byteLength_exist" purpose="Check if the Int8Array.byteLength exists" result="PASS" /><testcase id="Int8Array_byteLength_readonly" purpose="Check if the byteLength of Int8Array is read-only" result="PASS" /><testcase id="Int8Array_byteLength_type" purpose="Check if the byteLength of Int8Array is number" result="PASS" /><testcase id="Int8Array_byteOffset" purpose="Verify the byteOffset of Int8Array" result="PASS" /><testcase id="Int8Array_byteOffset_exist" purpose="Check if the Int8Array.byteOffset exists" result="PASS" /><testcase id="Int8Array_byteOffset_readonly" purpose="Check if the byteOffset of Int8Array is read-only" result="PASS" /><testcase id="Int8Array_byteOffset_type" purpose="Check if type of byteOffset of Int8Array is number" result="PASS" /><testcase id="Int8Array_BYTES_PER_ELEMENT_const_1" purpose="Verify the BYTES_PER_ELEMENT of Int8Array" result="PASS" /><testcase id="Int8Array_BYTES_PER_ELEMENT_exist" purpose="Check if the Int8Array.BYTES_PER_ELEMENT exists" result="PASS" /><testcase id="Int8Array_BYTES_PER_ELEMENT_type" purpose="Check if the type of BYTES_PER_ELEMENT of Int8Array is number" result="PASS" /><testcase id="Int8Array_constructor_16" purpose="Check if construtor the argument 0 should be interpreted as 0 for interface Int8Array" result="PASS" /><testcase id="Int8Array_constructor_18" purpose="Check if construtor the argument -0.4 should be interpreted as 0 for interface Int8Array" result="PASS" /><testcase id="Int8Array_constructor_20" purpose="Check if construtor the argument 1.1 should be interpreted as 1 for interface Int8Array" result="PASS" /><testcase id="Int8Array_constructor_22" purpose="Check if construtor the argument 1 should be interpreted as 1 for interface Int8Array" result="PASS" /><testcase id="Int8Array_constructor_24" purpose="Check if construtor the argument string 1 should be interpreted as 1 for interface Int8Array" result="PASS" /><testcase id="Int8Array_constructor_25" purpose="Check if construtor the argument 1e2 should be interpreted as 100 for interface Int8Array" result="PASS" /><testcase id="Int8Array_constructor_26" purpose="Check if construtor the argument undefined should be interpreted as 0 for interface Int8Array" result="PASS" /><testcase id="Int8Array_constructor_array" purpose="Verify the constructor(array) of Int8Array" result="PASS" /><testcase id="Int8Array_constructor_ArrayBuffer" purpose="Verify the constructor(arraybuffer) of Int8Array" result="PASS" /><testcase id="Int8Array_constructor_ArrayBuffer_byteOffSet" purpose="Verify the constructor(arraybuffer, byteOffset) of Int8Array" result="PASS" /><testcase id="Int8Array_constructor_ArrayBuffer_byteOffSet_length" purpose="Verify the constructor(buffer, byteOffset, length) of Int8Array" result="PASS" /><testcase id="Int8Array_constructor_TypedArray" purpose="Verify the constructor(typedarray) of Int8Array" result="PASS" /><testcase id="Int8Array_getter" purpose="Verify the getter of Int8Array" result="PASS" /><testcase id="Int8Array_length" purpose="Verify the length of Int8Array" result="PASS" /><testcase id="Int8Array_length_exist" purpose="Check if the Int8Array.length exists" result="PASS" /><testcase id="Int8Array_length_readonly" purpose="Check if the length of Int8Array is read-only" result="PASS" /><testcase id="Int8Array_length_type" purpose="Check if the type of length of Int8Array is number" result="PASS" /><testcase id="Int8Array_setter" purpose="Verify the setter of Int8Array" result="PASS" /><testcase id="Int8Array_set_array" purpose="Verify the set(array) of Int8Array" result="PASS" /><testcase id="Int8Array_set_array_offset" purpose="Verify the set(array, offset) of Int8Array" result="PASS" /><testcase id="Int8Array_set_exist" purpose="Check if the Int8Arrayset exists" result="PASS" /><testcase id="Int8Array_set_type" purpose="Check if the type of set of Int8Array is function" result="PASS" /><testcase id="Int8Array_set_TypedArray" purpose="Verify the set(typedarray) of Int8Array" result="PASS" /><testcase id="Int8Array_set_TypedArray_offset" purpose="Verify the set of(typedarray, offset) Int8Array" result="PASS" /><testcase id="Int8Array_subarray_begin" purpose="Verify the subarray(begin) of Int8Array" result="PASS" /><testcase id="Int8Array_subarray_begin_end" purpose="Verify the subarray(begin, end) of Int8Array" result="PASS" /><testcase id="Int8Array_subarray_exist" purpose="Check if the Int8Array.subarray exists" result="PASS" /><testcase id="Int8Array_subarray_type" purpose="Check if the type of subarray of Int8Array is function" result="PASS" /><testcase id="Uint16Array_buffer" purpose="Verify buffer of Uint16Array" result="PASS" /><testcase id="Uint16Array_buffer_exist" purpose="Check if the Uint16Array.buffer exists" result="PASS" /><testcase id="Uint16Array_buffer_readonly" purpose="Check if the buffer of Uint16Array is read-only" result="PASS" /><testcase id="Uint16Array_buffer_type" purpose="Check if the buffer of Uint16Array is ArrayBuffer" result="PASS" /><testcase id="Uint16Array_byteLength" purpose="Verify byteLength of Uint16Array" result="PASS" /><testcase id="Uint16Array_byteLength_exist" purpose="Check if the Uint16Array.byteLength exists" result="PASS" /><testcase id="Uint16Array_byteLength_readonly" purpose="Check if the byteLength of Uint16Array is read-only" result="PASS" /><testcase id="Uint16Array_byteLength_type" purpose="Check if the byteLength of Uint16Array is number" result="PASS" /><testcase id="Uint16Array_byteOffset" purpose="Verify byteOffset of Uint16Array" result="PASS" /><testcase id="Uint16Array_byteOffset_exist" purpose="Check if the Uint16Array.byteOffset exists" result="PASS" /><testcase id="Uint16Array_byteOffset_readonly" purpose="Check if the byteOffset of Uint16Array is read-only" result="PASS" /><testcase id="Uint16Array_byteOffset_type" purpose="Check if type of byteOffset of Uint16Array is number" result="PASS" /><testcase id="Uint16Array_BYTES_PER_ELEMENT_const_2" purpose="Verify BYTE_PER_ELEMENT of Uint16Array is 2" result="PASS" /><testcase id="Uint16Array_BYTES_PER_ELEMENT_exist" purpose="Check if the Uint16Array.BYTES_PER_ELEMENT exists" result="PASS" /><testcase id="Uint16Array_BYTES_PER_ELEMENT_type" purpose="Check if the type of BYTES_PER_ELEMENT of Uint16Array is number" result="PASS" /><testcase id="Uint16Array_constructor_102" purpose="Check if construtor the argument 1 should be interpreted as 1 for interface Uint16Array" result="PASS" /><testcase id="Uint16Array_constructor_104" purpose="Check if construtor the argument string 1 should be interpreted as 1 for interface Uint16Array" result="PASS" /><testcase id="Uint16Array_constructor_96" purpose="Check if construtor the argument 0 should be interpreted as 0 for interface Uint16Array" result="PASS" /><testcase id="Uint16Array_constructor_ArrayBuffer" purpose="Verify constructor(arraybuffer) of Uint16Array" result="PASS" /><testcase id="Uint16Array_constructor_ArrayBuffer_byteOffSet" purpose="Verify constructor(arraybuffer, byteOffset) of Uint16Array" result="PASS" /><testcase id="Uint16Array_constructor_ArrayBuffer_byteOffSet_length" purpose="Verify constructor(arraybuffer, byteOffset, length) of Uint16Array" result="PASS" /><testcase id="Uint16Array_constructor_TypedArray" purpose="Verify constructor(typedarray) of Uint16Array" result="PASS" /><testcase id="Uint16Array_getter" purpose="Verify getter of Uint16Array" result="PASS" /><testcase id="Uint16Array_length" purpose="Verify length of Uint16Array" result="PASS" /><testcase id="Uint16Array_length_exist" purpose="Check if the Uint16Array.length exists" result="PASS" /><testcase id="Uint16Array_length_readonly" purpose="Check if the length of Uint16Array is read-only" result="PASS" /><testcase id="Uint16Array_length_type" purpose="Check if the type of length of Uint16Array is number" result="PASS" /><testcase id="Uint16Array_setter" purpose="Verify setter of Uint16Array" result="PASS" /><testcase id="Uint16Array_set_array" purpose="Verify set(array) of Uint16Array" result="PASS" /><testcase id="Uint16Array_set_array_offset" purpose="Verify set(array, offset) of Uint16Array" result="PASS" /><testcase id="Uint16Array_set_exist" purpose="Check if the Uint16Array.set exists" result="PASS" /><testcase id="Uint16Array_set_type" purpose="Check if the type of set of Uint16Array is function" result="PASS" /><testcase id="Uint16Array_set_TypedArray" purpose="Verify set(typedarray) of Uint16Array" result="PASS" /><testcase id="Uint16Array_set_TypedArray_offset" purpose="Verify set(typedarray, offset) of Uint16Array" result="PASS" /><testcase id="Uint16Array_subarray_begin" purpose="Verify subarray(begin) of Uint16Array" result="PASS" /><testcase id="Uint16Array_subarray_begin_end" purpose="Verify subarray(begin, end) of Uint16Array" result="PASS" /><testcase id="Uint16Array_subarray_exist" purpose="Check if the Uint16Array.subarray exists" result="PASS" /><testcase id="Uint16Array_subarray_type" purpose="Check if the type of subarray of Uint16Array is function" result="PASS" /><testcase id="Uint32Array_buffer" purpose="Verify buffer of Uint32Array" result="PASS" /><testcase id="Uint32Array_buffer_exist" purpose="Check if the Uint32Array.buffer exists" result="PASS" /><testcase id="Uint32Array_buffer_readonly" purpose="Check if the buffer of Uint32Array is read-only" result="PASS" /><testcase id="Uint32Array_buffer_type" purpose="Check if the buffer of Uint32Array is ArrayBuffer" result="PASS" /><testcase id="Uint32Array_byteLength" purpose="Verify byteLength of Uint32Array" result="PASS" /><testcase id="Uint32Array_byteLength_exist" purpose="Check if the Uint32Array.byteLength exists" result="PASS" /><testcase id="Uint32Array_byteLength_readonly" purpose="Check if the byteLength of Uint32Array is read-only" result="PASS" /><testcase id="Uint32Array_byteLength_type" purpose="Check if the byteLength of Uint32Array is number" result="PASS" /><testcase id="Uint32Array_byteOffset" purpose="Verify byteOffset of Uint32Array" result="PASS" /><testcase id="Uint32Array_byteOffset_exist" purpose="Check if the Uint32Array.byteOffset exists" result="PASS" /><testcase id="Uint32Array_byteOffset_readonly" purpose="Check if the byteOffset of Uint32Array is read-only" result="PASS" /><testcase id="Uint32Array_byteOffset_type" purpose="Check if type of byteOffset of Uint32Array is number" result="PASS" /><testcase id="Uint32Array_BYTES_PER_ELEMENT_const_4" purpose="Verify BYTES_PER_ELEMENT of Uint32Array is 4" result="PASS" /><testcase id="Uint32Array_BYTES_PER_ELEMENT_exist" purpose="Check if the Uint32Array.BYTES_PER_ELEMENT exists" result="PASS" /><testcase id="Uint32Array_BYTES_PER_ELEMENT_type" purpose="Check if the type of BYTES_PER_ELEMENT of Uint32Array is number" result="PASS" /><testcase id="Uint32Array_constructor_136" purpose="Check if construtor the argument 0 should be interpreted as 0 for interface Uint32Array" result="PASS" /><testcase id="Uint32Array_constructor_142" purpose="Check if construtor the argument 1 should be interpreted as 1 for interface Uint32Array" result="PASS" /><testcase id="Uint32Array_constructor_144" purpose="Check if construtor the argument string 1 should be interpreted as 1 for interface Uint32Array" result="PASS" /><testcase id="Uint32Array_constructor_array" purpose="Verify constructor(array) of Uint32Array" result="PASS" /><testcase id="Uint32Array_constructor_ArrayBuffer" purpose="Verify constructor(arraybuffer) of Uint32Array" result="PASS" /><testcase id="Uint32Array_constructor_ArrayBuffer_byteOffset" purpose="Verify constructor(arraybuffer, byteOffset) of Uint32Array" result="PASS" /><testcase id="Uint32Array_constructor_ArrayBuffer_byteOffset_length" purpose="Verify constructor(arraybuffer, byteOffset, length) of Uint32Array" result="PASS" /><testcase id="Uint32Array_constructor_TypedArray" purpose="Verify constructor(typedarray) of Uint32Array" result="PASS" /><testcase id="Uint32Array_getter" purpose="Verify getter of Uint32Array" result="PASS" /><testcase id="Uint32Array_length" purpose="Verify length of Uint32Array" result="PASS" /><testcase id="Uint32Array_length_exist" purpose="Check if the Uint32Array.length exists" result="PASS" /><testcase id="Uint32Array_length_readonly" purpose="Check if the length of Uint32Array is read-only" result="PASS" /><testcase id="Uint32Array_length_type" purpose="Check if the type of length of Uint32Array is number" result="PASS" /><testcase id="Uint32Array_setter" purpose="Verify setter of Uint32Array" result="PASS" /><testcase id="Uint32Array_set_array" purpose="Verify set(array) of Uint32Array" result="PASS" /><testcase id="Uint32Array_set_array_offset" purpose="Verify set(array, offset) of Uint32Array" result="PASS" /><testcase id="Uint32Array_set_exist" purpose="Check if the Uint32Array.set exists" result="PASS" /><testcase id="Uint32Array_set_type" purpose="Check if the type of set of Uint32Array is function" result="PASS" /><testcase id="Uint32Array_set_TypedArray" purpose="Verify set(typedarray) of Uint32Array" result="PASS" /><testcase id="Uint32Array_set_TypedArray_offset" purpose="Verify set(typedarray, offset) of Uint32Array" result="PASS" /><testcase id="Uint32Array_subarray_begin" purpose="Verify subarray(begin) of Uint32Array" result="PASS" /><testcase id="Uint32Array_subarray_begin_end" purpose="Verify set(begin, end) of Uint32Array" result="PASS" /><testcase id="Uint32Array_subarray_exist" purpose="Check if the Uint32Array.subarray exists" result="PASS" /><testcase id="Uint32Array_subarray_type" purpose="Check if the type of subarray of Uint32Array is function" result="PASS" /><testcase id="Uint8Array_buffer" purpose="Verify the buffer of Uint8Array" result="PASS" /><testcase id="Uint8Array_buffer_exist" purpose="Check if the Uint8Array.buffer exists" result="PASS" /><testcase id="Uint8Array_buffer_readonly" purpose="Check if the buffer of Uint8Array is read-only" result="PASS" /><testcase id="Uint8Array_buffer_type" purpose="Check if the buffer of Uint8Array is ArrayBuffer" result="PASS" /><testcase id="Uint8Array_byteLength" purpose="Verify the byteLength of Uint8Array" result="PASS" /><testcase id="Uint8Array_byteLength_exist" purpose="Check if the Uint8Array.byteLength exists" result="PASS" /><testcase id="Uint8Array_byteLength_readonly" purpose="Check if the byteLength of Uint8Array is read-only" result="PASS" /><testcase id="Uint8Array_byteLength_type" purpose="Check if the byteLength of Uint8Array is number" result="PASS" /><testcase id="Uint8Array_byteOffset" purpose="Verify the byteOffset of Uint8Array" result="PASS" /><testcase id="Uint8Array_byteOffset_exist" purpose="Check if the Uint8Array.byteOffset exists" result="PASS" /><testcase id="Uint8Array_byteOffset_readonly" purpose="Check if the byteOffset of Uint8Array is read-only" result="PASS" /><testcase id="Uint8Array_byteOffset_type" purpose="Check if type of byteOffset of Uint8Array is number" result="PASS" /><testcase id="Uint8Array_BYTES_PER_ELEMENT_const_1" purpose="Verify the BYTES_PER_ELEMENT of Uint8Array is 1" result="PASS" /><testcase id="Uint8Array_BYTES_PER_ELEMENT_exist" purpose="Check if the Uint8Array.BYTES_PER_ELEMENT exists" result="PASS" /><testcase id="Uint8Array_BYTES_PER_ELEMENT_type" purpose="Check if the type of BYTES_PER_ELEMENT of Uint8Array is number" result="PASS" /><testcase id="Uint8Array_constructor_36" purpose="Check if construtor the argument 0 should be interpreted as 0 for interface Uint8Array" result="PASS" /><testcase id="Uint8Array_constructor_42" purpose="Check if construtor the argument 1 should be interpreted as 1 for interface Uint8Array" result="PASS" /><testcase id="Uint8Array_constructor_44" purpose="Check if construtor the argument string 1 should be interpreted as 1 for interface Uint8Array" result="PASS" /><testcase id="Uint8Array_constructor_array" purpose="Verify the constructor(array) of Uint8Array" result="PASS" /><testcase id="Uint8Array_constructor_ArrayBuffer" purpose="Verify the constructor(arraybuffer) of Uint8Array" result="PASS" /><testcase id="Uint8Array_constructor_ArrayBuffer_byteOffSet" purpose="Verify the constructor(arraybuffer, byteOffset) of Uint8Array" result="PASS" /><testcase id="Uint8Array_constructor_ArrayBuffer_byteOffSet_length" purpose="Verify the constructor(arraybuffer, byteOffset, length) of Uint8Array" result="PASS" /><testcase id="Uint8Array_constructor_TypedArray" purpose="Verify the constructor(typedarray) of Uint8Array" result="PASS" /><testcase id="Uint8Array_getter" purpose="Verify the getter of Uint8Array" result="PASS" /><testcase id="Uint8Array_length" purpose="Verify the length of Uint8Array" result="PASS" /><testcase id="Uint8Array_length_exist" purpose="Check if the Uint8Array.length exists" result="PASS" /><testcase id="Uint8Array_length_readonly" purpose="Check if the length of Uint8Array is read-only" result="PASS" /><testcase id="Uint8Array_length_type" purpose="Check if the type of length of Uint8Array is number" result="PASS" /><testcase id="Uint8Array_setter" purpose="Verify the setter of Uint8Array" result="PASS" /><testcase id="Uint8Array_set_array" purpose="Verify the set(array) of Uint8Array" result="PASS" /><testcase id="Uint8Array_set_array_offset" purpose="Verify the set(array, offset) of Uint8Array" result="PASS" /><testcase id="Uint8Array_set_exist" purpose="Check if the Uint8Array.set exists" result="PASS" /><testcase id="Uint8Array_set_type" purpose="Check if the type of set of Uint8Array is function" result="PASS" /><testcase id="Uint8Array_set_TypedArray" purpose="Verify the set(typedarray) of Uint8Array" result="PASS" /><testcase id="Uint8Array_set_TypedArray_offset" purpose="Verify the set(typedarray, offset) of Uint8Array" result="PASS" /><testcase id="Uint8Array_subarray_begin" purpose="Verify the subarray(begin) of Uint8Array" result="PASS" /><testcase id="Uint8Array_subarray_begin_end" purpose="Verify the subarray(begin, end) of Uint8Array" result="PASS" /><testcase id="Uint8Array_subarray_exist" purpose="Check if the Uint8Array.subarray exists" result="PASS" /><testcase id="Uint8Array_subarray_type" purpose="Check if the type of subarray of Uint8Array is function" result="PASS" /><testcase id="Uint8ClampedArray_buffer" purpose="Verify the buffer of Uint8ClampedArray" result="PASS" /><testcase id="Uint8ClampedArray_buffer_exist" purpose="Check if the Uint8ClampedArray.buffer exists" result="PASS" /><testcase id="Uint8ClampedArray_byteLength" purpose="Verify the byteLength of Uint8ClampedArray" result="PASS" /><testcase id="Uint8ClampedArray_byteLength_exist" purpose="Check if the Uint8ClampedArray.byteLength exists" result="PASS" /><testcase id="Uint8ClampedArray_byteOffset" purpose="Verify the byteOffset of Uint8ClampedArray" result="PASS" /><testcase id="Uint8ClampedArray_byteOffset_exist" purpose="Check if the Uint8ClampedArray.byteOffset exists" result="PASS" /><testcase id="Uint8ClampedArray_BYTES_PER_ELEMENT_const_1" purpose="Verify the BYTES_PER-ELEMENT of Uint8ClampedArray is 1" result="PASS" /><testcase id="Uint8ClampedArray_BYTES_PER_ELEMENT_exist" purpose="Check if the Uint8ClampedArray.BYTES_PER_ELEMENT exists" result="PASS" /><testcase id="Uint8ClampedArray_constructor_001" purpose="Check if the constructor(Uint8ClampedArray) create new Uint8ClampedArray" result="PASS" /><testcase id="Uint8ClampedArray_constructor_002" purpose="Check if the constructor(ArrayBuffer) create new Uint8ClampedArray" result="PASS" /><testcase id="Uint8ClampedArray_constructor_003" purpose="Check if the constructor(ArrayBuffer byteOffset) create new Uint8ClampedArray" result="PASS" /><testcase id="Uint8ClampedArray_constructor_004" purpose="Check if the constructor(ArrayBuffer byteOffset length) create new Uint8ClampedArray" result="PASS" /><testcase id="Uint8ClampedArray_constructor_array" purpose="Verify constructor(array) of Uint8ClampedArray" result="PASS" /><testcase id="Uint8ClampedArray_constructor_length" purpose="Verify constructor(length) of Uint8ClampedArray" result="PASS" /><testcase id="Uint8ClampedArray_length_002" purpose="Check if the Uint8ClampedArray.length should be the value given by constructor" result="PASS" /><testcase id="Uint8ClampedArray_length_003" purpose="Check if the Uint8ClampedArray.length is readonly" result="PASS" /><testcase id="Uint8ClampedArray_length_exist" purpose="Check if the Uint8ClampedArray.length of exists" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_001" purpose="Check if the getter can get 1 after set 1 by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_002" purpose="Check if the getter can get 255 after set 257 by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_003" purpose="Check if the getter can get 3 after set 3.2 by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_004" purpose="Check if the getter can get 0 after set -3.8 by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_005" purpose="Check if the getter can get 0 after set 0 by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_006" purpose="Check if the getter can get 0 after set -0 by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_007" purpose="Check if the getter can get 1 after set '1' by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_008" purpose="Check if the getter can get 0 after set false by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_009" purpose="Check if the getter can get 1 after set true by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_010" purpose="Check if the getter can get 0 after set undefined by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_011" purpose="Check if the getter can get 0 after set null by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_012" purpose="Check if the getter can get 0 after set NaN by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_013" purpose="Check if the getter can get 255 after set Infinity by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_014" purpose="Check if the getter can get 0 after set -Infinity by the setter" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_015" purpose="Check if the parameter of Uint8ClampedArray.set() accept octet[]" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_016" purpose="Check if the parameter of Uint8ClampedArray.set() accept octet[] and offset" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_017" purpose="Check if the parameter of Uint8ClampedArray.set() accept Uint8ClampedArray" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_018" purpose="Check if the parameter of Uint8ClampedArray.set() accept Uint8ClampedArray and offset" result="PASS" /><testcase id="Uint8ClampedArray_setter_getter_019" purpose="Check if an exception is raised when the offset plus the length of the given array is out of range for the current array" result="PASS" /><testcase id="Uint8ClampedArray_set_exist" purpose="Check if the Uint8ClampedArray.set exists" result="PASS" /><testcase id="Uint8ClampedArray_subarray_002" purpose="Check if a new Uint8ClampedArray is returned for the Uint8ClampedArray, referencing the elements at begin" result="PASS" /><testcase id="Uint8ClampedArray_subarray_003" purpose="Check if a new Uint8ClampedArray is returned for the Uint8ClampedArray, referencing the elements at begin to end" result="PASS" /><testcase id="Uint8ClampedArray_subarray_004" purpose="Check if the subarray range specified by the begin and end values is clamped to the valid index range for the current array" result="PASS" /><testcase id="Uint8ClampedArray_subarray_005" purpose="Check if it refers to an index from the end of the array when either begin or end is negative" result="PASS" /><testcase id="Uint8ClampedArray_subarray_006" purpose="Check if the length is clamped to zero when the computed length of the new Uint8ClampedArray is negative" result="PASS" /><testcase id="Uint8ClampedArray_subarray_exist" purpose="Check if the Uint8ClampedArray.subarray exists" result="PASS" /></category><category name="Supplementary APIs/WebGL - Khronos"><testcase id="add_int_float.vert" purpose="Check that cast adding integer to float should fail" result="PASS" /><testcase id="add_int_mat2.vert" purpose="Check implicit cast adding integer to mat2 should fail" result="PASS" /><testcase id="add_int_mat3.vert" purpose="Check if cast adding integer to mat3 failed" result="PASS" /><testcase id="add_int_mat4.vert" purpose="Check if cast adding integer to mat4 failed" result="PASS" /><testcase id="add_int_vec2.vert" purpose="Check if cast adding integer to vec2 failed" result="PASS" /><testcase id="add_int_vec3.vert" purpose="Check if cast adding integer to vec3 failed" result="PASS" /><testcase id="add_int_vec4.vert" purpose="Check adding integer to vec4 should fail" result="PASS" /><testcase id="add_ivec2_vec2.vert" purpose="Check if cast adding ivec2 to vec2 failed" result="PASS" /><testcase id="add_ivec3_vec3.vert" purpose="Check if cast adding ivec3 to vec3 failed" result="PASS" /><testcase id="add_ivec4_vec4.vert" purpose="Check that cast adding ivec4 to vec4 should fail" result="PASS" /><testcase id="array-buffer-crash" purpose="Test ArrayBuffer.byteLength" result="PASS" /><testcase id="array-buffer-view-crash" purpose="check that constructing a typed array view with no arguments and fetching its length does not crash" result="PASS" /><testcase id="array-unit-tests" purpose="check the functionality of the new array-like objects in the TypedArray spec" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="arrayOutOfBounds" purpose="Check array out of bounds" result="PASS" /><testcase id="assign_int_to_float.vert" purpose="Check if cast assing int to float failed" result="PASS" /><testcase id="assign_ivec2_to_vec2.vert" purpose="Check if cast assigning ivec2 to vec2 failed" result="PASS" /><testcase id="assign_ivec3_to_vec3.vert" purpose="Check if cast assigning ivec3 to vec3 failed" result="PASS" /><testcase id="assign_ivec4_to_vec4.vert" purpose="Check if cast assigning ivec4 to vec4 failed" result="PASS" /><testcase id="bindBuffer" purpose="Check if bindBuffer works" result="PASS" /><testcase id="bindBufferBadArgs" purpose="Check bindBuffer function with bad arguments" result="PASS" /><testcase id="bindFramebufferLeaveNonZero" purpose="Check segfaulting when the GL context got GC'd (in glXDestroyContext)" result="PASS" /><testcase id="buffer-bind-test" purpose="Check a buffer can only be bound to 1 target" result="PASS" /><testcase id="buffer-data-array-buffer" purpose="Test bufferData/bufferSubData with ArrayBuffer input" result="PASS" /><testcase id="buffer-offscreen-test" purpose="Check WebGL required buffer clear behaviour" result="PASS" /><testcase id="buffer-preserve-test" purpose="WebGL required buffer clear behaviour test" result="PASS" /><testcase id="bufferData" purpose="Check if GLSL bufferData function works" result="PASS" /><testcase id="bufferDataBadArgs" purpose="Check buffer data with bad arguments" result="PASS" /><testcase id="bufferSubData" purpose="Check if bufferSubData function works" result="PASS" /><testcase id="bufferSubDataBadArgs" purpose="Check bufferSubData with bad arguments" result="PASS" /><testcase id="canvas-test" purpose="This test ensures WebGL implementations interact correctly with the canvas tag" result="PASS" /><testcase id="canvas-zero-size" purpose="Tests that a zero size canvas does not fail" result="PASS" /><testcase id="conformance.context.constants" purpose="This test ensures that the WebGL context has all the constants in the specification" result="PASS" /><testcase id="conformance.context.methods" purpose="This test ensures that the WebGL context has all the methods in the specification" result="PASS" /><testcase id="conformance.more.context.constants" purpose="Check constants conformance of context" result="PASS" /><testcase id="conformance.more.context.methods" purpose="Check methods conformance of context" result="PASS" /><testcase id="construct_struct.vert" purpose="Check if cast from int to float in struct initializer failed" result="PASS" /><testcase id="context-attributes-alpha-depth-stencil-antialias" purpose="Verify WebGLContextAttributes are working as specified, including alpha, depth, stencil, antialias, but not premultipliedAlpha" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="context-lost" purpose="Tests behavior under a lost context" result="PASS" /><testcase id="context-lost-restored" purpose="Check the context restored" result="PASS" /><testcase id="context-type-test" purpose="This test ensures WebGL implementations interact correctly with the context tag" result="PASS" /><testcase id="copy-tex-image-and-sub-image-2d" purpose="Verify copyTexImage2D and copyTexSubImage2D" result="PASS" /><testcase id="copyTexImage2D" purpose="Check if copyTextImage2D function works" result="PASS" /><testcase id="copyTexImage2DBadArgs" purpose="Check copyTexImage2D with bad arguments" result="PASS" /><testcase id="copyTexSubImage2D" purpose="Check copyTexSubImage2D function works" result="PASS" /><testcase id="copyTexSubImage2DBadArgs" purpose="Check if copyTexSubImage2D with bad argument" result="PASS" /><testcase id="deleteBufferBadArgs" purpose="Check deleteBuffer function with bad arguments" result="PASS" /><testcase id="divide_int_float.vert" purpose="Check if cast of float divided by int failed" result="PASS" /><testcase id="divide_int_mat2.vert" purpose="Check implicit cast of mat2 divided by int should fail" result="PASS" /><testcase id="divide_int_mat3.vert" purpose="Check that cast of mat3 divided by int should fail" result="PASS" /><testcase id="divide_int_mat4.vert" purpose="Check if cast of mat4 divided by int failed" result="PASS" /><testcase id="divide_int_vec2.vert" purpose="Check if cast of vec2 divided by int failed" result="PASS" /><testcase id="divide_int_vec3.vert" purpose="Check if cast of vec3 divided by int failed" result="PASS" /><testcase id="divide_int_vec4.vert" purpose="Check if cast of vec4 divided by int failed" result="PASS" /><testcase id="divide_ivec2_vec2.vert" purpose="Check implicit cast of vec2 divided by ivec2 should fail" result="PASS" /><testcase id="divide_ivec3_vec3.vert" purpose="Check if vec3 divided by ivec3 failed" result="PASS" /><testcase id="divide_ivec4_vec4.vert" purpose="Check if cast of vec4 divided by ivec4 failed" result="PASS" /><testcase id="drawArrays" purpose="Check drawArrays function works" result="PASS" /><testcase id="drawArraysOutOfBounds" purpose="Check drawArrays out of bounds" result="PASS" /><testcase id="drawElements" purpose="Check if drawElements function works" result="PASS" /><testcase id="drawElementsBadArgs" purpose="Check if drawElements with bad arguments" result="PASS" /><testcase id="drawingbuffer-static-canvas-test" purpose="This test ensures WebGL implementations correctly implement drawingbufferWidth/Height with compositing" result="PASS" /><testcase id="drawingbuffer-test" purpose="Check WebGL implementations correctly implement drawingbufferWidth/Height" result="PASS" /><testcase id="embedded-struct-definitions-forbidden" purpose="Check embedded structure definitions are forbidden per GLSL ES section 4.1.8, 'Structures', and should fail" result="PASS" /><testcase id="equal_int_float.vert" purpose="Check if cast of int to float in comparision failed" result="PASS" /><testcase id="equal_ivec2_vec2.vert" purpose="Check if cast of ivec2 to vec2 in comparision failed" result="PASS" /><testcase id="equal_ivec3_vec3.vert" purpose="Check if cast of ivec3 to vec3 in comparision  failed" result="PASS" /><testcase id="equal_ivec4_vec4.vert" purpose="Check if cast of ivec4 to vec4 in comparision failed" result="PASS" /><testcase id="framebuffer-object-attachment" purpose="Test framebuffer object attachment behaviors" result="PASS" /><testcase id="framebuffer-test" purpose="This tests framebuffer/renderbuffer-related functions" result="PASS" /><testcase id="functions-returning-strings" purpose="Test that functions returning strings really do return strings (and not e.g. null)" result="PASS" /><testcase id="function_int_float.vert" purpose="Check implicit cast of int to float in function argument should fail" result="PASS" /><testcase id="function_ivec2_vec2.vert" purpose="Check implicit cast of ivec2 to vec2 in function argument should fail" result="PASS" /><testcase id="function_ivec3_vec3.vert" purpose="Check if cast of ivec3 to vec3 in function argument failed" result="PASS" /><testcase id="function_ivec4_vec4.vert" purpose="Check that cast of ivec4 to vec4 in function argument failed" result="PASS" /><testcase id="get-extension" purpose="Check if calling getExtension twice for the same extension returns the same object" result="PASS" /><testcase id="getContext" purpose="Check if getContext function works" result="PASS" /><testcase id="gl-bind-attrib-location-test" purpose="Check WebGL implementations don't allow names that start with 'gl_' when calling bindAttribLocation" result="PASS" /><testcase id="gl-clear" purpose="Test depth and stencil clearing" result="PASS" /><testcase id="gl-drawelements" purpose="Check WebGL drawElements method works" result="PASS" /><testcase id="gl-enable-enum-test" purpose="This test ensures WebGL implementations allow OpenGL ES 2.0 features to be turned on but not non OpenGL ES 2.0 features" result="PASS" /><testcase id="gl-enable-vertex-attrib" purpose="Tests that turning on attribs that have no buffer bound fails to draw" result="PASS" /><testcase id="gl-enum-tests" purpose="This test ensures various WebGL functions fail when passed non OpenGL ES 2.0 enums" result="PASS" /><testcase id="gl-fragcoord" purpose="Tests gl_FragCoord" result="PASS" /><testcase id="gl-frontfacing" purpose="Check WebGL frontFacing works" result="PASS" /><testcase id="gl-get-active-attribute" purpose="Check WebGL getActiveAttribute for various types" result="PASS" /><testcase id="gl-get-active-uniform" purpose="Tests getActiveUniform for various types" result="PASS" /><testcase id="gl-get-calls" purpose="This test ensures basic functionality of the underlying graphics library" result="PASS" /><testcase id="gl-geterror" purpose="Test getError" result="PASS" /><testcase id="gl-getshadersource" purpose="Check if WebGL getshadersource method works" result="PASS" /><testcase id="gl-getstring" purpose="This test checks getParameter returns strings in the correct format" result="PASS" /><testcase id="gl-max-texture-dimensions" purpose="Check that webGL the max advertized texture size is supported" result="PASS" /><testcase id="gl-min-attribs" purpose="Check if WEBGL the minimum number of attributes are supported" result="PASS" /><testcase id="gl-min-textures" purpose="Check that WebGL the minimum number of uniforms are supported" result="PASS" /><testcase id="gl-min-uniforms" purpose="Check WebGL the minimum number of uniforms are supported" result="PASS" /><testcase id="gl-pixelstorei" purpose="This test checks that drawImage and readPixels are not effected by gl.Pixelstorei(gl.PACK_ALIGNMENT) and visa versa" result="PASS" /><testcase id="gl-pointcoord" purpose="Check WebGL PointCoord and PointSize" result="PASS" /><testcase id="gl-scissor-test" purpose="Check WebGL scissor method works" result="PASS" /><testcase id="gl-shader-test" purpose="This test checks a few things about WebGL Shaders" result="PASS" /><testcase id="gl-teximage" purpose="Test texImage2D conversions" result="PASS" /><testcase id="gl-uniform-arrays" purpose="Check if WebGL implementations handle uniform arrays correctly" result="PASS" /><testcase id="gl-uniform-bool" purpose="This test ensures WebGL implementations handle bool uniforms in a OpenGL ES 2.0 spec compliant way" result="PASS" /><testcase id="gl-uniformmatrix4fv" purpose="Check if WebGL implementations handle uniformMatrix" result="PASS" /><testcase id="gl-unknown-uniform" purpose="Tests that unknown uniforms don't cause errors" result="PASS" /><testcase id="gl-vertex-attrib" purpose="This test ensures WebGL implementations vertexAttrib can be set and read" result="PASS" /><testcase id="gl-vertex-attrib-zero-issues" purpose="Test some of the issues of the difference between attrib 0 on OpenGL vs WebGL" result="PASS" /><testcase id="gl-vertexattribpointer" purpose="This test checks vertexAttribPointer behaviors in WebGL" result="PASS" /><testcase id="gl-vertexattribpointer-offsets" purpose="Test vertexattribpointer offsets work" result="PASS" /><testcase id="glsl-function" purpose="GLSL function test test" result="PASS" /><testcase id="glsl-function-abs" purpose="check GLSL abs function test" result="PASS" /><testcase id="glsl-function-acos" purpose="check GLSL acos function test" result="PASS" /><testcase id="glsl-function-asin" purpose="Check if GLSL asin function works" result="PASS" /><testcase id="glsl-function-atan" purpose="Check GLSL atan function works" result="PASS" /><testcase id="glsl-function-atan-xy" purpose="check GLSL atan-xy function test" result="PASS" /><testcase id="glsl-function-ceil" purpose="check GLSL ceil function test" result="PASS" /><testcase id="glsl-function-clamp-float" purpose="check GLSL clamp-gentype function test" result="PASS" /><testcase id="glsl-function-clamp-gentype" purpose="Check GLSL clamp-gentype function works" result="PASS" /><testcase id="glsl-function-cos" purpose="Check GLSL cos function works" result="PASS" /><testcase id="glsl-function-cross" purpose="Check WebGL cross method works" result="PASS" /><testcase id="glsl-function-distance" purpose="Check WebGL distance method works" result="PASS" /><testcase id="glsl-function-dot" purpose="check GLSL dot function test" result="PASS" /><testcase id="glsl-function-faceforward" purpose="check GLSL faceforward function test" result="PASS" /><testcase id="glsl-function-floor" purpose="Check WebGL floor method works" result="PASS" /><testcase id="glsl-function-fract" purpose="check GLSL fract function test" result="PASS" /><testcase id="glsl-function-length" purpose="check GLSL length function test" result="PASS" /><testcase id="glsl-function-max-float" purpose="Check GLSL max-float function test" result="PASS" /><testcase id="glsl-function-max-gentype" purpose="check GLSL max-gentype function test" result="PASS" /><testcase id="glsl-function-min-float" purpose="check GLSL min-float function test" result="PASS" /><testcase id="glsl-function-min-gentype" purpose="check GLSL min-gentype function test" result="PASS" /><testcase id="glsl-function-mix-float" purpose="Check WebGL mix-float method works" result="PASS" /><testcase id="glsl-function-mix-gentype" purpose="check GLSL mix-gentype function test" result="PASS" /><testcase id="glsl-function-mod-float" purpose="Check GLSL mod-float function works" result="PASS" /><testcase id="glsl-function-mod-gentype" purpose="check GLSL mod-gentype function test" result="PASS" /><testcase id="glsl-function-nodes" purpose="check GLSL function nodes Test" result="PASS" /><testcase id="glsl-function-normalize" purpose="Check GLSL normalize function works" result="PASS" /><testcase id="glsl-function-reflect" purpose="check GLSL reflect function test" result="PASS" /><testcase id="glsl-function-sign" purpose="check GLSL sign function test" result="PASS" /><testcase id="glsl-function-sin" purpose="Check GLSL sin function test" result="PASS" /><testcase id="glsl-function-smoothstep-float" purpose="check GLSL smoothstep-gentype function test" result="PASS" /><testcase id="glsl-function-smoothstep-gentype" purpose="check  GLSL smoothstep-gentype function test" result="PASS" /><testcase id="glsl-function-step-float" purpose="check GLSL step-float function test" result="PASS" /><testcase id="glsl-function-step-gentype" purpose="check GLSL step-gentype function test" result="PASS" /><testcase id="glsl-long-variable-names" purpose="check that shader long variable names works fine if they are within 256 characters" result="PASS" /><testcase id="greater_than.vert" purpose="Check if cast of int to float with greater than failed" result="PASS" /><testcase id="greater_than_equal.vert" purpose="Check if cast of int to float with greater than or equal to failed" result="PASS" /><testcase id="index-validation-crash-with-buffer-sub-data" purpose="Verifies that the index validation code which is within bufferSubData does not crash" result="PASS" /><testcase id="index-validation-with-resized-buffer" purpose="Test that updating the size of a vertex buffer is properly noticed by the WebGL implementation" result="PASS" /><testcase id="instanceof-test" purpose="Instanceof test" result="PASS" /><testcase id="invalid-passed-params" purpose="Test for invalid passed parameters" result="PASS" /><testcase id="invalid-UTF-16" purpose="This test verifies that the internal conversion from UTF16 to UTF8 is robust to invalid inputs. Any DOM entry point which converts an incoming string to UTF8 could be used for this test" result="PASS" /><testcase id="is-object" purpose="Tests 'is' calls against non-bound and deleted objects" result="PASS" /><testcase id="isTests" purpose="Check testIs function works" result="PASS" /><testcase id="less_than.vert" purpose="check less than vert" result="PASS" /><testcase id="less_than_equal.vert" purpose="Check if cast of int to float with less than or equal to failed" result="PASS" /><testcase id="line-loop-tri-fan" purpose="Verify that LINE_LOOP and TRIANGLE_FAN works correctly" result="PASS" /><testcase id="more-than-65536-indices" purpose="Checks that rendering with more than 65536 indices works" result="PASS" /><testcase id="multiply_int_float.vert" purpose="Check if cast of int to float in multiply failed" result="PASS" /><testcase id="multiply_int_mat2.vert" purpose="Check if cast of int to mat2 in multiply failed" result="PASS" /><testcase id="multiply_int_mat3.vert" purpose="Check implicit cast of int to mat3 in multiply should fail" result="PASS" /><testcase id="multiply_int_mat4.vert" purpose="Check if cast of int to mat4 in multiply failed" result="PASS" /><testcase id="multiply_int_vec2.vert" purpose="Check if cast of int to vec2 in multiply failed" result="PASS" /><testcase id="multiply_int_vec3.vert" purpose="Check if cast of int to vec3 in multiply failed" result="PASS" /><testcase id="multiply_int_vec4.vert" purpose="Check if cast of int to vec4 in multiply failed" result="PASS" /><testcase id="multiply_ivec2_vec2.vert" purpose="Check that cast of ivec2 to vec2 in multiply failed" result="PASS" /><testcase id="multiply_ivec3_vec3.vert" purpose="Check if cast of ivec3 to vec3 in multiply failed" result="PASS" /><testcase id="multiply_ivec4_vec4.vert" purpose="Check if cast of ivec4 to vec4 in multiply failed" result="PASS" /><testcase id="non-ascii-comments.vert" purpose="Check that non ascii comments in source succeeded" result="PASS" /><testcase id="non-ascii.vert" purpose="Check that non ascii data in source should fail" result="PASS" /><testcase id="not_equal_int_float.vert" purpose="Check implicit cast of int to float in not equal comparison should fail" result="PASS" /><testcase id="not_equal_ivec2_vec2.vert" purpose="Check if cast of ivec2 to vec2 in not equal comparison failed" result="PASS" /><testcase id="not_equal_ivec3_vec3.vert" purpose="Check that cast of ivec3 to vec3 in not equal comparison should fail" result="PASS" /><testcase id="not_equal_ivec4_vec4.vert" purpose="Check implicit cast of ivec4 to vec4 in not equal comparison should fail" result="PASS" /><testcase id="oes-texture-float" purpose="Check shaders for testing floating-point" result="PASS" /><testcase id="oes-vertex-array-object" purpose="Check the functionality of the OES_vertex_array_object extension, if it is available" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="origin-clean-conformance" purpose="Check if WebGL implementations follow proper same-origin restrictions" result="PASS" /><testcase id="point-size" purpose="Verify GL_VERTEX_PROGRAM_POINT_SIZE is enabled in WebGL" result="PASS" /><testcase id="premultiplyalpha-test" purpose="Check WebGL premultipliedAlpha context creation flag" result="PASS" /><testcase id="program-test" purpose="Tests that program compiling/linking/using works correctly" result="PASS" /><testcase id="quickCheckAPI-A" purpose="Test that all A functions specified in ArgGenerators work when called with randomly generated valid arguments" result="PASS" /><testcase id="quickCheckAPI-B1" purpose="Test that all B1 functions specified in ArgGenerators work when called with randomly generated valid arguments" result="PASS" /><testcase id="quickCheckAPI-B2" purpose="Test that all B2 functions specified in ArgGenerators work when called with randomly generated valid arguments" result="PASS" /><testcase id="quickCheckAPI-B3" purpose="Test that all B3 functions specified in ArgGenerators work when called with randomly generated valid arguments" result="PASS" /><testcase id="quickCheckAPI-B4" purpose="Test that all B4 functions specified in ArgGenerators work when called with randomly generated valid arguments" result="PASS" /><testcase id="quickCheckAPI-C" purpose="Test that all C functions specified in ArgGenerators work when called with randomly generated valid arguments" result="PASS" /><testcase id="quickCheckAPI-D_G" purpose="Test that all DG functions specified in ArgGenerators work when called with randomly generated valid arguments" result="PASS" /><testcase id="quickCheckAPI-G_I" purpose="Test that all GI functions specified in ArgGenerators work when called with randomly generated valid arguments" result="PASS" /><testcase id="quickCheckAPI-L_S" purpose="Test that all LS functions specified in ArgGenerators work when called with randomly generated valid arguments" result="PASS" /><testcase id="quickCheckAPI-S_V" purpose="Test that all SV functions specified in ArgGenerators work when called with randomly generated valid arguments" result="PASS" /><testcase id="read-pixels-pack-alignment" purpose="Check readPixels method works fine with various PACK_ALIGNMENT values" result="PASS" /><testcase id="read-pixels-test" purpose="Checks that ReadPixels works as expected" result="PASS" /><testcase id="readPixels" purpose="Check if readPixels method works" result="PASS" /><testcase id="readPixelsBadArgs" purpose="Check if WebGLRenderingContext readPixels method works properly with bad args" result="PASS" /><testcase id="renderbuffer-initialization" purpose="Verify renderbuffers are initialized to 0 before being read in WebGL" result="PASS" /><testcase id="shader-precision-format" purpose="Tests that WebGLShaderPrecisionFormat class and getShaderPrecisionFormat work" result="PASS" /><testcase id="shader-with-256-character-identifier.frag" purpose="Check if shader that uses 256 character identifier succeeded" result="PASS" /><testcase id="shader-with-257-character-identifier.frag" purpose="Check if shader that uses 257 character identifier failed" result="PASS" /><testcase id="shader-with-arbitrary-indexing.frag" purpose="Check that vertex shader with arbitrary indexing expression succeeded" result="PASS" /><testcase id="shader-with-arbitrary-indexing.vert" purpose="check the arbitrary of indexing.vert" result="PASS" /><testcase id="shader-with-attrib-array.vert" purpose="Check thatvertex shader that uses attribute array failed  as per GLSL page 110, appendix A, section 5" result="PASS" /><testcase id="shader-with-attrib-struct.vert" purpose="Check that vertex shader that uses attribute struct failed per GLSL ES section 4.4.3, 'Attribute', p. 30" result="PASS" /><testcase id="shader-with-clipvertex.vert" purpose="Check if vertex shader that uses gl_ClipVertex failed" result="PASS" /><testcase id="shader-with-default-precision.frag" purpose="Check that fragment shader with default precision succeeded" result="PASS" /><testcase id="shader-with-default-precision.vert" purpose="Check that vertex shader with default precision succeeded" result="PASS" /><testcase id="shader-with-define-line-continuation.frag" purpose="Check if fragment shader that uses line continuation macro failed" result="PASS" /><testcase id="shader-with-dfdx-no-ext.frag" purpose="Check if fragment shader that uses dFdx without extension failed" result="PASS" /><testcase id="shader-with-dfdx.frag" purpose="Check if fragment shader that uses dFdx failed" result="PASS" /><testcase id="shader-with-error-directive" purpose="Check shader with error directive" result="PASS" /><testcase id="shader-with-explicit-int-cast.vert" purpose="Check that vertex shader that explicit int to float cast succeeded" result="PASS" /><testcase id="shader-with-float-return-value.frag" purpose="Check if shader with float return value from function call succeeded" result="PASS" /><testcase id="shader-with-frag-depth.frag" purpose="Check if fragment shader that uses gl_FragDepth failed" result="PASS" /><testcase id="shader-with-function-recursion.frag" purpose="Check if shader with recursive function calls should fail" result="PASS" /><testcase id="shader-with-glcolor.vert" purpose="Check vertex shader that uses gl_Color should fail" result="PASS" /><testcase id="shader-with-gles-1.frag" purpose="Check that fragment shader that expects GL_ES == 1 should succeed" result="PASS" /><testcase id="shader-with-gles-symbol.frag" purpose="Check that fragment shader that uses GL_ES preprocessor symbol succeeded" result="PASS" /><testcase id="shader-with-glprojectionmatrix.vert" purpose="Check if vertex shader that uses gl_ProjectionMatrix failed" result="PASS" /><testcase id="shader-with-implicit-vec3-to-vec4-cast.vert" purpose="Check if vertex shader that implicit vec3 to vec4 cast failed" result="PASS" /><testcase id="shader-with-include.vert" purpose="Check vertex shader uses #include failed" result="PASS" /><testcase id="shader-with-int-return-value.frag" purpose="Check that shader with int return value from function call succeeded" result="PASS" /><testcase id="shader-with-invalid-identifier.frag" purpose="Check if fragment shader with gl_ identifier failed" result="PASS" /><testcase id="shader-with-ivec2-return-value.frag" purpose="Check that shader with ivec2 return value from function call succeeded" result="PASS" /><testcase id="shader-with-ivec3-return-value.frag" purpose="Check that shader with ivec3 return value from function call succeeded" result="PASS" /><testcase id="shader-with-ivec4-return-value.frag" purpose="Check that shader with ivec4 return value from function call succeeded" result="PASS" /><testcase id="shader-with-limited-indexing.frag" purpose="Check that fragment shader with appropriately limited indexing expression succeeded" result="PASS" /><testcase id="shader-with-long-line" purpose="Checks shader with long line succeeds" result="PASS" /><testcase id="shader-with-non-ascii-error.frag" purpose="Check shader with error directive using characters outside of allowed set fails will return INVALID_VALUE" result="PASS" /><testcase id="shader-with-precision.frag" purpose="Check if cast of int to float with less than failed" result="PASS" /><testcase id="shader-with-quoted-error.frag" purpose="Check if shader with error directive using quotes failed" result="PASS" /><testcase id="shader-with-undefined-preprocessor-symbol.frag" purpose="Check if according to ES GLSL spec 3.4 undefined symbols failed" result="PASS" /><testcase id="shader-with-uniform-in-loop-condition.vert" purpose="Check if vertex shader with uniform variable in loop condition failed" result="PASS" /><testcase id="shader-with-vec2-return-value.frag" purpose="Check shader with vec2 return value from function call should succeed" result="PASS" /><testcase id="shader-with-vec3-return-value.frag" purpose="Check that shader with vec3 return value from function call succeeded" result="PASS" /><testcase id="shader-with-vec4-return-value.frag" purpose="Check if shader with vec4 return value from function call succeeded" result="PASS" /><testcase id="shader-with-version-100.frag" purpose="Check fragment shader that uses __VERSION__==100 should succeed" result="PASS" /><testcase id="shader-with-version-100.vert" purpose="Check that vertex shader uses the #version 100 directive succeeded" result="PASS" /><testcase id="shader-with-version-120.vert" purpose="Check vertex shader uses the #version 120 not 100 directive should fail" result="PASS" /><testcase id="shader-with-version-130.vert" purpose="Check vertex shader uses the #version 130 not 100 directive should fail" result="PASS" /><testcase id="shader-with-webgl-identifier.vert" purpose="Check if vertex shader that uses webgl identifier failed" result="PASS" /><testcase id="shader-with-_webgl-identifier.vert" purpose="Check that vertex shader that uses webgl identifier failed" result="PASS" /><testcase id="shader-without-precision.frag" purpose="Check if fragment shader without precision failed" result="PASS" /><testcase id="shared" purpose="Check if shared vertex shader should succeed" result="PASS" /><testcase id="struct-nesting-exceeds-maximum" purpose="Check if shader with too-deep struct nesting failed per WebGL spec" result="PASS" /><testcase id="struct-nesting-under-maximum" purpose="Check that shader with struct nesting less than maximum in WebGL spec succeeded" result="PASS" /><testcase id="subtract_int_float.vert" purpose="Check implicit cast of int to float in subtraction should fail" result="PASS" /><testcase id="subtract_int_mat2.vert" purpose="Check implicit cast of int to mat2 in subtraction should fail" result="PASS" /><testcase id="subtract_int_mat3.vert" purpose="Check implicit cast of int to mat3 in subtraction should fail" result="PASS" /><testcase id="subtract_int_mat4.vert" purpose="Check if cast of int to mat4 in subtraction failed" result="PASS" /><testcase id="subtract_int_vec2.vert" purpose="Check if cast of int to vec2 in subtraction failed" result="PASS" /><testcase id="subtract_int_vec3.vert" purpose="Check if cast of int to vec3 in subtraction failed" result="PASS" /><testcase id="subtract_int_vec4.vert" purpose="Check if cast of int to vec4 in subtraction failed" result="PASS" /><testcase id="subtract_ivec2_vec2.vert" purpose="Check if cast of ivec2 to vec2 in subtraction failed" result="PASS" /><testcase id="subtract_ivec3_vec3.vert" purpose="check property of subtract_ivec3_vec3.vert" result="PASS" /><testcase id="subtract_ivec4_vec4.vert" purpose="Check if cast of ivec4 to vec4 in subtraction failed" result="PASS" /><testcase id="ternary_int_float.vert" purpose="Check if cast of int to float in ternary expression failed" result="PASS" /><testcase id="ternary_ivec2_vec2.vert" purpose="Check if cast of ivec2 to vec2 in ternary expression failed" result="PASS" /><testcase id="ternary_ivec3_vec3.vert" purpose="Check implicit cast of ivec3 to vec3 in ternary expression should fail" result="PASS" /><testcase id="ternary_ivec4_vec4.vert" purpose="Check if cast of ivec4 to vec4 in ternary expression failed" result="PASS" /><testcase id="tex-image-and-sub-image-2d-with-array-buffer-view" purpose="Verifies texImage2D and texSubImage2D code paths taking ArrayBufferView" result="PASS" /><testcase id="tex-image-and-sub-image-2d-with-canvas" purpose="Verify texImage2D and texSubImage2D code paths taking canvas" result="PASS" /><testcase id="tex-image-and-sub-image-2d-with-image" purpose="Verify texImage2D and texSubImage2D code paths taking Images" result="PASS" /><testcase id="tex-image-and-sub-image-2d-with-image-data" purpose="Verify texImage2D and texSubImage2D code paths taking ImageData" result="PASS" /><testcase id="tex-image-and-sub-image-2d-with-video" purpose="Check texImage2D and texSubImage2D code paths taking Video Elements" result="PASS" /><testcase id="tex-image-and-uniform-binding-bugs" purpose="Tests passing a vec4 to a uniform and a canvas to texImage2D" result="PASS" /><testcase id="tex-image-with-format-and-type" purpose="Verify texImage2D and texSubImage2D code paths taking both HTML and user-specified data with all format/type combinations" result="PASS" /><testcase id="tex-image-with-invalid-data" purpose="TexImage2D and texSubImage2D tests with invalid data" result="PASS" /><testcase id="tex-input-validation" purpose="Validate text functions input parameters" result="PASS" /><testcase id="tex-sub-image-2d" purpose="Tests texSubImage2D upload path from Uint8Array" result="PASS" /><testcase id="tex-sub-image-2d-bad-args" purpose="Check tex-sub-image-2d with bad arguments" result="PASS" /><testcase id="texImage2D" purpose="Check if texImage2D function works" result="PASS" /><testcase id="texImage2DBadArgs" purpose="This test check the bad args in texSubImage2D" result="PASS" /><testcase id="texImage2DHTMLBadArgs" purpose="Check texImage2D function with bad arguments" result="PASS" /><testcase id="texparameter-test" purpose="Tests TexParameter works as expected" result="PASS" /><testcase id="texSubImage2D" purpose="Check texSubImage2D function works" result="PASS" /><testcase id="texSubImage2DBadArgs" purpose="Check texSubImage2D with bad arguments" result="PASS" /><testcase id="texSubImage2DHTMLBadArgs" purpose="Check texSubImage2DHTML with bad arguments" result="PASS" /><testcase id="texture-active-bind" purpose="Tests that glActiveTexture and glBindTexture work as expected specifically texture targets are per active texture unit" result="PASS" /><testcase id="texture-active-bind-2" purpose="Tests that binding both TEXTURE_2D and TEXTURE_CUBE_MAP to the same active texture unit works as long as they are not used simultaneously in the same shader program" result="PASS" /><testcase id="texture-complete" purpose="Checks that a texture that is not -texture-complete- does not draw if filtering needs mips" result="PASS" /><testcase id="texture-formats-test" purpose="Check WebGL implementations allow the OpenGL ES 2.0 texture formats and do not allow DesktopGL texture formats" result="PASS" /><testcase id="texture-mips" purpose="Checks mip issues" result="PASS" /><testcase id="texture-npot" purpose="check WebGL Non-Power of 2 texture conformance test" result="PASS" /><testcase id="texture-npot-video" purpose="Check WebGL npot video" result="PASS" /><testcase id="texture-size" purpose="Checks that various sizes of textures render" result="PASS" /><testcase id="texture-size-cube-maps" purpose="Checks issues with size of cube map textures" result="PASS" /><testcase id="texture-transparent-pixels-initialized" purpose="Tests there is no garbage in transparent regions of images uploaded as textures" result="PASS" /><testcase id="triangle" purpose="Check Rendering Test" result="PASS" /><testcase id="uniform-location-length-limits" purpose="Verify limits on the lengths of uniform locations per WebGL spec, Maximum Uniform and Attribute Location Lengths" result="PASS" /><testcase id="uniform-samplers-test" purpose="Tests that only Uniform1i and Uniform1iv can be used to set sampler uniforms" result="PASS" /><testcase id="uniformf" purpose="Check if uniformf function works" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="uniformfArrayLen1" purpose="Check uniformfArray works" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="uniformfBadArgs" purpose="Check uniformf with bad arguments" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="uniformi" purpose="Check if uniformi function works" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="uniformiBadArgs" purpose="Check if uniformi with bad arguments" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="uniformMatrix" purpose="Check if uniformMatrix function works" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="uniformMatrixBadArgs" purpose="Check if uniformMatrix with bad arguments" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="uniformOutOfBounds" purpose="Check uniform out of bounds" result="PASS" /><testcase id="uninitialized-test" purpose="Tests to check user code cannot access uninitialized data from GL resources" result="PASS" /><testcase id="vertexAttrib" purpose="Check vertexAttrib function works" result="PASS" /><testcase id="vertexAttribBadArgs" purpose="Check vertexAttrib with bad arguments" result="PASS" /><testcase id="vertexAttribPointer" purpose="Check vertexAttribPointer function works" result="PASS" /><testcase id="vertexAttribPointerBadArgs" purpose="Check vertexAttribPointer function with bad arguments" result="PASS" /><testcase id="viewport-unchanged-upon-resize" purpose="Check WebGL viewport does not change when canvas is resized" result="PASS" /><testcase id="webgl-debug-renderer-info" purpose="This test verifies the functionality of the [Spec]Tizen Web API_W3C/HTML5 Specifications_Content related specifications (documents, graphics, multimedia, etc.)_WebGL (Khronos Spec)_debug_renderer_info extension, if it is available" result="PASS" /><testcase id="webgl-debug-shaders" purpose="This test verifies the functionality of the  webGL_debug_shaders extension, if it is available" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3063 XWALK-3063]]</testcase><testcase id="webglactiveinfo_name_exists" purpose="Check if WebGLActiveInfo.name exists" result="PASS" /><testcase id="webglactiveinfo_name_get_value" purpose="Check if WebGLActiveInfo.name get the name of the requested variable" result="PASS" /><testcase id="webglactiveinfo_name_readonly" purpose="Check if WebGLActiveInfo.name is readonly" result="PASS" /><testcase id="webglactiveinfo_name_type" purpose="Check if the type of WebGLActiveInfo.name is 'string'" result="PASS" /><testcase id="webglactiveinfo_size_exists" purpose="Check if WebGLActiveInfo.size exists" result="PASS" /><testcase id="webglactiveinfo_size_get_value" purpose="Check if WebGLActiveInfo.size get the size of the requested variable" result="PASS" /><testcase id="webglactiveinfo_size_readonly" purpose="Check if WebGLActiveInfo.size is readonly" result="PASS" /><testcase id="webglactiveinfo_size_type" purpose="Check if the type of WebGLActiveInfo.size is 'number'" result="PASS" /><testcase id="webglactiveinfo_type_exists" purpose="Check if WebGLActiveInfo.type exists" result="PASS" /><testcase id="webglactiveinfo_type_get_value" purpose="Check if WebGLActiveInfo.type get the data type of the requested variable" result="PASS" /><testcase id="webglactiveinfo_type_readonly" purpose="Check if WebGLActiveInfo.type is readonly" result="PASS" /><testcase id="webglactiveinfo_type_type" purpose="Check if the type of WebGLActiveInfo.type is 'number'" result="PASS" /><testcase id="webGLArrays" purpose="Check webGL arrays works" result="PASS" /><testcase id="webglcontextattributes_alpha_default_value" purpose="Check if the default value of WebGLContextAttributes.alpha is true" result="PASS" /><testcase id="webglcontextattributes_alpha_exists" purpose="Check if WebGLContextAttributes.alpha exists" result="PASS" /><testcase id="webglcontextattributes_alpha_type" purpose="Check if the type of WebGLContextAttributes.alpha is 'boolean'" result="PASS" /><testcase id="webglcontextattributes_antialias_exists" purpose="Check if WebGLContextAttributes.antialias exists" result="PASS" /><testcase id="webglcontextattributes_antialias_type" purpose="Check if the type of WebGLContextAttributes.antialias is 'boolean'" result="PASS" /><testcase id="webglcontextattributes_depth_default_value" purpose="Check if the default value of WebGLContextAttributes.depth is true" result="PASS" /><testcase id="webglcontextattributes_depth_exists" purpose="Check if WebGLContextAttributes.depth exists" result="PASS" /><testcase id="webglcontextattributes_depth_type" purpose="Check if the type of WebGLContextAttributes.depth is 'boolean'" result="PASS" /><testcase id="webglcontextattributes_passed_second_parameter" purpose="Check if webglcontextattributes is passed as the second parameter to getContext" result="PASS" /><testcase id="webglcontextattributes_premultipliedAlpha_default_value" purpose="Check if the default value of WebGLContextAttributes.premultipliedAlpha is true" result="PASS" /><testcase id="webglcontextattributes_premultipliedAlpha_exists" purpose="Check if WebGLContextAttributes.premultipliedAlpha exists" result="PASS" /><testcase id="webglcontextattributes_premultipliedAlpha_type" purpose="Check if the type of WebGLContextAttributes.premultipliedAlpha is 'boolean'" result="PASS" /><testcase id="webglcontextattributes_preserveDrawingBuffer_default_value" purpose="Check if the default value of WebGLContextAttributes.preserveDrawingBuffer is true" result="PASS" /><testcase id="webglcontextattributes_preserveDrawingBuffer_exists" purpose="Check if WebGLContextAttributes.preserveDrawingBuffer exists" result="PASS" /><testcase id="webglcontextattributes_preserveDrawingBuffer_type" purpose="Check if the type of WebGLContextAttributes.preserveDrawingBuffer is 'boolean'" result="PASS" /><testcase id="webglcontextattributes_stencil_default_value" purpose="Check if the default value of WebGLContextAttributes.stencil is true" result="PASS" /><testcase id="webglcontextattributes_stencil_exists" purpose="Check if WebGLContextAttributes.stencil exists" result="PASS" /><testcase id="webglcontextattributes_stencil_type" purpose="Check if the type of WebGLContextAttributes.stencil is 'boolean'" result="PASS" /><testcase id="webglcontextevent_statusMessage_exists" purpose="Check if webglcontextevent.statusMessage exists" result="PASS" /><testcase id="webglrenderingcontext_activeTexture_exists" purpose="Check if WebGLRenderingContext.activeTexture exists" result="PASS" /><testcase id="webglrenderingcontext_activeTexture_null" purpose="Check if WebGLRenderingContext.activeTexture(null) throws a exception" result="PASS" /><testcase id="webglrenderingcontext_activeTexture_type" purpose="Check if the type of WebGLRenderingContext.activeTexture is 'function'" result="PASS" /><testcase id="webglrenderingcontext_ACTIVE_ATTRIBUTES_exists" purpose="Check if WebGLRenderingContext.ACTIVE_ATTRIBUTES exists" result="PASS" /><testcase id="webglrenderingcontext_ACTIVE_ATTRIBUTES_type" purpose="Check if the type of WebGLRenderingContext.ACTIVE_ATTRIBUTES is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ACTIVE_ATTRIBUTES_value" purpose="Check if WebGLRenderingContext.ACTIVE_ATTRIBUTES constant value is 0x8B89" result="PASS" /><testcase id="webglrenderingcontext_ACTIVE_TEXTURE_exists" purpose="Check if WebGLRenderingContext.ACTIVE_TEXTURE exists" result="PASS" /><testcase id="webglrenderingcontext_ACTIVE_TEXTURE_type" purpose="Check if the type of WebGLRenderingContext.ACTIVE_TEXTURE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ACTIVE_TEXTURE_value" purpose="Check if WebGLRenderingContext.ACTIVE_TEXTURE constant value is 0x84E0" result="PASS" /><testcase id="webglrenderingcontext_ACTIVE_UNIFORMS_exists" purpose="Check if WebGLRenderingContext.ACTIVE_UNIFORMS exists" result="PASS" /><testcase id="webglrenderingcontext_ACTIVE_UNIFORMS_type" purpose="Check if the type of WebGLRenderingContext.ACTIVE_UNIFORMS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ACTIVE_UNIFORMS_value" purpose="Check if WebGLRenderingContext.ACTIVE_UNIFORMS constant value is 0x8B86" result="PASS" /><testcase id="webglrenderingcontext_ALIASED_LINE_WIDTH_RANGE_exists" purpose="Check if WebGLRenderingContext.ALIASED_LINE_WIDTH_RANGE exists" result="PASS" /><testcase id="webglrenderingcontext_ALIASED_LINE_WIDTH_RANGE_type" purpose="Check if the type of WebGLRenderingContext.ALIASED_LINE_WIDTH_RANGE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ALIASED_LINE_WIDTH_RANGE_value" purpose="Check if WebGLRenderingContext.ALIASED_LINE_WIDTH_RANGE constant value is 0x846E" result="PASS" /><testcase id="webglrenderingcontext_ALIASED_POINT_SIZE_RANGE_exists" purpose="Check if WebGLRenderingContext.ALIASED_POINT_SIZE_RANGE exists" result="PASS" /><testcase id="webglrenderingcontext_ALIASED_POINT_SIZE_RANGE_type" purpose="Check if the type of WebGLRenderingContext.ALIASED_POINT_SIZE_RANGE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ALIASED_POINT_SIZE_RANGE_value" purpose="Check if WebGLRenderingContext.ALIASED_POINT_SIZE_RANGE constant value is 0x846D" result="PASS" /><testcase id="webglrenderingcontext_ALPHA_BITS_exists" purpose="Check if WebGLRenderingContext.ALPHA_BITS exists" result="PASS" /><testcase id="webglrenderingcontext_ALPHA_BITS_type" purpose="Check if the type of WebGLRenderingContext.ALPHA_BITS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ALPHA_BITS_value" purpose="Check if WebGLRenderingContext.ALPHA_BITS constant value is 0x0D55" result="PASS" /><testcase id="webglrenderingcontext_ALPHA_exists" purpose="Check if WebGLRenderingContext.ALPHA exists" result="PASS" /><testcase id="webglrenderingcontext_ALPHA_type" purpose="Check if the type of WebGLRenderingContext.ALPHA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ALPHA_value" purpose="Check if WebGLRenderingContext.ALPHA constant value is 0x1906" result="PASS" /><testcase id="webglrenderingcontext_ALWAYS_exists" purpose="Check if WebGLRenderingContext.ALWAYS exists" result="PASS" /><testcase id="webglrenderingcontext_ALWAYS_type" purpose="Check if the type of WebGLRenderingContext.ALWAYS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ALWAYS_value" purpose="Check if WebGLRenderingContext.ALWAYS constant value is 0x0207" result="PASS" /><testcase id="webglrenderingcontext_ARRAY_BUFFER_BINDING_exists" purpose="Check if WebGLRenderingContext.ARRAY_BUFFER_BINDING exists" result="PASS" /><testcase id="webglrenderingcontext_ARRAY_BUFFER_BINDING_type" purpose="Check if the type of WebGLRenderingContext.ARRAY_BUFFER_BINDING is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ARRAY_BUFFER_BINDING_value" purpose="Check if WebGLRenderingContext.ARRAY_BUFFER_BINDING constant value is 0x8894" result="PASS" /><testcase id="webglrenderingcontext_ARRAY_BUFFER_exists" purpose="Check if WebGLRenderingContext.ARRAY_BUFFER exists" result="PASS" /><testcase id="webglrenderingcontext_ARRAY_BUFFER_type" purpose="Check if the type of WebGLRenderingContext.ARRAY_BUFFER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ARRAY_BUFFER_value" purpose="Check if WebGLRenderingContext.ARRAY_BUFFER constant value is 0x8892" result="PASS" /><testcase id="webglrenderingcontext_ATTACHED_SHADERS_exists" purpose="Check if WebGLRenderingContext.ATTACHED_SHADERS exists" result="PASS" /><testcase id="webglrenderingcontext_ATTACHED_SHADERS_type" purpose="Check if the type of WebGLRenderingContext.ATTACHED_SHADERS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ATTACHED_SHADERS_value" purpose="Check if WebGLRenderingContext.ATTACHED_SHADERS constant value is 0x8B85" result="PASS" /><testcase id="webglrenderingcontext_attachShader_basic" purpose="Check if WebGLRenderingContext.attachShader() attached shader to a program" result="PASS" /><testcase id="webglrenderingcontext_attachShader_exists" purpose="Check if WebGLRenderingContext.attachShader exists" result="PASS" /><testcase id="webglrenderingcontext_attachShader_null" purpose="Check if WebGLRenderingContext.attachShader(null) throws an exception" result="PASS" /><testcase id="webglrenderingcontext_attachShader_type" purpose="Check if the type of WebGLRenderingContext.attachShader is 'function'" result="PASS" /><testcase id="webglrenderingcontext_BACK_exists" purpose="Check if WebGLRenderingContext.BACK exists" result="PASS" /><testcase id="webglrenderingcontext_BACK_type" purpose="Check if the type of WebGLRenderingContext.BACK is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BACK_value" purpose="Check if WebGLRenderingContext.BACK constant value is 0x0405" result="PASS" /><testcase id="webglrenderingcontext_bindAttribLocation_exists" purpose="Check if WebGLRenderingContext.bindAttribLocation exists" result="PASS" /><testcase id="webglrenderingcontext_bindAttribLocation_type" purpose="Check if the type of WebGLRenderingContext.bindAttribLocation is 'function'" result="PASS" /><testcase id="webglrenderingcontext_bindBuffer_exists" purpose="Check if WebGLRenderingContext.bindBuffer exists" result="PASS" /><testcase id="webglrenderingcontext_bindBuffer_INVALID_OPERATION" purpose="Check if an attempt to bind a buffer object to the other target will generate an INVALID_OPERATION error" result="PASS" /><testcase id="webglrenderingcontext_bindBuffer_null" purpose="Check if the buffer is null then any buffer currently bound to this target is unbound" result="PASS" /><testcase id="webglrenderingcontext_bindBuffer_type" purpose="Check if the type of WebGLRenderingContext.bindBuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_bindFramebuffer_exists" purpose="Check if WebGLRenderingContext.bindFramebuffer exists" result="PASS" /><testcase id="webglrenderingcontext_bindFramebuffer_type" purpose="Check if the type of WebGLRenderingContext.bindFramebuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_bindRenderbuffer_exists" purpose="Check if WebGLRenderingContext.bindRenderbuffer exists" result="PASS" /><testcase id="webglrenderingcontext_bindRenderbuffer_type" purpose="Check if the type of WebGLRenderingContext.bindRenderbuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_bindTexture_exists" purpose="Check if WebGLRenderingContext.bindTexture exists" result="PASS" /><testcase id="webglrenderingcontext_bindTexture_INVALID_OPERATION" purpose="Check if no WebGLTexture is bound (e.g., passing null or 0 to bindTexture) then attempts to modify or query the texture object shall generate an INVALID_OPERATION error" result="PASS" /><testcase id="webglrenderingcontext_bindTexture_type" purpose="Check if the type of WebGLRenderingContext.bindTexture is 'function'" result="PASS" /><testcase id="webglrenderingcontext_blendColor_basic" purpose="Check if use WebGLRenderingContext.blendColor to set blend color" result="PASS" /><testcase id="webglrenderingcontext_blendColor_exists" purpose="Check if WebGLRenderingContext.blendColor exists" result="PASS" /><testcase id="webglrenderingcontext_blendColor_type" purpose="Check if the type of WebGLRenderingContext.blendColor is 'function'" result="PASS" /><testcase id="webglrenderingcontext_blendEquationSeparate_exists" purpose="Check if WebGLRenderingContext.blendEquationSeparate exists" result="PASS" /><testcase id="webglrenderingcontext_blendEquationSeparate_type" purpose="Check if the type of WebGLRenderingContext.blendEquationSeparate is 'function'" result="PASS" /><testcase id="webglrenderingcontext_blendEquation_exists" purpose="Check if WebGLRenderingContext.blendEquation exists" result="PASS" /><testcase id="webglrenderingcontext_blendEquation_type" purpose="Check if the type of WebGLRenderingContext.blendEquation is 'function'" result="PASS" /><testcase id="webglrenderingcontext_blendFuncSeparate_exists" purpose="Check if WebGLRenderingContext.blendFuncSeparate exists" result="PASS" /><testcase id="webglrenderingcontext_blendFuncSeparate_INVALID_OPERATION" purpose="Check if a call to blendFuncSeparate will generate an INVALID_OPERATION error if srcRGB is set to CONSTANT_COLOR or ONE_MINUS_CONSTANT_COLOR and dstRGB is set to CONSTANT_ALPHA or ONE_MINUS_CONSTANT_ALPHA or vice versa" result="PASS" /><testcase id="webglrenderingcontext_blendFuncSeparate_type" purpose="Check if the type of WebGLRenderingContext.blendFuncSeparate is 'function'" result="PASS" /><testcase id="webglrenderingcontext_blendFunc_basic" purpose="Check if use WebGLRenderingContext.blendFunc to set source color and destination color" result="PASS" /><testcase id="webglrenderingcontext_blendFunc_exists" purpose="Check if WebGLRenderingContext.blendFunc exists" result="PASS" /><testcase id="webglrenderingcontext_blendFunc_INVALID_OPERATION" purpose="Check if a call to blendFunc will generate an INVALID_OPERATION error if one of the two factors is set to CONSTANT_COLOR or ONE_MINUS_CONSTANT_COLOR and the other to CONSTANT_ALPHA or ONE_MINUS_CONSTANT_ALPHA" result="PASS" /><testcase id="webglrenderingcontext_blendFunc_type" purpose="Check if the type of WebGLRenderingContext.blendFunc is 'function'" result="PASS" /><testcase id="webglrenderingcontext_BLEND_COLOR_exists" purpose="Check if WebGLRenderingContext.BLEND_COLOR exists" result="PASS" /><testcase id="webglrenderingcontext_BLEND_COLOR_type" purpose="Check if the type of WebGLRenderingContext.BLEND_COLOR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BLEND_COLOR_value" purpose="Check if WebGLRenderingContext.BLEND_COLOR constant value is 0x8005" result="PASS" /><testcase id="webglrenderingcontext_BLEND_DST_ALPHA_exists" purpose="Check if WebGLRenderingContext.BLEND_DST_ALPHA exists" result="PASS" /><testcase id="webglrenderingcontext_BLEND_DST_ALPHA_type" purpose="Check if the type of WebGLRenderingContext.BLEND_DST_ALPHA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BLEND_DST_ALPHA_value" purpose="Check if WebGLRenderingContext.BLEND_DST_ALPHA constant value is 0x80CA" result="PASS" /><testcase id="webglrenderingcontext_BLEND_DST_RGB_exists" purpose="Check if WebGLRenderingContext.BLEND_DST_RGB exists" result="PASS" /><testcase id="webglrenderingcontext_BLEND_DST_RGB_type" purpose="Check if the type of WebGLRenderingContext.BLEND_DST_RGB is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BLEND_DST_RGB_value" purpose="Check if WebGLRenderingContext.BLEND_DST_RGB constant value is 0x80C8" result="PASS" /><testcase id="webglrenderingcontext_BLEND_EQUATION_ALPHA_exists" purpose="Check if WebGLRenderingContext.BLEND_EQUATION_ALPHA exists" result="PASS" /><testcase id="webglrenderingcontext_BLEND_EQUATION_ALPHA_type" purpose="Check if the type of WebGLRenderingContext.BLEND_EQUATION_ALPHA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BLEND_EQUATION_ALPHA_value" purpose="Check if WebGLRenderingContext.BLEND_EQUATION_ALPHA constant value is 0x883D" result="PASS" /><testcase id="webglrenderingcontext_BLEND_EQUATION_exists" purpose="Check if WebGLRenderingContext.BLEND_EQUATION exists" result="PASS" /><testcase id="webglrenderingcontext_BLEND_EQUATION_RGB_exists" purpose="Check if WebGLRenderingContext.BLEND_EQUATION_RGB exists" result="PASS" /><testcase id="webglrenderingcontext_BLEND_EQUATION_RGB_type" purpose="Check if the type of WebGLRenderingContext.BLEND_EQUATION_RGB is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BLEND_EQUATION_RGB_value" purpose="Check if WebGLRenderingContext.BLEND_EQUATION_RGB constant value is 0x8009" result="PASS" /><testcase id="webglrenderingcontext_BLEND_EQUATION_type" purpose="Check if the type of WebGLRenderingContext.BLEND_EQUATION is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BLEND_EQUATION_value" purpose="Check if WebGLRenderingContext.BLEND_EQUATION constant value is 0x8009" result="PASS" /><testcase id="webglrenderingcontext_BLEND_exists" purpose="Check if WebGLRenderingContext.BLEND exists" result="PASS" /><testcase id="webglrenderingcontext_BLEND_SRC_ALPHA_exists" purpose="Check if WebGLRenderingContext.BLEND_SRC_ALPHA exists" result="PASS" /><testcase id="webglrenderingcontext_BLEND_SRC_ALPHA_type" purpose="Check if the type of WebGLRenderingContext.BLEND_SRC_ALPHA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BLEND_SRC_ALPHA_value" purpose="Check if WebGLRenderingContext.BLEND_SRC_ALPHA constant value is 0x80CB" result="PASS" /><testcase id="webglrenderingcontext_BLEND_SRC_RGB_exists" purpose="Check if WebGLRenderingContext.BLEND_SRC_RGB exists" result="PASS" /><testcase id="webglrenderingcontext_BLEND_SRC_RGB_type" purpose="Check if the type of WebGLRenderingContext.BLEND_SRC_RGB is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BLEND_SRC_RGB_value" purpose="Check if WebGLRenderingContext.BLEND_SRC_RGB constant value is 0x80C9" result="PASS" /><testcase id="webglrenderingcontext_BLEND_type" purpose="Check if the type of WebGLRenderingContext.BLEND is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BLEND_value" purpose="Check if WebGLRenderingContext.BLEND constant value is 0x0BE2" result="PASS" /><testcase id="webglrenderingcontext_BLUE_BITS_exists" purpose="Check if WebGLRenderingContext.BLUE_BITS exists" result="PASS" /><testcase id="webglrenderingcontext_BLUE_BITS_type" purpose="Check if the type of WebGLRenderingContext.BLUE_BITS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BLUE_BITS_value" purpose="Check if WebGLRenderingContext.BLUE_BITS constant value is 0x0D54" result="PASS" /><testcase id="webglrenderingcontext_BOOL_exists" purpose="Check if WebGLRenderingContext.BOOL exists" result="PASS" /><testcase id="webglrenderingcontext_BOOL_type" purpose="Check if the type of WebGLRenderingContext.BOOL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BOOL_value" purpose="Check if WebGLRenderingContext.BOOL constant value is 0x8B56" result="PASS" /><testcase id="webglrenderingcontext_BOOL_VEC2_exists" purpose="Check if WebGLRenderingContext.BOOL_VEC2 exists" result="PASS" /><testcase id="webglrenderingcontext_BOOL_VEC2_type" purpose="Check if the type of WebGLRenderingContext.BOOL_VEC2 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BOOL_VEC2_value" purpose="Check if WebGLRenderingContext.BOOL_VEC2 constant value is 0x8B57" result="PASS" /><testcase id="webglrenderingcontext_BOOL_VEC3_exists" purpose="Check if WebGLRenderingContext.BOOL_VEC3 exists" result="PASS" /><testcase id="webglrenderingcontext_BOOL_VEC3_type" purpose="Check if the type of WebGLRenderingContext.BOOL_VEC3 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BOOL_VEC3_value" purpose="Check if WebGLRenderingContext.BOOL_VEC3 constant value is 0x8B58" result="PASS" /><testcase id="webglrenderingcontext_BOOL_VEC4_exists" purpose="Check if WebGLRenderingContext.BOOL_VEC4 exists" result="PASS" /><testcase id="webglrenderingcontext_BOOL_VEC4_type" purpose="Check if the type of WebGLRenderingContext.BOOL_VEC4 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BOOL_VEC4_value" purpose="Check if WebGLRenderingContext.BOOL_VEC4 constant value is 0x8B59" result="PASS" /><testcase id="webglrenderingcontext_BROWSER_DEFAULT_WEBGL_exists" purpose="Check if WebGLRenderingContext.BROWSER_DEFAULT_WEBGL exists" result="PASS" /><testcase id="webglrenderingcontext_BROWSER_DEFAULT_WEBGL_type" purpose="Check if the type of WebGLRenderingContext.BROWSER_DEFAULT_WEBGL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BROWSER_DEFAULT_WEBGL_value" purpose="Check if WebGLRenderingContext.BROWSER_DEFAULT_WEBGL constant value is 0x9244" result="PASS" /><testcase id="webglrenderingcontext_bufferData_basic" purpose="Check if use WebGLRenderingContext.bufferData() to set buffer data" result="PASS" /><testcase id="webglrenderingcontext_bufferData_exists" purpose="Check if WebGLRenderingContext.bufferData exists" result="PASS" /><testcase id="webglrenderingcontext_bufferData_INVALID_VALUE" purpose="Check if the passed data is null then an INVALID_VALUE error is generated" result="PASS" /><testcase id="webglrenderingcontext_bufferData_type" purpose="Check if the type of WebGLRenderingContext.bufferData is 'function'" result="PASS" /><testcase id="webglrenderingcontext_bufferSubData_exists" purpose="Check if WebGLRenderingContext.bufferSubData exists" result="PASS" /><testcase id="webglrenderingcontext_bufferSubData_type" purpose="Check if the type of WebGLRenderingContext.bufferSubData is 'function'" result="PASS" /><testcase id="webglrenderingcontext_BUFFER_SIZE_exists" purpose="Check if WebGLRenderingContext.BUFFER_SIZE exists" result="PASS" /><testcase id="webglrenderingcontext_BUFFER_SIZE_type" purpose="Check if the type of WebGLRenderingContext.BUFFER_SIZE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BUFFER_SIZE_value" purpose="Check if WebGLRenderingContext.BUFFER_SIZE constant value is 0x8764" result="PASS" /><testcase id="webglrenderingcontext_BUFFER_USAGE_exists" purpose="Check if WebGLRenderingContext.BUFFER_USAGE exists" result="PASS" /><testcase id="webglrenderingcontext_BUFFER_USAGE_type" purpose="Check if the type of WebGLRenderingContext.BUFFER_USAGE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BUFFER_USAGE_value" purpose="Check if WebGLRenderingContext.BUFFER_USAGE constant value is 0x8765" result="PASS" /><testcase id="webglrenderingcontext_BYTE_exists" purpose="Check if WebGLRenderingContext.BYTE exists" result="PASS" /><testcase id="webglrenderingcontext_BYTE_type" purpose="Check if the type of WebGLRenderingContext.BYTE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_BYTE_value" purpose="Check if WebGLRenderingContext.BYTE constant value is 0x1400" result="PASS" /><testcase id="webglrenderingcontext_canvas_exists" purpose="Check if WebGLRenderingContext.canvas exists" result="PASS" /><testcase id="webglrenderingcontext_canvas_get_value" purpose="Check if WebGLRenderingContext.canvas return a reference to the canvas element which created this context" result="PASS" /><testcase id="webglrenderingcontext_canvas_readonly" purpose="Check if WebGLRenderingContext.canvas is readonly" result="PASS" /><testcase id="webglrenderingcontext_canvas_type" purpose="Check if the type of WebGLRenderingContext.canvas is a HTMLCanvasElement object" result="PASS" /><testcase id="webglrenderingcontext_case_sensitive" purpose="Check if the exact string 'webgl' or 'experimental-webgl' is case sensitive" result="PASS" /><testcase id="webglrenderingcontext_CCW_exists" purpose="Check if WebGLRenderingContext.CCW exists" result="PASS" /><testcase id="webglrenderingcontext_CCW_type" purpose="Check if the type of WebGLRenderingContext.CCW is 'number'" result="PASS" /><testcase id="webglrenderingcontext_CCW_value" purpose="Check if WebGLRenderingContext.CCW constant value is 0x0901" result="PASS" /><testcase id="webglrenderingcontext_checkFramebufferStatus_basic" purpose="Check if use WebGLRenderingContext.checkFramebufferStatus() to check the status of Framebuffer" result="PASS" /><testcase id="webglrenderingcontext_checkFramebufferStatus_exists" purpose="Check if WebGLRenderingContext.checkFramebufferStatus exists" result="PASS" /><testcase id="webglrenderingcontext_checkFramebufferStatus_type" purpose="Check if the type of WebGLRenderingContext.checkFramebufferStatus is 'function'" result="PASS" /><testcase id="webglrenderingcontext_CLAMP_TO_EDGE_exists" purpose="Check if WebGLRenderingContext.CLAMP_TO_EDGE exists" result="PASS" /><testcase id="webglrenderingcontext_CLAMP_TO_EDGE_type" purpose="Check if the type of WebGLRenderingContext.CLAMP_TO_EDGE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_CLAMP_TO_EDGE_value" purpose="Check if WebGLRenderingContext.CLAMP_TO_EDGE constant value is 0x812F" result="PASS" /><testcase id="webglrenderingcontext_clearColor_basic" purpose="Check if use WebGLRenderingContext.clearColor to clear color" result="PASS" /><testcase id="webglrenderingcontext_clearColor_exists" purpose="Check if WebGLRenderingContext.clearColor exists" result="PASS" /><testcase id="webglrenderingcontext_clearColor_type" purpose="Check if the type of WebGLRenderingContext.clearColor is 'function'" result="PASS" /><testcase id="webglrenderingcontext_clearDepth_basic" purpose="Check if ues WebGLRenderingContext.clearDepth to clear depth" result="PASS" /><testcase id="webglrenderingcontext_clearDepth_exists" purpose="Check if WebGLRenderingContext.clearDepth exists" result="PASS" /><testcase id="webglrenderingcontext_clearDepth_type" purpose="Check if the type of WebGLRenderingContext.clearDepth is 'function'" result="PASS" /><testcase id="webglrenderingcontext_clearStencil_basic" purpose="Check if use WebGLRenderingContext.clearStencil to clear stencil" result="PASS" /><testcase id="webglrenderingcontext_clearStencil_exists" purpose="Check if WebGLRenderingContext.clearStencil exists" result="PASS" /><testcase id="webglrenderingcontext_clearStencil_type" purpose="Check if the type of WebGLRenderingContext.clearStencil is 'function'" result="PASS" /><testcase id="webglrenderingcontext_clear_exists" purpose="Check if WebGLRenderingContext.clear exists" result="PASS" /><testcase id="webglrenderingcontext_clear_type" purpose="Check if the type of WebGLRenderingContext.clear is 'function'" result="PASS" /><testcase id="webglrenderingcontext_colorMask_exists" purpose="Check if WebGLRenderingContext.colorMask exists" result="PASS" /><testcase id="webglrenderingcontext_colorMask_type" purpose="Check if the type of WebGLRenderingContext.colorMask is 'function'" result="PASS" /><testcase id="webglrenderingcontext_COLOR_ATTACHMENT0_exists" purpose="Check if WebGLRenderingContext.COLOR_ATTACHMENT0 exists" result="PASS" /><testcase id="webglrenderingcontext_COLOR_ATTACHMENT0_type" purpose="Check if the type of WebGLRenderingContext.COLOR_ATTACHMENT0 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_COLOR_ATTACHMENT0_value" purpose="Check if WebGLRenderingContext.COLOR_ATTACHMENT0 constant value is 0x8CE0" result="PASS" /><testcase id="webglrenderingcontext_COLOR_BUFFER_BIT_exists" purpose="Check if WebGLRenderingContext.COLOR_BUFFER_BIT exists" result="PASS" /><testcase id="webglrenderingcontext_COLOR_BUFFER_BIT_type" purpose="Check if the type of WebGLRenderingContext.COLOR_BUFFER_BIT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_COLOR_BUFFER_BIT_value" purpose="Check if WebGLRenderingContext.COLOR_BUFFER_BIT constant value is 0x00004000" result="PASS" /><testcase id="webglrenderingcontext_COLOR_CLEAR_VALUE_exists" purpose="Check if WebGLRenderingContext.COLOR_CLEAR_VALUE exists" result="PASS" /><testcase id="webglrenderingcontext_COLOR_CLEAR_VALUE_type" purpose="Check if the type of WebGLRenderingContext.COLOR_CLEAR_VALUE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_COLOR_CLEAR_VALUE_value" purpose="Check if WebGLRenderingContext.COLOR_CLEAR_VALUE constant value is 0x0C22" result="PASS" /><testcase id="webglrenderingcontext_COLOR_WRITEMASK_exists" purpose="Check if WebGLRenderingContext.COLOR_WRITEMASK exists" result="PASS" /><testcase id="webglrenderingcontext_COLOR_WRITEMASK_type" purpose="Check if the type of WebGLRenderingContext.COLOR_WRITEMASK is 'number'" result="PASS" /><testcase id="webglrenderingcontext_COLOR_WRITEMASK_value" purpose="Check if WebGLRenderingContext.COLOR_WRITEMASK constant value is 0x0C23" result="PASS" /><testcase id="webglrenderingcontext_compileShader_basic" purpose="Check if use WebGLRenderingContext.compileShader to compile shader" result="PASS" /><testcase id="webglrenderingcontext_compileShader_exists" purpose="Check if WebGLRenderingContext.compileShader exists" result="PASS" /><testcase id="webglrenderingcontext_compileShader_type" purpose="Check if the type of WebGLRenderingContext.compileShader is 'function'" result="PASS" /><testcase id="webglrenderingcontext_COMPILE_STATUS_exists" purpose="Check if WebGLRenderingContext.COMPILE_STATUS exists" result="PASS" /><testcase id="webglrenderingcontext_COMPILE_STATUS_type" purpose="Check if the type of WebGLRenderingContext.COMPILE_STATUS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_COMPILE_STATUS_value" purpose="Check if WebGLRenderingContext.COMPILE_STATUS constant value is 0x8B81" result="PASS" /><testcase id="webglrenderingcontext_COMPRESSED_TEXTURE_FORMATS_exists" purpose="Check if WebGLRenderingContext.COMPRESSED_TEXTURE_FORMATS exists" result="PASS" /><testcase id="webglrenderingcontext_COMPRESSED_TEXTURE_FORMATS_type" purpose="Check if the type of WebGLRenderingContext.COMPRESSED_TEXTURE_FORMATS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_COMPRESSED_TEXTURE_FORMATS_value" purpose="Check if WebGLRenderingContext.COMPRESSED_TEXTURE_FORMATS constant value is 0x86A3" result="PASS" /><testcase id="webglrenderingcontext_CONSTANT_ALPHA_exists" purpose="Check if WebGLRenderingContext.CONSTANT_ALPHA exists" result="PASS" /><testcase id="webglrenderingcontext_CONSTANT_ALPHA_type" purpose="Check if the type of WebGLRenderingContext.CONSTANT_ALPHA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_CONSTANT_ALPHA_value" purpose="Check if WebGLRenderingContext.CONSTANT_ALPHA constant value is 0x8003" result="PASS" /><testcase id="webglrenderingcontext_CONSTANT_COLOR_exists" purpose="Check if WebGLRenderingContext.CONSTANT_COLOR exists" result="PASS" /><testcase id="webglrenderingcontext_CONSTANT_COLOR_type" purpose="Check if the type of WebGLRenderingContext.CONSTANT_COLOR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_CONSTANT_COLOR_value" purpose="Check if WebGLRenderingContext.CONSTANT_COLOR constant value is 0x8001" result="PASS" /><testcase id="webglrenderingcontext_CONTEXT_LOST_WEBGL_exists" purpose="Check if WebGLRenderingContext.CONTEXT_LOST_WEBGL exists" result="PASS" /><testcase id="webglrenderingcontext_CONTEXT_LOST_WEBGL_type" purpose="Check if the type of WebGLRenderingContext.CONTEXT_LOST_WEBGL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_CONTEXT_LOST_WEBGL_value" purpose="Check if WebGLRenderingContext.CONTEXT_LOST_WEBGL constant value is 0x9242" result="PASS" /><testcase id="webglrenderingcontext_copyTexImage2D_exists" purpose="Check if WebGLRenderingContext.copyTexImage2D exists" result="PASS" /><testcase id="webglrenderingcontext_copyTexImage2D_type" purpose="Check if the type of WebGLRenderingContext.copyTexImage2D is 'function'" result="PASS" /><testcase id="webglrenderingcontext_copyTexSubImage2D_exists" purpose="Check if WebGLRenderingContext.copyTexSubImage2D exists" result="PASS" /><testcase id="webglrenderingcontext_copyTexSubImage2D_type" purpose="Check if the type of WebGLRenderingContext.copyTexSubImage2D is 'function'" result="PASS" /><testcase id="webglrenderingcontext_createBuffer_basic" purpose="Check if use WebGLRenderingContext.createBuffer() to create a WebGLBuffer object" result="PASS" /><testcase id="webglrenderingcontext_createBuffer_exists" purpose="Check if WebGLRenderingContext.createBuffer exists" result="PASS" /><testcase id="webglrenderingcontext_createBuffer_type" purpose="Check if the type of WebGLRenderingContext.createBuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_createFramebuffer_basic" purpose="Check if use WebGLRenderingContext.createFramebuffer() to create a WebGLFramebuffer object" result="PASS" /><testcase id="webglrenderingcontext_createFramebuffer_exists" purpose="Check if WebGLRenderingContext.createFramebuffer exists" result="PASS" /><testcase id="webglrenderingcontext_createFramebuffer_type" purpose="Check if the type of WebGLRenderingContext.createFramebuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_createProgram_basic" purpose="Check if use WebGLRenderingContext.createProgram() to create a WebGLProgram object" result="PASS" /><testcase id="webglrenderingcontext_createProgram_exists" purpose="Check if WebGLRenderingContext.createProgram exists" result="PASS" /><testcase id="webglrenderingcontext_createProgram_type" purpose="Check if the type of WebGLRenderingContext.createProgram is 'function'" result="PASS" /><testcase id="webglrenderingcontext_createRenderbuffer_basic" purpose="Check if use WebGLRenderingContext.createRenderbuffer() to create a WebGLRenderbuffer object" result="PASS" /><testcase id="webglrenderingcontext_createRenderbuffer_exists" purpose="Check if WebGLRenderingContext.createRenderbuffer exists" result="PASS" /><testcase id="webglrenderingcontext_createRenderbuffer_type" purpose="Check if the type of WebGLRenderingContext.createRenderbuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_createShader_basic" purpose="Check if use WebGLRenderingContext.createShader() to create a WebGLShader object" result="PASS" /><testcase id="webglrenderingcontext_createShader_exists" purpose="Check if WebGLRenderingContext.createShader exists" result="PASS" /><testcase id="webglrenderingcontext_createShader_type" purpose="Check if the type of WebGLRenderingContext.createShader is 'function'" result="PASS" /><testcase id="webglrenderingcontext_createTexture_basic" purpose="Check if use WebGLRenderingContext.createTexture() to create a WebGLTexture object" result="PASS" /><testcase id="webglrenderingcontext_createTexture_exists" purpose="Check if WebGLRenderingContext.createTexture exists" result="PASS" /><testcase id="webglrenderingcontext_createTexture_type" purpose="Check if the type of WebGLRenderingContext.createTexture is 'function'" result="PASS" /><testcase id="webglrenderingcontext_cullFace_basic" purpose="Check if use WebGLRenderingContext.cullFace to set cull function" result="PASS" /><testcase id="webglrenderingcontext_cullFace_exists" purpose="Check if WebGLRenderingContext.cullFace exists" result="PASS" /><testcase id="webglrenderingcontext_cullFace_type" purpose="Check if the type of WebGLRenderingContext.cullFace is 'function'" result="PASS" /><testcase id="webglrenderingcontext_CULL_FACE_exists" purpose="Check if WebGLRenderingContext.CULL_FACE exists" result="PASS" /><testcase id="webglrenderingcontext_CULL_FACE_MODE_exists" purpose="Check if WebGLRenderingContext.CULL_FACE_MODE exists" result="PASS" /><testcase id="webglrenderingcontext_CULL_FACE_MODE_type" purpose="Check if the type of WebGLRenderingContext.CULL_FACE_MODE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_CULL_FACE_MODE_value" purpose="Check if WebGLRenderingContext.CULL_FACE_MODE constant value is 0x0B45" result="PASS" /><testcase id="webglrenderingcontext_CULL_FACE_type" purpose="Check if the type of WebGLRenderingContext.CULL_FACE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_CULL_FACE_value" purpose="Check if WebGLRenderingContext.CULL_FACE constant value is 0x0B44" result="PASS" /><testcase id="webglrenderingcontext_CURRENT_PROGRAM_exists" purpose="Check if WebGLRenderingContext.CURRENT_PROGRAM exists" result="PASS" /><testcase id="webglrenderingcontext_CURRENT_PROGRAM_type" purpose="Check if the type of WebGLRenderingContext.CURRENT_PROGRAM is 'number'" result="PASS" /><testcase id="webglrenderingcontext_CURRENT_PROGRAM_value" purpose="Check if WebGLRenderingContext.CURRENT_PROGRAM constant value is 0x8B8D" result="PASS" /><testcase id="webglrenderingcontext_CURRENT_VERTEX_ATTRIB_exists" purpose="Check if WebGLRenderingContext.CURRENT_VERTEX_ATTRIB exists" result="PASS" /><testcase id="webglrenderingcontext_CURRENT_VERTEX_ATTRIB_type" purpose="Check if the type of WebGLRenderingContext.CURRENT_VERTEX_ATTRIB is 'number'" result="PASS" /><testcase id="webglrenderingcontext_CURRENT_VERTEX_ATTRIB_value" purpose="Check if WebGLRenderingContext.CURRENT_VERTEX_ATTRIB constant value is 0x8626" result="PASS" /><testcase id="webglrenderingcontext_CW_exists" purpose="Check if WebGLRenderingContext.CW exists" result="PASS" /><testcase id="webglrenderingcontext_CW_type" purpose="Check if the type of WebGLRenderingContext.CW is 'number'" result="PASS" /><testcase id="webglrenderingcontext_CW_value" purpose="Check if WebGLRenderingContext.CW constant value is 0x0900" result="PASS" /><testcase id="webglrenderingcontext_DECR_exists" purpose="Check if WebGLRenderingContext.DECR exists" result="PASS" /><testcase id="webglrenderingcontext_DECR_type" purpose="Check if the type of WebGLRenderingContext.DECR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DECR_value" purpose="Check if WebGLRenderingContext.DECR constant value is 0x1E03" result="PASS" /><testcase id="webglrenderingcontext_DECR_WRAP_exists" purpose="Check if WebGLRenderingContext.DECR_WRAP exists" result="PASS" /><testcase id="webglrenderingcontext_DECR_WRAP_type" purpose="Check if the type of WebGLRenderingContext.DECR_WRAP is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DECR_WRAP_value" purpose="Check if WebGLRenderingContext.DECR_WRAP constant value is 0x8508" result="PASS" /><testcase id="webglrenderingcontext_deleteBuffer_basic" purpose="Check if use WebGLRenderingContext.deleteBuffer() to delete current buffer" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3062 XWALK-3062]]</testcase><testcase id="webglrenderingcontext_deleteBuffer_exists" purpose="Check if WebGLRenderingContext.deleteBuffer exists" result="PASS" /><testcase id="webglrenderingcontext_deleteBuffer_type" purpose="Check if the type of WebGLRenderingContext.deleteBuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_deleteFramebuffer_exists" purpose="Check if WebGLRenderingContext.deleteFramebuffer exists" result="PASS" /><testcase id="webglrenderingcontext_deleteFramebuffer_type" purpose="Check if the type of WebGLRenderingContext.deleteFramebuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_deleteProgram_basic" purpose="Check if use WebGLRenderingContext.deleteProgram() to delete current program" result="PASS" /><testcase id="webglrenderingcontext_deleteProgram_exists" purpose="Check if WebGLRenderingContext.deleteProgram exists" result="PASS" /><testcase id="webglrenderingcontext_deleteProgram_type" purpose="Check if the type of WebGLRenderingContext.deleteProgram is 'function'" result="PASS" /><testcase id="webglrenderingcontext_deleteRenderbuffer_basic" purpose="Check if use WebGLRenderingContext.deleteRenderbuffer() to delete current Renderbuffer" result="PASS" /><testcase id="webglrenderingcontext_deleteRenderbuffer_exists" purpose="Check if WebGLRenderingContext.deleteRenderbuffer exists" result="PASS" /><testcase id="webglrenderingcontext_deleteRenderbuffer_type" purpose="Check if the type of WebGLRenderingContext.deleteRenderbuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_deleteShader_basic" purpose="Check if use WebGLRenderingContext.deleteShader() to delete current Shade" result="PASS" /><testcase id="webglrenderingcontext_deleteShader_exists" purpose="Check if WebGLRenderingContext.deleteShader exists" result="PASS" /><testcase id="webglrenderingcontext_deleteShader_type" purpose="Check if the type of WebGLRenderingContext.deleteShader is 'function'" result="PASS" /><testcase id="webglrenderingcontext_deleteTexture_basic" purpose="Check if use WebGLRenderingContext.deleteTexture() to delete current Texture" result="PASS" /><testcase id="webglrenderingcontext_deleteTexture_exists" purpose="Check if WebGLRenderingContext.deleteTexture exists" result="PASS" /><testcase id="webglrenderingcontext_deleteTexture_type" purpose="Check if the type of WebGLRenderingContext.deleteTexture is 'function'" result="PASS" /><testcase id="webglrenderingcontext_DELETE_STATUS_exists" purpose="Check if WebGLRenderingContext.DELETE_STATUS exists" result="PASS" /><testcase id="webglrenderingcontext_DELETE_STATUS_type" purpose="Check if the type of WebGLRenderingContext.DELETE_STATUS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DELETE_STATUS_value" purpose="Check if WebGLRenderingContext.DELETE_STATUS constant value is 0x8B80" result="PASS" /><testcase id="webglrenderingcontext_depthFunc_basic" purpose="Check if use WebGLRenderingContext.depthFunc() to set depth function" result="PASS" /><testcase id="webglrenderingcontext_depthFunc_exists" purpose="Check if WebGLRenderingContext.depthFunc exists" result="PASS" /><testcase id="webglrenderingcontext_depthFunc_type" purpose="Check if the type of WebGLRenderingContext.depthFunc is 'function'" result="PASS" /><testcase id="webglrenderingcontext_depthMask_basic" purpose="Check if webglrenderingcontext.depthMask to set depth mask" result="PASS" /><testcase id="webglrenderingcontext_depthMask_exists" purpose="Check if WebGLRenderingContext.depthMask exists" result="PASS" /><testcase id="webglrenderingcontext_depthMask_type" purpose="Check if the type of WebGLRenderingContext.depthMask is 'function'" result="PASS" /><testcase id="webglrenderingcontext_depthRange_basic" purpose="Check if use WebGLRenderingContext.depthRange to set the range of depth" result="PASS" /><testcase id="webglrenderingcontext_depthRange_exists" purpose="Check if WebGLRenderingContext.depthRange exists" result="PASS" /><testcase id="webglrenderingcontext_depthRange_INVALID_OPERATION" purpose="Check if a call to depthRange will generate an INVALID_OPERATION error if zNear is greater than zFar" result="PASS" /><testcase id="webglrenderingcontext_depthRange_type" purpose="Check if the type of WebGLRenderingContext.depthRange is 'function'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_ATTACHMENT_exists" purpose="Check if WebGLRenderingContext.DEPTH_ATTACHMENT exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_ATTACHMENT_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_ATTACHMENT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_ATTACHMENT_value" purpose="Check if WebGLRenderingContext.DEPTH_ATTACHMENT constant value is 0x8D00" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_BITS_exists" purpose="Check if WebGLRenderingContext.DEPTH_BITS exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_BITS_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_BITS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_BITS_value" purpose="Check if WebGLRenderingContext.DEPTH_BITS constant value is 0x0D56" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_BUFFER_BIT_exists" purpose="Check if WebGLRenderingContext.DEPTH_BUFFER_BIT exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_BUFFER_BIT_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_BUFFER_BIT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_BUFFER_BIT_value" purpose="Check if WebGLRenderingContext.DEPTH_BUFFER_BIT constant value is 0x00000100" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_CLEAR_VALUE_exists" purpose="Check if WebGLRenderingContext.DEPTH_CLEAR_VALUE exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_CLEAR_VALUE_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_CLEAR_VALUE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_CLEAR_VALUE_value" purpose="Check if WebGLRenderingContext.DEPTH_CLEAR_VALUE constant value is 0x0B73" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_COMPONENT16_exists" purpose="Check if WebGLRenderingContext.DEPTH_COMPONENT16 exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_COMPONENT16_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_COMPONENT16 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_COMPONENT16_value" purpose="Check if WebGLRenderingContext.DEPTH_COMPONENT16 constant value is 0x81A5" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_COMPONENT_exists" purpose="Check if WebGLRenderingContext.DEPTH_COMPONENT exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_COMPONENT_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_COMPONENT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_COMPONENT_value" purpose="Check if WebGLRenderingContext.DEPTH_COMPONENT constant value is 0x1902" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_FUNC_exists" purpose="Check if WebGLRenderingContext.DEPTH_FUNC exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_FUNC_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_FUNC is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_FUNC_value" purpose="Check if WebGLRenderingContext.DEPTH_FUNC constant value is 0x0B74" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_RANGE_exists" purpose="Check if WebGLRenderingContext.DEPTH_RANGE exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_RANGE_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_RANGE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_RANGE_value" purpose="Check if WebGLRenderingContext.DEPTH_RANGE constant value is 0x0B70" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_STENCIL_ATTACHMENT_exists" purpose="Check if WebGLRenderingContext.DEPTH_STENCIL_ATTACHMENT exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_STENCIL_ATTACHMENT_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_STENCIL_ATTACHMENT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_STENCIL_ATTACHMENT_value" purpose="Check if WebGLRenderingContext.DEPTH_STENCIL_ATTACHMENT constant value is 0x821A" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_STENCIL_exists" purpose="Check if WebGLRenderingContext.DEPTH_STENCIL exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_STENCIL_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_STENCIL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_STENCIL_value" purpose="Check if WebGLRenderingContext.DEPTH_STENCIL constant value is 0x84F9" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_TEST_exists" purpose="Check if WebGLRenderingContext.DEPTH_TEST exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_TEST_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_TEST is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_TEST_value" purpose="Check if WebGLRenderingContext.DEPTH_TEST constant value is 0x0B71" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_WRITEMASK_exists" purpose="Check if WebGLRenderingContext.DEPTH_WRITEMASK exists" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_WRITEMASK_type" purpose="Check if the type of WebGLRenderingContext.DEPTH_WRITEMASK is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DEPTH_WRITEMASK_value" purpose="Check if WebGLRenderingContext.DEPTH_WRITEMASK constant value is 0x0B72" result="PASS" /><testcase id="webglrenderingcontext_detachShader_basic" purpose="Check if WebGLRenderingContext.detachShader to detach shader from program" result="PASS" /><testcase id="webglrenderingcontext_detachShader_exists" purpose="Check if WebGLRenderingContext.detachShader exists" result="PASS" /><testcase id="webglrenderingcontext_detachShader_type" purpose="Check if the type of WebGLRenderingContext.detachShader is 'function'" result="PASS" /><testcase id="webglrenderingcontext_disableVertexAttribArray_exists" purpose="Check if WebGLRenderingContext.disableVertexAttribArray exists" result="PASS" /><testcase id="webglrenderingcontext_disableVertexAttribArray_type" purpose="Check if the type of WebGLRenderingContext.disableVertexAttribArray is 'function'" result="PASS" /><testcase id="webglrenderingcontext_disable_basic" purpose="Check if use WebGLRenderingContext.disable to diable BLEND" result="PASS" /><testcase id="webglrenderingcontext_disable_exists" purpose="Check if WebGLRenderingContext.disable exists" result="PASS" /><testcase id="webglrenderingcontext_disable_type" purpose="Check if the type of WebGLRenderingContext.disable is 'function'" result="PASS" /><testcase id="webglrenderingcontext_DITHER_exists" purpose="Check if WebGLRenderingContext.DITHER exists" result="PASS" /><testcase id="webglrenderingcontext_DITHER_type" purpose="Check if the type of WebGLRenderingContext.DITHER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DITHER_value" purpose="Check if WebGLRenderingContext.DITHER constant value is 0x0BD0" result="PASS" /><testcase id="webglrenderingcontext_DONT_CARE_exists" purpose="Check if WebGLRenderingContext.DONT_CARE exists" result="PASS" /><testcase id="webglrenderingcontext_DONT_CARE_type" purpose="Check if the type of WebGLRenderingContext.DONT_CARE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DONT_CARE_value" purpose="Check if WebGLRenderingContext.DONT_CARE constant value is 0x1100" result="PASS" /><testcase id="webglrenderingcontext_drawArrays_exists" purpose="Check if WebGLRenderingContext.drawArrays exists" result="PASS" /><testcase id="webglrenderingcontext_drawArrays_INVALID_VALUE" purpose="Check if when first is negative, an INVALID_VALUE error will be generated" result="PASS" /><testcase id="webglrenderingcontext_drawArrays_type" purpose="Check if the type of WebGLRenderingContext.drawArrays is 'function'" result="PASS" /><testcase id="webglrenderingcontext_drawElements_exists" purpose="Check if WebGLRenderingContext.drawElements exists" result="PASS" /><testcase id="webglrenderingcontext_drawElements_type" purpose="Check if the type of WebGLRenderingContext.drawElements is 'function'" result="PASS" /><testcase id="webglrenderingcontext_drawingBufferHeight_exists" purpose="Check if WebGLRenderingContext.drawingBufferHeight exists" result="PASS" /><testcase id="webglrenderingcontext_drawingBufferHeight_get_value" purpose="Check if WebGLRenderingContext.drawingBufferHeight return the actual height of the drawing buffer" result="PASS" /><testcase id="webglrenderingcontext_drawingBufferHeight_readonly" purpose="Check if WebGLRenderingContext.drawingBufferHeight is readonly" result="PASS" /><testcase id="webglrenderingcontext_drawingBufferHeight_type" purpose="Check if the type of WebGLRenderingContext.drawingBufferHeight is 'number'" result="PASS" /><testcase id="webglrenderingcontext_drawingBufferWidth_exists" purpose="Check if WebGLRenderingContext.drawingBufferWidth exists" result="PASS" /><testcase id="webglrenderingcontext_drawingBufferWidth_get_value" purpose="Check if WebGLRenderingContext.drawingBufferWidth return the actual width of the drawing buffer" result="PASS" /><testcase id="webglrenderingcontext_drawingBufferWidth_readonly" purpose="Check if WebGLRenderingContext.drawingBufferWidth is readonly" result="PASS" /><testcase id="webglrenderingcontext_drawingBufferWidth_type" purpose="Check if the type of WebGLRenderingContext.drawingBufferWidth is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DST_ALPHA_exists" purpose="Check if WebGLRenderingContext.DST_ALPHA exists" result="PASS" /><testcase id="webglrenderingcontext_DST_ALPHA_type" purpose="Check if the type of WebGLRenderingContext.DST_ALPHA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DST_ALPHA_value" purpose="Check if WebGLRenderingContext.DST_ALPHA constant value is 0x0304" result="PASS" /><testcase id="webglrenderingcontext_DST_COLOR_exists" purpose="Check if WebGLRenderingContext.DST_COLOR exists" result="PASS" /><testcase id="webglrenderingcontext_DST_COLOR_type" purpose="Check if the type of WebGLRenderingContext.DST_COLOR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DST_COLOR_value" purpose="Check if WebGLRenderingContext.DST_COLOR constant value is 0x0306" result="PASS" /><testcase id="webglrenderingcontext_DYNAMIC_DRAW_exists" purpose="Check if WebGLRenderingContext.DYNAMIC_DRAW exists" result="PASS" /><testcase id="webglrenderingcontext_DYNAMIC_DRAW_type" purpose="Check if the type of WebGLRenderingContext.DYNAMIC_DRAW is 'number'" result="PASS" /><testcase id="webglrenderingcontext_DYNAMIC_DRAW_value" purpose="Check if WebGLRenderingContext.DYNAMIC_DRAW constant value is 0x88E8" result="PASS" /><testcase id="webglrenderingcontext_ELEMENT_ARRAY_BUFFER_BINDING_exists" purpose="Check if WebGLRenderingContext.ELEMENT_ARRAY_BUFFER_BINDING exists" result="PASS" /><testcase id="webglrenderingcontext_ELEMENT_ARRAY_BUFFER_BINDING_type" purpose="Check if the type of WebGLRenderingContext.ELEMENT_ARRAY_BUFFER_BINDING is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ELEMENT_ARRAY_BUFFER_BINDING_value" purpose="Check if WebGLRenderingContext.ELEMENT_ARRAY_BUFFER_BINDING constant value is 0x8895" result="PASS" /><testcase id="webglrenderingcontext_ELEMENT_ARRAY_BUFFER_exists" purpose="Check if WebGLRenderingContext.ELEMENT_ARRAY_BUFFER exists" result="PASS" /><testcase id="webglrenderingcontext_ELEMENT_ARRAY_BUFFER_type" purpose="Check if the type of WebGLRenderingContext.ELEMENT_ARRAY_BUFFER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ELEMENT_ARRAY_BUFFER_value" purpose="Check if WebGLRenderingContext.ELEMENT_ARRAY_BUFFER constant value is 0x8893" result="PASS" /><testcase id="webglrenderingcontext_enableVertexAttribArray_exists" purpose="Check if WebGLRenderingContext.enableVertexAttribArray exists" result="PASS" /><testcase id="webglrenderingcontext_enableVertexAttribArray_type" purpose="Check if the type of WebGLRenderingContext.enableVertexAttribArray is 'function'" result="PASS" /><testcase id="webglrenderingcontext_enable_basic" purpose="Check if use webglrenderingcontext.enable to set BLEND enable" result="PASS" /><testcase id="webglrenderingcontext_enable_exists" purpose="Check if WebGLRenderingContext.enable exists" result="PASS" /><testcase id="webglrenderingcontext_enable_type" purpose="Check if the type of WebGLRenderingContext.enable is 'function'" result="PASS" /><testcase id="webglrenderingcontext_EQUAL_exists" purpose="Check if WebGLRenderingContext.EQUAL exists" result="PASS" /><testcase id="webglrenderingcontext_EQUAL_type" purpose="Check if the type of WebGLRenderingContext.EQUAL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_EQUAL_value" purpose="Check if WebGLRenderingContext.EQUAL constant value is 0x0202" result="PASS" /><testcase id="webglrenderingcontext_FASTEST_exists" purpose="Check if WebGLRenderingContext.FASTEST exists" result="PASS" /><testcase id="webglrenderingcontext_FASTEST_type" purpose="Check if the type of WebGLRenderingContext.FASTEST is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FASTEST_value" purpose="Check if WebGLRenderingContext.FASTEST constant value is 0x1101" result="PASS" /><testcase id="webglrenderingcontext_finish_exists" purpose="Check if WebGLRenderingContext.finish exists" result="PASS" /><testcase id="webglrenderingcontext_finish_type" purpose="Check if the type of WebGLRenderingContext.finish is 'function'" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_exists" purpose="Check if WebGLRenderingContext.FLOAT exists" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_MAT2_exists" purpose="Check if WebGLRenderingContext.FLOAT_MAT2 exists" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_MAT2_type" purpose="Check if the type of WebGLRenderingContext.FLOAT_MAT2 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_MAT2_value" purpose="Check if WebGLRenderingContext.FLOAT_MAT2 constant value is 0x8B5A" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_MAT3_exists" purpose="Check if WebGLRenderingContext.FLOAT_MAT3 exists" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_MAT3_type" purpose="Check if the type of WebGLRenderingContext.FLOAT_MAT3 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_MAT3_value" purpose="Check if WebGLRenderingContext.FLOAT_MAT3 constant value is 0x8B5B" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_MAT4_exists" purpose="Check if WebGLRenderingContext.FLOAT_MAT4 exists" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_MAT4_type" purpose="Check if the type of WebGLRenderingContext.FLOAT_MAT4 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_MAT4_value" purpose="Check if WebGLRenderingContext.FLOAT_MAT4 constant value is 0x8B5C" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_type" purpose="Check if the type of WebGLRenderingContext.FLOAT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_value" purpose="Check if WebGLRenderingContext.FLOAT constant value is 0x1406" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_VEC2_exists" purpose="Check if WebGLRenderingContext.FLOAT_VEC2 exists" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_VEC2_type" purpose="Check if the type of WebGLRenderingContext.FLOAT_VEC2 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_VEC2_value" purpose="Check if WebGLRenderingContext.FLOAT_VEC2 constant value is 0x8B51" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_VEC3_exists" purpose="Check if WebGLRenderingContext.FLOAT_VEC3 exists" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_VEC3_type" purpose="Check if the type of WebGLRenderingContext.FLOAT_VEC3 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_VEC3_value" purpose="Check if WebGLRenderingContext.FLOAT_VEC3 constant value is 0x8B50" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_VEC4_exists" purpose="Check if WebGLRenderingContext.FLOAT_VEC4 exists" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_VEC4_type" purpose="Check if the type of WebGLRenderingContext.FLOAT_VEC4 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FLOAT_VEC4_value" purpose="Check if WebGLRenderingContext.FLOAT_VEC4 constant value is 0x8B52" result="PASS" /><testcase id="webglrenderingcontext_flush_exists" purpose="Check if WebGLRenderingContext.flush exists" result="PASS" /><testcase id="webglrenderingcontext_flush_type" purpose="Check if the type of WebGLRenderingContext.flush is 'function'" result="PASS" /><testcase id="webglrenderingcontext_FRAGMENT_SHADER_exists" purpose="Check if WebGLRenderingContext.FRAGMENT_SHADER exists" result="PASS" /><testcase id="webglrenderingcontext_FRAGMENT_SHADER_type" purpose="Check if the type of WebGLRenderingContext.FRAGMENT_SHADER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAGMENT_SHADER_value" purpose="Check if WebGLRenderingContext.FRAGMENT_SHADER constant value is 0x8B30" result="PASS" /><testcase id="webglrenderingcontext_framebufferRenderbuffer_exists" purpose="Check if WebGLRenderingContext.framebufferRenderbuffer exists" result="PASS" /><testcase id="webglrenderingcontext_framebufferRenderbuffer_type" purpose="Check if the type of WebGLRenderingContext.framebufferRenderbuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_framebufferTexture2D_exists" purpose="Check if WebGLRenderingContext.framebufferTexture2D exists" result="PASS" /><testcase id="webglrenderingcontext_framebufferTexture2D_type" purpose="Check if the type of WebGLRenderingContext.framebufferTexture2D is 'function'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_exists" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME exists" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_type" purpose="Check if the type of WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME_value" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_NAME constant value is 0x8CD1" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_exists" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE exists" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_type" purpose="Check if the type of WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE_value" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE constant value is 0x8CD0" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_exists" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE exists" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_type" purpose="Check if the type of WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_value" purpose="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE_value" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_exists" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL exists" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_type" purpose="Check if the type of WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL_value" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL constant value is 0x8CD2" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_BINDING_exists" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_BINDING exists" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_BINDING_type" purpose="Check if the type of WebGLRenderingContext.FRAMEBUFFER_BINDING is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_BINDING_value" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_BINDING constant value is 0x8CA6" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_COMPLETE_exists" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_COMPLETE exists" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_COMPLETE_type" purpose="Check if the type of WebGLRenderingContext.FRAMEBUFFER_COMPLETE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_COMPLETE_value" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_COMPLETE constant value is 0x8CD5" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_exists" purpose="Check if WebGLRenderingContext.FRAMEBUFFER exists" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_exists" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT exists" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_type" purpose="Check if the type of WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_INCOMPLETE_ATTACHMENT_value" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_ATTACHMENT constant value is 0x8CD6" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_exists" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS exists" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_type" purpose="Check if the type of WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_INCOMPLETE_DIMENSIONS_value" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_DIMENSIONS constant value is 0x8CD9" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_exists" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT exists" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_type" purpose="Check if the type of WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT_value" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT constant value is 0x8CD7" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_type" purpose="Check if the type of WebGLRenderingContext.FRAMEBUFFER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_UNSUPPORTED_exists" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_UNSUPPORTED exists" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_UNSUPPORTED_type" purpose="Check if the type of WebGLRenderingContext.FRAMEBUFFER_UNSUPPORTED is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_UNSUPPORTED_value" purpose="Check if WebGLRenderingContext.FRAMEBUFFER_UNSUPPORTED constant value is 0x8CDD" result="PASS" /><testcase id="webglrenderingcontext_FRAMEBUFFER_value" purpose="Check if WebGLRenderingContext.FRAMEBUFFER constant value is 0x8D40" result="PASS" /><testcase id="webglrenderingcontext_frontFace_exists" purpose="Check if WebGLRenderingContext.frontFace exists" result="PASS" /><testcase id="webglrenderingcontext_frontFace_type" purpose="Check if the type of WebGLRenderingContext.frontFace is 'function'" result="PASS" /><testcase id="webglrenderingcontext_FRONT_AND_BACK_exists" purpose="Check if WebGLRenderingContext.FRONT_AND_BACK exists" result="PASS" /><testcase id="webglrenderingcontext_FRONT_AND_BACK_type" purpose="Check if the type of WebGLRenderingContext.FRONT_AND_BACK is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRONT_AND_BACK_value" purpose="Check if WebGLRenderingContext.FRONT_AND_BACK constant value is 0x0408" result="PASS" /><testcase id="webglrenderingcontext_FRONT_exists" purpose="Check if WebGLRenderingContext.FRONT exists" result="PASS" /><testcase id="webglrenderingcontext_FRONT_FACE_exists" purpose="Check if WebGLRenderingContext.FRONT_FACE exists" result="PASS" /><testcase id="webglrenderingcontext_FRONT_FACE_type" purpose="Check if the type of WebGLRenderingContext.FRONT_FACE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRONT_FACE_value" purpose="Check if WebGLRenderingContext.FRONT_FACE constant value is 0x0B46" result="PASS" /><testcase id="webglrenderingcontext_FRONT_type" purpose="Check if the type of WebGLRenderingContext.FRONT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FRONT_value" purpose="Check if WebGLRenderingContext.FRONT constant value is 0x0404" result="PASS" /><testcase id="webglrenderingcontext_FUNC_ADD_exists" purpose="Check if WebGLRenderingContext.FUNC_ADD exists" result="PASS" /><testcase id="webglrenderingcontext_FUNC_ADD_type" purpose="Check if the type of WebGLRenderingContext.FUNC_ADD is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FUNC_ADD_value" purpose="Check if WebGLRenderingContext.FUNC_ADD constant value is 0x8006" result="PASS" /><testcase id="webglrenderingcontext_FUNC_REVERSE_SUBTRACT_exists" purpose="Check if WebGLRenderingContext.FUNC_REVERSE_SUBTRACT exists" result="PASS" /><testcase id="webglrenderingcontext_FUNC_REVERSE_SUBTRACT_type" purpose="Check if the type of WebGLRenderingContext.FUNC_REVERSE_SUBTRACT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FUNC_REVERSE_SUBTRACT_value" purpose="Check if WebGLRenderingContext.FUNC_REVERSE_SUBTRACT constant value is 0x800B" result="PASS" /><testcase id="webglrenderingcontext_FUNC_SUBTRACT_exists" purpose="Check if WebGLRenderingContext.FUNC_SUBTRACT exists" result="PASS" /><testcase id="webglrenderingcontext_FUNC_SUBTRACT_type" purpose="Check if the type of WebGLRenderingContext.FUNC_SUBTRACT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_FUNC_SUBTRACT_value" purpose="Check if WebGLRenderingContext.FUNC_SUBTRACT constant value is 0x800A" result="PASS" /><testcase id="webglrenderingcontext_generateMipmap_exists" purpose="Check if WebGLRenderingContext.generateMipmap exists" result="PASS" /><testcase id="webglrenderingcontext_generateMipmap_INVALID_OPERATION" purpose="Check if an attempt is made to call generateMipmap() with no WebGLTexture bound, an INVALID_OPERATION error is generated" result="PASS" /><testcase id="webglrenderingcontext_generateMipmap_type" purpose="Check if the type of WebGLRenderingContext.generateMipmap is 'function'" result="PASS" /><testcase id="webglrenderingcontext_GENERATE_MIPMAP_HINT_exists" purpose="Check if WebGLRenderingContext.GENERATE_MIPMAP_HINT exists" result="PASS" /><testcase id="webglrenderingcontext_GENERATE_MIPMAP_HINT_type" purpose="Check if the type of WebGLRenderingContext.GENERATE_MIPMAP_HINT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_GENERATE_MIPMAP_HINT_value" purpose="Check if WebGLRenderingContext.GENERATE_MIPMAP_HINT constant value is 0x8192" result="PASS" /><testcase id="webglrenderingcontext_GEQUAL_exists" purpose="Check if WebGLRenderingContext.GEQUAL exists" result="PASS" /><testcase id="webglrenderingcontext_GEQUAL_type" purpose="Check if the type of WebGLRenderingContext.GEQUAL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_GEQUAL_value" purpose="Check if WebGLRenderingContext.GEQUAL constant value is 0x0206" result="PASS" /><testcase id="webglrenderingcontext_getActiveAttrib_basic" purpose="Check if use WebGLRenderingContext.getActiveAttrib() to get a WebGLActiveInfo object" result="PASS" /><testcase id="webglrenderingcontext_getActiveAttrib_exists" purpose="Check if WebGLRenderingContext.getActiveAttrib exists" result="PASS" /><testcase id="webglrenderingcontext_getActiveAttrib_type" purpose="Check if the type of WebGLRenderingContext.getActiveAttrib is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getActiveUniform_exists" purpose="Check if WebGLRenderingContext.getActiveUniform exists" result="PASS" /><testcase id="webglrenderingcontext_getActiveUniform_type" purpose="Check if the type of WebGLRenderingContext.getActiveUniform is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getAttachedShaders_basic" purpose="Check if use WebGLRenderingContext.getAttachedShaders() to get WebGLShader array object" result="PASS" /><testcase id="webglrenderingcontext_getAttachedShaders_exists" purpose="Check if WebGLRenderingContext.getAttachedShaders exists" result="PASS" /><testcase id="webglrenderingcontext_getAttachedShaders_type" purpose="Check if the type of WebGLRenderingContext.getAttachedShaders is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getAttribLocation_basic" purpose="Check if use WebGLRenderingContext.getAttribLocation() to get the index of attribute" result="PASS" /><testcase id="webglrenderingcontext_getAttribLocation_exists" purpose="Check if WebGLRenderingContext.getAttribLocation exists" result="PASS" /><testcase id="webglrenderingcontext_getAttribLocation_type" purpose="Check if the type of WebGLRenderingContext.getAttribLocation is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getBufferParameter_basic" purpose="Check if use WebGLRenderingContext.getBufferParameter() to get buffer information" result="PASS" /><testcase id="webglrenderingcontext_getBufferParameter_exists" purpose="Check if WebGLRenderingContext.getBufferParameter exists" result="PASS" /><testcase id="webglrenderingcontext_getBufferParameter_type" purpose="Check if the type of WebGLRenderingContext.getBufferParameter is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getContextAttributes_basic" purpose="Check if WebGLRenderingContext.getContextAttributes() returns the WebGLContextAttributes describing the current drawing buffer" result="PASS" /><testcase id="webglrenderingcontext_getContextAttributes_exists" purpose="Check if WebGLRenderingContext.getContextAttributes exists" result="PASS" /><testcase id="webglrenderingcontext_getContextAttributes_type" purpose="Check if the type of WebGLRenderingContext.getContextAttributes is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getError_exists" purpose="Check if WebGLRenderingContext.getError exists" result="PASS" /><testcase id="webglrenderingcontext_getError_NO_ERROR" purpose="Check if WebGLRenderingContext.getError() return NO_ERROR when no error occurs" result="PASS" /><testcase id="webglrenderingcontext_getError_type" purpose="Check if the type of WebGLRenderingContext.getError is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getExtension_basic" purpose="Check if WebGLRenderingContext.getExtension returns an object if the passed extension is supported" result="PASS" /><testcase id="webglrenderingcontext_getExtension_exists" purpose="Check if WebGLRenderingContext.getExtension exists" result="PASS" /><testcase id="webglrenderingcontext_getExtension_null" purpose="Check if WebGLRenderingContext.getExtension returns null if the passed extension is not supported" result="PASS" /><testcase id="webglrenderingcontext_getExtension_type" purpose="Check if the type of WebGLRenderingContext.getExtension is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getFramebufferAttachmentParameter_exists" purpose="Check if WebGLRenderingContext.getFramebufferAttachmentParameter exists" result="PASS" /><testcase id="webglrenderingcontext_getFramebufferAttachmentParameter_type" purpose="Check if the type of WebGLRenderingContext.getFramebufferAttachmentParameter is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getParameter_basic" purpose="Check if use WebGLRenderingContext.getParameter() to get information of pname" result="PASS" /><testcase id="webglrenderingcontext_getParameter_exists" purpose="Check if WebGLRenderingContext.getParameter exists" result="PASS" /><testcase id="webglrenderingcontext_getParameter_type" purpose="Check if the type of WebGLRenderingContext.getParameter is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getProgramInfoLog_basic" purpose="Check if use WebGLRenderingContext.getProgramInfoLog() to get program information log" result="PASS" /><testcase id="webglrenderingcontext_getProgramInfoLog_exists" purpose="Check if WebGLRenderingContext.getProgramInfoLog exists" result="PASS" /><testcase id="webglrenderingcontext_getProgramInfoLog_type" purpose="Check if the type of WebGLRenderingContext.getProgramInfoLog is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getProgramParameter_basic" purpose="Check if use WebGLRenderingContext.getProgramParameter() to get program DELETE_STATUS information" result="PASS" /><testcase id="webglrenderingcontext_getProgramParameter_exists" purpose="Check if WebGLRenderingContext.getProgramParameter exists" result="PASS" /><testcase id="webglrenderingcontext_getProgramParameter_type" purpose="Check if the type of WebGLRenderingContext.getProgramParameter is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getRenderbufferParameter_basic" purpose="Check if use WebGLRenderingContext.getRenderbufferParameter() to get Renderbuffer RENDERBUFFER_WIDTH information" result="PASS" /><testcase id="webglrenderingcontext_getRenderbufferParameter_exists" purpose="Check if WebGLRenderingContext.getRenderbufferParameter exists" result="PASS" /><testcase id="webglrenderingcontext_getRenderbufferParameter_type" purpose="Check if the type of WebGLRenderingContext.getRenderbufferParameter is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getShaderInfoLog_exists" purpose="Check if WebGLRenderingContext.getShaderInfoLog exists" result="PASS" /><testcase id="webglrenderingcontext_getShaderInfoLog_type" purpose="Check if the type of WebGLRenderingContext.getShaderInfoLog is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getShaderParameter_basic" purpose="Check if use WebGLRenderingContext.getShaderParameter() to get Shader DELETE_STATUS information" result="PASS" /><testcase id="webglrenderingcontext_getShaderParameter_exists" purpose="Check if WebGLRenderingContext.getShaderParameter exists" result="PASS" /><testcase id="webglrenderingcontext_getShaderParameter_type" purpose="Check if the type of WebGLRenderingContext.getShaderParameter is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getShaderSource_basic" purpose="Check if use WebGLRenderingContext.getShaderSource() to get shader source" result="PASS" /><testcase id="webglrenderingcontext_getShaderSource_exists" purpose="Check if WebGLRenderingContext.getShaderSource exists" result="PASS" /><testcase id="webglrenderingcontext_getShaderSource_type" purpose="Check if the type of WebGLRenderingContext.getShaderSource is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getSupportedExtensions_basic" purpose="Check if WebGLRenderingContext.getSupportedExtensions() returns an array of all the supported extension strings" result="PASS" /><testcase id="webglrenderingcontext_getSupportedExtensions_exists" purpose="Check if WebGLRenderingContext.getSupportedExtensions exists" result="PASS" /><testcase id="webglrenderingcontext_getSupportedExtensions_type" purpose="Check if the type of WebGLRenderingContext.getSupportedExtensions is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getTexParameter_basic" purpose="Check if use WebGLRenderingContext.getTexParameter() to get texture parameter information" result="PASS" /><testcase id="webglrenderingcontext_getTexParameter_exists" purpose="Check if WebGLRenderingContext.getTexParameter exists" result="PASS" /><testcase id="webglrenderingcontext_getTexParameter_type" purpose="Check if the type of WebGLRenderingContext.getTexParameter is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getUniformLocation_basic" purpose="Check if use WebGLRenderingContext.getUniformLocation() get the location of a specific uniform variable within a program object" result="PASS" /><testcase id="webglrenderingcontext_getUniformLocation_exists" purpose="Check if WebGLRenderingContext.getUniformLocation exists" result="PASS" /><testcase id="webglrenderingcontext_getUniformLocation_null" purpose="Check if WebGLRenderingContext.getUniformLocation() return null if name does not correspond to an active uniform variable in the passed program" result="PASS" /><testcase id="webglrenderingcontext_getUniformLocation_type" purpose="Check if the type of WebGLRenderingContext.getUniformLocation is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getUniform_basic" purpose="Check if WebGLRenderingContext.getUniform() return the uniform value at the passed location in the passed program" result="PASS" /><testcase id="webglrenderingcontext_getUniform_exists" purpose="Check if WebGLRenderingContext.getUniform exists" result="PASS" /><testcase id="webglrenderingcontext_getUniform_type" purpose="Check if the type of WebGLRenderingContext.getUniform is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getVertexAttribOffset_exists" purpose="Check if WebGLRenderingContext.getVertexAttribOffset exists" result="PASS" /><testcase id="webglrenderingcontext_getVertexAttribOffset_type" purpose="Check if the type of WebGLRenderingContext.getVertexAttribOffset is 'function'" result="PASS" /><testcase id="webglrenderingcontext_getVertexAttrib_basic" purpose="Check if WebGLRenderingContext.getVertexAttrib() return the information requested in pname about the vertex attribute at the passed index" result="PASS" /><testcase id="webglrenderingcontext_getVertexAttrib_exists" purpose="Check if WebGLRenderingContext.getVertexAttrib exists" result="PASS" /><testcase id="webglrenderingcontext_getVertexAttrib_type" purpose="Check if the type of WebGLRenderingContext.getVertexAttrib is 'function'" result="PASS" /><testcase id="webglrenderingcontext_get_object" purpose="Check if a WebGLRenderingContext object shall be created by calling the getContext() method of a given HTMLCanvasElement object with the exact string 'webgl' or 'experimental-webgl'" result="PASS" /><testcase id="webglrenderingcontext_GREATER_exists" purpose="Check if WebGLRenderingContext.GREATER exists" result="PASS" /><testcase id="webglrenderingcontext_GREATER_type" purpose="Check if the type of WebGLRenderingContext.GREATER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_GREATER_value" purpose="Check if WebGLRenderingContext.GREATER constant value is 0x0204" result="PASS" /><testcase id="webglrenderingcontext_GREEN_BITS_exists" purpose="Check if WebGLRenderingContext.GREEN_BITS exists" result="PASS" /><testcase id="webglrenderingcontext_GREEN_BITS_type" purpose="Check if the type of WebGLRenderingContext.GREEN_BITS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_GREEN_BITS_value" purpose="Check if WebGLRenderingContext.GREEN_BITS constant value is 0x0D53" result="PASS" /><testcase id="webglrenderingcontext_HIGH_FLOAT_exists" purpose="Check if WebGLRenderingContext.HIGH_FLOAT exists" result="PASS" /><testcase id="webglrenderingcontext_HIGH_FLOAT_type" purpose="Check if the type of WebGLRenderingContext.HIGH_FLOAT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_HIGH_FLOAT_value" purpose="Check if WebGLRenderingContext.HIGH_FLOAT constant value is 0x8DF2" result="PASS" /><testcase id="webglrenderingcontext_HIGH_INT_exists" purpose="Check if WebGLRenderingContext.HIGH_INT exists" result="PASS" /><testcase id="webglrenderingcontext_HIGH_INT_type" purpose="Check if the type of WebGLRenderingContext.HIGH_INT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_HIGH_INT_value" purpose="Check if WebGLRenderingContext.HIGH_INT constant value is 0x8DF5" result="PASS" /><testcase id="webglrenderingcontext_hint_exists" purpose="Check if WebGLRenderingContext.hint exists" result="PASS" /><testcase id="webglrenderingcontext_hint_type" purpose="Check if the type of WebGLRenderingContext.hint is 'function'" result="PASS" /><testcase id="webglrenderingcontext_INCR_exists" purpose="Check if WebGLRenderingContext.INCR exists" result="PASS" /><testcase id="webglrenderingcontext_INCR_type" purpose="Check if the type of WebGLRenderingContext.INCR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_INCR_value" purpose="Check if WebGLRenderingContext.INCR constant value is 0x1E02" result="PASS" /><testcase id="webglrenderingcontext_INCR_WRAP_exists" purpose="Check if WebGLRenderingContext.INCR_WRAP exists" result="PASS" /><testcase id="webglrenderingcontext_INCR_WRAP_type" purpose="Check if the type of WebGLRenderingContext.INCR_WRAP is 'number'" result="PASS" /><testcase id="webglrenderingcontext_INCR_WRAP_value" purpose="Check if WebGLRenderingContext.INCR_WRAP constant value is 0x8507" result="PASS" /><testcase id="webglrenderingcontext_INT_exists" purpose="Check if WebGLRenderingContext.INT exists" result="PASS" /><testcase id="webglrenderingcontext_INT_type" purpose="Check if the type of WebGLRenderingContext.INT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_INT_value" purpose="Check if WebGLRenderingContext.INT constant value is 0x1404" result="PASS" /><testcase id="webglrenderingcontext_INT_VEC2_exists" purpose="Check if WebGLRenderingContext.INT_VEC2 exists" result="PASS" /><testcase id="webglrenderingcontext_INT_VEC2_type" purpose="Check if the type of WebGLRenderingContext.INT_VEC2 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_INT_VEC2_value" purpose="Check if WebGLRenderingContext.INT_VEC2 constant value is 0x8B53" result="PASS" /><testcase id="webglrenderingcontext_INT_VEC3_exists" purpose="Check if WebGLRenderingContext.INT_VEC3 exists" result="PASS" /><testcase id="webglrenderingcontext_INT_VEC3_type" purpose="Check if the type of WebGLRenderingContext.INT_VEC3 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_INT_VEC3_value" purpose="Check if WebGLRenderingContext.INT_VEC3 constant value is 0x8B54" result="PASS" /><testcase id="webglrenderingcontext_INT_VEC4_exists" purpose="Check if WebGLRenderingContext.INT_VEC4 exists" result="PASS" /><testcase id="webglrenderingcontext_INT_VEC4_type" purpose="Check if the type of WebGLRenderingContext.INT_VEC4 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_INT_VEC4_value" purpose="Check if WebGLRenderingContext.INT_VEC4 constant value is 0x8B55" result="PASS" /><testcase id="webglrenderingcontext_INVALID_ENUM_exists" purpose="Check if WebGLRenderingContext.INVALID_ENUM exists" result="PASS" /><testcase id="webglrenderingcontext_INVALID_ENUM_type" purpose="Check if the type of WebGLRenderingContext.INVALID_ENUM is 'number'" result="PASS" /><testcase id="webglrenderingcontext_INVALID_ENUM_value" purpose="Check if WebGLRenderingContext.INVALID_ENUM constant value is 0x0500" result="PASS" /><testcase id="webglrenderingcontext_INVALID_FRAMEBUFFER_OPERATION_exists" purpose="Check if WebGLRenderingContext.INVALID_FRAMEBUFFER_OPERATION exists" result="PASS" /><testcase id="webglrenderingcontext_INVALID_FRAMEBUFFER_OPERATION_type" purpose="Check if the type of WebGLRenderingContext.INVALID_FRAMEBUFFER_OPERATION is 'number'" result="PASS" /><testcase id="webglrenderingcontext_INVALID_FRAMEBUFFER_OPERATION_value" purpose="Check if WebGLRenderingContext.INVALID_FRAMEBUFFER_OPERATION constant value is 0x0506" result="PASS" /><testcase id="webglrenderingcontext_INVALID_OPERATION_exists" purpose="Check if WebGLRenderingContext.INVALID_OPERATION exists" result="PASS" /><testcase id="webglrenderingcontext_INVALID_OPERATION_type" purpose="Check if the type of WebGLRenderingContext.INVALID_OPERATION is 'number'" result="PASS" /><testcase id="webglrenderingcontext_INVALID_OPERATION_value" purpose="Check if WebGLRenderingContext.INVALID_OPERATION constant value is 0x0502" result="PASS" /><testcase id="webglrenderingcontext_INVALID_VALUE_exists" purpose="Check if WebGLRenderingContext.INVALID_VALUE exists" result="PASS" /><testcase id="webglrenderingcontext_INVALID_VALUE_type" purpose="Check if the type of WebGLRenderingContext.INVALID_VALUE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_INVALID_VALUE_value" purpose="Check if WebGLRenderingContext.INVALID_VALUE constant value is 0x0501" result="PASS" /><testcase id="webglrenderingcontext_INVERT_exists" purpose="Check if WebGLRenderingContext.INVERT exists" result="PASS" /><testcase id="webglrenderingcontext_INVERT_type" purpose="Check if the type of WebGLRenderingContext.INVERT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_INVERT_value" purpose="Check if WebGLRenderingContext.INVERT constant value is 0x150A" result="PASS" /><testcase id="webglrenderingcontext_isBuffer_exists" purpose="Check if WebGLRenderingContext.isBuffer exists" result="PASS" /><testcase id="webglrenderingcontext_isBuffer_false" purpose="Check if WebGLRenderingContext.isBuffer() return false when parameter is a invalid webglbuffer" result="PASS" /><testcase id="webglrenderingcontext_isBuffer_true" purpose="Check if WebGLRenderingContext.isBuffer() return true when parameter is a valid webglbuffer" result="PASS" /><testcase id="webglrenderingcontext_isBuffer_type" purpose="Check if the type of WebGLRenderingContext.isBuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_isContextLost_default_value" purpose="Check if the default vaule of WebGLRenderingContext.isContextLost() is false" result="PASS" /><testcase id="webglrenderingcontext_isContextLost_exists" purpose="Check if WebGLRenderingContext.isContextLost exists" result="PASS" /><testcase id="webglrenderingcontext_isContextLost_type" purpose="Check if the type of WebGLRenderingContext.isContextLost is 'function'" result="PASS" /><testcase id="webglrenderingcontext_isEnabled_exists" purpose="Check if WebGLRenderingContext.isEnabled exists" result="PASS" /><testcase id="webglrenderingcontext_isEnabled_type" purpose="Check if the type of WebGLRenderingContext.isEnabled is 'function'" result="PASS" /><testcase id="webglrenderingcontext_isFramebuffer_exists" purpose="Check if WebGLRenderingContext.isFramebuffer exists" result="PASS" /><testcase id="webglrenderingcontext_isFramebuffer_false" purpose="Check if WebGLRenderingContext.isFramebuffer() return false if the passed WebGLFramebuffer is invalid" result="PASS" /><testcase id="webglrenderingcontext_isFramebuffer_true" purpose="Check if WebGLRenderingContext.isFramebuffer() return true if the passed WebGLFramebuffer is valid" result="PASS" /><testcase id="webglrenderingcontext_isFramebuffer_type" purpose="Check if the type of WebGLRenderingContext.isFramebuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_isProgram_exists" purpose="Check if WebGLRenderingContext.isProgram exists" result="PASS" /><testcase id="webglrenderingcontext_isProgram_false" purpose="Check if WebGLRenderingContext.isProgram() return false if the passed WebGLProgram is invalid" result="PASS" /><testcase id="webglrenderingcontext_isProgram_true" purpose="Check if WebGLRenderingContext.isProgram() return true if the passed WebGLProgram is valid" result="PASS" /><testcase id="webglrenderingcontext_isProgram_type" purpose="Check if the type of WebGLRenderingContext.isProgram is 'function'" result="PASS" /><testcase id="webglrenderingcontext_isRenderbuffer_exists" purpose="Check if WebGLRenderingContext.isRenderbuffer exists" result="PASS" /><testcase id="webglrenderingcontext_isRenderbuffer_false" purpose="Check if WebGLRenderingContext.isRenderbuffer() return false if the passed WebGLRenderbuffer is invalid" result="PASS" /><testcase id="webglrenderingcontext_isRenderbuffer_true" purpose="Check if WebGLRenderingContext.isRenderbuffer() return true if the passed WebGLRenderbuffer is valid" result="PASS" /><testcase id="webglrenderingcontext_isRenderbuffer_type" purpose="Check if the type of WebGLRenderingContext.isRenderbuffer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_isShader_exists" purpose="Check if WebGLRenderingContext.isShader exists" result="PASS" /><testcase id="webglrenderingcontext_isShader_false" purpose="Check if WebGLRenderingContext.isShader() return false if the passed WebGLShader is invalid" result="PASS" /><testcase id="webglrenderingcontext_isShader_true" purpose="Check if WebGLRenderingContext.isShader() return true if the passed WebGLShader is valid" result="PASS" /><testcase id="webglrenderingcontext_isShader_type" purpose="Check if the type of WebGLRenderingContext.isShader is 'function'" result="PASS" /><testcase id="webglrenderingcontext_isTexture_exists" purpose="Check if WebGLRenderingContext.isTexture exists" result="PASS" /><testcase id="webglrenderingcontext_isTexture_false" purpose="Check if WebGLRenderingContext.isTexture() return false if the passed WebGLTexture is invalid" result="PASS" /><testcase id="webglrenderingcontext_isTexture_true" purpose="Check if WebGLRenderingContext.isTexture() return true if the passed WebGLTexture is valid" result="PASS" /><testcase id="webglrenderingcontext_isTexture_type" purpose="Check if the type of WebGLRenderingContext.isTexture is 'function'" result="PASS" /><testcase id="webglrenderingcontext_KEEP_exists" purpose="Check if WebGLRenderingContext.KEEP exists" result="PASS" /><testcase id="webglrenderingcontext_KEEP_type" purpose="Check if the type of WebGLRenderingContext.KEEP is 'number'" result="PASS" /><testcase id="webglrenderingcontext_KEEP_value" purpose="Check if WebGLRenderingContext.KEEP constant value is 0x1E00" result="PASS" /><testcase id="webglrenderingcontext_LEQUAL_exists" purpose="Check if WebGLRenderingContext.LEQUAL exists" result="PASS" /><testcase id="webglrenderingcontext_LEQUAL_type" purpose="Check if the type of WebGLRenderingContext.LEQUAL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LEQUAL_value" purpose="Check if WebGLRenderingContext.LEQUAL constant value is 0x0203" result="PASS" /><testcase id="webglrenderingcontext_LESS_exists" purpose="Check if WebGLRenderingContext.LESS exists" result="PASS" /><testcase id="webglrenderingcontext_LESS_type" purpose="Check if the type of WebGLRenderingContext.LESS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LESS_value" purpose="Check if WebGLRenderingContext.LESS constant value is 0x0201" result="PASS" /><testcase id="webglrenderingcontext_LINEAR_exists" purpose="Check if WebGLRenderingContext.LINEAR exists" result="PASS" /><testcase id="webglrenderingcontext_LINEAR_MIPMAP_LINEAR_exists" purpose="Check if WebGLRenderingContext.LINEAR_MIPMAP_LINEAR exists" result="PASS" /><testcase id="webglrenderingcontext_LINEAR_MIPMAP_LINEAR_type" purpose="Check if the type of WebGLRenderingContext.LINEAR_MIPMAP_LINEAR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LINEAR_MIPMAP_LINEAR_value" purpose="Check if WebGLRenderingContext.LINEAR_MIPMAP_LINEAR constant value is 0x2703" result="PASS" /><testcase id="webglrenderingcontext_LINEAR_MIPMAP_NEAREST_exists" purpose="Check if WebGLRenderingContext.LINEAR_MIPMAP_NEAREST exists" result="PASS" /><testcase id="webglrenderingcontext_LINEAR_MIPMAP_NEAREST_type" purpose="Check if the type of WebGLRenderingContext.LINEAR_MIPMAP_NEAREST is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LINEAR_MIPMAP_NEAREST_value" purpose="Check if WebGLRenderingContext.LINEAR_MIPMAP_NEAREST constant value is 0x2701" result="PASS" /><testcase id="webglrenderingcontext_LINEAR_type" purpose="Check if the type of WebGLRenderingContext.LINEAR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LINEAR_value" purpose="Check if WebGLRenderingContext.LINEAR constant value is 0x2601" result="PASS" /><testcase id="webglrenderingcontext_LINES_exists" purpose="Check if WebGLRenderingContext.LINES exists" result="PASS" /><testcase id="webglrenderingcontext_LINES_type" purpose="Check if the type of WebGLRenderingContext.LINES is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LINES_value" purpose="Check if WebGLRenderingContext.LINES constant value is 0x0001" result="PASS" /><testcase id="webglrenderingcontext_lineWidth_basic" purpose="Check if use webglrenderingcontext.lineWidth to set line width" result="PASS" /><testcase id="webglrenderingcontext_lineWidth_exists" purpose="Check if WebGLRenderingContext.lineWidth exists" result="PASS" /><testcase id="webglrenderingcontext_lineWidth_null" purpose="Check if invoke webglrenderingcontext.lineWidth(null) throws an exception" result="PASS" /><testcase id="webglrenderingcontext_lineWidth_type" purpose="Check if the type of WebGLRenderingContext.lineWidth is 'function'" result="PASS" /><testcase id="webglrenderingcontext_LINE_LOOP_exists" purpose="Check if WebGLRenderingContext.LINE_LOOP exists" result="PASS" /><testcase id="webglrenderingcontext_LINE_LOOP_type" purpose="Check if the type of WebGLRenderingContext.LINE_LOOP is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LINE_LOOP_value" purpose="Check if WebGLRenderingContext.LINE_LOOP constant value is 0x0002" result="PASS" /><testcase id="webglrenderingcontext_LINE_STRIP_exists" purpose="Check if WebGLRenderingContext.LINE_STRIP exists" result="PASS" /><testcase id="webglrenderingcontext_LINE_STRIP_type" purpose="Check if the type of WebGLRenderingContext.LINE_STRIP is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LINE_STRIP_value" purpose="Check if WebGLRenderingContext.LINE_STRIP constant value is 0x0003" result="PASS" /><testcase id="webglrenderingcontext_LINE_WIDTH_exists" purpose="Check if WebGLRenderingContext.LINE_WIDTH exists" result="PASS" /><testcase id="webglrenderingcontext_LINE_WIDTH_type" purpose="Check if the type of WebGLRenderingContext.LINE_WIDTH is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LINE_WIDTH_value" purpose="Check if WebGLRenderingContext.LINE_WIDTH constant value is 0x0B21" result="PASS" /><testcase id="webglrenderingcontext_linkProgram_exists" purpose="Check if WebGLRenderingContext.linkProgram exists" result="PASS" /><testcase id="webglrenderingcontext_linkProgram_type" purpose="Check if the type of WebGLRenderingContext.linkProgram is 'function'" result="PASS" /><testcase id="webglrenderingcontext_LINK_STATUS_exists" purpose="Check if WebGLRenderingContext.LINK_STATUS exists" result="PASS" /><testcase id="webglrenderingcontext_LINK_STATUS_type" purpose="Check if the type of WebGLRenderingContext.LINK_STATUS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LINK_STATUS_value" purpose="Check if WebGLRenderingContext.LINK_STATUS constant value is 0x8B82" result="PASS" /><testcase id="webglrenderingcontext_LOW_FLOAT_exists" purpose="Check if WebGLRenderingContext.LOW_FLOAT exists" result="PASS" /><testcase id="webglrenderingcontext_LOW_FLOAT_type" purpose="Check if the type of WebGLRenderingContext.LOW_FLOAT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LOW_FLOAT_value" purpose="Check if WebGLRenderingContext.LOW_FLOAT constant value is 0x8DF0" result="PASS" /><testcase id="webglrenderingcontext_LOW_INT_exists" purpose="Check if WebGLRenderingContext.LOW_INT exists" result="PASS" /><testcase id="webglrenderingcontext_LOW_INT_type" purpose="Check if the type of WebGLRenderingContext.LOW_INT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LOW_INT_value" purpose="Check if WebGLRenderingContext.LOW_INT constant value is 0x8DF3" result="PASS" /><testcase id="webglrenderingcontext_LUMINANCE_ALPHA_exists" purpose="Check if WebGLRenderingContext.LUMINANCE_ALPHA exists" result="PASS" /><testcase id="webglrenderingcontext_LUMINANCE_ALPHA_type" purpose="Check if the type of WebGLRenderingContext.LUMINANCE_ALPHA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LUMINANCE_ALPHA_value" purpose="Check if WebGLRenderingContext.LUMINANCE_ALPHA constant value is 0x190A" result="PASS" /><testcase id="webglrenderingcontext_LUMINANCE_exists" purpose="Check if WebGLRenderingContext.LUMINANCE exists" result="PASS" /><testcase id="webglrenderingcontext_LUMINANCE_type" purpose="Check if the type of WebGLRenderingContext.LUMINANCE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_LUMINANCE_value" purpose="Check if WebGLRenderingContext.LUMINANCE constant value is 0x1909" result="PASS" /><testcase id="webglrenderingcontext_MAX_COMBINED_TEXTURE_IMAGE_UNITS_exists" purpose="Check if WebGLRenderingContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS exists" result="PASS" /><testcase id="webglrenderingcontext_MAX_COMBINED_TEXTURE_IMAGE_UNITS_type" purpose="Check if the type of WebGLRenderingContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MAX_COMBINED_TEXTURE_IMAGE_UNITS_value" purpose="Check if WebGLRenderingContext.MAX_COMBINED_TEXTURE_IMAGE_UNITS constant value is 0x8B4D" result="PASS" /><testcase id="webglrenderingcontext_MAX_CUBE_MAP_TEXTURE_SIZE_exists" purpose="Check if WebGLRenderingContext.MAX_CUBE_MAP_TEXTURE_SIZE exists" result="PASS" /><testcase id="webglrenderingcontext_MAX_CUBE_MAP_TEXTURE_SIZE_type" purpose="Check if the type of WebGLRenderingContext.MAX_CUBE_MAP_TEXTURE_SIZE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MAX_CUBE_MAP_TEXTURE_SIZE_value" purpose="Check if WebGLRenderingContext.MAX_CUBE_MAP_TEXTURE_SIZE constant value is 0x851C" result="PASS" /><testcase id="webglrenderingcontext_MAX_FRAGMENT_UNIFORM_VECTORS_exists" purpose="Check if WebGLRenderingContext.MAX_FRAGMENT_UNIFORM_VECTORS exists" result="PASS" /><testcase id="webglrenderingcontext_MAX_FRAGMENT_UNIFORM_VECTORS_type" purpose="Check if the type of WebGLRenderingContext.MAX_FRAGMENT_UNIFORM_VECTORS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MAX_FRAGMENT_UNIFORM_VECTORS_value" purpose="Check if WebGLRenderingContext.MAX_FRAGMENT_UNIFORM_VECTORS constant value is 0x8DFD" result="PASS" /><testcase id="webglrenderingcontext_MAX_RENDERBUFFER_SIZE_exists" purpose="Check if WebGLRenderingContext.MAX_RENDERBUFFER_SIZE exists" result="PASS" /><testcase id="webglrenderingcontext_MAX_RENDERBUFFER_SIZE_type" purpose="Check if the type of WebGLRenderingContext.MAX_RENDERBUFFER_SIZE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MAX_RENDERBUFFER_SIZE_value" purpose="Check if WebGLRenderingContext.MAX_RENDERBUFFER_SIZE constant value is 0x84E8" result="PASS" /><testcase id="webglrenderingcontext_MAX_TEXTURE_IMAGE_UNITS_exists" purpose="Check if WebGLRenderingContext.MAX_TEXTURE_IMAGE_UNITS exists" result="PASS" /><testcase id="webglrenderingcontext_MAX_TEXTURE_IMAGE_UNITS_type" purpose="Check if the type of WebGLRenderingContext.MAX_TEXTURE_IMAGE_UNITS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MAX_TEXTURE_IMAGE_UNITS_value" purpose="Check if WebGLRenderingContext.MAX_TEXTURE_IMAGE_UNITS constant value is 0x8872" result="PASS" /><testcase id="webglrenderingcontext_MAX_TEXTURE_SIZE_exists" purpose="Check if WebGLRenderingContext.MAX_TEXTURE_SIZE exists" result="PASS" /><testcase id="webglrenderingcontext_MAX_TEXTURE_SIZE_type" purpose="Check if the type of WebGLRenderingContext.MAX_TEXTURE_SIZE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MAX_TEXTURE_SIZE_value" purpose="Check if WebGLRenderingContext.MAX_TEXTURE_SIZE constant value is 0x0D33" result="PASS" /><testcase id="webglrenderingcontext_MAX_VARYING_VECTORS_exists" purpose="Check if WebGLRenderingContext.MAX_VARYING_VECTORS exists" result="PASS" /><testcase id="webglrenderingcontext_MAX_VARYING_VECTORS_type" purpose="Check if the type of WebGLRenderingContext.MAX_VARYING_VECTORS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MAX_VARYING_VECTORS_value" purpose="Check if WebGLRenderingContext.MAX_VARYING_VECTORS constant value is 0x8DFC" result="PASS" /><testcase id="webglrenderingcontext_MAX_VERTEX_ATTRIBS_exists" purpose="Check if WebGLRenderingContext.MAX_VERTEX_ATTRIBS exists" result="PASS" /><testcase id="webglrenderingcontext_MAX_VERTEX_ATTRIBS_type" purpose="Check if the type of WebGLRenderingContext.MAX_VERTEX_ATTRIBS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MAX_VERTEX_ATTRIBS_value" purpose="Check if WebGLRenderingContext.MAX_VERTEX_ATTRIBS constant value is 0x8869" result="PASS" /><testcase id="webglrenderingcontext_MAX_VERTEX_TEXTURE_IMAGE_UNITS_exists" purpose="Check if WebGLRenderingContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS exists" result="PASS" /><testcase id="webglrenderingcontext_MAX_VERTEX_TEXTURE_IMAGE_UNITS_type" purpose="Check if the type of WebGLRenderingContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MAX_VERTEX_TEXTURE_IMAGE_UNITS_value" purpose="Check if WebGLRenderingContext.MAX_VERTEX_TEXTURE_IMAGE_UNITS constant value is 0x8B4C" result="PASS" /><testcase id="webglrenderingcontext_MAX_VERTEX_UNIFORM_VECTORS_exists" purpose="Check if WebGLRenderingContext.MAX_VERTEX_UNIFORM_VECTORS exists" result="PASS" /><testcase id="webglrenderingcontext_MAX_VERTEX_UNIFORM_VECTORS_type" purpose="Check if the type of WebGLRenderingContext.MAX_VERTEX_UNIFORM_VECTORS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MAX_VERTEX_UNIFORM_VECTORS_value" purpose="Check if WebGLRenderingContext.MAX_VERTEX_UNIFORM_VECTORS constant value is 0x8DFB" result="PASS" /><testcase id="webglrenderingcontext_MAX_VIEWPORT_DIMS_exists" purpose="Check if WebGLRenderingContext.MAX_VIEWPORT_DIMS exists" result="PASS" /><testcase id="webglrenderingcontext_MAX_VIEWPORT_DIMS_type" purpose="Check if the type of WebGLRenderingContext.MAX_VIEWPORT_DIMS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MAX_VIEWPORT_DIMS_value" purpose="Check if WebGLRenderingContext.MAX_VIEWPORT_DIMS constant value is 0x0D3A" result="PASS" /><testcase id="webglrenderingcontext_MEDIUM_FLOAT_exists" purpose="Check if WebGLRenderingContext.MEDIUM_FLOAT exists" result="PASS" /><testcase id="webglrenderingcontext_MEDIUM_FLOAT_type" purpose="Check if the type of WebGLRenderingContext.MEDIUM_FLOAT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MEDIUM_FLOAT_value" purpose="Check if WebGLRenderingContext.MEDIUM_FLOAT constant value is 0x8DF1" result="PASS" /><testcase id="webglrenderingcontext_MEDIUM_INT_exists" purpose="Check if WebGLRenderingContext.MEDIUM_INT exists" result="PASS" /><testcase id="webglrenderingcontext_MEDIUM_INT_type" purpose="Check if the type of WebGLRenderingContext.MEDIUM_INT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MEDIUM_INT_value" purpose="Check if WebGLRenderingContext.MEDIUM_INT constant value is 0x8DF4" result="PASS" /><testcase id="webglrenderingcontext_MIRRORED_REPEAT_exists" purpose="Check if WebGLRenderingContext.MIRRORED_REPEAT exists" result="PASS" /><testcase id="webglrenderingcontext_MIRRORED_REPEAT_type" purpose="Check if the type of WebGLRenderingContext.MIRRORED_REPEAT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_MIRRORED_REPEAT_value" purpose="Check if WebGLRenderingContext.MIRRORED_REPEAT constant value is 0x8370" result="PASS" /><testcase id="webglrenderingcontext_NEAREST_exists" purpose="Check if WebGLRenderingContext.NEAREST exists" result="PASS" /><testcase id="webglrenderingcontext_NEAREST_MIPMAP_LINEAR_exists" purpose="Check if WebGLRenderingContext.NEAREST_MIPMAP_LINEAR exists" result="PASS" /><testcase id="webglrenderingcontext_NEAREST_MIPMAP_LINEAR_type" purpose="Check if the type of WebGLRenderingContext.NEAREST_MIPMAP_LINEAR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_NEAREST_MIPMAP_LINEAR_value" purpose="Check if WebGLRenderingContext.NEAREST_MIPMAP_LINEAR constant value is 0x2702" result="PASS" /><testcase id="webglrenderingcontext_NEAREST_MIPMAP_NEAREST_exists" purpose="Check if WebGLRenderingContext.NEAREST_MIPMAP_NEAREST exists" result="PASS" /><testcase id="webglrenderingcontext_NEAREST_MIPMAP_NEAREST_type" purpose="Check if the type of WebGLRenderingContext.NEAREST_MIPMAP_NEAREST is 'number'" result="PASS" /><testcase id="webglrenderingcontext_NEAREST_MIPMAP_NEAREST_value" purpose="Check if WebGLRenderingContext.NEAREST_MIPMAP_NEAREST constant value is 0x2700" result="PASS" /><testcase id="webglrenderingcontext_NEAREST_type" purpose="Check if the type of WebGLRenderingContext.NEAREST is 'number'" result="PASS" /><testcase id="webglrenderingcontext_NEAREST_value" purpose="Check if WebGLRenderingContext.NEAREST constant value is 0x2600" result="PASS" /><testcase id="webglrenderingcontext_NEVER_exists" purpose="Check if WebGLRenderingContext.NEVER exists" result="PASS" /><testcase id="webglrenderingcontext_NEVER_type" purpose="Check if the type of WebGLRenderingContext.NEVER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_NEVER_value" purpose="Check if WebGLRenderingContext.NEVER constant value is 0x0200" result="PASS" /><testcase id="webglrenderingcontext_NICEST_exists" purpose="Check if WebGLRenderingContext.NICEST exists" result="PASS" /><testcase id="webglrenderingcontext_NICEST_type" purpose="Check if the type of WebGLRenderingContext.NICEST is 'number'" result="PASS" /><testcase id="webglrenderingcontext_NICEST_value" purpose="Check if WebGLRenderingContext.NICEST constant value is 0x1102" result="PASS" /><testcase id="webglrenderingcontext_NONE_exists" purpose="Check if WebGLRenderingContext.NONE exists" result="PASS" /><testcase id="webglrenderingcontext_NONE_type" purpose="Check if the type of WebGLRenderingContext.NONE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_NONE_value" purpose="Check if WebGLRenderingContext.NONE constant value is 0" result="PASS" /><testcase id="webglrenderingcontext_NOTEQUAL_exists" purpose="Check if WebGLRenderingContext.NOTEQUAL exists" result="PASS" /><testcase id="webglrenderingcontext_NOTEQUAL_type" purpose="Check if the type of WebGLRenderingContext.NOTEQUAL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_NOTEQUAL_value" purpose="Check if WebGLRenderingContext.NOTEQUAL constant value is 0x0205" result="PASS" /><testcase id="webglrenderingcontext_NO_ERROR_exists" purpose="Check if WebGLRenderingContext.NO_ERROR exists" result="PASS" /><testcase id="webglrenderingcontext_NO_ERROR_type" purpose="Check if the type of WebGLRenderingContext.NO_ERROR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_NO_ERROR_value" purpose="Check if WebGLRenderingContext.NO_ERROR constant value is 0" result="PASS" /><testcase id="webglrenderingcontext_ONE_exists" purpose="Check if WebGLRenderingContext.ONE exists" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_CONSTANT_ALPHA_exists" purpose="Check if WebGLRenderingContext.ONE_MINUS_CONSTANT_ALPHA exists" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_CONSTANT_ALPHA_type" purpose="Check if the type of WebGLRenderingContext.ONE_MINUS_CONSTANT_ALPHA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_CONSTANT_ALPHA_value" purpose="Check if WebGLRenderingContext.ONE_MINUS_CONSTANT_ALPHA constant value is 0x8004" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_CONSTANT_COLOR_exists" purpose="Check if WebGLRenderingContext.ONE_MINUS_CONSTANT_COLOR exists" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_CONSTANT_COLOR_type" purpose="Check if the type of WebGLRenderingContext.ONE_MINUS_CONSTANT_COLOR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_CONSTANT_COLOR_value" purpose="Check if WebGLRenderingContext.ONE_MINUS_CONSTANT_COLOR constant value is 0x8002" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_DST_ALPHA_exists" purpose="Check if WebGLRenderingContext.ONE_MINUS_DST_ALPHA exists" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_DST_ALPHA_type" purpose="Check if the type of WebGLRenderingContext.ONE_MINUS_DST_ALPHA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_DST_ALPHA_value" purpose="Check if WebGLRenderingContext.ONE_MINUS_DST_ALPHA constant value is 0x0305" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_DST_COLOR_exists" purpose="Check if WebGLRenderingContext.ONE_MINUS_DST_COLOR exists" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_DST_COLOR_type" purpose="Check if the type of WebGLRenderingContext.ONE_MINUS_DST_COLOR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_DST_COLOR_value" purpose="Check if WebGLRenderingContext.ONE_MINUS_DST_COLOR constant value is 0x0307" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_SRC_ALPHA_exists" purpose="Check if WebGLRenderingContext.ONE_MINUS_SRC_ALPHA exists" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_SRC_ALPHA_type" purpose="Check if the type of WebGLRenderingContext.ONE_MINUS_SRC_ALPHA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_SRC_ALPHA_value" purpose="Check if WebGLRenderingContext.ONE_MINUS_SRC_ALPHA constant value is 0x0303" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_SRC_COLOR_exists" purpose="Check if WebGLRenderingContext.ONE_MINUS_SRC_COLOR exists" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_SRC_COLOR_type" purpose="Check if the type of WebGLRenderingContext.ONE_MINUS_SRC_COLOR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ONE_MINUS_SRC_COLOR_value" purpose="Check if WebGLRenderingContext.ONE_MINUS_SRC_COLOR constant value is 0x0301" result="PASS" /><testcase id="webglrenderingcontext_ONE_type" purpose="Check if the type of WebGLRenderingContext.ONE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ONE_value" purpose="Check if WebGLRenderingContext.ONE constant value is 1" result="PASS" /><testcase id="webglrenderingcontext_onlyone" purpose="Check if WebGLRenderingContext object is only one" result="PASS" /><testcase id="webglrenderingcontext_OUT_OF_MEMORY_exists" purpose="Check if WebGLRenderingContext.OUT_OF_MEMORY exists" result="PASS" /><testcase id="webglrenderingcontext_OUT_OF_MEMORY_type" purpose="Check if the type of WebGLRenderingContext.OUT_OF_MEMORY is 'number'" result="PASS" /><testcase id="webglrenderingcontext_OUT_OF_MEMORY_value" purpose="Check if WebGLRenderingContext.OUT_OF_MEMORY constant value is 0x0505" result="PASS" /><testcase id="webglrenderingcontext_PACK_ALIGNMENT_exists" purpose="Check if WebGLRenderingContext.PACK_ALIGNMENT exists" result="PASS" /><testcase id="webglrenderingcontext_PACK_ALIGNMENT_type" purpose="Check if the type of WebGLRenderingContext.PACK_ALIGNMENT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_PACK_ALIGNMENT_value" purpose="Check if WebGLRenderingContext.PACK_ALIGNMENT constant value is 0x0D05" result="PASS" /><testcase id="webglrenderingcontext_pixelStorei_exists" purpose="Check if WebGLRenderingContext.pixelStorei exists" result="PASS" /><testcase id="webglrenderingcontext_pixelStorei_type" purpose="Check if the type of WebGLRenderingContext.pixelStorei is 'function'" result="PASS" /><testcase id="webglrenderingcontext_POINTS_exists" purpose="Check if WebGLRenderingContext.POINTS exists" result="PASS" /><testcase id="webglrenderingcontext_POINTS_type" purpose="Check if the type of WebGLRenderingContext.POINTS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_POINTS_value" purpose="Check if WebGLRenderingContext.POINTS constant value is 0x0000" result="PASS" /><testcase id="webglrenderingcontext_polygonOffset_exists" purpose="Check if WebGLRenderingContext.polygonOffset exists" result="PASS" /><testcase id="webglrenderingcontext_polygonOffset_type" purpose="Check if the type of WebGLRenderingContext.polygonOffset is 'function'" result="PASS" /><testcase id="webglrenderingcontext_POLYGON_OFFSET_FACTOR_exists" purpose="Check if WebGLRenderingContext.POLYGON_OFFSET_FACTOR exists" result="PASS" /><testcase id="webglrenderingcontext_POLYGON_OFFSET_FACTOR_type" purpose="Check if the type of WebGLRenderingContext.POLYGON_OFFSET_FACTOR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_POLYGON_OFFSET_FACTOR_value" purpose="Check if WebGLRenderingContext.POLYGON_OFFSET_FACTOR constant value is 0x8038" result="PASS" /><testcase id="webglrenderingcontext_POLYGON_OFFSET_FILL_exists" purpose="Check if WebGLRenderingContext.POLYGON_OFFSET_FILL exists" result="PASS" /><testcase id="webglrenderingcontext_POLYGON_OFFSET_FILL_type" purpose="Check if the type of WebGLRenderingContext.POLYGON_OFFSET_FILL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_POLYGON_OFFSET_FILL_value" purpose="Check if WebGLRenderingContext.POLYGON_OFFSET_FILL constant value is 0x8037" result="PASS" /><testcase id="webglrenderingcontext_POLYGON_OFFSET_UNITS_exists" purpose="Check if WebGLRenderingContext.POLYGON_OFFSET_UNITS exists" result="PASS" /><testcase id="webglrenderingcontext_POLYGON_OFFSET_UNITS_type" purpose="Check if the type of WebGLRenderingContext.POLYGON_OFFSET_UNITS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_POLYGON_OFFSET_UNITS_value" purpose="Check if WebGLRenderingContext.POLYGON_OFFSET_UNITS constant value is 0x2A00" result="PASS" /><testcase id="webglrenderingcontext_readPixels_exists" purpose="Check if WebGLRenderingContext.readPixels exists" result="PASS" /><testcase id="webglrenderingcontext_readPixels_pixels_null" purpose="Check if pixels is null, an INVALID_VALUE error is generated" result="PASS" /><testcase id="webglrenderingcontext_readPixels_type" purpose="Check if the type of WebGLRenderingContext.readPixels is 'function'" result="PASS" /><testcase id="webglrenderingcontext_RED_BITS_exists" purpose="Check if WebGLRenderingContext.RED_BITS exists" result="PASS" /><testcase id="webglrenderingcontext_RED_BITS_type" purpose="Check if the type of WebGLRenderingContext.RED_BITS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RED_BITS_value" purpose="Check if WebGLRenderingContext.RED_BITS constant value is 0x0D52" result="PASS" /><testcase id="webglrenderingcontext_renderbufferStorage_exists" purpose="Check if WebGLRenderingContext.renderbufferStorage exists" result="PASS" /><testcase id="webglrenderingcontext_renderbufferStorage_type" purpose="Check if the type of WebGLRenderingContext.renderbufferStorage is 'function'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_ALPHA_SIZE_exists" purpose="Check if WebGLRenderingContext.RENDERBUFFER_ALPHA_SIZE exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_ALPHA_SIZE_type" purpose="Check if the type of WebGLRenderingContext.RENDERBUFFER_ALPHA_SIZE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_ALPHA_SIZE_value" purpose="Check if WebGLRenderingContext.RENDERBUFFER_ALPHA_SIZE constant value is 0x8D53" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_BINDING_exists" purpose="Check if WebGLRenderingContext.RENDERBUFFER_BINDING exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_BINDING_type" purpose="Check if the type of WebGLRenderingContext.RENDERBUFFER_BINDING is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_BINDING_value" purpose="Check if WebGLRenderingContext.RENDERBUFFER_BINDING constant value is 0x8CA7" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_BLUE_SIZE_exists" purpose="Check if WebGLRenderingContext.RENDERBUFFER_BLUE_SIZE exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_BLUE_SIZE_type" purpose="Check if the type of WebGLRenderingContext.RENDERBUFFER_BLUE_SIZE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_BLUE_SIZE_value" purpose="Check if WebGLRenderingContext.RENDERBUFFER_BLUE_SIZE constant value is 0x8D52" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_DEPTH_SIZE_exists" purpose="Check if WebGLRenderingContext.RENDERBUFFER_DEPTH_SIZE exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_DEPTH_SIZE_type" purpose="Check if the type of WebGLRenderingContext.RENDERBUFFER_DEPTH_SIZE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_DEPTH_SIZE_value" purpose="Check if WebGLRenderingContext.RENDERBUFFER_DEPTH_SIZE constant value is 0x8D54" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_exists" purpose="Check if WebGLRenderingContext.RENDERBUFFER exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_GREEN_SIZE_exists" purpose="Check if WebGLRenderingContext.RENDERBUFFER_GREEN_SIZE exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_GREEN_SIZE_type" purpose="Check if the type of WebGLRenderingContext.RENDERBUFFER_GREEN_SIZE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_GREEN_SIZE_value" purpose="Check if WebGLRenderingContext.RENDERBUFFER_GREEN_SIZE constant value is 0x8D51" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_HEIGHT_exists" purpose="Check if WebGLRenderingContext.RENDERBUFFER_HEIGHT exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_HEIGHT_type" purpose="Check if the type of WebGLRenderingContext.RENDERBUFFER_HEIGHT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_HEIGHT_value" purpose="Check if WebGLRenderingContext.RENDERBUFFER_HEIGHT constant value is 0x8D43" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_INTERNAL_FORMAT_exists" purpose="Check if WebGLRenderingContext.RENDERBUFFER_INTERNAL_FORMAT exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_INTERNAL_FORMAT_type" purpose="Check if the type of WebGLRenderingContext.RENDERBUFFER_INTERNAL_FORMAT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_INTERNAL_FORMAT_value" purpose="Check if WebGLRenderingContext.RENDERBUFFER_INTERNAL_FORMAT constant value is 0x8D44" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_RED_SIZE_exists" purpose="Check if WebGLRenderingContext.RENDERBUFFER_RED_SIZE exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_RED_SIZE_type" purpose="Check if the type of WebGLRenderingContext.RENDERBUFFER_RED_SIZE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_RED_SIZE_value" purpose="Check if WebGLRenderingContext.RENDERBUFFER_RED_SIZE constant value is 0x8D50" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_STENCIL_SIZE_exists" purpose="Check if WebGLRenderingContext.RENDERBUFFER_STENCIL_SIZE exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_STENCIL_SIZE_type" purpose="Check if the type of WebGLRenderingContext.RENDERBUFFER_STENCIL_SIZE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_STENCIL_SIZE_value" purpose="Check if WebGLRenderingContext.RENDERBUFFER_STENCIL_SIZE constant value is 0x8D55" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_type" purpose="Check if the type of WebGLRenderingContext.RENDERBUFFER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_value" purpose="Check if WebGLRenderingContext.RENDERBUFFER constant value is 0x8D41" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_WIDTH_exists" purpose="Check if WebGLRenderingContext.RENDERBUFFER_WIDTH exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_WIDTH_type" purpose="Check if the type of WebGLRenderingContext.RENDERBUFFER_WIDTH is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERBUFFER_WIDTH_value" purpose="Check if WebGLRenderingContext.RENDERBUFFER_WIDTH constant value is 0x8D42" result="PASS" /><testcase id="webglrenderingcontext_RENDERER_exists" purpose="Check if WebGLRenderingContext.RENDERER exists" result="PASS" /><testcase id="webglrenderingcontext_RENDERER_type" purpose="Check if the type of WebGLRenderingContext.RENDERER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RENDERER_value" purpose="Check if WebGLRenderingContext.RENDERER constant value is 0x1F01" result="PASS" /><testcase id="webglrenderingcontext_REPEAT_exists" purpose="Check if WebGLRenderingContext.REPEAT exists" result="PASS" /><testcase id="webglrenderingcontext_REPEAT_type" purpose="Check if the type of WebGLRenderingContext.REPEAT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_REPEAT_value" purpose="Check if WebGLRenderingContext.REPEAT constant value is 0x2901" result="PASS" /><testcase id="webglrenderingcontext_REPLACE_exists" purpose="Check if WebGLRenderingContext.REPLACE exists" result="PASS" /><testcase id="webglrenderingcontext_REPLACE_type" purpose="Check if the type of WebGLRenderingContext.REPLACE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_REPLACE_value" purpose="Check if WebGLRenderingContext.REPLACE constant value is 0x1E01" result="PASS" /><testcase id="webglrenderingcontext_RGB565_exists" purpose="Check if WebGLRenderingContext.RGB565 exists" result="PASS" /><testcase id="webglrenderingcontext_RGB565_type" purpose="Check if the type of WebGLRenderingContext.RGB565 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RGB565_value" purpose="Check if WebGLRenderingContext.RGB565 constant value is 0x8D62" result="PASS" /><testcase id="webglrenderingcontext_RGB5_A1_exists" purpose="Check if WebGLRenderingContext.RGB5_A1 exists" result="PASS" /><testcase id="webglrenderingcontext_RGB5_A1_type" purpose="Check if the type of WebGLRenderingContext.RGB5_A1 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RGB5_A1_value" purpose="Check if WebGLRenderingContext.RGB5_A1 constant value is 0x8057" result="PASS" /><testcase id="webglrenderingcontext_RGBA4_exists" purpose="Check if WebGLRenderingContext.RGBA4 exists" result="PASS" /><testcase id="webglrenderingcontext_RGBA4_type" purpose="Check if the type of WebGLRenderingContext.RGBA4 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RGBA4_value" purpose="Check if WebGLRenderingContext.RGBA4 constant value is 0x8056" result="PASS" /><testcase id="webglrenderingcontext_RGBA_exists" purpose="Check if WebGLRenderingContext.RGBA exists" result="PASS" /><testcase id="webglrenderingcontext_RGBA_type" purpose="Check if the type of WebGLRenderingContext.RGBA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RGBA_value" purpose="Check if WebGLRenderingContext.RGBA constant value is 0x1908" result="PASS" /><testcase id="webglrenderingcontext_RGB_exists" purpose="Check if WebGLRenderingContext.RGB exists" result="PASS" /><testcase id="webglrenderingcontext_RGB_type" purpose="Check if the type of WebGLRenderingContext.RGB is 'number'" result="PASS" /><testcase id="webglrenderingcontext_RGB_value" purpose="Check if WebGLRenderingContext.RGB constant value is 0x1907" result="PASS" /><testcase id="webglrenderingcontext_sampleCoverage_exists" purpose="Check if WebGLRenderingContext.sampleCoverage exists" result="PASS" /><testcase id="webglrenderingcontext_sampleCoverage_type" purpose="Check if the type of WebGLRenderingContext.sampleCoverage is 'function'" result="PASS" /><testcase id="webglrenderingcontext_SAMPLER_2D_exists" purpose="Check if WebGLRenderingContext.SAMPLER_2D exists" result="PASS" /><testcase id="webglrenderingcontext_SAMPLER_2D_type" purpose="Check if the type of WebGLRenderingContext.SAMPLER_2D is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SAMPLER_2D_value" purpose="Check if WebGLRenderingContext.SAMPLER_2D constant value is 0x8B5E" result="PASS" /><testcase id="webglrenderingcontext_SAMPLER_CUBE_exists" purpose="Check if WebGLRenderingContext.SAMPLER_CUBE exists" result="PASS" /><testcase id="webglrenderingcontext_SAMPLER_CUBE_type" purpose="Check if the type of WebGLRenderingContext.SAMPLER_CUBE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SAMPLER_CUBE_value" purpose="Check if WebGLRenderingContext.SAMPLER_CUBE constant value is 0x8B60" result="PASS" /><testcase id="webglrenderingcontext_SAMPLES_exists" purpose="Check if WebGLRenderingContext.SAMPLES exists" result="PASS" /><testcase id="webglrenderingcontext_SAMPLES_type" purpose="Check if the type of WebGLRenderingContext.SAMPLES is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SAMPLES_value" purpose="Check if WebGLRenderingContext.SAMPLES constant value is 0x80A9" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_ALPHA_TO_COVERAGE_exists" purpose="Check if WebGLRenderingContext.SAMPLE_ALPHA_TO_COVERAGE exists" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_ALPHA_TO_COVERAGE_type" purpose="Check if the type of WebGLRenderingContext.SAMPLE_ALPHA_TO_COVERAGE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_ALPHA_TO_COVERAGE_value" purpose="Check if WebGLRenderingContext.SAMPLE_ALPHA_TO_COVERAGE constant value is 0x809E" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_BUFFERS_exists" purpose="Check if WebGLRenderingContext.SAMPLE_BUFFERS exists" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_BUFFERS_type" purpose="Check if the type of WebGLRenderingContext.SAMPLE_BUFFERS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_BUFFERS_value" purpose="Check if WebGLRenderingContext.SAMPLE_BUFFERS constant value is 0x80A8" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_COVERAGE_exists" purpose="Check if WebGLRenderingContext.SAMPLE_COVERAGE exists" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_COVERAGE_INVERT_exists" purpose="Check if WebGLRenderingContext.SAMPLE_COVERAGE_INVERT exists" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_COVERAGE_INVERT_type" purpose="Check if the type of WebGLRenderingContext.SAMPLE_COVERAGE_INVERT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_COVERAGE_INVERT_value" purpose="Check if WebGLRenderingContext.SAMPLE_COVERAGE_INVERT constant value is 0x80AB" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_COVERAGE_type" purpose="Check if the type of WebGLRenderingContext.SAMPLE_COVERAGE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_COVERAGE_value" purpose="Check if WebGLRenderingContext.SAMPLE_COVERAGE constant value is 0x80A0" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_COVERAGE_VALUE_exists" purpose="Check if WebGLRenderingContext.SAMPLE_COVERAGE_VALUE exists" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_COVERAGE_VALUE_type" purpose="Check if the type of WebGLRenderingContext.SAMPLE_COVERAGE_VALUE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SAMPLE_COVERAGE_VALUE_value" purpose="Check if WebGLRenderingContext.SAMPLE_COVERAGE_VALUE constant value is 0x80AA" result="PASS" /><testcase id="webglrenderingcontext_SCISSOR_BOX_exists" purpose="Check if WebGLRenderingContext.SCISSOR_BOX exists" result="PASS" /><testcase id="webglrenderingcontext_SCISSOR_BOX_type" purpose="Check if the type of WebGLRenderingContext.SCISSOR_BOX is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SCISSOR_BOX_value" purpose="Check if WebGLRenderingContext.SCISSOR_BOX constant value is 0x0C10" result="PASS" /><testcase id="webglrenderingcontext_scissor_exists" purpose="Check if WebGLRenderingContext.scissor exists" result="PASS" /><testcase id="webglrenderingcontext_SCISSOR_TEST_exists" purpose="Check if WebGLRenderingContext.SCISSOR_TEST exists" result="PASS" /><testcase id="webglrenderingcontext_SCISSOR_TEST_type" purpose="Check if the type of WebGLRenderingContext.SCISSOR_TEST is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SCISSOR_TEST_value" purpose="Check if WebGLRenderingContext.SCISSOR_TEST constant value is 0x0C11" result="PASS" /><testcase id="webglrenderingcontext_scissor_type" purpose="Check if the type of WebGLRenderingContext.scissor is 'function'" result="PASS" /><testcase id="webglrenderingcontext_shaderSource_exists" purpose="Check if WebGLRenderingContext.shaderSource exists" result="PASS" /><testcase id="webglrenderingcontext_shaderSource_type" purpose="Check if the type of WebGLRenderingContext.shaderSource is 'function'" result="PASS" /><testcase id="webglrenderingcontext_SHADER_TYPE_exists" purpose="Check if WebGLRenderingContext.SHADER_TYPE exists" result="PASS" /><testcase id="webglrenderingcontext_SHADER_TYPE_type" purpose="Check if the type of WebGLRenderingContext.SHADER_TYPE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SHADER_TYPE_value" purpose="Check if WebGLRenderingContext.SHADER_TYPE constant value is 0x8B4F" result="PASS" /><testcase id="webglrenderingcontext_SHADING_LANGUAGE_VERSION_exists" purpose="Check if WebGLRenderingContext.SHADING_LANGUAGE_VERSION exists" result="PASS" /><testcase id="webglrenderingcontext_SHADING_LANGUAGE_VERSION_type" purpose="Check if the type of WebGLRenderingContext.SHADING_LANGUAGE_VERSION is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SHADING_LANGUAGE_VERSION_value" purpose="Check if WebGLRenderingContext.SHADING_LANGUAGE_VERSION constant value is 0x8B8C" result="PASS" /><testcase id="webglrenderingcontext_SHORT_exists" purpose="Check if WebGLRenderingContext.SHORT exists" result="PASS" /><testcase id="webglrenderingcontext_SHORT_type" purpose="Check if the type of WebGLRenderingContext.SHORT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SHORT_value" purpose="Check if WebGLRenderingContext.SHORT constant value is 0x1402" result="PASS" /><testcase id="webglrenderingcontext_SRC_ALPHA_exists" purpose="Check if WebGLRenderingContext.SRC_ALPHA exists" result="PASS" /><testcase id="webglrenderingcontext_SRC_ALPHA_SATURATE_exists" purpose="Check if WebGLRenderingContext.SRC_ALPHA_SATURATE exists" result="PASS" /><testcase id="webglrenderingcontext_SRC_ALPHA_SATURATE_type" purpose="Check if the type of WebGLRenderingContext.SRC_ALPHA_SATURATE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SRC_ALPHA_SATURATE_value" purpose="Check if WebGLRenderingContext.SRC_ALPHA_SATURATE constant value is 0x0308" result="PASS" /><testcase id="webglrenderingcontext_SRC_ALPHA_type" purpose="Check if the type of WebGLRenderingContext.SRC_ALPHA is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SRC_ALPHA_value" purpose="Check if WebGLRenderingContext.SRC_ALPHA constant value is 0x0302" result="PASS" /><testcase id="webglrenderingcontext_SRC_COLOR_exists" purpose="Check if WebGLRenderingContext.SRC_COLOR exists" result="PASS" /><testcase id="webglrenderingcontext_SRC_COLOR_type" purpose="Check if the type of WebGLRenderingContext.SRC_COLOR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SRC_COLOR_value" purpose="Check if WebGLRenderingContext.SRC_COLOR constant value is 0x0300" result="PASS" /><testcase id="webglrenderingcontext_STATIC_DRAW_exists" purpose="Check if WebGLRenderingContext.STATIC_DRAW exists" result="PASS" /><testcase id="webglrenderingcontext_STATIC_DRAW_type" purpose="Check if the type of WebGLRenderingContext.STATIC_DRAW is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STATIC_DRAW_value" purpose="Check if WebGLRenderingContext.STATIC_DRAW constant value is 0x88E4" result="PASS" /><testcase id="webglrenderingcontext_stencilFuncSeparate_exists" purpose="Check if WebGLRenderingContext.stencilFuncSeparate exists" result="PASS" /><testcase id="webglrenderingcontext_stencilFuncSeparate_type" purpose="Check if the type of WebGLRenderingContext.stencilFuncSeparate is 'function'" result="PASS" /><testcase id="webglrenderingcontext_stencilFunc_exists" purpose="Check if WebGLRenderingContext.stencilFunc exists" result="PASS" /><testcase id="webglrenderingcontext_stencilFunc_type" purpose="Check if the type of WebGLRenderingContext.stencilFunc is 'function'" result="PASS" /><testcase id="webglrenderingcontext_stencilMaskSeparate_exists" purpose="Check if WebGLRenderingContext.stencilMaskSeparate exists" result="PASS" /><testcase id="webglrenderingcontext_stencilMaskSeparate_type" purpose="Check if the type of WebGLRenderingContext.stencilMaskSeparate is 'function'" result="PASS" /><testcase id="webglrenderingcontext_stencilMask_exists" purpose="Check if WebGLRenderingContext.stencilMask exists" result="PASS" /><testcase id="webglrenderingcontext_stencilMask_type" purpose="Check if the type of WebGLRenderingContext.stencilMask is 'function'" result="PASS" /><testcase id="webglrenderingcontext_stencilOpSeparate_exists" purpose="Check if WebGLRenderingContext.stencilOpSeparate exists" result="PASS" /><testcase id="webglrenderingcontext_stencilOpSeparate_type" purpose="Check if the type of WebGLRenderingContext.stencilOpSeparate is 'function'" result="PASS" /><testcase id="webglrenderingcontext_stencilOp_exists" purpose="Check if WebGLRenderingContext.stencilOp exists" result="PASS" /><testcase id="webglrenderingcontext_stencilOp_type" purpose="Check if the type of WebGLRenderingContext.stencilOp is 'function'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_ATTACHMENT_exists" purpose="Check if WebGLRenderingContext.STENCIL_ATTACHMENT exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_ATTACHMENT_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_ATTACHMENT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_ATTACHMENT_value" purpose="Check if WebGLRenderingContext.STENCIL_ATTACHMENT constant value is 0x8D20" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_FAIL_exists" purpose="Check if WebGLRenderingContext.STENCIL_BACK_FAIL exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_FAIL_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_BACK_FAIL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_FAIL_value" purpose="Check if WebGLRenderingContext.STENCIL_BACK_FAIL constant value is 0x8801" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_FUNC_exists" purpose="Check if WebGLRenderingContext.STENCIL_BACK_FUNC exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_FUNC_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_BACK_FUNC is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_FUNC_value" purpose="Check if WebGLRenderingContext.STENCIL_BACK_FUNC constant value is 0x8800" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_PASS_DEPTH_FAIL_exists" purpose="Check if WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_FAIL exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_PASS_DEPTH_FAIL_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_FAIL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_PASS_DEPTH_FAIL_value" purpose="Check if WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_FAIL constant value is 0x8802" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_PASS_DEPTH_PASS_exists" purpose="Check if WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_PASS exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_PASS_DEPTH_PASS_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_PASS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_PASS_DEPTH_PASS_value" purpose="Check if WebGLRenderingContext.STENCIL_BACK_PASS_DEPTH_PASS constant value is 0x8803" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_REF_exists" purpose="Check if WebGLRenderingContext.STENCIL_BACK_REF exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_REF_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_BACK_REF is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_REF_value" purpose="Check if WebGLRenderingContext.STENCIL_BACK_REF constant value is 0x8CA3" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_VALUE_MASK_exists" purpose="Check if WebGLRenderingContext.STENCIL_BACK_VALUE_MASK exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_VALUE_MASK_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_BACK_VALUE_MASK is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_VALUE_MASK_value" purpose="Check if WebGLRenderingContext.STENCIL_BACK_VALUE_MASK constant value is 0x8CA4" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_WRITEMASK_exists" purpose="Check if WebGLRenderingContext.STENCIL_BACK_WRITEMASK exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_WRITEMASK_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_BACK_WRITEMASK is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BACK_WRITEMASK_value" purpose="Check if WebGLRenderingContext.STENCIL_BACK_WRITEMASK constant value is 0x8CA5" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BITS_exists" purpose="Check if WebGLRenderingContext.STENCIL_BITS exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BITS_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_BITS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BITS_value" purpose="Check if WebGLRenderingContext.STENCIL_BITS constant value is 0x0D57" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BUFFER_BIT_exists" purpose="Check if WebGLRenderingContext.STENCIL_BUFFER_BIT exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BUFFER_BIT_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_BUFFER_BIT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_BUFFER_BIT_value" purpose="Check if WebGLRenderingContext.STENCIL_BUFFER_BIT constant value is 0x00000400" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_CLEAR_VALUE_exists" purpose="Check if WebGLRenderingContext.STENCIL_CLEAR_VALUE exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_CLEAR_VALUE_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_CLEAR_VALUE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_CLEAR_VALUE_value" purpose="Check if WebGLRenderingContext.STENCIL_CLEAR_VALUE constant value is 0x0B91" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_FAIL_exists" purpose="Check if WebGLRenderingContext.STENCIL_FAIL exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_FAIL_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_FAIL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_FAIL_value" purpose="Check if WebGLRenderingContext.STENCIL_FAIL constant value is 0x0B94" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_FUNC_exists" purpose="Check if WebGLRenderingContext.STENCIL_FUNC exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_FUNC_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_FUNC is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_FUNC_value" purpose="Check if WebGLRenderingContext.STENCIL_FUNC constant value is 0x0B92" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_INDEX8_exists" purpose="Check if WebGLRenderingContext.STENCIL_INDEX8 exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_INDEX8_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_INDEX8 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_INDEX8_value" purpose="Check if WebGLRenderingContext.STENCIL_INDEX8 constant value is 0x8D48" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_INDEX_exists" purpose="Check if WebGLRenderingContext.STENCIL_INDEX exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_INDEX_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_INDEX is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_INDEX_value" purpose="Check if WebGLRenderingContext.STENCIL_INDEX constant value is 0x1901" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_PASS_DEPTH_FAIL_exists" purpose="Check if WebGLRenderingContext.STENCIL_PASS_DEPTH_FAIL exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_PASS_DEPTH_FAIL_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_PASS_DEPTH_FAIL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_PASS_DEPTH_FAIL_value" purpose="Check if WebGLRenderingContext.STENCIL_PASS_DEPTH_FAIL constant value is 0x0B95" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_PASS_DEPTH_PASS_exists" purpose="Check if WebGLRenderingContext.STENCIL_PASS_DEPTH_PASS exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_PASS_DEPTH_PASS_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_PASS_DEPTH_PASS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_PASS_DEPTH_PASS_value" purpose="Check if WebGLRenderingContext.STENCIL_PASS_DEPTH_PASS constant value is 0x0B96" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_REF_exists" purpose="Check if WebGLRenderingContext.STENCIL_REF exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_REF_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_REF is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_REF_value" purpose="Check if WebGLRenderingContext.STENCIL_REF constant value is 0x0B97" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_TEST_exists" purpose="Check if WebGLRenderingContext.STENCIL_TEST exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_TEST_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_TEST is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_TEST_value" purpose="Check if WebGLRenderingContext.STENCIL_TEST constant value is 0x0B90" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_VALUE_MASK_exists" purpose="Check if WebGLRenderingContext.STENCIL_VALUE_MASK exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_VALUE_MASK_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_VALUE_MASK is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_VALUE_MASK_value" purpose="Check if WebGLRenderingContext.STENCIL_VALUE_MASK constant value is 0x0B93" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_WRITEMASK_exists" purpose="Check if WebGLRenderingContext.STENCIL_WRITEMASK exists" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_WRITEMASK_type" purpose="Check if the type of WebGLRenderingContext.STENCIL_WRITEMASK is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STENCIL_WRITEMASK_value" purpose="Check if WebGLRenderingContext.STENCIL_WRITEMASK constant value is 0x0B98" result="PASS" /><testcase id="webglrenderingcontext_STREAM_DRAW_exists" purpose="Check if WebGLRenderingContext.STREAM_DRAW exists" result="PASS" /><testcase id="webglrenderingcontext_STREAM_DRAW_type" purpose="Check if the type of WebGLRenderingContext.STREAM_DRAW is 'number'" result="PASS" /><testcase id="webglrenderingcontext_STREAM_DRAW_value" purpose="Check if WebGLRenderingContext.STREAM_DRAW constant value is 0x88E0" result="PASS" /><testcase id="webglrenderingcontext_SUBPIXEL_BITS_exists" purpose="Check if WebGLRenderingContext.SUBPIXEL_BITS exists" result="PASS" /><testcase id="webglrenderingcontext_SUBPIXEL_BITS_type" purpose="Check if the type of WebGLRenderingContext.SUBPIXEL_BITS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_SUBPIXEL_BITS_value" purpose="Check if WebGLRenderingContext.SUBPIXEL_BITS constant value is 0x0D50" result="PASS" /><testcase id="webglrenderingcontext_support" purpose="Check if WebGLRenderingContext supports" result="PASS" /><testcase id="webglrenderingcontext_support_moz-webgl" purpose="Check if WebGLRenderingContext supports moz-webgl" result="PASS" /><testcase id="webglrenderingcontext_texImage2D_exists" purpose="Check if WebGLRenderingContext.texImage2D exists" result="PASS" /><testcase id="webglrenderingcontext_texImage2D_type" purpose="Check if the type of WebGLRenderingContext.texImage2D is 'function'" result="PASS" /><testcase id="webglrenderingcontext_texParameterf_exists" purpose="Check if WebGLRenderingContext.texParameterf exists" result="PASS" /><testcase id="webglrenderingcontext_texParameterf_INVALID_OPERATION" purpose="Check if an attempt is made to call texParameterf() with no WebGLTexture bound, an INVALID_OPERATION error is generated" result="PASS" /><testcase id="webglrenderingcontext_texParameterf_type" purpose="Check if the type of WebGLRenderingContext.texParameterf is 'function'" result="PASS" /><testcase id="webglrenderingcontext_texParameteri_exists" purpose="Check if WebGLRenderingContext.texParameteri exists" result="PASS" /><testcase id="webglrenderingcontext_texParameteri_INVALID_OPERATION" purpose="Check if an attempt is made to call texParameteri() with no WebGLTexture bound, an INVALID_OPERATION error is generated" result="PASS" /><testcase id="webglrenderingcontext_texParameteri_type" purpose="Check if the type of WebGLRenderingContext.texParameteri is 'function'" result="PASS" /><testcase id="webglrenderingcontext_texSubImage2D_exists" purpose="Check if WebGLRenderingContext.texSubImage2D exists" result="PASS" /><testcase id="webglrenderingcontext_texSubImage2D_type" purpose="Check if the type of WebGLRenderingContext.texSubImage2D is 'function'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE0_exists" purpose="Check if WebGLRenderingContext.TEXTURE0 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE0_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE0 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE0_value" purpose="Check if WebGLRenderingContext.TEXTURE0 constant value is 0x84C0" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE10_exists" purpose="Check if WebGLRenderingContext.TEXTURE10 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE10_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE10 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE10_value" purpose="Check if WebGLRenderingContext.TEXTURE10 constant value is 0x84CA" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE11_exists" purpose="Check if WebGLRenderingContext.TEXTURE11 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE11_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE11 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE11_value" purpose="Check if WebGLRenderingContext.TEXTURE11 constant value is 0x84CB" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE12_exists" purpose="Check if WebGLRenderingContext.TEXTURE12 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE12_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE12 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE12_value" purpose="Check if WebGLRenderingContext.TEXTURE12 constant value is 0x84CC" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE13_exists" purpose="Check if WebGLRenderingContext.TEXTURE13 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE13_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE13 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE13_value" purpose="Check if WebGLRenderingContext.TEXTURE13 constant value is 0x84CD" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE14_exists" purpose="Check if WebGLRenderingContext.TEXTURE14 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE14_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE14 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE14_value" purpose="Check if WebGLRenderingContext.TEXTURE14 constant value is 0x84CE" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE15_exists" purpose="Check if WebGLRenderingContext.TEXTURE15 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE15_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE15 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE15_value" purpose="Check if WebGLRenderingContext.TEXTURE15 constant value is 0x84CF" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE16_exists" purpose="Check if WebGLRenderingContext.TEXTURE16 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE16_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE16 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE16_value" purpose="Check if WebGLRenderingContext.TEXTURE16 constant value is 0x84D0" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE17_exists" purpose="Check if WebGLRenderingContext.TEXTURE17 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE17_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE17 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE17_value" purpose="Check if WebGLRenderingContext.TEXTURE17 constant value is 0x84D1" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE18_exists" purpose="Check if WebGLRenderingContext.TEXTURE18 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE18_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE18 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE18_value" purpose="Check if WebGLRenderingContext.TEXTURE18 constant value is 0x84D2" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE19_exists" purpose="Check if WebGLRenderingContext.TEXTURE19 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE19_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE19 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE19_value" purpose="Check if WebGLRenderingContext.TEXTURE19 constant value is 0x84D3" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE1_exists" purpose="Check if WebGLRenderingContext.TEXTURE1 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE1_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE1 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE1_value" purpose="Check if WebGLRenderingContext.TEXTURE1 constant value is 0x84C1" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE20_exists" purpose="Check if WebGLRenderingContext.TEXTURE20 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE20_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE20 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE20_value" purpose="Check if WebGLRenderingContext.TEXTURE20 constant value is 0x84D4" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE21_exists" purpose="Check if WebGLRenderingContext.TEXTURE21 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE21_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE21 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE21_value" purpose="Check if WebGLRenderingContext.TEXTURE21 constant value is 0x84D5" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE22_exists" purpose="Check if WebGLRenderingContext.TEXTURE22 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE22_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE22 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE22_value" purpose="Check if WebGLRenderingContext.TEXTURE22 constant value is 0x84D6" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE23_exists" purpose="Check if WebGLRenderingContext.TEXTURE23 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE23_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE23 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE23_value" purpose="Check if WebGLRenderingContext.TEXTURE23 constant value is 0x84D7" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE24_exists" purpose="Check if WebGLRenderingContext.TEXTURE24 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE24_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE24 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE24_value" purpose="Check if WebGLRenderingContext.TEXTURE24 constant value is 0x84D8" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE25_exists" purpose="Check if WebGLRenderingContext.TEXTURE25 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE25_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE25 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE25_value" purpose="Check if WebGLRenderingContext.TEXTURE25 constant value is 0x84D9" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE26_exists" purpose="Check if WebGLRenderingContext.TEXTURE26 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE26_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE26 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE26_value" purpose="Check if WebGLRenderingContext.TEXTURE26 constant value is 0x84DA" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE27_exists" purpose="Check if WebGLRenderingContext.TEXTURE27 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE27_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE27 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE27_value" purpose="Check if WebGLRenderingContext.TEXTURE27 constant value is 0x84DB" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE28_exists" purpose="Check if WebGLRenderingContext.TEXTURE28 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE28_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE28 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE28_value" purpose="Check if WebGLRenderingContext.TEXTURE28 constant value is 0x84DC" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE29_exists" purpose="Check if WebGLRenderingContext.TEXTURE29 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE29_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE29 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE29_value" purpose="Check if WebGLRenderingContext.TEXTURE29 constant value is 0x84DD" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE2_exists" purpose="Check if WebGLRenderingContext.TEXTURE2 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE2_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE2 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE2_value" purpose="Check if WebGLRenderingContext.TEXTURE2 constant value is 0x84C2" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE30_exists" purpose="Check if WebGLRenderingContext.TEXTURE30 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE30_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE30 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE30_value" purpose="Check if WebGLRenderingContext.TEXTURE30 constant value is 0x84DE" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE31_exists" purpose="Check if WebGLRenderingContext.TEXTURE31 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE31_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE31 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE31_value" purpose="Check if WebGLRenderingContext.TEXTURE31 constant value is 0x84DF" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE3_exists" purpose="Check if WebGLRenderingContext.TEXTURE3 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE3_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE3 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE3_value" purpose="Check if WebGLRenderingContext.TEXTURE3 constant value is 0x84C3" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE4_exists" purpose="Check if WebGLRenderingContext.TEXTURE4 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE4_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE4 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE4_value" purpose="Check if WebGLRenderingContext.TEXTURE4 constant value is 0x84C4" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE5_exists" purpose="Check if WebGLRenderingContext.TEXTURE5 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE5_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE5 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE5_value" purpose="Check if WebGLRenderingContext.TEXTURE5 constant value is 0x84C5" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE6_exists" purpose="Check if WebGLRenderingContext.TEXTURE6 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE6_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE6 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE6_value" purpose="Check if WebGLRenderingContext.TEXTURE6 constant value is 0x84C6" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE7_exists" purpose="Check if WebGLRenderingContext.TEXTURE7 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE7_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE7 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE7_value" purpose="Check if WebGLRenderingContext.TEXTURE7 constant value is 0x84C7" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE8_exists" purpose="Check if WebGLRenderingContext.TEXTURE8 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE8_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE8 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE8_value" purpose="Check if WebGLRenderingContext.TEXTURE8 constant value is 0x84C8" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE9_exists" purpose="Check if WebGLRenderingContext.TEXTURE9 exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE9_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE9 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE9_value" purpose="Check if WebGLRenderingContext.TEXTURE9 constant value is 0x84C9" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_2D_exists" purpose="Check if WebGLRenderingContext.TEXTURE_2D exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_2D_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_2D is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_2D_value" purpose="Check if WebGLRenderingContext.TEXTURE_2D constant value is 0x0DE1" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_BINDING_2D_exists" purpose="Check if WebGLRenderingContext.TEXTURE_BINDING_2D exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_BINDING_2D_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_BINDING_2D is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_BINDING_2D_value" purpose="Check if WebGLRenderingContext.TEXTURE_BINDING_2D constant value is 0x8069" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_BINDING_CUBE_MAP_exists" purpose="Check if WebGLRenderingContext.TEXTURE_BINDING_CUBE_MAP exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_BINDING_CUBE_MAP_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_BINDING_CUBE_MAP is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_BINDING_CUBE_MAP_value" purpose="Check if WebGLRenderingContext.TEXTURE_BINDING_CUBE_MAP constant value is 0x8514" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_exists" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_NEGATIVE_X_exists" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_X exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_NEGATIVE_X_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_X is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_NEGATIVE_X_value" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_X constant value is 0x8516" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_NEGATIVE_Y_exists" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Y exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_NEGATIVE_Y_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Y is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_NEGATIVE_Y_value" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Y constant value is 0x8518" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_NEGATIVE_Z_exists" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Z exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_NEGATIVE_Z_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Z is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_NEGATIVE_Z_value" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_NEGATIVE_Z constant value is 0x851A" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_POSITIVE_X_exists" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_X exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_POSITIVE_X_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_X is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_POSITIVE_X_value" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_X constant value is 0x8515" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_POSITIVE_Y_exists" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Y exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_POSITIVE_Y_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Y is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_POSITIVE_Y_value" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Y constant value is 0x8517" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_POSITIVE_Z_exists" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Z exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_POSITIVE_Z_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Z is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_POSITIVE_Z_value" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP_POSITIVE_Z constant value is 0x8519" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_CUBE_MAP is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_CUBE_MAP_value" purpose="Check if WebGLRenderingContext.TEXTURE_CUBE_MAP constant value is 0x8513" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_exists" purpose="Check if WebGLRenderingContext.TEXTURE exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_MAG_FILTER_exists" purpose="Check if WebGLRenderingContext.TEXTURE_MAG_FILTER exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_MAG_FILTER_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_MAG_FILTER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_MAG_FILTER_value" purpose="Check if WebGLRenderingContext.TEXTURE_MAG_FILTER constant value is 0x2800" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_MIN_FILTER_exists" purpose="Check if WebGLRenderingContext.TEXTURE_MIN_FILTER exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_MIN_FILTER_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_MIN_FILTER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_MIN_FILTER_value" purpose="Check if WebGLRenderingContext.TEXTURE_MIN_FILTER constant value is 0x2801" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_value" purpose="Check if WebGLRenderingContext.TEXTURE constant value is 0x1702" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_WRAP_S_exists" purpose="Check if WebGLRenderingContext.TEXTURE_WRAP_S exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_WRAP_S_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_WRAP_S is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_WRAP_S_value" purpose="Check if WebGLRenderingContext.TEXTURE_WRAP_S constant value is 0x2802" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_WRAP_T_exists" purpose="Check if WebGLRenderingContext.TEXTURE_WRAP_T exists" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_WRAP_T_type" purpose="Check if the type of WebGLRenderingContext.TEXTURE_WRAP_T is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TEXTURE_WRAP_T_value" purpose="Check if WebGLRenderingContext.TEXTURE_WRAP_T constant value is 0x2803" result="PASS" /><testcase id="webglrenderingcontext_TRIANGLES_exists" purpose="Check if WebGLRenderingContext.TRIANGLES exists" result="PASS" /><testcase id="webglrenderingcontext_TRIANGLES_type" purpose="Check if the type of WebGLRenderingContext.TRIANGLES is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TRIANGLES_value" purpose="Check if WebGLRenderingContext.TRIANGLES constant value is 0x0004" result="PASS" /><testcase id="webglrenderingcontext_TRIANGLE_FAN_exists" purpose="Check if WebGLRenderingContext.TRIANGLE_FAN exists" result="PASS" /><testcase id="webglrenderingcontext_TRIANGLE_FAN_type" purpose="Check if the type of WebGLRenderingContext.TRIANGLE_FAN is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TRIANGLE_FAN_value" purpose="Check if WebGLRenderingContext.TRIANGLE_FAN constant value is 0x0006" result="PASS" /><testcase id="webglrenderingcontext_TRIANGLE_STRIP_exists" purpose="Check if WebGLRenderingContext.TRIANGLE_STRIP exists" result="PASS" /><testcase id="webglrenderingcontext_TRIANGLE_STRIP_type" purpose="Check if the type of WebGLRenderingContext.TRIANGLE_STRIP is 'number'" result="PASS" /><testcase id="webglrenderingcontext_TRIANGLE_STRIP_value" purpose="Check if WebGLRenderingContext.TRIANGLE_STRIP constant value is 0x0005" result="PASS" /><testcase id="webglrenderingcontext_uniform1fv_exists" purpose="Check if WebGLRenderingContext.uniform1fv exists" result="PASS" /><testcase id="webglrenderingcontext_uniform1fv_type" purpose="Check if the type of WebGLRenderingContext.uniform1fv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform1f_exists" purpose="Check if WebGLRenderingContext.uniform1f exists" result="PASS" /><testcase id="webglrenderingcontext_uniform1f_type" purpose="Check if the type of WebGLRenderingContext.uniform1f is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform1iv_exists" purpose="Check if WebGLRenderingContext.uniform1iv exists" result="PASS" /><testcase id="webglrenderingcontext_uniform1iv_type" purpose="Check if the type of WebGLRenderingContext.uniform1iv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform1i_exists" purpose="Check if WebGLRenderingContext.uniform1i exists" result="PASS" /><testcase id="webglrenderingcontext_uniform1i_type" purpose="Check if the type of WebGLRenderingContext.uniform1i is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform2fv_exists" purpose="Check if WebGLRenderingContext.uniform2fv exists" result="PASS" /><testcase id="webglrenderingcontext_uniform2fv_type" purpose="Check if the type of WebGLRenderingContext.uniform2fv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform2f_exists" purpose="Check if WebGLRenderingContext.uniform2f exists" result="PASS" /><testcase id="webglrenderingcontext_uniform2f_type" purpose="Check if the type of WebGLRenderingContext.uniform2f is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform2iv_exists" purpose="Check if WebGLRenderingContext.uniform2iv exists" result="PASS" /><testcase id="webglrenderingcontext_uniform2iv_type" purpose="Check if the type of WebGLRenderingContext.uniform2iv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform2i_exists" purpose="Check if WebGLRenderingContext.uniform2i exists" result="PASS" /><testcase id="webglrenderingcontext_uniform2i_type" purpose="Check if the type of WebGLRenderingContext.uniform2i is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform3fv_exists" purpose="Check if WebGLRenderingContext.uniform3fv exists" result="PASS" /><testcase id="webglrenderingcontext_uniform3fv_type" purpose="Check if the type of WebGLRenderingContext.uniform3fv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform3f_exists" purpose="Check if WebGLRenderingContext.uniform3f exists" result="PASS" /><testcase id="webglrenderingcontext_uniform3f_type" purpose="Check if the type of WebGLRenderingContext.uniform3f is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform3iv_exists" purpose="Check if WebGLRenderingContext.uniform3iv exists" result="PASS" /><testcase id="webglrenderingcontext_uniform3iv_type" purpose="Check if the type of WebGLRenderingContext.uniform3iv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform3i_exists" purpose="Check if WebGLRenderingContext.uniform3i exists" result="PASS" /><testcase id="webglrenderingcontext_uniform3i_type" purpose="Check if the type of WebGLRenderingContext.uniform3i is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform4fv_exists" purpose="Check if WebGLRenderingContext.uniform4fv exists" result="PASS" /><testcase id="webglrenderingcontext_uniform4fv_type" purpose="Check if the type of WebGLRenderingContext.uniform4fv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform4f_exists" purpose="Check if WebGLRenderingContext.uniform4f exists" result="PASS" /><testcase id="webglrenderingcontext_uniform4f_type" purpose="Check if the type of WebGLRenderingContext.uniform4f is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform4iv_exists" purpose="Check if WebGLRenderingContext.uniform4iv exists" result="PASS" /><testcase id="webglrenderingcontext_uniform4iv_type" purpose="Check if the type of WebGLRenderingContext.uniform4iv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniform4i_exists" purpose="Check if WebGLRenderingContext.uniform4i exists" result="PASS" /><testcase id="webglrenderingcontext_uniform4i_type" purpose="Check if the type of WebGLRenderingContext.uniform4i is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniformMatrix2fv_exists" purpose="Check if WebGLRenderingContext.uniformMatrix2fv exists" result="PASS" /><testcase id="webglrenderingcontext_uniformMatrix2fv_type" purpose="Check if the type of WebGLRenderingContext.uniformMatrix2fv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniformMatrix3fv_exists" purpose="Check if WebGLRenderingContext.uniformMatrix3fv exists" result="PASS" /><testcase id="webglrenderingcontext_uniformMatrix3fv_type" purpose="Check if the type of WebGLRenderingContext.uniformMatrix3fv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_uniformMatrix4fv_exists" purpose="Check if WebGLRenderingContext.uniformMatrix4fv exists" result="PASS" /><testcase id="webglrenderingcontext_uniformMatrix4fv_type" purpose="Check if the type of WebGLRenderingContext.uniformMatrix4fv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_ALIGNMENT_exists" purpose="Check if WebGLRenderingContext.UNPACK_ALIGNMENT exists" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_ALIGNMENT_type" purpose="Check if the type of WebGLRenderingContext.UNPACK_ALIGNMENT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_ALIGNMENT_value" purpose="Check if WebGLRenderingContext.UNPACK_ALIGNMENT constant value is 0x0CF5" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_COLORSPACE_CONVERSION_WEBGL_exists" purpose="Check if WebGLRenderingContext.UNPACK_COLORSPACE_CONVERSION_WEBGL exists" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_COLORSPACE_CONVERSION_WEBGL_type" purpose="Check if the type of WebGLRenderingContext.UNPACK_COLORSPACE_CONVERSION_WEBGL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_COLORSPACE_CONVERSION_WEBGL_value" purpose="Check if WebGLRenderingContext.UNPACK_COLORSPACE_CONVERSION_WEBGL constant value is 0x9243" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_FLIP_Y_WEBGL_exists" purpose="Check if WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL exists" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_FLIP_Y_WEBGL_type" purpose="Check if the type of WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_FLIP_Y_WEBGL_value" purpose="Check if WebGLRenderingContext.UNPACK_FLIP_Y_WEBGL constant value is 0x9240" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_PREMULTIPLY_ALPHA_WEBGL_exists" purpose="Check if WebGLRenderingContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL exists" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_PREMULTIPLY_ALPHA_WEBGL_type" purpose="Check if the type of WebGLRenderingContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL is 'number'" result="PASS" /><testcase id="webglrenderingcontext_UNPACK_PREMULTIPLY_ALPHA_WEBGL_value" purpose="Check if WebGLRenderingContext.UNPACK_PREMULTIPLY_ALPHA_WEBGL constant value is 0x9241" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_BYTE_exists" purpose="Check if WebGLRenderingContext.UNSIGNED_BYTE exists" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_BYTE_type" purpose="Check if the type of WebGLRenderingContext.UNSIGNED_BYTE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_BYTE_value" purpose="Check if WebGLRenderingContext.UNSIGNED_BYTE constant value is 0x1401" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_INT_exists" purpose="Check if WebGLRenderingContext.UNSIGNED_INT exists" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_INT_type" purpose="Check if the type of WebGLRenderingContext.UNSIGNED_INT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_INT_value" purpose="Check if WebGLRenderingContext.UNSIGNED_INT constant value is 0x1405" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_4_4_4_4_exists" purpose="Check if WebGLRenderingContext.UNSIGNED_SHORT_4_4_4_4 exists" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_4_4_4_4_type" purpose="Check if the type of WebGLRenderingContext.UNSIGNED_SHORT_4_4_4_4 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_4_4_4_4_value" purpose="Check if WebGLRenderingContext.UNSIGNED_SHORT_4_4_4_4 constant value is 0x8033" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_5_5_5_1_exists" purpose="Check if WebGLRenderingContext.UNSIGNED_SHORT_5_5_5_1 exists" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_5_5_5_1_type" purpose="Check if the type of WebGLRenderingContext.UNSIGNED_SHORT_5_5_5_1 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_5_5_5_1_value" purpose="Check if WebGLRenderingContext.UNSIGNED_SHORT_5_5_5_1 constant value is 0x8034" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_5_6_5_exists" purpose="Check if WebGLRenderingContext.UNSIGNED_SHORT_5_6_5 exists" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_5_6_5_type" purpose="Check if the type of WebGLRenderingContext.UNSIGNED_SHORT_5_6_5 is 'number'" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_5_6_5_value" purpose="Check if WebGLRenderingContext.UNSIGNED_SHORT_5_6_5 constant value is 0x8363" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_exists" purpose="Check if WebGLRenderingContext.UNSIGNED_SHORT exists" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_type" purpose="Check if the type of WebGLRenderingContext.UNSIGNED_SHORT is 'number'" result="PASS" /><testcase id="webglrenderingcontext_UNSIGNED_SHORT_value" purpose="Check if WebGLRenderingContext.UNSIGNED_SHORT constant value is 0x1403" result="PASS" /><testcase id="webglrenderingcontext_useProgram_exists" purpose="Check if WebGLRenderingContext.useProgram exists" result="PASS" /><testcase id="webglrenderingcontext_useProgram_type" purpose="Check if the type of WebGLRenderingContext.useProgram is 'function'" result="PASS" /><testcase id="webglrenderingcontext_validateProgram_exists" purpose="Check if WebGLRenderingContext.validateProgram exists" result="PASS" /><testcase id="webglrenderingcontext_validateProgram_type" purpose="Check if the type of WebGLRenderingContext.validateProgram is 'function'" result="PASS" /><testcase id="webglrenderingcontext_VALIDATE_STATUS_exists" purpose="Check if WebGLRenderingContext.VALIDATE_STATUS exists" result="PASS" /><testcase id="webglrenderingcontext_VALIDATE_STATUS_type" purpose="Check if the type of WebGLRenderingContext.VALIDATE_STATUS is 'number'" result="PASS" /><testcase id="webglrenderingcontext_VALIDATE_STATUS_value" purpose="Check if WebGLRenderingContext.VALIDATE_STATUS constant value is 0x8B83" result="PASS" /><testcase id="webglrenderingcontext_VENDOR_exists" purpose="Check if WebGLRenderingContext.VENDOR exists" result="PASS" /><testcase id="webglrenderingcontext_VENDOR_type" purpose="Check if the type of WebGLRenderingContext.VENDOR is 'number'" result="PASS" /><testcase id="webglrenderingcontext_VENDOR_value" purpose="Check if WebGLRenderingContext.VENDOR constant value is 0x1F00" result="PASS" /><testcase id="webglrenderingcontext_VERSION_exists" purpose="Check if WebGLRenderingContext.VERSION exists" result="PASS" /><testcase id="webglrenderingcontext_VERSION_type" purpose="Check if the type of WebGLRenderingContext.VERSION is 'number'" result="PASS" /><testcase id="webglrenderingcontext_VERSION_value" purpose="Check if WebGLRenderingContext.VERSION constant value is 0x1F02" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib1fv_exists" purpose="Check if WebGLRenderingContext.vertexAttrib1fv exists" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib1fv_type" purpose="Check if the type of WebGLRenderingContext.vertexAttrib1fv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib1f_exists" purpose="Check if WebGLRenderingContext.vertexAttrib1f exists" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib1f_type" purpose="Check if the type of WebGLRenderingContext.vertexAttrib1f is 'function'" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib2fv_exists" purpose="Check if WebGLRenderingContext.vertexAttrib2fv exists" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib2fv_type" purpose="Check if the type of WebGLRenderingContext.vertexAttrib2fv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib2f_exists" purpose="Check if WebGLRenderingContext.vertexAttrib2f exists" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib2f_type" purpose="Check if the type of WebGLRenderingContext.vertexAttrib2f is 'function'" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib3fv_exists" purpose="Check if WebGLRenderingContext.vertexAttrib3fv exists" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib3fv_type" purpose="Check if the type of WebGLRenderingContext.vertexAttrib3fv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib3f_exists" purpose="Check if WebGLRenderingContext.vertexAttrib3f exists" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib3f_type" purpose="Check if the type of WebGLRenderingContext.vertexAttrib3f is 'function'" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib4fv_exists" purpose="Check if WebGLRenderingContext.vertexAttrib4fv exists" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib4fv_type" purpose="Check if the type of WebGLRenderingContext.vertexAttrib4fv is 'function'" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib4f_exists" purpose="Check if WebGLRenderingContext.vertexAttrib4f exists" result="PASS" /><testcase id="webglrenderingcontext_vertexAttrib4f_type" purpose="Check if the type of WebGLRenderingContext.vertexAttrib4f is 'function'" result="PASS" /><testcase id="webglrenderingcontext_vertexAttribPointer_exists" purpose="Check if WebGLRenderingContext.vertexAttribPointer exists" result="PASS" /><testcase id="webglrenderingcontext_vertexAttribPointer_INVALID_VALUE" purpose="Check if a call to vertexAttribPointer will generate an INVALID_VALUE error if the value for the stride parameter exceeds 255" result="PASS" /><testcase id="webglrenderingcontext_vertexAttribPointer_type" purpose="Check if the type of WebGLRenderingContext.vertexAttribPointer is 'function'" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_exists" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING exists" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_type" purpose="Check if the type of WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING is 'number'" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING_value" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING constant value is 0x889F" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_ENABLED_exists" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_ENABLED exists" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_ENABLED_type" purpose="Check if the type of WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_ENABLED is 'number'" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_ENABLED_value" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_ENABLED constant value is 0x8622" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_NORMALIZED_exists" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_NORMALIZED exists" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_NORMALIZED_type" purpose="Check if the type of WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_NORMALIZED is 'number'" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_NORMALIZED_value" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_NORMALIZED constant value is 0x886A" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_POINTER_exists" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_POINTER exists" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_POINTER_type" purpose="Check if the type of WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_POINTER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_POINTER_value" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_POINTER constant value is 0x8645" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_SIZE_exists" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_SIZE exists" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_SIZE_type" purpose="Check if the type of WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_SIZE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_SIZE_value" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_SIZE constant value is 0x8623" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_STRIDE_exists" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_STRIDE exists" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_STRIDE_type" purpose="Check if the type of WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_STRIDE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_STRIDE_value" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_STRIDE constant value is 0x8624" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_TYPE_exists" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_TYPE exists" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_TYPE_type" purpose="Check if the type of WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_TYPE is 'number'" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_ATTRIB_ARRAY_TYPE_value" purpose="Check if WebGLRenderingContext.VERTEX_ATTRIB_ARRAY_TYPE constant value is 0x8625" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_SHADER_exists" purpose="Check if WebGLRenderingContext.VERTEX_SHADER exists" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_SHADER_type" purpose="Check if the type of WebGLRenderingContext.VERTEX_SHADER is 'number'" result="PASS" /><testcase id="webglrenderingcontext_VERTEX_SHADER_value" purpose="Check if WebGLRenderingContext.VERTEX_SHADER constant value is 0x8B31" result="PASS" /><testcase id="webglrenderingcontext_viewport_basic" purpose="Check if use WebGLRenderingContext.viewport to set viewport of webgl" result="PASS" /><testcase id="webglrenderingcontext_viewport_exist" purpose="Check if WebGLRenderingContext.viewport exists" result="PASS" /><testcase id="webglrenderingcontext_viewport_type" purpose="Check if the type of WebGLRenderingContext.viewport is 'function'" result="PASS" /><testcase id="webglrenderingcontext_VIEWPORT_value" purpose="Check if WebGLRenderingContext.VIEWPORT constant value is 0x0BA2" result="PASS" /><testcase id="webglrenderingcontext_ZERO_exists" purpose="Check if WebGLRenderingContext.ZERO exists" result="PASS" /><testcase id="webglrenderingcontext_ZERO_type" purpose="Check if the type of WebGLRenderingContext.ZERO is 'number'" result="PASS" /><testcase id="webglrenderingcontext_ZERO_value" purpose="Check if WebGLRenderingContext.ZERO constant value is 0" result="PASS" /><testcase id="webgl_bufferSubData" purpose="Check if it will return NO_ERROR until the context has been restored" result="PASS" /><testcase id="webgl_compressedTexImage2D_2" purpose="Check if compressedTexImage2D methods with 7 parameters generate an INVALID_ENUM error when the core WebGL specification does not define any supported compressed texture formats" result="PASS" /><testcase id="webgl_compressedTexImage2D_3" purpose="Check if compressedTexImage2D methods with 8 parameters generate an INVALID_ENUM error when the core WebGL specification does not define any supported compressed texture formats" result="PASS" /><testcase id="webgl_compressedTexImage2D_4" purpose="Check if it should throw a TypeError when passing too few arguments in compressedTexImage2D method" result="PASS" /><testcase id="webgl_compressedTexSubImage2D_2" purpose="Check if compressedTexSubImage2D methods with 8 parameters generate an INVALID_ENUM error when the core WebGL specification does not define any supported compressed texture formats" result="PASS" /><testcase id="webgl_compressedTexSubImage2D_3" purpose="Check if compressedTexSubImage2D methods with 9 parameters generate an INVALID_ENUM error when the core WebGL specification does not define any supported compressed texture formats" result="PASS" /><testcase id="webgl_compressedTexSubImage2D_4" purpose="Check if it should throw a TypeError when passing too few arguments in compressedTexSubImage2D method" result="PASS" /><testcase id="webgl_field.vert" purpose="Check if use of reserved prefix as structure field failed" result="PASS" /><testcase id="webgl_function.vert" purpose="Check that use of reserved webGL prefix as function name failed" result="PASS" /><testcase id="webgl_struct.vert" purpose="Check if use of reserved webGL  prefix as structure name failed" result="PASS" /><testcase id="webgl_texImage2D" purpose="Check if the TypeError is generated when the parameter of texImage2D is incorrect" result="PASS" /><testcase id="webgl_texSubImage2D" purpose="Check if the TypeError is generated when the parameter of texSubImage2D is incorrect" result="PASS" /><testcase id="webgl_variable.vert" purpose="Check if use of reserved  webGL prefix as variable failed" result="PASS" /><testcase id="_webgl_field.vert" purpose="Check if use of reserved _webgl prefix as structure field failed" result="PASS" /><testcase id="_webgl_function.vert" purpose="Check use of reserved _webgl prefix as function name should fail" result="PASS" /><testcase id="_webgl_struct.vert" purpose="Check if use of reserved  prefix as structure name failed" result="PASS" /><testcase id="_webgl_variable.vert" purpose="Check if use of reserved  prefix as variable failed" result="PASS" /></category><category name="W3C_HTML5 APIs/Communication/HTML5 Web Messaging"><testcase id="Channel_MessagePort_initial_disabled" purpose="Check if a port message queue can be enabled or disabled, and is initially disabled" result="PASS" /><testcase id="Channel_MessagePort_onmessage_start" purpose="Check if the first time a MessagePort object's onmessage IDL attribute is set, the port's port message queue must be enabled, as if the start() method had been called" result="PASS" /><testcase id="Channel_postMessage_clone_port_1" purpose="Check if when the user agent is to clone a port original port, with the clone being owned by owner, it must return a new MessagePort object" result="PASS" /><testcase id="Channel_postMessage_clone_port_2" purpose="Check if data sent through remote port is received by the new cloned port" result="PASS" /><testcase id="Channel_postMessage_DataCloneErr" purpose="Check if throw a DataCloneError when a host object is used with postMessage" result="PASS" /><testcase id="Channel_postMessage_event_properties" purpose="Check if it will create an event that uses the MessageEvent interface" result="PASS" /><testcase id="Channel_postMessage_ports_readonly_array" purpose="Check if using the postMessage() method make new ports into a read only array" result="PASS" /><testcase id="Channel_postMessage_target_source" purpose="Check if let target port be the port with which source port is entangled" result="PASS" /><testcase id="event.data" purpose="Check if the event.data returns the data of the message" result="PASS" /><testcase id="event.origin" purpose="Check if the event.origin returns the origin of the message" result="PASS" /><testcase id="event.ports_1" purpose="Check if the event.ports returns the MessagePort array sent with the message" result="PASS" /><testcase id="event.ports_2" purpose="Check if the MessageChannel is supported" result="PASS" /><testcase id="event.source" purpose="Check if the event.source returns the WindowProxy of the source window with same-origin" result="PASS" /><testcase id="event.source.xorigin" purpose="Check if the event.source returns the WindowProxy of the source window with corss-origin" result="PASS" /><testcase id="Message-channels_001" purpose="Check that the basic usage of messagechannel method" result="PASS" /><testcase id="message-channels_002" purpose="Check that the basic usage of messagechannel method without start()" result="PASS" /><testcase id="message-channels_003" purpose="Check that the basic usage of messagechannel method with implied start()" result="PASS" /><testcase id="message-channels_004" purpose="Check that the basic usage of messagechannel method with cross-document channel" result="PASS" /><testcase id="MessageEvent_properties.htm" purpose="Check if create an event that uses the MessageEvent interface, with the event type message, which does not bubble, is not cancelable, and has no default action" result="PASS" /><testcase id="postmessage_arraybuffer_1" purpose="Check if the postMessage with ArrayBuffer object is used" result="PASS" /><testcase id="postmessage_arraybuffer_2" purpose="Check if the ArrayBuffer is supported" result="PASS" /><testcase id="postmessage_arrays" purpose="Check if the messages can be structured objects" result="PASS" /><testcase id="postmessage_asterisk_xorigin" purpose="Check if send the message to the target regardless of origin, set the target origin to '*'" result="PASS" /><testcase id="postmessage_date" purpose="Check if the messages can contain JavaScript values (e.g., Dates)" result="PASS" /><testcase id="postMessage_Document" purpose="Check if postMessage with Document object: Throw a DataCloneError if message could not be cloned" result="PASS" /><testcase id="postMessage_Function" purpose="Check if postMessage with Function object: Throw a DataCloneError if message could not be cloned" result="PASS" /><testcase id="postMessage_invalid_targetOrigin" purpose="Check if the value of the targetOrigin argument is neither a single U+002A ASTERISK character (*), a single U+002F SOLIDUS character (/), nor an absolute URL, then throw a SyntaxError exception and abort the overall set of steps" result="PASS" /><testcase id="postMessage_MessagePorts_sorigin_1" purpose="Check if postMessage to same-origin iframe with MessagePort array containing 100 ports" result="PASS" /><testcase id="postMessage_MessagePorts_sorigin_2" purpose="Check if messageChannel is supported" result="PASS" /><testcase id="postmessage_messageports_xorigin_1" purpose="Check if postMessage to cross-origin iframe with MessagePort array containing 100 ports" result="PASS" /><testcase id="postmessage_objects" purpose="Check if the messages can be structured objects, e.g., nested objects" result="PASS" /><testcase id="postmessage_origin_mismatch" purpose="Check that same-origin: Origin of the target window doesn't match the given origin" result="PASS" /><testcase id="postmessage_origin_mismatch_xorigin" purpose="Check that cross-origin: Origin of the target window doesn't match the given origin" result="PASS" /><testcase id="postmessage_solidus_sorigin" purpose="Check that to restrict the message to same-origin targets only, without needing to explicitly state the origin, set the target origin to '/'" result="PASS" /><testcase id="postmessage_solidus_xorigin" purpose="Check if the targetOrigin argument is a single literal U+002F SOLIDUS character (/), and the Document of the Window object on which the method was invoked does not have the same origin as the entry script's document, then abort these steps silently" result="PASS" /><testcase id="transferred_objects_unusable_1" purpose="Check if objects listed in transfer are transferred, not just cloned, meaning that they are no longer usable on the sending side" result="PASS" /><testcase id="webmessaging_MessageChannel_effective_port1" purpose="Check the effective port1 of the created MessageChannel" result="PASS" /><testcase id="webmessaging_MessageChannel_effective_port2" purpose="Check the effective port2 of the created MessageChannel" result="PASS" /><testcase id="webmessaging_MessageChannel_exists" purpose="Check if MessageChannel interface exists" result="PASS" /><testcase id="webmessaging_MessageChannel_invalid_port" purpose="Check Channel Message invalid channel" result="PASS" /><testcase id="webmessaging_MessageChannel_port1_exists" purpose="Check if the MessageChannel.port1 attribute exists" result="PASS" /><testcase id="webmessaging_MessageChannel_port1_readonly" purpose="Check if the MessageChannel.port1 attribute is readonly" result="PASS" /><testcase id="webmessaging_MessageChannel_port1_type" purpose="Check if the type of MessageChannel.port1 is MessagePort object" result="PASS" /><testcase id="webmessaging_MessageChannel_port2_exists" purpose="Check if the MessageChannel.port2 attribute exists" result="PASS" /><testcase id="webmessaging_MessageChannel_port2_readonly" purpose="Check if the MessageChannel.port2 attribute is readonly" result="PASS" /><testcase id="webmessaging_MessageChannel_port2_type" purpose="Check if the type of MessageChannel.port2 is MessagePort object" result="PASS" /><testcase id="webmessaging_MessageEvent_data_basic" purpose="Check if MessageEvent.data return the initialized value" result="PASS" /><testcase id="webmessaging_MessageEvent_data_default_value" purpose="Check that the MessageEvent.data attribute must be initialized to null if the object is created" result="PASS" /><testcase id="webmessaging_MessageEvent_data_exists" purpose="Check if the MessageEvent.data attribute exists" result="PASS" /><testcase id="webmessaging_MessageEvent_data_readonly" purpose="Check if the MessageEvent.data attribute is readonly" result="PASS" /><testcase id="webmessaging_MessageEvent_example_message_event_fired" purpose="Check if document A contains an iframe element that contains document B, and script in document A calls postMessage() on the Window object of document B, a message event will be fired on that object works" result="PASS" /><testcase id="webmessaging_MessageEvent_exists" purpose="Check if MessageEvent interface exists" result="PASS" /><testcase id="webmessaging_MessageEvent_lastEventId_default_value" purpose="Check that the MessageEvent.lastEventId attribute must be initialized to the empty string if the object is created" result="PASS" /><testcase id="webmessaging_MessageEvent_lastEventId_exists" purpose="Check if the MessageEvent.lastEventId attribute exists" result="PASS" /><testcase id="webmessaging_MessageEvent_lastEventId_readonly" purpose="Check if the MessageEvent.lastEventId is readonly" result="PASS" /><testcase id="webmessaging_MessageEvent_lastEventId_type" purpose="Check if the type of MessageEvent.lastEventId is string" result="PASS" /><testcase id="webmessaging_MessageEvent_origin_basic" purpose="Check if the MessageEvent.origin return the initialized value" result="PASS" /><testcase id="webmessaging_MessageEvent_origin_default_value" purpose="Check that the MessageEvent.origin attribute must be initialized to the empty string if the object is created" result="PASS" /><testcase id="webmessaging_MessageEvent_origin_exists" purpose="Check if the MessageEvent.origin attribute exists" result="PASS" /><testcase id="webmessaging_MessageEvent_origin_readonly" purpose="Check if the MessageEvent.origin attribute is readonly" result="PASS" /><testcase id="webmessaging_MessageEvent_origin_type" purpose="Check if the type of MessageEvent.origin is string" result="PASS" /><testcase id="webmessaging_MessageEvent_ports_basic" purpose="Check if the MessageEvent.ports return the initialized value" result="PASS" /><testcase id="webmessaging_MessageEvent_ports_default_value" purpose="Check that MessageEvent.ports attribute must be initialized to empty object if the object is created" result="PASS" /><testcase id="webmessaging_MessageEvent_ports_exists" purpose="Check if the MessageEvent.ports attribute exists" result="PASS" /><testcase id="webmessaging_MessageEvent_ports_readonly" purpose="Check if the MessageEvent.port attribute is readonly" result="PASS" /><testcase id="webmessaging_MessageEvent_ports_type" purpose="Check if the type of MessageEvent.ports is the MessagePort array" result="PASS" /><testcase id="webmessaging_MessageEvent_source_basic" purpose="Check if the MessageEvent.source return the initialized value" result="PASS" /><testcase id="webmessaging_MessageEvent_source_default_value" purpose="Check that the MessageEvent.source attribute must be initialized to null if the object is created" result="PASS" /><testcase id="webmessaging_MessageEvent_source_exists" purpose="Check if the MessageEvent.source attribute exists" result="PASS" /><testcase id="webmessaging_MessageEvent_source_readonly" purpose="Check if the MessageEvent.source attribute is readonly" result="PASS" /><testcase id="webmessaging_MessageEvent_source_type" purpose="Check if the type of MessageEvent.source is the WindowProxy of the source window" result="PASS" /><testcase id="webmessaging_MessagePort_close_exists" purpose="Check if the MessagePort.close() method exists" result="PASS" /><testcase id="webmessaging_MessagePort_close_port1" purpose="Check that it will not receive message if port1 invoke close method" result="PASS" /><testcase id="webmessaging_MessagePort_close_port2" purpose="Check that it will not receive message if port2 invoke close method" result="PASS" /><testcase id="webmessaging_MessagePort_close_type" purpose="Check if the type of MessagePort.close is function" result="PASS" /><testcase id="webmessaging_MessagePort_exists" purpose="Check if MessagePort interface exists" result="PASS" /><testcase id="webmessaging_MessagePort_onmessage_exists" purpose="Check if the MessagePort.onmessage attribute exists" result="PASS" /><testcase id="webmessaging_MessagePort_onmessage_port1_send" purpose="Check that the port2 will receive the message form port1 if the port1 send message port2 by method of MessagePort.onmessage" result="PASS" /><testcase id="webmessaging_MessagePort_onmessage_port2_send" purpose="Check that the port1 will receive the message form port2 if the port2 send message port1 by method of MessagePort.onmessage" result="PASS" /><testcase id="webmessaging_MessagePort_onmessage_type" purpose="Check if the type of MessagePort.onmessage is function" result="PASS" /><testcase id="webmessaging_MessagePort_postMessage_channel_basic" purpose="Check if the MessagePort.postmessage is with port1 and port2 of MessageChannel" result="PASS" /><testcase id="webmessaging_MessagePort_postMessage_exists" purpose="Check if the MessagePort.postMessage method exists" result="PASS" /><testcase id="webmessaging_MessagePort_postMessage_no_args" purpose="Check if the MessagePort.postmessage method if no args" result="PASS" /><testcase id="webmessaging_MessagePort_postMessage_null" purpose="Check if the MessagePort.postmessage method  args is able to be null" result="PASS" /><testcase id="webmessaging_MessagePort_postMessage_same_port" purpose="Check if the MessagePort.port1 will not receive message that from itself" result="PASS" /><testcase id="webmessaging_MessagePort_postMessage_type" purpose="Check if the type of MessagePort.postmessage is a function" result="PASS" /><testcase id="webmessaging_MessagePort_start_exists" purpose="Check if the MessagePort.start method exists" result="PASS" /><testcase id="webmessaging_MessagePort_start_port1" purpose="Check if MessagePort.start method,if port1 invoke start method,it will still receive message" result="PASS" /><testcase id="webmessaging_MessagePort_start_port2" purpose="Check if MessagePort.start method,if port2 invoke start method it will receive message" result="PASS" /><testcase id="webmessaging_MessagePort_start_type" purpose="Check if the type of the MessagePort.start is function" result="PASS" /><testcase id="webmessaging_window_cross_post_message_wrong_origin1" purpose="Check if W3C web message is able to send to wrong origin1" result="PASS" /><testcase id="webmessaging_window_cross_post_message_wrong_origin2" purpose="Check if W3C web message is able to send to wrong origin2" result="PASS" /><testcase id="webmessaging_window_cross_post_message_wrong_origin3" purpose="Check if W3C web message is able to send to wrong origin3" result="PASS" /><testcase id="webmessaging_window_cross_post_normal_message" purpose="Check if W3C web message is able to send and receive" result="PASS" /><testcase id="webmessaging_window_cross_post_specical_message" purpose="Check if W3C web message is able to send specical msg" result="PASS" /><testcase id="webmessaging_window_postMessage_base" purpose="Check that the value of eventsource.data is 'ok' if window.postMessage method is triggered" result="PASS" /><testcase id="webmessaging_window_postMessage_contentWindow" purpose="Check if window.postMessage method support a parent page send message to a child page" result="PASS" /><testcase id="webmessaging_window_postMessage_empty_string" purpose="Check that the value of eventsource.data is empty string if window.postMessage method be set to empty string" result="PASS" /><testcase id="webmessaging_window_postMessage_exception_DataCloneError" purpose="Check that a DataCloneError exception is to be thrown if the message argument of window.postMessaging() could not be cloned" result="PASS" /><testcase id="webmessaging_window_postMessage_message_ArrayBuffer" purpose="Check if the type of the message parameter of the postMessage function is ArrayBuffer and the message can send and receive in normally" result="PASS" /><testcase id="webmessaging_window_postMessage_message_date" purpose="Check if the type of the message parameter of the postMessage function is date and the message can send and receive in normally" result="PASS" /><testcase id="webmessaging_window_postMessage_message_FileBlob" purpose="Check if the type of the message parameter of the postMessage function is FileBlob and the message can send and receive in normally" result="PASS" /><testcase id="webmessaging_window_postMessage_message_FileList" purpose="Check if the type of the message parameter of the postMessage function is FileList and the message can send and receive in normally" result="PASS" /><testcase id="webmessaging_window_postMessage_message_number" purpose="Check if the type of the message parameter of the postMessage function is number and the message can send and receive in normally" result="PASS" /><testcase id="webmessaging_window_postMessage_null" purpose="Check that the value of eventsource.data is null if window.postMessage method be set to null" result="PASS" /><testcase id="webmessaging_window_postMessage_parent" purpose="Check if a child page is able to send message to the parent page" result="PASS" /><testcase id="webmessaging_window_postMessage_targetOrigin_invalid" purpose="Check that a SynctaxError exception to be thrown if the value of the targetOrigin parameter of postmessage is invalid" result="PASS" /><testcase id="webmessaging_window_postMessage_type" purpose="Check if the type of window.postMessage method is function" result="PASS" /><testcase id="with-ports_001" purpose="Check if the postMessage method  resolve broken url with ports" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="with-ports_002" purpose="Check if the postMessage method resolve url with stuff in host-specific with ports" result="PASS" /><testcase id="with-ports_003" purpose="Check if the postMessage method resolve 'example.org' with ports" result="PASS" /><testcase id="with-ports_004" purpose="Check if the postMessage method resolve special value '/' with ports" result="PASS" /><testcase id="with-ports_005" purpose="Check if the postMessage method resolve a same origin targetOrigin with ports" result="PASS" /><testcase id="with-ports_006" purpose="Check if the postMessage method resolve a same origin targetOrigin with trailing slash with ports" result="PASS" /><testcase id="with-ports_007" purpose="Check if the postMessage method resolve special value '*' with ports" result="PASS" /><testcase id="with-ports_010_1" purpose="Check if the e.data is equals to undefined with ports" result="PASS" /><testcase id="with-ports_010_10" purpose="Check if the e.data is equals to regex with ports" result="PASS" /><testcase id="with-ports_010_11" purpose="Check if the e.data is equals to self with ports" result="PASS" /><testcase id="with-ports_010_14" purpose="Check if the e.data is equals to error with ports" result="PASS" /><testcase id="with-ports_010_15" purpose="Check if the e.data is equals to unreached with ports" result="PASS" /><testcase id="with-ports_010_2" purpose="Check if the e.data is equals to null with ports" result="PASS" /><testcase id="with-ports_010_3" purpose="Check if the e.data is equals to false with ports" result="PASS" /><testcase id="with-ports_010_4" purpose="Check if the e.data is equals to true with ports" result="PASS" /><testcase id="with-ports_010_5" purpose="Check if the e.data is equals to 1 with ports" result="PASS" /><testcase id="with-ports_010_6" purpose="Check if the e.data is equals to NaN with ports" result="PASS" /><testcase id="with-ports_010_7" purpose="Check if the e.data is equals to Infinity with ports" result="PASS" /><testcase id="with-ports_010_8" purpose="Check if the e.data is equals to string with ports" result="PASS" /><testcase id="with-ports_010_9" purpose="Check if the e.data is equals to date with ports" result="PASS" /><testcase id="with-ports_011" purpose="Check if the postMessage method post an imagedata (from a cloned canvas) in an array with ports" result="PASS" /><testcase id="with-ports_012" purpose="Check if the postMessage method loop in array in structured clone with ports" result="PASS" /><testcase id="with-ports_013" purpose="Check if the postMessage method loop in object in structured clone with ports" result="PASS" /><testcase id="with-ports_014" purpose="Check if the postMessage method structured clone vs reference with ports" result="PASS" /><testcase id="with-ports_015" purpose="Check if the postMessage method set different origin with ports" result="PASS" /><testcase id="with-ports_016" purpose="Check if the postMessage method set origin of the script that invoked the method 'data:' with ports" result="PASS" /><testcase id="with-ports_017" purpose="Check if the postMessage method set origin of the script that invoked the method 'about:blank' with ports" result="PASS" /><testcase id="with-ports_018" purpose="Check if the postMessage method set origin of the script that invoked the method 'javascript:' with ports" result="PASS" /><testcase id="with-ports_019" purpose="Check if the postMessage method set origin of the script that invoked the method 'scheme/host/port' with ports" result="PASS" /><testcase id="with-ports_020" purpose="Check if the postMessage with ports test cross-origin when the second argument is url" result="PASS" /><testcase id="with-ports_021" purpose="Check if the postMessage with ports test cross-origin when the second argument is '*'" result="PASS" /><testcase id="with-ports_023" purpose="Check if the postMessage method set null ports with ports" result="PASS" /><testcase id="with-ports_024" purpose="Check if the postMessage method set undefined as ports with ports" result="PASS" /><testcase id="with-ports_027" purpose="Check if the postMessage method set message channel as ports with ports" result="PASS" /><testcase id="without-ports_001" purpose="Check if the postMessage method  resolve broken url without ports" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="without-ports_002" purpose="Check if the postMessage method resolve url with stuff in host-specific without ports" result="PASS" /><testcase id="without-ports_003" purpose="Check if the postMessage method resolve 'example.org' without ports" result="PASS" /><testcase id="without-ports_004" purpose="Check if the postMessage method resolve special value '/' without ports" result="PASS" /><testcase id="without-ports_005" purpose="Check if the postMessage method resolve a same origin targetOrigin without ports" result="PASS" /><testcase id="without-ports_006" purpose="Check if the postMessage method resolve a same origin targetOrigin with trailing slash without ports" result="PASS" /><testcase id="without-ports_007" purpose="Check if the postMessage method resolve special value '*' without ports" result="PASS" /><testcase id="without-ports_010_1" purpose="Check if the e.data is equals to undefined without ports" result="PASS" /><testcase id="without-ports_010_10" purpose="Check if the e.data is equals to regex without ports" result="PASS" /><testcase id="without-ports_010_11" purpose="Check if the e.data is equals to self without ports" result="PASS" /><testcase id="without-ports_010_14" purpose="Check if the e.data is equals to error without ports" result="PASS" /><testcase id="without-ports_010_15" purpose="Check if the e.data is equals to unreached without ports" result="PASS" /><testcase id="without-ports_010_2" purpose="Check if the e.data is equals to null without ports" result="PASS" /><testcase id="without-ports_010_3" purpose="Check if the e.data is equals to false without ports" result="PASS" /><testcase id="without-ports_010_4" purpose="Check if the e.data is equals to true without ports" result="PASS" /><testcase id="without-ports_010_5" purpose="Check if the e.data is equals to 1 without ports" result="PASS" /><testcase id="without-ports_010_6" purpose="Check if the e.data is equals to NaN without ports" result="PASS" /><testcase id="without-ports_010_7" purpose="Check if the e.data is equals to Infinity without ports" result="PASS" /><testcase id="without-ports_010_8" purpose="Check if the e.data is equals to string without ports" result="PASS" /><testcase id="without-ports_010_9" purpose="Check if the e.data is equals to date without ports" result="PASS" /><testcase id="without-ports_011" purpose="Check if the postMessage method post an imagedata (from a cloned canvas) in an array without ports" result="PASS" /><testcase id="without-ports_012" purpose="Check if the postMessage method loop in array in structured clone without ports" result="PASS" /><testcase id="without-ports_013" purpose="Check if the postMessage method loop in object in structured clone without ports" result="PASS" /><testcase id="without-ports_014" purpose="Check if the postMessage method structured clone vs reference without ports" result="PASS" /><testcase id="without-ports_015" purpose="Check if the postMessage method set different origin without ports" result="PASS" /><testcase id="without-ports_016" purpose="Check if the postMessage method set origin of the script that invoked the method 'data:' without ports" result="PASS" /><testcase id="without-ports_017" purpose="Check if the postMessage method set origin of the script that invoked the method 'about:blank' without ports" result="PASS" /><testcase id="without-ports_018" purpose="Check if the postMessage method set origin of the script that invoked the method 'javascript:' without ports" result="PASS" /><testcase id="without-ports_019" purpose="Check if the postMessage method set origin of the script that invoked the method 'scheme/host/port' without ports" result="PASS" /><testcase id="without-ports_020" purpose="Check if the postMessage without ports test cross-origin when the second argument is url" result="PASS" /><testcase id="without-ports_021" purpose="Check if the postMessage without ports test cross-origin when the second argument is '*'" result="PASS" /><testcase id="without-ports_023" purpose="Check if the object clone with own properties only" result="PASS" /><testcase id="without-ports_024" purpose="Check if throw an exception if function values encountered without ports" result="PASS" /><testcase id="without-ports_027" purpose="Check if the object clone with preserving sharing without ports" result="PASS" /></category><category name="W3C_HTML5 APIs/Communication/Server-Sent Events"><testcase id="eventsource-close" purpose="Check the method close()" result="PASS" /><testcase id="eventsource-close-dedicated-worker" purpose="Check close() of EventSource with dedicated worker" result="PASS" /><testcase id="eventsource-close-shared-worker" purpose="Check close() of EventSource with shared worker" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="eventsource-constructor-document-domain" purpose="Check the constructor of EventSource when set the document domain correct value" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Eventsource-constructor-stringify_1" purpose="Check if the stringify argument of EventSource is set to object" result="PASS" /><testcase id="Eventsource-constructor-stringify_2" purpose="Check if the stringify argument of EventSource is set to 1" result="PASS" /><testcase id="Eventsource-constructor-stringify_3" purpose="Check if the stringify argument of EventSource is set to null" result="PASS" /><testcase id="Eventsource-constructor-stringify_4" purpose="Check if the stringify argument of EventSource is set to undefined" result="PASS" /><testcase id="eventsource-constructor-url-bogus" purpose="Check if the parameter of EventSource method is invalid" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="eventsource-constructor-url-bogus-dedicated-worker" purpose="Check constructor (invalid URL) of EventSource with dedicated worker" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="eventsource-constructor-url-bogus-shared-worker" purpose="Check constructor (invalid URL) of EventSource with shared worker" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="eventsource-constructor-url-multi-window" purpose="Check that resolve URLs correctly" result="PASS" /><testcase id="eventsource-eventtarget" purpose="Check if can add message event listener and receive the message" result="PASS" /><testcase id="eventsource-eventtarget-dedicated-worker" purpose="Check addEventListener() of EventSource with dedicated worker" result="PASS" /><testcase id="eventsource-eventtarget-shared-worker" purpose="Check addEventListener() of EventSource with shared worker" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="eventsource-onmesage-dedicated-worker" purpose="Check onmessage of EventSource with dedicated worker" result="PASS" /><testcase id="eventsource-onmesage-shared-worker" purpose="Check onmessage of EventSource with shared worker" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="eventsource-onmessage" purpose="Check if trigger EventSource.onmessage event when get the data form a server" result="PASS" /><testcase id="eventsource-onopen" purpose="Check if trigger EventSource.onopen event when the user agent has an open connection" result="PASS" /><testcase id="eventsource-onopen-dedicated-worker" purpose="Check onopen (announcing the connection) of EventSource with dedicated worker" result="PASS" /><testcase id="eventsource-onopen-shared-worker" purpose="Check onopen (announcing the connection) of EventSource with shared worker" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="eventsource-prototype" purpose="Check if the EventSource exists" result="PASS" /><testcase id="eventsource-prototype-dedicated-worker" purpose="Check prototype et al of EventSource with dedicated worker" result="PASS" /><testcase id="eventsource-prototype-shared-worker" purpose="Check prototype et al of EventSource with shared worker" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="eventsource-reconnect" purpose="Check if the event of a reconnection can be got" result="PASS" /><testcase id="eventsource-url" purpose="Check if the value of EventSource.url is correct" result="PASS" /><testcase id="eventsource-url-dedicated-worker" purpose="Check url of EventSource with dedicated worker" result="PASS" /><testcase id="eventsource-url-shared-worker" purpose="Check url of EventSource with shared worker" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="format-bom" purpose="Check the format of bom" result="PASS" /><testcase id="format-bom-2" purpose="Check the format of double bom" result="PASS" /><testcase id="format-data-before-final-empty-line" purpose="Check if the file ends in the middle of an event, before the final empty line, the incomplete event is not dispatched" result="PASS" /><testcase id="format-field-data" purpose="Check the data field parsing" result="PASS" /><testcase id="format-field-event" purpose="Check the format of event field when the event name is custom" result="PASS" /><testcase id="format-field-event-empty" purpose="Check the format of empty  event  field" result="PASS" /><testcase id="format-field-id" purpose="Check the format of las event id  field" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="format-field-id-2" purpose="Check the format of multiple las event id  field" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="format-field-retry-empty" purpose="Check the format of empty retry field" result="PASS" /><testcase id="format-field-unknown" purpose="Check the format of unknown field" result="PASS" /><testcase id="format-leading-space" purpose="Check event stream format with a single leading space character" result="PASS" /><testcase id="format-mime-bogus" purpose="Check bogus MIME type of event stream format" result="PASS" /><testcase id="format-mime-trailing-semicolon" purpose="Check MIME type with trailing semicolon of event stream format" result="PASS" /><testcase id="format-mime-valid-bogus" purpose="Check incorrect valid MIME type of event stream format" result="PASS" /><testcase id="format-newlines" purpose="Check newline fest of event stream format" result="PASS" /><testcase id="format-null-character" purpose="Check null character in response" result="PASS" /><testcase id="request-accept" purpose="Check if  'text/event-stream' must be one of accept header for HTTP connections" result="PASS" /><testcase id="request-redirect" purpose="Check request redirects of EventSource" result="PASS" /><testcase id="request-status-error" purpose="Check if set incorrect HTTP status code, that onerror event will be invoked" result="PASS" /><testcase id="sse_EventSource_CLOSED" purpose="Check if EventSource.CLOSED attribute exists and typeof number" result="PASS" /><testcase id="sse_EventSource_CLOSED_default_value" purpose="Check if EventSource.CLOSED is default value" result="PASS" /><testcase id="sse_EventSource_close_exists" purpose="Check if EventSource.close event exists" result="PASS" /><testcase id="sse_EventSource_CONNECTING" purpose="Check if EventSource.CONNECTING attribute exists and typeof number" result="PASS" /><testcase id="sse_EventSource_CONNECTING_default_value" purpose="Check if EventSource.CONNECTING is default value" result="PASS" /><testcase id="sse_EventSource_onerror_base" purpose="Check if trigger EventSource.onerror event when connection happens an error" result="PASS" /><testcase id="sse_EventSource_onerror_exists" purpose="Check if EventSource onerror event exists" result="PASS" /><testcase id="sse_EventSource_onmessage_exists" purpose="Check if EventSource onmessage event exists" result="PASS" /><testcase id="sse_EventSource_onopen_exists" purpose="Check if EventSource onopen event exists" result="PASS" /><testcase id="sse_EventSource_OPEN" purpose="Check if EventSource.OPEN attribute exists and typeof number" result="PASS" /><testcase id="sse_EventSource_OPEN_default_value" purpose="Check if EventSource.OPEN is default value" result="PASS" /><testcase id="sse_EventSource_readyState_CLOSED" purpose="Check if EventSource.readyState is CLOSED when the eventsource is closed" result="PASS" /><testcase id="sse_EventSource_readyState_CONNECTING" purpose="Check if EventSource.readyState is CONNECTING when the eventsource is created" result="PASS" /><testcase id="sse_EventSource_readyState_exists" purpose="Check if EventSource.readyState arrtibute exists" result="PASS" /><testcase id="sse_EventSource_readyState_readonly" purpose="Check if EventSource.readyState attribute is readonly" result="PASS" /><testcase id="sse_EventSource_readyState_type" purpose="Check if the type of ServerSentEvent.readyState is number" result="PASS" /><testcase id="sse_EventSource_url_exists" purpose="Check if EventSource.url attribute exists" result="PASS" /><testcase id="sse_EventSource_url_readonly" purpose="Check if EventSource.url attribute is readonly" result="PASS" /><testcase id="sse_EventSource_url_type" purpose="Check if the type of ServerSentEvent.url is string" result="PASS" /><testcase id="sse_EventSource_WorkerUtils_exists" purpose="Check if ServerSentEvent.EventSource() implement the WorkerUtils interface" result="PASS" /></category><category name="W3C_HTML5 APIs/Communication/The WebSocket API"><testcase id="BinaryType_wrong_value" purpose="Check if Secure WebSocket created when the binaryType is set to something other than blob/arraybuffer" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="BufferedAmount_001" purpose="Check if the default value of WebSocket.bufferedAmount is 0" result="PASS" /><testcase id="BufferedAmount_002" purpose="Check if the WebSocket.bufferedAmount is readonly" result="PASS" /><testcase id="BufferedAmount_004" purpose="Check if can delete the attribute of WebSocket.bufferedAmount" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="CloseEvent_001" purpose="Check if window.CloseEvent exists" result="PASS" /><testcase id="Close_0" purpose="Check if InvalidAccessError exception thrown when WebSocket.close has an argument 0" result="PASS" /><testcase id="Close_001" purpose="Check if WebSocket.close method fired the onclose event" result="PASS" /><testcase id="Close_002" purpose="Check if can replace the method of close in WebSocket" result="PASS" /><testcase id="Close_003" purpose="Check if can call WebSocket.close method several times" result="PASS" /><testcase id="Close_004" purpose="Check if WebSocket.close method return undefined" result="PASS" /><testcase id="close_1000" purpose="Check if readystate should be in CLOSED state and wasClean is TRUE after close a WebSocket with 1000 code and reason" result="PASS" /><testcase id="close_1000_reason" purpose="Check if readystate can be in CLOSED state and wasClean is TRUE if close a WebSocket with 1000 code and reason" result="PASS" /><testcase id="Close_null" purpose="Check if the InvalidAccessError exception thrown when WebSocket.close has an argument null" result="PASS" /><testcase id="Close_undefined" purpose="Check if the InvalidAccessError exception thrown when the WebSocket.close has an argument undefined" result="PASS" /><testcase id="Constants_001_1" purpose="Check if WebSocket.CONNECTING exists" result="PASS" /><testcase id="Constants_001_2" purpose="Check if WebSocket.OPEN exists" result="PASS" /><testcase id="Constants_001_3" purpose="Check if WebSocket.CLOSING exists" result="PASS" /><testcase id="Constants_001_4" purpose="Check if WebSocket.CLOSED exists" result="PASS" /><testcase id="Constants_003_1" purpose="Check if can delete the attribute of WebSocket.CONNECTING" result="PASS" /><testcase id="Constants_003_2" purpose="Check if can delete the attribute of WebSocket.OPEN" result="PASS" /><testcase id="Constants_003_3" purpose="Check if can delete the attribute of WebSocket.CLOSING" result="PASS" /><testcase id="Constants_003_4" purpose="Check if can delete the attribute ofWebSocket.CLOSED" result="PASS" /><testcase id="Constants_004_1" purpose="Check if CONNECTING exists in WebSocket.prototype" result="PASS" /><testcase id="Constants_004_2" purpose="Check if CONNECTING exists in WebSocket instance" result="PASS" /><testcase id="Constants_004_3" purpose="Check if OPEN exists in WebSocket.prototype" result="PASS" /><testcase id="Constants_004_4" purpose="Check if OPEN exists in WebSocket instance" result="PASS" /><testcase id="Constants_004_5" purpose="Check if CLOSING exists in WebSocket.prototype" result="PASS" /><testcase id="Constants_004_6" purpose="Check if CLOSING exists in WebSocket instance" result="PASS" /><testcase id="Constants_004_7" purpose="Check if CLOSED exists in WebSocket.prototype" result="PASS" /><testcase id="Constants_004_8" purpose="Check if CLOSED exists in WebSocket instance" result="PASS" /><testcase id="Constants_005_1" purpose="Check if throw TypeError by defineProperty getter for CONNECTING" result="PASS" /><testcase id="Constants_005_2" purpose="Check if throw TypeError by defineProperty getter for OPEN" result="PASS" /><testcase id="Constants_005_3" purpose="Check if throw TypeError by defineProperty getter for CLOSING" result="PASS" /><testcase id="Constants_005_4" purpose="Check if throw TypeError by defineProperty getter for CLOSED" result="PASS" /><testcase id="Constants_006_1" purpose="Check if throw TypeError by defineProperty setter for CONNECTING" result="PASS" /><testcase id="Constants_006_2" purpose="Check if throw TypeError by defineProperty setter for OPEN" result="PASS" /><testcase id="Constants_006_3" purpose="Check if throw TypeError by defineProperty setter for CLOSING" result="PASS" /><testcase id="Constants_006_4" purpose="Check if throw TypeError by defineProperty setter for CLOSED" result="PASS" /><testcase id="Cookies_004" purpose="Check if the WebSocket response cookies matches document.cookie" result="PASS" /><testcase id="Create_invalid_urls" purpose="Check if the SyntaxError exception thrown when created by an invalid url" result="PASS" /><testcase id="Create_nonAscii_protocol_string" purpose="Check if the SyntaxError exception thown when created by non ascii protocol string" result="PASS" /><testcase id="Create_non_absolute_url" purpose="Check if the SyntaxError exception thrown when created by non absolute URL" result="PASS" /><testcase id="Create_protocols_repeated" purpose="Check if the SyntaxError exception thrown when created by repeated protocol string" result="PASS" /><testcase id="Create_protocol_with_space" purpose="Check if the SyntaxError exception thrown when created by space protocol string" result="PASS" /><testcase id="Create_Secure_blocked_port" purpose="Check if the SyntaxError exception thrown when url has a blocked port" result="PASS" /><testcase id="create_secure_extensions_empty" purpose="Check if the websocket connection with an empty extension can be opened or closed successfully" result="PASS" /><testcase id="Create_Secure_url_with_space" purpose="Check if the SyntaxError exception thrown when created by an url with space" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="create_secure_valid_url" purpose="Check if the connection can be opened or closed after open or close a secure WebSocket with a valid URL" result="PASS" /><testcase id="create_secure_valid_url_array_protocols" purpose="Check if connection works when open or close a secure WebSocket with a valid URL and array of protocol strings" result="PASS" /><testcase id="create_secure_valid_url_binarytype_blob" purpose="Check if a open secure WebSocket which binaryType should be set to 'blob' after connection is established." result="PASS" /><testcase id="create_secure_valid_url_protocol_setcorrectly" purpose="Check if protocol is set correctly after connection" result="PASS" /><testcase id="create_secure_valid_url_protocol_string" purpose="Check if connection can be opened or closed after open or close a secure WebSocket with a valid URL and protocol string" result="PASS" /><testcase id="Create_Secure_verify_url_set_default_port" purpose="Check if url can be set correctly when a secure WebSocket created with a valid URL and default port" result="PASS" /><testcase id="Create_Secure_verify_url_set_non_default_port" purpose="Check if url can be set correctly when a secure WebSocket created with a valid URL and non default port" result="PASS" /><testcase id="create_valid_url" purpose="Check if the connection works when sending the valid URL" result="PASS" /><testcase id="create_valid_url_array_protocols" purpose="Check if the websocket connection with a valid URL and array of protocols can be opened or closed successfully" result="PASS" /><testcase id="create_valid_url_protocol" purpose="Check if connection can be opened or closed after open or close a WebSocket with a valid URL and a protocol" result="PASS" /><testcase id="create_valid_url_protocol_empty" purpose="Check if wsocket.protocol is empty before connection is established" result="PASS" /><testcase id="Create_verify_url_set_default_port" purpose="Check if url can be set correctly when a WebSocket created with a valid URL and a default port" result="PASS" /><testcase id="Create_verify_url_set_non_default_port" purpose="Check if url can be set correctly when a WebSocket created with a valid URL and non default port" result="PASS" /><testcase id="Create_wrong_scheme" purpose="Check if the SyntaxError exception thrown when non ws/wss scheme in url" result="PASS" /><testcase id="Events_001_1" purpose="Check if onopen attribute nonexist when without define it on WebSocket" result="PASS" /><testcase id="Events_001_2" purpose="Check if onmessage attribute nonexist when without define it on WebSocket" result="PASS" /><testcase id="Events_001_3" purpose="Check if onerror attribute nonexist when without define it on WebSocket" result="PASS" /><testcase id="Events_001_4" purpose="Check if onclose attribute nonexist when without define it on WebSocket" result="PASS" /><testcase id="Events_002_1" purpose="Check if onopen attribute exist after it defined on WebSocket" result="PASS" /><testcase id="Events_002_2" purpose="Check if onmessage attribute exist after it defined on WebSocket" result="PASS" /><testcase id="Events_002_3" purpose="Check if onerror attribute exist after it defined on WebSocket" result="PASS" /><testcase id="Events_002_4" purpose="Check if onclose attribute exist after it defined on WebSocket" result="PASS" /><testcase id="Events_003" purpose="Check if can listen event with onopen" result="PASS" /><testcase id="Events_004" purpose="Check if the type of addEventListener/removeEventListener/dispatchEvent are function" result="PASS" /><testcase id="Events_006" purpose="Check if onopen/onmessage/onerror/onclose are in WebSocket" result="PASS" /><testcase id="Events_007" purpose="Check if can listen event with onmessage" result="PASS" /><testcase id="Events_008" purpose="Check if can listen event with onerror" result="PASS" /><testcase id="Events_009" purpose="Check if can listen event with onclose" result="PASS" /><testcase id="Events_010_1" purpose="Check if can set onopen event handler to undefined" result="PASS" /><testcase id="Events_010_2" purpose="Check if can set onmessage event handler to undefined" result="PASS" /><testcase id="Events_010_3" purpose="Check if can set onerror event handler to undefined" result="PASS" /><testcase id="Events_010_4" purpose="Check if can set onclose event handler to undefined" result="PASS" /><testcase id="Events_011_1" purpose="Check if can set onopen event handler to 1" result="PASS" /><testcase id="Events_011_2" purpose="Check if can set onmessage event handler to 1" result="PASS" /><testcase id="Events_011_3" purpose="Check if can set onerror event handler to 1" result="PASS" /><testcase id="Events_011_4" purpose="Check if can set onclose event handler to 1" result="PASS" /><testcase id="Events_012_1" purpose="Check if can set onopen event handler to ';'" result="PASS" /><testcase id="Events_012_2" purpose="Check if can set onmessage event handler to ';'" result="PASS" /><testcase id="Events_012_3" purpose="Check if can set onerror event handler to ';'" result="PASS" /><testcase id="Events_012_4" purpose="Check if can set onclose event handler to ';'" result="PASS" /><testcase id="Events_014_1" purpose="Check if can set onopen event handler to null" result="PASS" /><testcase id="Events_014_2" purpose="Check if can set onmessage event handler to null" result="PASS" /><testcase id="Events_014_3" purpose="Check if can set onerror event handler to null" result="PASS" /><testcase id="Events_014_4" purpose="Check if can set onclose event handler to null" result="PASS" /><testcase id="Events_015" purpose="Check if WebSocket events are instanceof of Event" result="PASS" /><testcase id="Events_017" purpose="Check if e.target/e.currentTarget/e.eventPhase get the correct value in WebSocket event handler" result="PASS" /><testcase id="Events_018" purpose="Check if toString()/bubbles/cancelable get the correct value in WebSocket event handler" result="PASS" /><testcase id="Events_019_1" purpose="Check if can removeEventListener about onopen event handler" result="PASS" /><testcase id="Events_019_2" purpose="Check if can removeEventListener about onmessage event handler" result="PASS" /><testcase id="Events_019_3" purpose="Check if can removeEventListener about onerror event handler" result="PASS" /><testcase id="Events_019_4" purpose="Check if can removeEventListener about onclose event handler" result="PASS" /><testcase id="Extensions_001" purpose="Check if the extensions attribute initially return the empty string" result="PASS" /><testcase id="Protocol_001" purpose="Check if the protocol attribute initially return the empty string" result="PASS" /><testcase id="ReadyState_001" purpose="Check if the readyState attribute initially return the WebSocket.CONNECTING" result="PASS" /><testcase id="ReadyState_002" purpose="Check if the WebSocket.readyState attribute is readonly" result="PASS" /><testcase id="ReadyState_006" purpose="Check if the value readyState is WebSocket.OPEN when in onopen event handler" result="PASS" /><testcase id="ReadyState_007" purpose="Check if the value readyState is WebSocket.CLOSING when WebSocket.close() is called" result="PASS" /><testcase id="ReadyState_008" purpose="Check if the value readyState is WebSocket.CLOSED when in onclose event handler" result="PASS" /><testcase id="Secure_Close_0" purpose="Check if the desired exception thrown when the WebSocket.close secure has an argument 0" result="PASS" /><testcase id="secure_close_1000" purpose="Check if readystate can be in CLOSED state and wasClean is TRUE after close a secure WebSocket with 1000 code" result="PASS" /><testcase id="secure_close_1000_reason" purpose="Check if readystate should be in CLOSED state and wasClean is TRUE after close a secure WebSocket with 1000 code and reason" result="PASS" /><testcase id="Secure_Close_1000_verify_code" purpose="Check if the return code is 1000 when close a secure WebSocket with 1000 code" result="PASS" /><testcase id="Secure_Close_1005" purpose="Check if the desired exception thrown when the WebSocket.close secure has an argument 1005" result="PASS" /><testcase id="Secure_Close_1005_verify_code" purpose="Check if the return code is 1005 when close a secure WebSocket with 1005 code" result="PASS" /><testcase id="Secure_Close_2999_reason" purpose="Check if the desired exception thrown when WebSocket.close has the arguments 2999 and reason" result="PASS" /><testcase id="secure_close_3000_reason" purpose="Check if the desired wsocket.readyState is equal to 3 and evt.wasClean is true if the websocket call the method close(3000)" result="PASS" /><testcase id="Secure_Close_3000_verify_code" purpose="Check if the return code is 3000 when close a secure WebSocket with 3000 code" result="PASS" /><testcase id="secure_close_4999_reason" purpose="Check if the connection works when open or close a secure WebSocket with 4999 code and reason" result="PASS" /><testcase id="Secure_Close_null" purpose="Check if the desired exception thrown when the WebSocket.close secure has an argument null" result="PASS" /><testcase id="Secure_Close_onlyReason" purpose="Check if the desired exception thrown when the WebSocket.close secure only has an argument by reason" result="PASS" /><testcase id="secure_close_readystate_closed" purpose="Check if readyState is in closed state when onclose is fired" result="PASS" /><testcase id="secure_close_readystate_closing" purpose="Check if readyState is 2 before onclose is fired" result="PASS" /><testcase id="Secure_Close_Reason_124Bytes" purpose="Check if the desired exception thrown when the WebSocket.close reason length is more than 123 bytes" result="PASS" /><testcase id="secure_close_server_initiated_close" purpose="Check if the connnection works when open or close a secure WebSocket with server initiated close" result="PASS" /><testcase id="Secure_Close_undefined" purpose="Check if the desired exception thrown when the WebSocket.close secure has an argument undefined" result="PASS" /><testcase id="Secure_Send_65K_data" purpose="Check if Secure WebSocket when Send 65K data" result="PASS" /><testcase id="Secure_Send_binary_65K_arraybuffer" purpose="Check if 65 byte data can be received after Send 65K binary data on a Secure Websocket" result="PASS" /><testcase id="Secure_Send_binary_arraybuffer" purpose="Check if binary data should be received when binary data send on a Secure Websocket" result="PASS" /><testcase id="Secure_Send_binary_arraybufferview_float32" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Float32Array type" result="PASS" /><testcase id="Secure_Send_binary_arraybufferview_float64" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Float64Array type" result="PASS" /><testcase id="Secure_Send_binary_arraybufferview_int32" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Int32Array type" result="PASS" /><testcase id="Secure_Send_binary_arraybufferview_uint16_offset_length" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Uint16Array type with offset and length" result="PASS" /><testcase id="Secure_Send_binary_arraybufferview_uint32_offset" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Uint32Array type with offset" result="PASS" /><testcase id="Secure_Send_binary_arraybufferview_uint8_offset" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Uint8Array type with offset" result="PASS" /><testcase id="Secure_Send_binary_arraybufferview_uint8_offset_length" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Uint8Array type with offset and length" result="PASS" /><testcase id="secure_send_binary_blob" purpose="Check if binary data should be received in blob form when binary data in blob form send on a Secure Websocket" result="PASS" /><testcase id="Secure_Send_data" purpose="Check if data can be received after send data on a Secure WebSocket" result="PASS" /><testcase id="secure_send_null" purpose="Check if null can be received when null data send on a Secure WebSocket" result="PASS" /><testcase id="Secure_Send_paired_surrogates" purpose="Check if paired surrogates data should be received when paired surrogates data send on a Secure Websocket" result="PASS" /><testcase id="Secure_Send_unicode_data" purpose="Check if unicode data message should be received when unicode data send on a Secure Websocket" result="PASS" /><testcase id="Send_001" purpose="Check if throw TypeError when WebSocket.send() with no args" result="PASS" /><testcase id="Send_002" purpose="Check if can replace the method of send in WebSocket" result="PASS" /><testcase id="Send_003" purpose="Check if can send() when readyState is CONNECTING" result="PASS" /><testcase id="Send_004_1" purpose="Check if throw INVALID_STATE_ERR when send() with lone low surrogate" result="PASS" /><testcase id="Send_004_2" purpose="Check if throw INVALID_STATE_ERR when send() with lone high surrogate" result="PASS" /><testcase id="Send_004_3" purpose="Check if throw INVALID_STATE_ERR when send() with surrogates in wrong order" result="PASS" /><testcase id="Send_009" purpose="Check if can send() empty message" result="PASS" /><testcase id="send_0byte_data" purpose="Check if null can be received when 0 byte data send on a WebSocket" result="PASS" /><testcase id="Send_65k_data" purpose="Check if 64k byte data can be received after 65k data send on a WebSocket" result="PASS" /><testcase id="Send_before_open" purpose="Check if send before connection in established" result="PASS" /><testcase id="Send_binary_65K_arraybuffer" purpose="Check if 65 byte data can be received after Send 65K binary data send on a WebSocket" result="PASS" /><testcase id="Send_binary_arraybuffer" purpose="Check if binary data should be received when binary data send on a Websocket" result="PASS" /><testcase id="Send_binary_arraybufferview_int16_offset" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Int16Array type with offset" result="PASS" /><testcase id="Send_binary_arraybufferview_int8" purpose="Check if the connection can be opened, closed and the message can be received if send binary data on a WebSocket with ArrayBufferView of Int8Array type" result="PASS" /><testcase id="Send_binary_blob" purpose="Check if binary data should be received in blob form when binary data in blob form send on a Websocket" result="PASS" /><testcase id="Send_data" purpose="Check if data can be received after data send on a WebSocket" result="PASS" /><testcase id="send_null" purpose="Check if null can be received after null send on a WebSocket" result="PASS" /><testcase id="Send_paired_surrogates" purpose="Check if paired surrogates data should be received when paired surrogates data send on a Websocket" result="PASS" /><testcase id="Send_unicode_data" purpose="Check if unicode data message should be received when unicode data send on a Websocket" result="PASS" /><testcase id="Unload-a-document_001" purpose="Check if can navigate top-level browsing context" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-1791 XWALK-1791]]</testcase><testcase id="Unload-a-document_003" purpose="Check if can navigate nested browsing context" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="Url_002" purpose="Check if WebSocket.url is readonly" result="PASS" /><testcase id="Url_003" purpose="Check if can delete the attribute of WebSocket.url" result="PASS" /><testcase id="websocket_CloseEvent_close_code" purpose="Check the value of CloseEvent.code equals close method value" result="PASS" /><testcase id="websocket_CloseEvent_close_reason" purpose="Check the value of CloseEvent.reason equals close method value" result="PASS" /><testcase id="websocket_CloseEvent_code_exists" purpose="Check if CloseEvent.code attribute exists" result="PASS" /><testcase id="websocket_CloseEvent_code_readonly" purpose="Check if CloseEvent.code attribute is readonly" result="PASS" /><testcase id="websocket_CloseEvent_code_type" purpose="Check if the type of CloseEvent.code is 'number'" result="PASS" /><testcase id="websocket_CloseEvent_exists" purpose="Check if CloseEvent interface exists" result="PASS" /><testcase id="websocket_CloseEvent_reason_exists" purpose="Check if CloseEvent.reason attribute exists" result="PASS" /><testcase id="websocket_CloseEvent_reason_readonly" purpose="Check if CloseEvent.reason attribute is readonly" result="PASS" /><testcase id="websocket_CloseEvent_reason_type" purpose="Check if the type of CloseEvent.reason is 'DOMString'" result="PASS" /><testcase id="websocket_CloseEvent_wasClean_exists" purpose="Check if CloseEvent.wasClean attribute exists" result="PASS" /><testcase id="websocket_CloseEvent_wasClean_false" purpose="Check if the initialized value of CloseEvent.wasclean equals false" result="PASS" /><testcase id="websocket_CloseEvent_wasClean_readonly" purpose="Check if CloseEvent. attribute is readonly" result="PASS" /><testcase id="websocket_CloseEvent_wasClean_true" purpose="Check if the value of CloseEvent.wasclean equals true" result="PASS" /><testcase id="websocket_CloseEvent_wasClean_type" purpose="Check if the type of CloseEvent.wasClean is 'boolean'" result="PASS" /><testcase id="websocket_constructor_001" purpose="Check if can new WebSocket() with no args" result="PASS" /><testcase id="websocket_constructor_002_1" purpose="Check if can new WebSocket() with invalid url arg as '/test'" result="PASS" /><testcase id="websocket_constructor_002_10" purpose="Check if can new WebSocket() with invalid url arg as '#test'" result="PASS" /><testcase id="websocket_constructor_002_2" purpose="Check if can new WebSocket() with invalid url arg as 'ws://foo bar.com/'" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="websocket_constructor_002_3" purpose="Check if can new WebSocket() with invalid url arg as 'wss://foo bar.com/'" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="websocket_constructor_002_4" purpose="Check if can new WebSocket() with invalid url arg as 'http://location.hostname/'" result="PASS" /><testcase id="websocket_constructor_002_5" purpose="Check if can new WebSocket() with invalid url arg as 'mailto:example@example.org'" result="PASS" /><testcase id="websocket_constructor_002_6" purpose="Check if can new WebSocket() with invalid url arg as 'about:blank'" result="PASS" /><testcase id="websocket_constructor_002_7" purpose="Check if can new WebSocket() with invalid url arg as 'ws://location.hostname/#'" result="PASS" /><testcase id="websocket_constructor_002_8" purpose="Check if can new WebSocket() with invalid url arg as 'ws://location.hostname/#test'" result="PASS" /><testcase id="websocket_constructor_002_9" purpose="Check if can new WebSocket() with invalid url arg as '?test'" result="PASS" /><testcase id="websocket_constructor_004" purpose="Check if can new WebSocket() with invalid protocol arg" result="PASS" /><testcase id="websocket_constructor_005" purpose="Check if the return value of new WebSocket() is instanceof WebSocket" result="PASS" /><testcase id="websocket_constructor_007" purpose="Check if can new WebSocket() with null char arg" result="PASS" /><testcase id="websocket_constructor_008_1" purpose="Check if can new WebSocket() with invalid port arg as 'ws://example.invalid:80/'" result="PASS" /><testcase id="websocket_constructor_008_2" purpose="Check if can new WebSocket() with invalid port arg as 'ws://example.invalid:443/'" result="PASS" /><testcase id="websocket_constructor_008_3" purpose="Check if can new WebSocket() with invalid port arg as 'wss://example.invalid:80/'" result="PASS" /><testcase id="websocket_constructor_008_4" purpose="Check if can new WebSocket() with invalid port arg as 'wss://example.invalid:443/'" result="PASS" /><testcase id="websocket_constructor_010" purpose="Check if the protocol in response but no in requested" result="PASS" /><testcase id="websocket_constructor_012" purpose="Check if no protocol in response" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="websocket_constructor_017_1" purpose="Check if can new WebSocket() with no slash after ws as 'ws:location.hostname/ws/echo'" result="PASS" /><testcase id="websocket_constructor_017_2" purpose="Check if can new WebSocket() with one slash after ws as 'ws:/location.hostname/ws/echo'" result="PASS" /><testcase id="websocket_constructor_017_3" purpose="Check if can new WebSocket() with no slash after wss as 'wss:location.hostname/ws/echo'" result="PASS" /><testcase id="websocket_constructor_017_4" purpose="Check if can new WebSocket() with one slash after wss as 'wss:/location.hostname/ws/echo'" result="PASS" /><testcase id="websocket_constructor_019" purpose="Check if can new WebSocket() with uppercase protocal as 'WS:'" result="PASS" /><testcase id="websocket_constructor_020" purpose="Check if can new WebSocket() with uppercase host" result="PASS" /><testcase id="websocket_constructor_021" purpose="Check if can new WebSocket() with the same sub protocol twice" result="PASS" /><testcase id="websocket_WebSocket_binaryType_exists" purpose="Check if WebSocket.binaryType attribute exists" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_exists" purpose="Check if WebSocket.bufferedAmount attribute exists" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_increase_each_call" purpose="Check if WebSocket.bufferedAmount increases with each call to the send() method, when the connection is closed" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_nosend" purpose="Check if the websocket doesn't send message to server" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_readonly" purpose="Check if WebSocket.bufferedAmount attribute is readonly" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_send10000char" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 10000 char of data successfully" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_send1000char" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 1000 char of data successfully" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_send100char" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 100 char of data successfully" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_send10char" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 10 char of data successfully" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_send200char" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 200 char of data successfully" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_send500char" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends 500 char of data successfully" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_send_ArrayBuffer" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends ArrayBuffer 1024 bytes of data successfully" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_send_ArrayBuffer_2048" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends ArrayBuffer 2048 bytes of data successfully" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_send_blob" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends blob data successfully" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_send_blob_2000" purpose="Check if the desired value of bufferedAmount is greater than zero if the websocket sends blob 2000 data successfully" result="PASS" /><testcase id="websocket_WebSocket_bufferedAmount_type" purpose="Check if type of WebSocket.bufferedAmount is 'number'" result="PASS" /><testcase id="websocket_WebSocket_CLOSED_default_value" purpose="Check if the default value of WebSocket.CLOSED is 3" result="PASS" /><testcase id="websocket_WebSocket_CLOSED_exists" purpose="Check if WebSocket.CLOSED attribute exists" result="PASS" /><testcase id="websocket_WebSocket_CLOSED_type" purpose="Check if the type of WebSocket.CLOSED is 'number'" result="PASS" /><testcase id="websocket_WebSocket_close_3000" purpose="Check if the websocket can be close normally when WebSocket.close has an argument 3000" result="PASS" /><testcase id="websocket_WebSocket_close_5000" purpose="Check if the desired exception thrown when WebSocket.close has an argument 5000" result="PASS" /><testcase id="websocket_WebSocket_close_exists" purpose="Check if WebSocket.close event exists" result="PASS" /><testcase id="websocket_WebSocket_close_reason_null" purpose="Check if the desired exception thrown when the WebSocket.close has an argument reason null" result="PASS" /><testcase id="websocket_WebSocket_close_type" purpose="Check if the type of WebSocket.close is 'function'" result="PASS" /><testcase id="websocket_WebSocket_CLOSING_default_value" purpose="Check if the default value of WebSocket.CLOSING is 2" result="PASS" /><testcase id="websocket_WebSocket_CLOSING_exists" purpose="Check if WebSocket.CLOSING attribute exists" result="PASS" /><testcase id="websocket_WebSocket_CLOSING_type" purpose="Check if the type of WebSocket.CLOSING is 'number'" result="PASS" /><testcase id="websocket_WebSocket_CONNECTING_default_value" purpose="Check if the default value of WebSocket.CONNECTING is 0" result="PASS" /><testcase id="websocket_WebSocket_CONNECTING_exists" purpose="Check if WebSocket.CONNECTING attribute exists" result="PASS" /><testcase id="websocket_WebSocket_CONNECTING_type" purpose="Check if the type of WebSocket.CONNECTING is 'number'" result="PASS" /><testcase id="websocket_WebSocket_exists" purpose="Check if window.WebSocket interface exists" result="PASS" /><testcase id="websocket_WebSocket_extensions_exists" purpose="Check if WebSocket.extensions attribute exists" result="PASS" /><testcase id="websocket_WebSocket_extensions_readonly" purpose="Check if WebSocket.extensions attribute is readonly" result="PASS" /><testcase id="websocket_WebSocket_extensions_type" purpose="Check if the type of WebSocket.extensions is 'string'" result="PASS" /><testcase id="websocket_WebSocket_onclose_base" purpose="Check if WebSocket.onclose event fired" result="PASS" /><testcase id="websocket_WebSocket_onclose_exists" purpose="Check if WebSocket.onclose event exists" result="PASS" /><testcase id="websocket_WebSocket_onclose_type" purpose="Check if the type of WebSocket.onclose is 'function'" result="PASS" /><testcase id="websocket_WebSocket_onerror_exists" purpose="Check if WebSocket.onerror event exists" result="PASS" /><testcase id="websocket_WebSocket_onerror_type" purpose="Check if the type of WebSocket.onerror is 'function'" result="PASS" /><testcase id="websocket_WebSocket_onmessage_base" purpose="Check if WebSocket.onmessage event fired" result="PASS" /><testcase id="websocket_WebSocket_onmessage_exists" purpose="Check if WebSocket.onmessage event exists" result="PASS" /><testcase id="websocket_WebSocket_onmessage_MessageEvent_origin_initialize" purpose="Check if Initialize event's origin attribute to the Unicode serialization of the origin of the URL that was passed to the WebSocket object's constructor" result="PASS" /><testcase id="websocket_WebSocket_onmessage_type" purpose="Check if the type of WebSocket.onmessage is 'function'" result="PASS" /><testcase id="websocket_WebSocket_onopen_base" purpose="Check if WebSocket.onopen event fired" result="PASS" /><testcase id="websocket_WebSocket_onopen_exists" purpose="Check if WebSocket.onopen event exists" result="PASS" /><testcase id="websocket_WebSocket_onopen_type" purpose="Check if the type of WebSocket.onopen is 'function'" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4031 XWALK-4031]]</testcase><testcase id="websocket_WebSocket_OPEN_default_value" purpose="Check if the default value of WebSocket.OPEN is 1" result="PASS" /><testcase id="websocket_WebSocket_OPEN_exists" purpose="Check if WebSocket.OPEN attribute exists" result="PASS" /><testcase id="websocket_WebSocket_OPEN_type" purpose="Check if the type of WebSocket.OPEN attribute is 'number'" result="PASS" /><testcase id="websocket_WebSocket_port_block_access_exception_SecurityError" purpose="Check if port is a port to which the user agent is configured to block access that expecting an exception SecurityError to be thrown" result="PASS" /><testcase id="websocket_WebSocket_protocol_closing" purpose="Check the websocket.protocol value when websocket closed" result="PASS" /><testcase id="websocket_WebSocket_protocol_exists" purpose="Check if WebSocket.protocol attribute exists" result="PASS" /><testcase id="websocket_WebSocket_protocol_readonly" purpose="Check if WebSocket.protocol attribute is readonly" result="PASS" /><testcase id="websocket_WebSocket_protocol_type" purpose="Check if the type of WebSocket.protocol is 'string'" result="PASS" /><testcase id="websocket_WebSocket_readyState_connecting" purpose="Check if the value of WebSocket.readyState is WebSocket.CONNECTING" result="PASS" /><testcase id="websocket_WebSocket_readystate_exists" purpose="Check if WebSocket.readyState attribute exists" result="PASS" /><testcase id="websocket_WebSocket_readyState_open" purpose="Check if the value of WebSocket.readyState is WebSocket.OPEN" result="PASS" /><testcase id="websocket_WebSocket_readyState_readonly" purpose="Check if WebSocket.readyState attribute is readonly" result="PASS" /><testcase id="websocket_WebSocket_readyState_type" purpose="Check if the type of WebSocket.readyState is 'number'" result="PASS" /><testcase id="websocket_WebSocket_send_exists" purpose="Check if WebSocket.send event exists" result="PASS" /><testcase id="websocket_WebSocket_send_number" purpose="Check if WebSocket.send send number data" result="PASS" /><testcase id="websocket_WebSocket_send_type" purpose="Check if the type of WebSocket.send is 'function'" result="PASS" /><testcase id="websocket_WebSocket_url_exists" purpose="Check if WebSocket.url attribute exists" result="PASS" /><testcase id="websocket_WebSocket_url_readonly" purpose="Check if WebSocket.url attribute is readonly" result="PASS" /><testcase id="websocket_WebSocket_url_type" purpose="Check if the type of WebSocket.url is 'string'" result="PASS" /><testcase id="websocket_WebSocket_url_wss_echo_websocket_org_8080" purpose="Check if the value of websocket.url is wss://echo.websocket.org:8080" result="PASS" /><testcase id="websocket_WebSocket_url_wss_localhost_8080" purpose="Check if the value of websocket.url is wss://localhost:8080" result="PASS" /><testcase id="websocket_WebSocket_url_ws_echo_websocket_org_8080" purpose="Check if the value of websocket.url is ws://echo.websocket.org:8080" result="PASS" /><testcase id="websocket_WebSocket_url_ws_localhost_8080" purpose="Check if the value of websocket.url is ws://localhost:8080" result="PASS" /></category><category name="W3C_HTML5 APIs/Communication/WebRTC"><testcase id="MediaStreamEvent_stream_basic" purpose="Check if the readonly attribute stream of MediaStreamEvent exists and type of MediaStream" result="PASS" /><testcase id="RTCDataChannelEvent_channel_basic" purpose="Check if the readonly attribute channel of RTCDataChannelEvent exists and type of RTCDataChannel" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="RTCDataChannel_binaryType_basic" purpose="Check if RTCDataChannel.binaryType exists and type of string" result="PASS" /><testcase id="RTCDataChannel_binaryType_init_value" purpose="Check if the setting of RTCDataChannel.binaryType is normally" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-942 XWALK-942]]</testcase><testcase id="RTCDataChannel_bufferedAmount_basic" purpose="Check if readonly RTCDataChannel.bufferedAmount exists and type of number" result="PASS" /><testcase id="RTCDataChannel_bufferedAmount_init_value" purpose="Check if the RTCDataChannel.bufferedAmount init value is 0" result="PASS" /><testcase id="RTCDataChannel_close_basic" purpose="Check if RTCDataChannel.close exists and type of function" result="PASS" /><testcase id="RTCDataChannel_id" purpose="Check if the setting of RTCDataChannel.id is normally" result="PASS" /><testcase id="RTCDataChannel_id_basic" purpose="Check if readonly RTCDataChannel.id exists and type of number" result="PASS" /><testcase id="RTCDataChannel_label" purpose="Check if the setting of RTCDataChannel.label is normally" result="PASS" /><testcase id="RTCDataChannel_label_basic" purpose="Check if readonly RTCDataChannel.label exists and type of string" result="PASS" /><testcase id="RTCDataChannel_maxRetransmits" purpose="Check if the setting of RTCDataChannel.maxRetransmits is normally" result="PASS" /><testcase id="RTCDataChannel_maxRetransmits_basic" purpose="Check if readonly RTCDataChannel.maxRetransmits exists and type of number" result="PASS" /><testcase id="RTCDataChannel_maxRetransmitTime" purpose="Check if the setting of RTCDataChannel.maxRetransmitTime is normally" result="PASS" /><testcase id="RTCDataChannel_maxRetransmitTime_basic" purpose="Check if readonly RTCDataChannel.maxRetransmitTime exists and type of number" result="PASS" /><testcase id="RTCDataChannel_negotiated" purpose="Check if the setting of RTCDataChannel.negotiated is normally" result="PASS" /><testcase id="RTCDataChannel_negotiated_basic" purpose="Check if readonly RTCDataChannel.negotiated exists and type of boolean" result="PASS" /><testcase id="RTCDataChannel_onclose_basic" purpose="Check if RTCDataChannel.onclose exists" result="PASS" /><testcase id="RTCDataChannel_onerror_basic" purpose="Check if RTCDataChannel.onerror exists" result="PASS" /><testcase id="RTCDataChannel_onmessage_basic" purpose="Check if RTCDataChannel.onmessage exists" result="PASS" /><testcase id="RTCDataChannel_onopen_basic" purpose="Check if RTCDataChannel.onopen exists" result="PASS" /><testcase id="RTCDataChannel_ordered" purpose="Check if the setting of RTCDataChannel.ordered is normally" result="PASS" /><testcase id="RTCDataChannel_ordered_basic" purpose="Check if readonly RTCDataChannel.ordered exists and type of boolean" result="PASS" /><testcase id="RTCDataChannel_protocol" purpose="Check if the setting of RTCDataChannel.protocol is normally" result="PASS" /><testcase id="RTCDataChannel_protocol_basic" purpose="Check if readonly RTCDataChannel.protocol exists and type of string" result="PASS" /><testcase id="RTCDataChannel_readyState" purpose="Check if the setting of RTCDataChannel.readyState is normally" result="PASS" /><testcase id="RTCDataChannel_readyState_basic" purpose="Check if readonly RTCDataChannel.readyState exists and type of string" result="PASS" /><testcase id="RTCDataChannel_send_basic" purpose="Check if RTCDataChannel.send exists and type of function" result="PASS" /><testcase id="RTCDTMFSender_canInsertDTMF" purpose="Check if the setting of RTCDTMFSender.canInsertDTMF is normally" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="RTCDTMFSender_canInsertDTMF_basic" purpose="Check if readonly RTCDTMFSender.canInsertDTMF exists and type of boolean" result="PASS" /><testcase id="RTCDTMFSender_duration_basic" purpose="Check if readonly RTCDTMFSender.duration exists and type of number" result="PASS" /><testcase id="RTCDTMFSender_insertDTMF_basic" purpose="Check if RTCDTMFSender.insertDTMF exists and type of function" result="PASS" /><testcase id="RTCDTMFSender_interToneGap_basic" purpose="Check if readonly RTCDTMFSender.interToneGap exists and type of number" result="PASS" /><testcase id="RTCDTMFSender_ontonechange_basic" purpose="Check if RTCDTMFSender.ontonechange exists" result="PASS" /><testcase id="RTCDTMFSender_toneBuffer_basic" purpose="Check if readonly RTCDTMFSender.toneBuffer exists and type of string" result="PASS" /><testcase id="RTCDTMFSender_track_basic" purpose="Check if readonly RTCDTMFSender.track exists and type of mediaStreamTrack" result="PASS" /><testcase id="RTCDTMFToneChangeEvent_tone_basic" purpose="Check if the readonly attribute tone of RTCDTMFToneChangeEvent exists and type of string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="RTCIceCandidate_1" purpose="Check if if the new RTCIceCandidate" result="PASS" /><testcase id="RTCIceCandidate_10" purpose="Check if RTCIceCandidate({})" result="PASS" /><testcase id="RTCIceCandidate_11" purpose="Check if RTCIceCandidate({})" result="PASS" /><testcase id="RTCIceCandidate_12" purpose="Check if RTCIceCandidate('foobar')" result="PASS" /><testcase id="RTCIceCandidate_2" purpose="Check if candidate" result="PASS" /><testcase id="RTCIceCandidate_3" purpose="Check if sdpMid" result="PASS" /><testcase id="RTCIceCandidate_4" purpose="Check if sdpMLineIndex" result="PASS" /><testcase id="RTCIceCandidate_6" purpose="Check if new RTCIceCandidate(initializer)" result="PASS" /><testcase id="RTCIceCandidate_7" purpose="Check if initializer candidate" result="PASS" /><testcase id="RTCIceCandidate_8" purpose="Check if initializer sdpMid" result="PASS" /><testcase id="RTCIceCandidate_9" purpose="Check if initializer sdpMLineIndex" result="PASS" /><testcase id="RTCIceCandidate_candidate_basic" purpose="Check if RTCIceCandidate.candidate exists and type of string" result="PASS" /><testcase id="RTCIceCandidate_sdpMid_basic" purpose="Check if RTCIceCandidate.sdpMid exists and type of string" result="PASS" /><testcase id="RTCIceCandidate_sdpMLineIndex_basic" purpose="Check if RTCIceCandidate.sdpMLineIndex exists and type of number" result="PASS" /><testcase id="RTCIdentityEvent_assertion_basic" purpose="Check if the attribute assertion of RTCIdentityEvent exists and type of string" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnection-AddRemoveStream" purpose="Check if RTCPeerConnection [add|remove]Stream" result="PASS" /><testcase id="RTCPeerConnection-createAnswer" purpose="Check if RTCPeerConnection createAnswer" result="PASS" /><testcase id="RTCPeerConnection-createOffer" purpose="Check if RTCPeerConnection createOffer" result="PASS" /><testcase id="RTCPeerConnection-datachannel-1" purpose="Check that connecting is the initial state of a RTCDataChannel object created with createDataChannel()" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnection-datachannel-2" purpose="Check that RTCPeerConnection.createDataChannel('label1') creates an ordered datachannel" result="PASS" /><testcase id="RTCPeerConnection-datachannel-3" purpose="Check that RTCPeerConnection.createDataChannel('label2', {}) creates an ordered datachannel" result="PASS" /><testcase id="RTCPeerConnection-datachannel-4" purpose="Check that RTCPeerConnection.createDataChannel('label3', {ordered:true}) creates an ordered datachannel" result="PASS" /><testcase id="RTCPeerConnection-datachannel-5" purpose="Check that RTCPeerConnection.createDataChannel('label3', {ordered:false}) creates a non-ordered datachannel" result="PASS" /><testcase id="RTCPeerConnection-datachannel-6" purpose="Check that RTCPeerConnection.createDataChannel('label3', {maxRetransmits:0}) creates a non-ordered datachannel" result="PASS" /><testcase id="RTCPeerConnection-datachannel-7" purpose="Check that RTCPeerConnection.createDataChannel('label3', {maxRetransmitTime:0}) creates a non-ordered datachannel" result="PASS" /><testcase id="RTCPeerConnection-dtmf" purpose="Check if the method RTCDTMFSender of RTCPeerConnection" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnection-ice" purpose="Check if the method addIceCandidate of RTCPeerConnection" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnection-localDescription" purpose="Check if the method localDescription of RTCPeerConnection" result="PASS" /><testcase id="RTCPeerConnection-onnegotiationneeded" purpose="Check if the attribute onnegotiationneeded of RTCPeerConnection" result="PASS" /><testcase id="RTCPeerConnection-remoteDescription" purpose="Check if the method remoteDescription of RTCPeerConnection" result="PASS" /><testcase id="RTCPeerConnection-state" purpose="Check if the attribute signalingState of RTCPeerConnection" result="PASS" /><testcase id="RTCPeerConnection-stats_1" purpose="Check if the constructor of RTCPeerConnection" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnectionIceEvent_candidate" purpose="Check if the setting of RTCPeerConnectionIceEvent.candidate is normally" result="PASS" /><testcase id="RTCPeerConnectionIceEvent_candidate_basic" purpose="Check if the readonly attribute candidate of RTCPeerConnectionIceEvent exists and type of string" result="PASS" /><testcase id="RTCPeerConnection_addIceCandidate_basic" purpose="Check if RTCPeerConnection.addIceCandidate exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_addIceCandidate_method" purpose="Check if the method of addIceCandidate is valid" result="PASS" /><testcase id="RTCPeerConnection_addStream_basic" purpose="Check if RTCPeerConnection.addStream exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_close" purpose="Check if the RTCPeerConnection.close is valid" result="PASS" /><testcase id="RTCPeerConnection_close_basic" purpose="Check if RTCPeerConnection.close exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_close_method" purpose="Check if the method of close is valid" result="PASS" /><testcase id="RTCPeerConnection_createAnswer_basic" purpose="Check if RTCPeerConnection.createAnswer exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_createDataChannel_basic" purpose="Check if RTCPeerConnection.createDataChannel exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_createDataChannel_method" purpose="Check if the method of RTCPeerConnection.createDataChannel is valid" result="PASS" /><testcase id="RTCPeerConnection_createDTMFSender" purpose="Check if the setting of RTCPeerConnection.createDTMFSender is normally" result="PASS" /><testcase id="RTCPeerConnection_createDTMFSender_basic" purpose="Check if RTCPeerConnection.createDTMFSender exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_createOffer_basic" purpose="Check if RTCPeerConnection.createOffer exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_datachannel_event" purpose="Check if the event of datachannel is valid" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnection_EventHandler_1" purpose="Check if the RTCPeerConnection.onnegotiationneeded is valid" result="PASS" /><testcase id="RTCPeerConnection_EventHandler_2" purpose="Check if the RTCPeerConnection.onicecandidate is valid" result="PASS" /><testcase id="RTCPeerConnection_EventHandler_3" purpose="Check if the RTCPeerConnection.onsignalingstatechange is valid" result="PASS" /><testcase id="RTCPeerConnection_EventHandler_4" purpose="Check if the RTCPeerConnection.onaddstream is valid" result="PASS" /><testcase id="RTCPeerConnection_EventHandler_5" purpose="Check if the RTCPeerConnection.onremovestream is valid" result="PASS" /><testcase id="RTCPeerConnection_EventHandler_6" purpose="Check if the RTCPeerConnection.oniceconnectionstatechange is valid" result="PASS" /><testcase id="RTCPeerConnection_getIdentityAssertion" purpose="Check if the RTCPeerConnection.getIdentityAssertion is valid" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnection_getIdentityAssertion_basic" purpose="Check if RTCPeerConnection.getIdentityAssertion exists and type of function" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnection_getLocalStreams" purpose="Check if the RTCPeerConnection.getLocalStreams() return a sequence of MediaStream objects" result="PASS" /><testcase id="RTCPeerConnection_getLocalStreams_basic" purpose="Check if RTCPeerConnection.getLocalStreams exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_getLocalStreams_method" purpose="Check if the method of setLocalDescription is valid" result="PASS" /><testcase id="RTCPeerConnection_getRemoteStreams" purpose="Check if the RTCPeerConnection.getRemoteStreams() return a sequence of MediaStream objects" result="PASS" /><testcase id="RTCPeerConnection_getRemoteStreams_basic" purpose="Check if RTCPeerConnection.getRemoteStreams exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_getStats_basic" purpose="Check if RTCPeerConnection.getStats exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_getStreamById_basic" purpose="Check if RTCPeerConnection.getStreamById exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_iceconnectionstatechange_event" purpose="Check if the event of iceconnectionstatechange is valid" result="PASS" /><testcase id="RTCPeerConnection_iceConnectionState_basic" purpose="Check if readonly RTCPeerConnection.iceConnectionState exists and type of string" result="PASS" /><testcase id="RTCPeerConnection_iceConnectionState_init_value" purpose="Check if the init value of RTCPeerConnection.iceConnectionState is new" result="PASS" /><testcase id="RTCPeerConnection_iceGatheringState_basic" purpose="Check if readonly RTCPeerConnection.iceGatheringState exists and type of string" result="PASS" /><testcase id="RTCPeerConnection_iceGatheringState_init_value" purpose="Check if the init value of RTCPeerConnection.iceGatheringState is new" result="PASS" /><testcase id="RTCPeerConnection_localDescription_basic" purpose="Check if readonly RTCPeerConnection.localDescription exists and type of object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3241 XWALK-3241]]</testcase><testcase id="RTCPeerConnection_localDescription_init_value" purpose="Check if the init value of RTCPeerConnection.localDescription is null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3232 XWALK-3232]]</testcase><testcase id="RTCPeerConnection_onaddstream_basic" purpose="Check if RTCPeerConnection.onaddstream exists" result="PASS" /><testcase id="RTCPeerConnection_ondatachannel_basic" purpose="Check if RTCPeerConnection.ondatachannel exists" result="PASS" /><testcase id="RTCPeerConnection_onicecandidate_basic" purpose="Check if RTCPeerConnection.onicecandidate exists" result="PASS" /><testcase id="RTCPeerConnection_oniceconnectionstatechange_basic" purpose="Check if RTCPeerConnection.oniceconnectionstatechange exists" result="PASS" /><testcase id="RTCPeerConnection_onidentityresult_basic" purpose="Check if RTCPeerConnection.onidentityresult exists" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnection_onnegotiationneeded_basic" purpose="Check if RTCPeerConnection.onnegotiationneeded exists" result="PASS" /><testcase id="RTCPeerConnection_onremovestream_basic" purpose="Check if RTCPeerConnection.onremovestream exists" result="PASS" /><testcase id="RTCPeerConnection_onsignalingstatechange_basic" purpose="Check if RTCPeerConnection.onsignalingstatechange exists" result="PASS" /><testcase id="RTCPeerConnection_peerIdentity_basic" purpose="Check if the readonly attribute peerIdentity of RTCPeerConnection exists and type of RTCIdentityAssertion" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnection_remoteDescription_basic" purpose="Check if readonly RTCPeerConnection.remoteDescription exists and type of object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3241 XWALK-3241]]</testcase><testcase id="RTCPeerConnection_remoteDescription_init_value" purpose="Check if the init value of RTCPeerConnection.remoteDescription is null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3232 XWALK-3232]]</testcase><testcase id="RTCPeerConnection_removeStream_basic" purpose="Check if RTCPeerConnection.removeStream exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_setIdentityProvider" purpose="Check if the RTCPeerConnection.setIdentityProvider is valid" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnection_setIdentityProvider_basic" purpose="Check if RTCPeerConnection.setIdentityProvider exists and type of function" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="RTCPeerConnection_setLocalDescription_basic" purpose="Check if RTCPeerConnection.setLocalDescription exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_setRemoteDescription_basic" purpose="Check if RTCPeerConnection.setRemoteDescription exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_signalingstatechange_event" purpose="Check if the event of signalingstatechange is valid" result="PASS" /><testcase id="RTCPeerConnection_signalingState_basic" purpose="Check if readonly RTCPeerConnection.signalingState exists and type of string" result="PASS" /><testcase id="RTCPeerConnection_signalingState_closed_value" purpose="Check if when the close() method is invoked, the signalingState value is closed" result="PASS" /><testcase id="RTCPeerConnection_signalingState_init_value" purpose="Check if the init value of RTCPeerConnection.signalingState is stable" result="PASS" /><testcase id="RTCPeerConnection_updateIce_basic" purpose="Check if RTCPeerConnection.updateIce exists and type of function" result="PASS" /><testcase id="RTCPeerConnection_updateIce_method" purpose="Check if the method of updateIce is valid" result="PASS" /><testcase id="RTCSdpError_sdpLineNumber_basic" purpose="Check if the readonly attribute sdpLineNumber of RTCSdpError exists and type of number" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="RTCSessionDescription_sdp" purpose="Check if the the setting of RTCSessionDescription.sdp is normally" result="PASS" /><testcase id="RTCSessionDescription_sdp_basic" purpose="Check if RTCSessionDescription.sdp exists and type of string" result="PASS" /><testcase id="RTCSessionDescription_type" purpose="Check if the the setting of RTCSessionDescription.type is normally" result="PASS" /><testcase id="RTCSessionDescription_type_basic" purpose="Check if RTCSessionDescription.type exists and type of string" result="PASS" /><testcase id="RTCStatsReport_RTCStats_basic" purpose="Check if RTCStatsReport.RTCStats exists and type of function" result="BLOCK">Test result is the same as Upstream result</testcase></category><category name="W3C_HTML5 APIs/Communication/XMLHttpRequest Level 2"><testcase id="abort-during-done" purpose="Check the function of abort method during done" result="PASS" /><testcase id="abort-during-open" purpose="Check if abort method aborts network activity during OPEN" result="PASS" /><testcase id="abort-during-unsent" purpose="Check if UNSENT state can be switched when attempt to abort network activity during UNSENT" result="PASS" /><testcase id="abort-event-abort" purpose="Check if when method abort is called and state is OPENED with the send flag being unset must not fire abort event" result="PASS" /><testcase id="abort-event-listeners" purpose="Check if abort method will reset event listeners" result="PASS" /><testcase id="abort-event-loadend" purpose="XMLHttpRequest: The abort() method: Fire a progress event named loadend" result="PASS" /><testcase id="abort-upload-event-abort" purpose="XMLHttpRequest: The abort() method: Fire a progress event named abort on the XMLHttpRequestUpload object" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="abort-upload-event-loadend" purpose="XMLHttpRequest: The abort() method: Fire a progress event named loadend on the XMLHttpRequestUpload object" result="PASS" /><testcase id="event-abort" purpose="XMLHttpRequest: abort event" result="PASS" /><testcase id="event-load" purpose="XMLHttpRequest: The send() method: Fire an event named load (synchronous flag is unset)" result="PASS" /><testcase id="event-loadend" purpose="XMLHttpRequest: loadend event" result="PASS" /><testcase id="event-loadstart" purpose="XMLHttpRequest: loadstart event" result="PASS" /><testcase id="event-progress" purpose="XMLHttpRequest: The send() method: Fire a progress event named progress (synchronous flag is unset)" result="PASS" /><testcase id="event-readystatechange-loaded" purpose="XMLHttpRequest: the LOADING state change should only happen once" result="PASS" /><testcase id="event-timeout" purpose="XMLHttpRequest: timeout event" result="PASS" /><testcase id="event-upload-progress" purpose="XMLHttpRequest: upload progress event" result="PASS" /><testcase id="getresponseheader-case-insensitive" purpose="Check if case-insensitive matching" result="PASS" /><testcase id="getresponseheader-server-date" purpose="Check if can get server and date header by getResponseHeader method" result="PASS" /><testcase id="getresponseheader-unsent-opened-state" purpose="Check if the state is UNSENT or OPENED the method of getResponseHeade return null" result="PASS" /><testcase id="open-after-abort" purpose="XMLHttpRequest: open() after abort()" result="PASS" /><testcase id="open-after-setrequestheader" purpose="XMLHttpRequest: open() after setRequestHeader()" result="PASS" /><testcase id="open-method-bogus1" purpose="XMLHttpRequest: open() - bogus methods ()" result="PASS" /><testcase id="open-method-bogus2" purpose="XMLHttpRequest: open() - bogus methods (&gt;)" result="PASS" /><testcase id="open-method-bogus3" purpose="XMLHttpRequest: open() - bogus methods ( GET)" result="PASS" /><testcase id="open-method-bogus4" purpose="XMLHttpRequest: open() - bogus methods (G T)" result="PASS" /><testcase id="open-method-insecure1" purpose="XMLHttpRequest: open() - &quot;insecure&quot; methods (track)" result="PASS" /><testcase id="open-method-insecure2" purpose="XMLHttpRequest: open() - &quot;insecure&quot; methods (TRACK)" result="PASS" /><testcase id="open-method-insecure3" purpose="XMLHttpRequest: open() - &quot;insecure&quot; methods (trAck)" result="PASS" /><testcase id="open-method-insecure4" purpose="XMLHttpRequest: open() - &quot;insecure&quot; methods (TRACE)" result="PASS" /><testcase id="open-method-insecure5" purpose="XMLHttpRequest: open() - &quot;insecure&quot; methods (trace)" result="PASS" /><testcase id="open-method-insecure6" purpose="XMLHttpRequest: open() - &quot;insecure&quot; methods (traCE)" result="PASS" /><testcase id="open-method-insecure7" purpose="XMLHttpRequest: open() - &quot;insecure&quot; methods (connect)" result="PASS" /><testcase id="open-method-insecure8" purpose="XMLHttpRequest: open() - &quot;insecure&quot; methods (CONNECT)" result="PASS" /><testcase id="open-method-insecure9" purpose="XMLHttpRequest: open() - &quot;insecure&quot; methods (connECT)" result="PASS" /><testcase id="open-method-responsetype-set-sync1" purpose="XMLHttpRequest: open() sync request not allowed if responseType is set (arraybuffer)" result="PASS" /><testcase id="open-method-responsetype-set-sync2" purpose="XMLHttpRequest: open() sync request not allowed if responseType is set (blob)" result="PASS" /><testcase id="open-method-responsetype-set-sync4" purpose="XMLHttpRequest: open() sync request not allowed if responseType is set (text)" result="PASS" /><testcase id="open-method-responsetype-set-sync5" purpose="XMLHttpRequest: open() sync request not allowed if responseType is set (document)" result="PASS" /><testcase id="open-open-send" purpose="XMLHttpRequest: open() - open() - send()" result="PASS" /><testcase id="open-open-sync-send" purpose="XMLHttpRequest: open() - open() (sync) - send()" result="PASS" /><testcase id="open-send-open" purpose="XMLHttpRequest: open() - send() - open()" result="PASS" /><testcase id="open-url-about-blank-window" purpose="Check if open method resolves URLs (about: blank iframe)" result="PASS" /><testcase id="open-url-base" purpose="XMLHttpRequest: open() resolving URLs - base" result="PASS" /><testcase id="open-url-base-inserted-after-open" purpose="XMLHttpRequest: open() resolving URLs - insert base after open()" result="PASS" /><testcase id="open-url-javascript-window" purpose="Check if open() method resolving URLs after open" result="PASS" /><testcase id="open-url-javascript-window-2" purpose="XMLHttpRequest: open() - resolving URLs (javascript: iframe; 2)" result="PASS" /><testcase id="open-url-multi-window" purpose="Check if open() method resolving URLs in multi window" result="PASS" /><testcase id="open-url-worker-simple" purpose="XMLHttpRequest: relative URLs in worker scripts resolved by script URL" result="PASS" /><testcase id="open-user-password-non-same-origin" purpose="XMLHttpRequest: open() - user/pass argument and non same-origin URL doesn't throw" result="PASS" /><testcase id="overridemimetype-done-state" purpose="Check if the state is done the method of overrideMimeType throw an InvalidStateError exception" result="PASS" /><testcase id="overridemimetype-invalid-mime-type" purpose="Check if invalid MIME types the method of overrideMimeType throw a TypeError exception" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="overridemimetype-open-state-force-utf-8" purpose="XMLHttpRequest: overrideMimeType() in open state, enforcing UTF-8 encoding" result="PASS" /><testcase id="overridemimetype-open-state-force-xml" purpose="XMLHttpRequest: overrideMimeType() in open state, XML MIME type with UTF-8 charset" result="PASS" /><testcase id="overridemimetype-unsent-state-force-shiftjis" purpose="XMLHttpRequest: overrideMimeType() in unsent state, enforcing Shift-JIS encoding" result="PASS" /><testcase id="response-data-arraybuffer" purpose="Check if responseType is arraybuffer return the arraybuffer response entity body" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="response-data-blob" purpose="Check if responseType is blob return the blob response entity body" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="responsetext-decoding1" purpose="XMLHttpRequest: responseText decoding (application/xml %3C%3Fxml%20version%3D'1.0'%20encoding%3D'windows-1252'%3F%3E%3Cx%3E%FF%3C%2Fx%3E)" result="PASS" /><testcase id="responsetext-decoding10" purpose="XMLHttpRequest: responseText decoding (text/xml %FE%FF)" result="PASS" /><testcase id="responsetext-decoding11" purpose="XMLHttpRequest: responseText decoding (text/xml %FE%FF%FE%FF)" result="PASS" /><testcase id="responsetext-decoding12" purpose="XMLHttpRequest: responseText decoding (text/xml %EF%BB%BF)" result="PASS" /><testcase id="responsetext-decoding13" purpose="XMLHttpRequest: responseText decoding (text/xml %EF%BB%BF%EF%BB%BF)" result="PASS" /><testcase id="responsetext-decoding2" purpose="XMLHttpRequest: responseText decoding (text/html %3C!doctype%20html%3E%3Cmeta%20charset%3Dwindows-1252%3E%FF)" result="PASS" /><testcase id="responsetext-decoding3" purpose="XMLHttpRequest: responseText decoding (text/plain;charset=windows-1252 %FF)" result="PASS" /><testcase id="responsetext-decoding4" purpose="XMLHttpRequest: responseText decoding (text/plain %FF)" result="PASS" /><testcase id="responsetext-decoding5" purpose="XMLHttpRequest: responseText decoding (text/plain %FE%FF)" result="PASS" /><testcase id="responsetext-decoding6" purpose="XMLHttpRequest: responseText decoding (text/plain %FE%FF%FE%FF)" result="PASS" /><testcase id="responsetext-decoding7" purpose="XMLHttpRequest: responseText decoding (text/plain %EF%BB%BF)" result="PASS" /><testcase id="responsetext-decoding8" purpose="XMLHttpRequest: responseText decoding (text/plain %EF%BB%BF%EF%BB%BF)" result="PASS" /><testcase id="responsetext-decoding9" purpose="XMLHttpRequest: responseText decoding (text/plain %C2)" result="PASS" /><testcase id="responsetype-arraybuffer" purpose="Check if XHR2 reponseType property is supported and accepts arraybuffer values" result="PASS" /><testcase id="responsetype-blob" purpose="Check if XHR2 reponseType property is supported and accepts blob values" result="PASS" /><testcase id="responsetype-document" purpose="Check if XHR2 reponseType property is supported and accepts document values" result="PASS" /><testcase id="responsetype-empty-string" purpose="Check if XHR2 reponseType property is supported and accepts empty string values" result="PASS" /><testcase id="responsetype-json" purpose="Check if XHR2 reponseType property is supported and accepts json values" result="PASS" /><testcase id="responsetype-text" purpose="Check if XHR2 reponseType property is supported and accepts text values" result="PASS" /><testcase id="responsexml-basic2" purpose="responseXML on empty response documents" result="PASS" /><testcase id="responsexml-document-properties12" purpose="Check responsexml of doctype" result="PASS" /><testcase id="responsexml-document-properties14" purpose="Check responsexml of all" result="PASS" /><testcase id="responsexml-document-properties16" purpose="Check responsexml of cookie" result="PASS" /><testcase id="responsexml-document-properties18" purpose="Check responsexml of cookie (after setting it)" result="PASS" /><testcase id="responsexml-document-properties19" purpose="Check responsexml of styleSheets" result="PASS" /><testcase id="responsexml-document-properties2" purpose="Check responsexml of URL" result="PASS" /><testcase id="responsexml-document-properties20" purpose="Check responsexml of implementation" result="PASS" /><testcase id="responsexml-document-properties3" purpose="Check responsexml of documentURI" result="PASS" /><testcase id="responsexml-document-properties4" purpose="Check responsexml of referrer" result="PASS" /><testcase id="responsexml-document-properties5" purpose="Check responsexml of title" result="PASS" /><testcase id="responsexml-document-properties8" purpose="Check responsexml of location" result="PASS" /><testcase id="responsexml-document-properties9" purpose="Check responsexml of defaultView" result="PASS" /><testcase id="responsexml-media-type1" purpose="XMLHttpRequest: responseXML MIME type tests ('', should parse)" result="PASS" /><testcase id="responsexml-media-type12" purpose="XMLHttpRequest: responseXML MIME type tests ('text/plain', should not parse)" result="PASS" /><testcase id="responsexml-media-type13" purpose="XMLHttpRequest: responseXML MIME type tests ('application/rdf', should not parse)" result="PASS" /><testcase id="responsexml-media-type14" purpose="XMLHttpRequest: responseXML MIME type tests ('application/xhtml+xml', should parse)" result="PASS" /><testcase id="responsexml-media-type15" purpose="XMLHttpRequest: responseXML MIME type tests ('image/svg+xml', should parse)" result="PASS" /><testcase id="responsexml-media-type2" purpose="XMLHttpRequest: responseXML MIME type tests ('text/html', should not parse)" result="PASS" /><testcase id="responsexml-media-type5" purpose="XMLHttpRequest: responseXML MIME type tests ('text/plain;+xml', should not parse)" result="PASS" /><testcase id="responsexml-media-type6" purpose="XMLHttpRequest: responseXML MIME type tests ('text/plainxml', should not parse)" result="PASS" /><testcase id="responsexml-media-type7" purpose="XMLHttpRequest: responseXML MIME type tests ('video/x-awesome+xml', should parse)" result="PASS" /><testcase id="responsexml-media-type8" purpose="XMLHttpRequest: responseXML MIME type tests ('video/x-awesome', should not parse)" result="PASS" /><testcase id="responsexml-media-type9" purpose="XMLHttpRequest: responseXML MIME type tests ('text/xml', should parse)" result="PASS" /><testcase id="responsexml-non-well-formed1" purpose="XMLHttpRequest: responseXML non well-formed tests" result="PASS" /><testcase id="responsexml-non-well-formed2" purpose="XMLHttpRequest: responseXML non well-formed tests 1" result="PASS" /><testcase id="responsexml-non-well-formed3" purpose="XMLHttpRequest: responseXML non well-formed tests 2" result="PASS" /><testcase id="responsexml-non-well-formed4" purpose="XMLHttpRequest: responseXML non well-formed tests 3" result="PASS" /><testcase id="responsexml-non-well-formed5" purpose="XMLHttpRequest: responseXML non well-formed tests 4" result="PASS" /><testcase id="responsexml-non-well-formed6" purpose="XMLHttpRequest: responseXML non well-formed tests 5" result="PASS" /><testcase id="responsexml-non-well-formed7" purpose="XMLHttpRequest: responseXML non well-formed tests 6" result="PASS" /><testcase id="send-after-setting-document-domain1" purpose="loading documents from original origin after setting document.domain" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="send-data-arraybuffer" purpose="Check if the date of send method is ArrayBuffer let the request entity body be the raw data represented by ArrayBuffer" result="PASS" /><testcase id="send-data-blob" purpose="Check if the date of send method is Blob let the request entity body be the raw data represented by Blob" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="send-data-formdata" purpose="Check if the date of send method is Formdate let the request entity body be the raw data represented by Formdate" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="send-entity-body-document-bogus" purpose="Check if the document cannot be serialized an InvalidStateError exception is thrown" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="send-entity-body-get" purpose="Check if the request method is GET the method of send set data to null" result="PASS" /><testcase id="send-entity-body-head" purpose="Check if the request method is HEAD the method of send set data to null" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="send-network-error-async-events" purpose="Check if fire a progress event named error when send method Network error happens and synchronous flag is unset" result="PASS" /><testcase id="send-network-error-sync-events" purpose="Check if throw a NetworkError exception when the method of send Network error happens and synchronous flag is set" result="PASS" /><testcase id="send-no-response-event-loadend" purpose="Check if the send method will fire a progress event named loadend if no response entity body" result="PASS" /><testcase id="send-no-response-event-loadstart" purpose="XMLHttpRequest: The send() method: Fire a progress event named loadstart (no response entity body and the state is LOADING)" result="PASS" /><testcase id="send-redirect-bogus1" purpose="XMLHttpRequest: send() - Redirects (bogus Location header) (302: http://example.not)" result="PASS" /><testcase id="send-redirect-bogus2" purpose="XMLHttpRequest: send() - Redirects (bogus Location header) (302: mailto:someone@example.org)" result="PASS" /><testcase id="send-redirect-bogus3" purpose="XMLHttpRequest: send() - Redirects (bogus Location header) (303: http://example.not)" result="PASS" /><testcase id="send-redirect-bogus4" purpose="XMLHttpRequest: send() - Redirects (bogus Location header) (303: foobar:someone@example.org)" result="PASS" /><testcase id="send-redirect-no-location1" purpose="XMLHttpRequest: send() - Redirects (no Location header) (301)" result="PASS" /><testcase id="send-redirect-no-location2" purpose="XMLHttpRequest: send() - Redirects (no Location header) (302)" result="PASS" /><testcase id="send-redirect-no-location3" purpose="XMLHttpRequest: send() - Redirects (no Location header) (303)" result="PASS" /><testcase id="send-redirect-no-location4" purpose="XMLHttpRequest: send() - Redirects (no Location header) (307)" result="PASS" /><testcase id="send-redirect-to-non-cors1" purpose="XMLHttpRequest: send() - Redirect to cross-origin resource, not CORS-enabled (301)" result="PASS" /><testcase id="send-redirect-to-non-cors2" purpose="XMLHttpRequest: send() - Redirect to cross-origin resource, not CORS-enabled (302)" result="PASS" /><testcase id="send-redirect-to-non-cors3" purpose="XMLHttpRequest: send() - Redirect to cross-origin resource, not CORS-enabled (303)" result="PASS" /><testcase id="send-redirect-to-non-cors4" purpose="XMLHttpRequest: send() - Redirect to cross-origin resource, not CORS-enabled (307)" result="PASS" /><testcase id="send-response-upload-event-loadend" purpose="XMLHttpRequest: The send() method: Fire a progress event named loadend on the XMLHttpRequestUpload (synchronous flag is unset)" result="PASS" /><testcase id="send-response-upload-event-loadstart" purpose="XMLHttpRequest: The send() method: Fire a progress event named loadstart on the XMLHttpRequestUpload (synchronous flag is unset)" result="PASS" /><testcase id="send-response-upload-event-progress" purpose="XMLHttpRequest: The send() method: Fire a progress event named progress on the XMLHttpRequestUpload (synchronous flag is unset)" result="PASS" /><testcase id="send-send" purpose="Check if decoding responseText can be received when attempt to send() - send()" result="PASS" /><testcase id="send-sync-no-response-event-load" purpose="Check if the send method fire an event named load if no response entity body and the synchronous flag is set" result="PASS" /><testcase id="send-sync-timeout" purpose="XMLHttpRequest: timeout during sync send() should not run" result="PASS" /><testcase id="setrequestheader-after-send" purpose="Check if InvalidStateError can be thrown setRequestHeader() after send()" result="PASS" /><testcase id="setrequestheader-allow-empty-value" purpose="Check if the empty string is legal and represents the empty header value" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="setrequestheader-before-open" purpose="setRequestHeader invoked before open()" result="PASS" /><testcase id="setrequestheader-bogus-name1" purpose="XMLHttpRequest: setRequestHeader() name argument checks" result="PASS" /><testcase id="setrequestheader-bogus-name10" purpose="XMLHttpRequest: setRequestHeader() name argument checks 9" result="PASS" /><testcase id="setrequestheader-bogus-name11" purpose="XMLHttpRequest: setRequestHeader() name argument checks 10" result="PASS" /><testcase id="setrequestheader-bogus-name12" purpose="XMLHttpRequest: setRequestHeader() name argument checks 11" result="PASS" /><testcase id="setrequestheader-bogus-name13" purpose="XMLHttpRequest: setRequestHeader() name argument checks 12" result="PASS" /><testcase id="setrequestheader-bogus-name14" purpose="XMLHttpRequest: setRequestHeader() name argument checks 13" result="PASS" /><testcase id="setrequestheader-bogus-name15" purpose="XMLHttpRequest: setRequestHeader() name argument checks 14" result="PASS" /><testcase id="setrequestheader-bogus-name16" purpose="XMLHttpRequest: setRequestHeader() name argument checks 15" result="PASS" /><testcase id="setrequestheader-bogus-name17" purpose="XMLHttpRequest: setRequestHeader() name argument checks 16" result="PASS" /><testcase id="setrequestheader-bogus-name18" purpose="XMLHttpRequest: setRequestHeader() name argument checks 17" result="PASS" /><testcase id="setrequestheader-bogus-name19" purpose="XMLHttpRequest: setRequestHeader() name argument checks 18" result="PASS" /><testcase id="setrequestheader-bogus-name2" purpose="XMLHttpRequest: setRequestHeader() name argument checks 1" result="PASS" /><testcase id="setrequestheader-bogus-name3" purpose="XMLHttpRequest: setRequestHeader() name argument checks 2" result="PASS" /><testcase id="setrequestheader-bogus-name4" purpose="XMLHttpRequest: setRequestHeader() name argument checks 3" result="PASS" /><testcase id="setrequestheader-bogus-name5" purpose="XMLHttpRequest: setRequestHeader() name argument checks 4" result="PASS" /><testcase id="setrequestheader-bogus-name6" purpose="XMLHttpRequest: setRequestHeader() name argument checks 5" result="PASS" /><testcase id="setrequestheader-bogus-name7" purpose="XMLHttpRequest: setRequestHeader() name argument checks 6" result="PASS" /><testcase id="setrequestheader-bogus-name8" purpose="XMLHttpRequest: setRequestHeader() name argument checks 7" result="PASS" /><testcase id="setrequestheader-bogus-name9" purpose="XMLHttpRequest: setRequestHeader() name argument checks 8" result="PASS" /><testcase id="setrequestheader-bogus-value-1" purpose="Check if the value does not match the field-value production a SyntaxError exception will be throwed 1" result="PASS" /><testcase id="setrequestheader-bogus-value-2" purpose="Check if the value does not match the field-value production a SyntaxError exception will be throwed 2" result="PASS" /><testcase id="setrequestheader-case-insensitive" purpose="Check if headers differ in case" result="PASS" /><testcase id="setrequestheader-header-allowed1" purpose="XMLHttpRequest: setRequestHeader() - headers that are allowed (Authorization)" result="PASS" /><testcase id="setrequestheader-header-allowed2" purpose="XMLHttpRequest: setRequestHeader() - headers that are allowed (Pragma)" result="PASS" /><testcase id="setrequestheader-header-allowed4" purpose="XMLHttpRequest: setRequestHeader() - headers that are allowed (Content-Transfer-Encoding)" result="PASS" /><testcase id="setrequestheader-header-allowed5" purpose="XMLHttpRequest: setRequestHeader() - headers that are allowed (Content-Type)" result="PASS" /><testcase id="setrequestheader-header-allowed6" purpose="XMLHttpRequest: setRequestHeader() - headers that are allowed (Overwrite)" result="PASS" /><testcase id="setrequestheader-header-allowed7" purpose="XMLHttpRequest: setRequestHeader() - headers that are allowed (If)" result="PASS" /><testcase id="setrequestheader-header-allowed8" purpose="XMLHttpRequest: setRequestHeader() - headers that are allowed (Status-URI)" result="PASS" /><testcase id="setrequestheader-header-forbidden" purpose="Check if headers forbidded set by setRequestHeader()" result="PASS" /><testcase id="timeout-sync" purpose="Check if the JavaScript global environment is a document environment and the synchronous flag is set,throw an InvalidAccessError exception" result="PASS" /><testcase id="withcredentials-set1" purpose="default value is false, set value is true" result="PASS" /><testcase id="withcredentials-set2" purpose="can also be set in OPEN state" result="PASS" /><testcase id="withcredentials-wrong-state" purpose="XMLHttpRequest: setting withCredentials when not in UNSENT, OPENED state" result="PASS" /><testcase id="xhr2_FormData_append_basic" purpose="Check if formdata.append method can be called normally" result="PASS" /><testcase id="xhr2_FormData_append_exist" purpose="Check if formdata.append method exists" result="PASS" /><testcase id="xhr2_FormData_constructors_base" purpose="Check if FormData's constructor returns a new FormData object" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onabort_default_null" purpose="Check if the default value of onabort attribute is null" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onabort_event" purpose="Check if the onabort event occurs when the request abort" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onabort_exist" purpose="Check if XMLHttpRequestEventTarget.onabort exists" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onerror_default_null" purpose="Check if the default value of onerror attribute is null" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onerror_event" purpose="Check if the onerror event occurs when the request fail" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onerror_exist" purpose="Check if XMLHttpRequestEventTarget.onerror exists" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onloadend_default_null" purpose="Check if the default value of onloadend attribute is null" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onloadend_event" purpose="Check if the onloadend event occurs when the request complete" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onloadend_exist" purpose="Check if the XMLHttpRequestEventTarget.onloadend exists" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onloadstart_default_null" purpose="Check if the default value of onloadstart attribute is null" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onloadstart_event" purpose="Check if the onloadstart event occurs event when the request start" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onloadstart_exist" purpose="Check if the XMLHttpRequestEventTarget.onloadstart exists" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onload_default_null" purpose="Check if the default value of onload attribute is null" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onload_event" purpose="Check if the onload event occurs when the request complete" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onload_exist" purpose="Check if XMLHttpRequestEventTarget.onload exists" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onprogress_default_null" purpose="Check if the default value of onprogress attribute is null" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onprogress_event" purpose="Check if the onprogress event occurs when sending and loading data" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_onprogress_exist" purpose="Check if the XMLHttpRequestEventTarget.onprogress exists" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_ontimeout_default_null" purpose="Check if the default value of ontimeout attribute is null" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_ontimeout_event" purpose="Check if the ontimeout event occurs when the author specified timeout has passed before the request could complete" result="PASS" /><testcase id="xhr2_XMLHttpRequestEventTarget_ontimeout_exist" purpose="Check if XMLHttpRequestEventTarget.ontimeout exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_abort_exist" purpose="Check if xmlhttprequest.abort method exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_abort_type" purpose="Check if the type of xmlhttprequest.abort is function" result="PASS" /><testcase id="xhr2_XMLHttpRequest_constructors_base" purpose="Check if XMLHttpRequest(options) returns a new XMLHttpRequest object" result="PASS" /><testcase id="xhr2_XMLHttpRequest_DONE_exist" purpose="Check if XMLHttpRequest.DONE exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_DONE_type" purpose="Check if the type of XMLHttpRequest.DONE is 'number'" result="PASS" /><testcase id="xhr2_XMLHttpRequest_getAllResponseHeaders_error_flag_set" purpose="Check if the error flag is set, XMLHttpRequest.getAllResponseHeaders() will return the empty string and terminate these steps" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3074 XWALK-3074]]</testcase><testcase id="xhr2_XMLHttpRequest_getAllResponseHeaders_exist" purpose="Check if XMLHttpRequest Level2 has getAllResponseHeaders method" result="PASS" /><testcase id="xhr2_XMLHttpRequest_getAllResponseHeaders_return_type" purpose="Check if the return type of XMLHttpRequest.getAllResponseHeaders() is string" result="PASS" /><testcase id="xhr2_XMLHttpRequest_getResponseHeader_error_flag_set" purpose="Check if the error flag is set, XMLHttpRequest.getResponseHeader() will return null and terminate these steps" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3074 XWALK-3074]]</testcase><testcase id="xhr2_XMLHttpRequest_getResponseHeader_exist" purpose="Check if xmlhttprequest.getResponseHeader method exits" result="PASS" /><testcase id="xhr2_XMLHttpRequest_getResponseHeader_type" purpose="Check if the type of xmlhttprequest.getResponseHeader is a function" result="PASS" /><testcase id="xhr2_XMLHttpRequest_HEADERS_RECEIVED_exist" purpose="Check if XMLHttpRequest.HEADERS_RECEIVED exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_HEADERS_RECEIVED_type" purpose="Check if the type of XMLHttpRequest.HEADERS_RECEIVED is 'number'" result="PASS" /><testcase id="xhr2_XMLHttpRequest_LOADING_exist" purpose="Check if XMLHttpRequest.LOADING exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_LOADING_type" purpose="Check if the type of XMLHttpRequest.LOADING is 'number'" result="PASS" /><testcase id="xhr2_XMLHttpRequest_onreadystatechange_default_null" purpose="Check if the default value of onreadystatechange attribute is null" result="PASS" /><testcase id="xhr2_XMLHttpRequest_onreadystatechange_event" purpose="Check if the onreadystatechange event occurs when The readyState attribute changes at some seemingly arbitrary times for historical reasons" result="PASS" /><testcase id="xhr2_XMLHttpRequest_onreadystatechange_exist" purpose="Check if the XMLHttpRequest.onreadystatechange exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_OPENED_exist" purpose="Check if XMLHttpRequest.OPENED exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_OPENED_type" purpose="Check if the type of XMLHttpRequest.OPENED is 'number'" result="PASS" /><testcase id="xhr2_XMLHttpRequest_open_exist" purpose="Check if the XMLHttpRequest.open exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_open_type" purpose="Check if the type of xmlhttprequest.open is a function" result="PASS" /><testcase id="xhr2_XMLHttpRequest_overrideMimeType_basic" purpose="Check if use xmlhttprequest.overrideMimeType to set the Content-Type header for the response to mime" result="PASS" /><testcase id="xhr2_XMLHttpRequest_overrideMimeType_exist" purpose="Check if xmlhttprequest.overrideMimeType method exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_overrideMimeType_type" purpose="Check if the type of xmlhttprequest.overrideMimeType is function" result="PASS" /><testcase id="xhr2_XMLHttpRequest_readyState_exist" purpose="Check if the XMLHttpRequest.readyState exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_readyState_readonly" purpose="Check if XMLHttpRequest.readyState attribute is readonly" result="PASS" /><testcase id="xhr2_XMLHttpRequest_readyState_type" purpose="Check if the type of XMLHttpRequest.readyState is 'number'" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseText_basic" purpose="Check if XMLHttpRequest.responseText can return the document response entity body normally" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseText_error_flag_set" purpose="Check if the XmlHttpRequest error flag is set and calls XMLHttpRequest.responseText that expecting an empty string to be returned" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3074 XWALK-3074]]</testcase><testcase id="xhr2_XMLHttpRequest_responseText_exception_InvalidStateError" purpose="Check if responseType is not the empty string and text and calls XMLHttpRequest.responseText that expecting an exception InvalidStateError to be thrown" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseText_exist" purpose="Check if XMLHttpRequest Level2 has responseText attribute" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseText_readonly" purpose="Check if XMLHttpRequest.responseText is readonly" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseText_type" purpose="Check if the type of XMLHttpRequest.responseText is 'string'" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseType_basic" purpose="Check if the value of XMLHttpRequest.responseType is normal" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseType_default" purpose="Check if the default value of responseType is the empty string" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseType_exist" purpose="Check if the XMLHttpRequest.responseType exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseType_readyState_DONE" purpose="Check if the state is DONE and calls XMLHttpRequest.responseType that expecting an exception InvalidStateError to be thrown" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseType_readyState_LOADING" purpose="Check if the state is LOADING and calls XMLHttpRequest.responseType that expecting an exception InvalidStateError to be thrown" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseType_type" purpose="Check if the type of responseType is string" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseXML_error_flag_set" purpose="Check if the XmlHttpRequest error flag is set and calls XMLHttpRequest.responseXML that expecting a null to be returned" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3074 XWALK-3074]]</testcase><testcase id="xhr2_XMLHttpRequest_responseXML_exception_InvalidStateError" purpose="Check if responseType is not the empty string or document and calls XMLHttpRequest.responseXML that expecting an exception InvalidStateError to be thrown" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseXML_exist" purpose="Check if XMLHttpRequest Level2 has responseXML attribute" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseXML_readonly" purpose="Check if the XMLHttpRequest.responseXML attribute is readonly" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseXML_readyState_not_DONE" purpose="Check if the XmlHttpRequest state is not DONE and calls XMLHttpRequest.responseXML that expecting a null to be returned" result="PASS" /><testcase id="xhr2_XMLHttpRequest_responseXML_type" purpose="Check if the type of XMLHttpRequest.responseXML is 'object Document'" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="xhr2_XMLHttpRequest_response_basic" purpose="Check if XMLHttpRequest.response can return the text response entity body normally" result="PASS" /><testcase id="xhr2_XMLHttpRequest_response_exist" purpose="Check if the XMLHttpRequest.response exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_response_readonly" purpose="Check if the XMLHttpRequest.response attribute is readonly" result="PASS" /><testcase id="xhr2_XMLHttpRequest_response_responseType_arraybuffer_readyState_DONE" purpose="Check if XMLHttpRequest.response returns the arraybuffer response entity body when responseType is arraybuffer and the state is DONE" result="PASS" /><testcase id="xhr2_XMLHttpRequest_response_responseType_blob_readyState_DONE" purpose="Check if XMLHttpRequest.response returns the blob response entity body when responseType is blob and the state is DONE" result="PASS" /><testcase id="xhr2_XMLHttpRequest_response_responseType_blob_readyState_not_DONE" purpose="Check if XMLHttpRequest.response is null, when responseType is not the empty string and text and the state is not DONE" result="PASS" /><testcase id="xhr2_XMLHttpRequest_response_responseType_document_readyState_DONE" purpose="Check if XMLHttpRequest.response returns the document response entity body when responseType is document and the state is DONE" result="PASS" /><testcase id="xhr2_XMLHttpRequest_response_responseType_empty_string_error_flag_set" purpose="Check if XMLHttpRequest.response is an empty string, when responseType is an empty string and the error flag is set" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3074 XWALK-3074]]</testcase><testcase id="xhr2_XMLHttpRequest_response_responseType_empty_string_readyState_UNSENT" purpose="Check if XMLHttpRequest.response is an empty string, when responseType is the empty string and the state is UNSENT" result="PASS" /><testcase id="xhr2_XMLHttpRequest_response_responseType_text_error_flag_set" purpose="Check if XMLHttpRequest.response is an empty string, when responseType is text and the error flag is set" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3074 XWALK-3074]]</testcase><testcase id="xhr2_XMLHttpRequest_response_responseType_text_readyState_UNSENT" purpose="Check if XMLHttpRequest.response is an empty string, when responseType is text and the state is UNSENT" result="PASS" /><testcase id="xhr2_XMLHttpRequest_send_ArrayBufferView" purpose="Check if XMLHttpRequest can send ArrayBufferView data normally" result="PASS" /><testcase id="xhr2_XMLHttpRequest_send_Blob" purpose="Check if XMLHttpRequest can send Blob data normally" result="PASS" /><testcase id="xhr2_XMLHttpRequest_send_exist" purpose="Check if xmlhttprequest.send method exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_send_FormData" purpose="Check if XMLHttpRequest can send FormData data normally" result="PASS" /><testcase id="xhr2_XMLHttpRequest_send_send_flag_set" purpose="Check if the send() flag is set and call XMLHttpRequest.send() that expecting an exception InvalidStateError to be thrown" result="PASS" /><testcase id="xhr2_XMLHttpRequest_send_type" purpose="Check if the type of xmlhttprequest.send is a function" result="PASS" /><testcase id="xhr2_XMLHttpRequest_setRequestHeader_exist" purpose="Check if xmlhttprequest.setRequestHeader method exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_setRequestHeader_type" purpose="Check if the type of xmlhttprequest.setRequestHeader is function" result="PASS" /><testcase id="xhr2_XMLHttpRequest_statusText_error_flag_set" purpose="Check if XMLHttpRequest.statusText is an empty string, when error flag is set" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3074 XWALK-3074]]</testcase><testcase id="xhr2_XMLHttpRequest_statusText_exist" purpose="Check if the XMLHttpRequest.statusText exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_statusText_readonly" purpose="Check if the xmlhttprequest.statusText attribute is readonly" result="PASS" /><testcase id="xhr2_XMLHttpRequest_statusText_readyState_UNSENT" purpose="Check if XMLHttpRequest.statusText is an empty string, when the readyState is UNSENT" result="PASS" /><testcase id="xhr2_XMLHttpRequest_statusText_type" purpose="Check if the type of XMLHttpRequest.statusText is 'string'" result="PASS" /><testcase id="xhr2_XMLHttpRequest_status_error_flag_set" purpose="Check if XMLHttpRequest.status is 0, when error flag is set" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3074 XWALK-3074]]</testcase><testcase id="xhr2_XMLHttpRequest_status_exist" purpose="Check if XMLHttpRequest Level2 has status attribute" result="PASS" /><testcase id="xhr2_XMLHttpRequest_status_readonly" purpose="Check if the xmlhttprequest.status attribute is readonly" result="PASS" /><testcase id="xhr2_XMLHttpRequest_status_readyState_UNSENT" purpose="Check if XMLHttpRequest.status is 0, when the readyState is UNSENT" result="PASS" /><testcase id="xhr2_XMLHttpRequest_status_type" purpose="Check if the type of XMLHttpRequest.status is 'number'" result="PASS" /><testcase id="xhr2_XMLHttpRequest_timeout_basic" purpose="Check if the value of XMLHttpRequest.timeout is normal" result="PASS" /><testcase id="xhr2_XMLHttpRequest_timeout_default_zero" purpose="Check if the default value of timeout attribute is 0" result="PASS" /><testcase id="xhr2_XMLHttpRequest_timeout_exception_InvalidAccessError" purpose="Check if an exception InvalidAccessError will be thrown when there is an associated XMLHttpRequest document and the synchronous flag is set" result="PASS" /><testcase id="xhr2_XMLHttpRequest_timeout_exist" purpose="Check if the XMLHttpRequest.timeout exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_timeout_type" purpose="Check if the type of XMLHttpRequest.timeout is 'number'" result="PASS" /><testcase id="xhr2_XMLHttpRequest_UNSENT_exist" purpose="Check if XMLHttpRequest.UNSENT exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_UNSENT_type" purpose="Check if the type of XMLHttpRequest.UNSENT is 'number'" result="PASS" /><testcase id="xhr2_XMLHttpRequest_upload_exist" purpose="Check if the XMLHttpRequest.upload exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_upload_readonly" purpose="Check if the xmlhttprequest.upload attribute is readonly" result="PASS" /><testcase id="xhr2_XMLHttpRequest_upload_type" purpose="Check if the type of xmlhttprequest.upload is a object XMLHttpRequestUpload" result="PASS" /><testcase id="xhr2_XMLHttpRequest_withCredentials_default_false" purpose="Check if the default value of withCredentials attribute is false" result="PASS" /><testcase id="xhr2_XMLHttpRequest_withCredentials_exist" purpose="Check if the XMLHttpRequest.withCredentials exists" result="PASS" /><testcase id="xhr2_XMLHttpRequest_withCredentials_InvalidStateError" purpose="Check if the readyState is not OPENED or UNSENT then set XMLHttpRequest.withCredentials false that expecting an execption InvalidStateError to be thrown" result="PASS" /><testcase id="xhr2_XMLHttpRequest_withCredentials_send_flag_set" purpose="Check if the send flag is set and calls XMLHttpRequest.withCredentials that expecting an exception InvalidStateError to be thrown" result="PASS" /><testcase id="xhr2_XMLHttpRequest_withCredentials_type" purpose="Check if the type of XMLHttpRequest.withCredentials is 'boolean'" result="PASS" /><testcase id="xmlhttprequest-basic" purpose="Check prototype and members of XMLHttpRequest" result="PASS" /><testcase id="xmlhttprequest-eventtarget" purpose="XMLHttpRequest: implements EventTarget" result="PASS" /><testcase id="xmlhttprequest-timeout-simple-1" purpose="Check if the timeout property behaves as expected in async cases in document 1" result="PASS" /><testcase id="xmlhttprequest-timeout-simple-2" purpose="Check if the timeout property behaves as expected in async cases in document 2" result="PASS" /><testcase id="xmlhttprequest-timeout-simple-3" purpose="Check if the timeout property behaves as expected in async cases in document 3" result="FAIL">Test result is the same as Upstream result</testcase></category><category name="W3C_HTML5 APIs/Device/DeviceOrientation Event Specification"><testcase id="DeviceAcceleration_x_entry" purpose="Check if the DeviceAccelerationt.x attribute exists" result="PASS" /><testcase id="DeviceAcceleration_x_readonly" purpose="Check if DeviceAcceleration.x is readonly" result="PASS" /><testcase id="DeviceAcceleration_x_type" purpose="Check if DeviceAcceleration.x is type of double" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2666 XWALK-2666]]device limitation, won't fix</testcase><testcase id="DeviceAcceleration_y_entry" purpose="Check if the DeviceAccelerationt.y attribute exists" result="PASS" /><testcase id="DeviceAcceleration_y_readonly" purpose="Check if DeviceAcceleration.y is readonly" result="PASS" /><testcase id="DeviceAcceleration_y_type" purpose="Check if DeviceAcceleration.y is type of double" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2666 XWALK-2666]]device limitation, won't fix</testcase><testcase id="DeviceAcceleration_z_entry" purpose="Check if the DeviceAccelerationt.z attribute exists" result="PASS" /><testcase id="DeviceAcceleration_z_readonly" purpose="Check if DeviceAcceleration.z is readonly" result="PASS" /><testcase id="DeviceAcceleration_z_type" purpose="Check if DeviceAcceleration.z is type of double" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2666 XWALK-2666]]device limitation, won't fix</testcase><testcase id="DeviceMotionEvent_accelerationincludinggravity_entry" purpose="Check if the DeviceMotionEvent.accelerationincludinggravity method exists" result="PASS" /><testcase id="DeviceMotionEvent_accelerationIncludingGravity_readonly" purpose="Check if DeviceMotionEvent.accelerationIncludingGravity is readonly" result="PASS" /><testcase id="DeviceMotionEvent_accelerationIncludingGravity_type" purpose="Check if DeviceMotionEvent.accelerationIncludingGravity is type of DeviceAcceleration" result="PASS" /><testcase id="DeviceMotionEvent_acceleration_entry" purpose="Check if the DeviceMotionEvent.acceleration method exists" result="PASS" /><testcase id="DeviceMotionEvent_acceleration_readonly" purpose="Check if DeviceMotionEvent.acceleration is readonly" result="PASS" /><testcase id="DeviceMotionEvent_acceleration_type" purpose="Check if DeviceMotionEvent.acceleration is type of DeviceAcceleration" result="PASS" /><testcase id="DeviceMotionEvent_interval_entry" purpose="Check if the DeviceMotionEvent.interval attribute exists" result="PASS" /><testcase id="DeviceMotionEvent_rotationrate_entry" purpose="Check if the DeviceMotionEvent.rotationRate attribute exists" result="PASS" /><testcase id="DeviceMotionEvent_rotationRate_readonly" purpose="Check if DeviceMotionEvent.rotationRate is readonly" result="PASS" /><testcase id="DeviceMotionEvent_rotationRate_type" purpose="Check if DeviceMotionEvent.rotationRate is type of DeviceRotationRate" result="PASS" /><testcase id="DeviceOrientationEvent_absolute_entry" purpose="Check if the DeviceOrientationEvent.absolute attribute exists" result="PASS" /><testcase id="DeviceOrientationEvent_absolute_readonly" purpose="Check if DeviceOrientationEvent.absolute is readonly" result="PASS" /><testcase id="DeviceOrientationEvent_absolute_type" purpose="Check if DeviceOrientationEvent.absolute is type of boolean" result="PASS" /><testcase id="DeviceOrientationEvent_alpha_entry" purpose="Check if the DeviceOrientationEvent.alpha attribute exists" result="PASS" /><testcase id="DeviceOrientationEvent_alpha_readonly" purpose="Check if DeviceOrientationEvent.alpha is readonly" result="PASS" /><testcase id="DeviceOrientationEvent_alpha_type" purpose="Check if DeviceOrientationEvent.alpha is type of double" result="PASS" /><testcase id="DeviceOrientationEvent_beta_entry" purpose="Check if the DeviceOrientationEvent.beta attribute exists" result="PASS" /><testcase id="DeviceOrientationEvent_beta_readonly" purpose="Check if DeviceOrientationEvent.beta is readonly" result="PASS" /><testcase id="DeviceOrientationEvent_beta_type" purpose="Check if DeviceOrientationEvent.beta is type of double" result="PASS" /><testcase id="DeviceOrientationEvent_gamma_entry" purpose="Check if the DeviceOrientationEvent.gamma attribute exists" result="PASS" /><testcase id="DeviceOrientationEvent_gamma_readonly" purpose="Check if DeviceOrientationEvent.gamma is readonly" result="PASS" /><testcase id="DeviceOrientationEvent_gamma_type" purpose="Check if DeviceOrientationEvent.gamma is type of double" result="PASS" /><testcase id="DeviceRotationRate_alpha_entry" purpose="Check if the DeviceRotationRate.alpha attribute exists" result="PASS" /><testcase id="DeviceRotationRate_alpha_readonly" purpose="Check if DeviceRotationRate.alpha is readonly" result="PASS" /><testcase id="DeviceRotationRate_alpha_type" purpose="Check if DeviceRotationRate.alpha is type of double" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2666 XWALK-2666]]device limitation, won't fix</testcase><testcase id="DeviceRotationRate_beta_entry" purpose="Check if the DeviceRotationRate.beta attribute exists" result="PASS" /><testcase id="DeviceRotationRate_beta_readonly" purpose="Check if DeviceRotationRate.beta is readonly" result="PASS" /><testcase id="DeviceRotationRate_beta_type" purpose="Check if DeviceRotationRate.beta is type of double" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2666 XWALK-2666]]device limitation, won't fix</testcase><testcase id="DeviceRotationRate_gamma_entry" purpose="Check if the DeviceRotationRate.gamma attribute exists" result="PASS" /><testcase id="DeviceRotationRate_gamma_readonly" purpose="Check if DeviceRotationRate.gamma is readonly" result="PASS" /><testcase id="DeviceRotationRate_gamma_type" purpose="Check if DeviceRotationRate.gamma is type of double" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2666 XWALK-2666]]device limitation, won't fix</testcase></category><category name="W3C_HTML5 APIs/Device/HTML5 Browser state"><testcase id="navigator_onLine_exists" purpose="Check if NavigatorOnLine.onLine attribute exists" result="PASS" /><testcase id="navigator_onLine_readonly" purpose="Check if NavigatorOnLine.onLine attribute is readonly" result="PASS" /><testcase id="navigator_onLine_type" purpose="Check if NavigatorOnLine.onLine attribute is of type boolean" result="PASS" /></category><category name="W3C_HTML5 APIs/Device/The Network Information API"><testcase id="Navigator_connection" purpose="Check if the navigator.connection attribute exists, readonly and type of NetworkInformation" result="PASS" /><testcase id="NetworkInformation_downlinkMax" purpose="Check if the NetworkInformation.downlinkMax attribute exists, readonly and type of number" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="NetworkInformation_onchange" purpose="Check if the NetworkInformation.onchange attribute exists, readonly and type of object" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="NetworkInformation_type" purpose="Check if the NetworkInformation.type attribute exists, readonly and type of string" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/CSS Basic User Interface Module Level 3 (CSS3 UI)"><testcase id="CSS3UI_box-sizing" purpose="Check if the 'box-sizing' property exists" result="PASS" /><testcase id="CSS3UI_box-sizing_border-box" purpose="Check if 'box-sizing:border-box' on test div" result="PASS" /><testcase id="CSS3UI_box-sizing_content-box" purpose="Check if 'box-sizing:content-box' on test div" result="PASS" /><testcase id="CSS3UI_box-sizing_initial_value" purpose="Check the box-sizing initial value on test div" result="PASS" /><testcase id="CSS3UI_content" purpose="Check if the 'content' property exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4019 XWALK-4019]]</testcase><testcase id="CSS3UI_cursor" purpose="Check if the 'cursor' property exists" result="PASS" /><testcase id="CSS3UI_cursor_auto" purpose="Check if 'cursor:auto' on test div" result="PASS" /><testcase id="CSS3UI_cursor_cell" purpose="Check if 'cursor:cell' on test div" result="PASS" /><testcase id="CSS3UI_cursor_context-menu" purpose="Check if 'cursor:context-menu' on test div" result="PASS" /><testcase id="CSS3UI_cursor_copy" purpose="Check if 'cursor:copy' on test div" result="PASS" /><testcase id="CSS3UI_cursor_default" purpose="Check if 'cursor:default' on test div" result="PASS" /><testcase id="CSS3UI_cursor_ew-resize" purpose="Check if 'cursor:ew-resize' on test div" result="PASS" /><testcase id="CSS3UI_cursor_initial" purpose="Check if 'cursor' attribute initial value on test div" result="PASS" /><testcase id="CSS3UI_cursor_nesw-resize" purpose="Check if 'cursor:nesw-resize' on test div" result="PASS" /><testcase id="CSS3UI_cursor_none" purpose="Check if 'cursor:none' on test div" result="PASS" /><testcase id="CSS3UI_outline" purpose="Check if the 'outline' property exists" result="PASS" /><testcase id="CSS3UI_outline-color" purpose="Check if the 'outline-color' property exists" result="PASS" /><testcase id="CSS3UI_outline-color_initial_value" purpose="Check the 'outline-color' initial value on test div" result="PASS" /><testcase id="CSS3UI_outline-color_red" purpose="Check if 'outline-width:5px;outline-style:inset;outline-color:red' on test div" result="PASS" /><testcase id="CSS3UI_outline-offset" purpose="Check if the 'outline-offset' property exists" result="PASS" /><testcase id="CSS3UI_outline-offset_10px_dashed_FF0000" purpose="Check if 'outline-offset:10px;outline-style:dashed;outline-color:#FF0000' on test div" result="PASS" /><testcase id="CSS3UI_outline-offset_30px_dashed_FF0000" purpose="Check if 'outline-offset:30px;outline-style:dashed;outline-color:#FF0000' on test div" result="PASS" /><testcase id="CSS3UI_outline-offset_30px_inset_ffc" purpose="Check if 'outline-offset:30px;outline-style:inset;outline-color:#ffc' on test div" result="PASS" /><testcase id="CSS3UI_outline-offset_initial_value" purpose="Check the 'outline-offset' initial value on test div" result="PASS" /><testcase id="CSS3UI_outline-style" purpose="Check if the 'outline-style' property exists" result="PASS" /><testcase id="CSS3UI_outline-style_dashed" purpose="Check if 'outline-style:dashed' on test div" result="PASS" /><testcase id="CSS3UI_outline-style_dotted" purpose="Check if 'outline-style:dotted' on test div" result="PASS" /><testcase id="CSS3UI_outline-style_groove" purpose="Check if 'outline-style:groove' on test div" result="PASS" /><testcase id="CSS3UI_outline-style_initial_value" purpose="Check the 'outline-style' initial value" result="PASS" /><testcase id="CSS3UI_outline-style_inset" purpose="Check if 'outline-style:inset' on test div" result="PASS" /><testcase id="CSS3UI_outline-width" purpose="Check if the 'outline-width' property exists" result="PASS" /><testcase id="CSS3UI_outline-width_20px_dashed" purpose="Check if 'outline-width:20px;outline-style:dashed' on test div" result="PASS" /><testcase id="CSS3UI_outline-width_30px_dotted" purpose="Check if 'outline-width:30px;outline-style:dotted' on test div" result="PASS" /><testcase id="CSS3UI_outline-width_initial" purpose="Check if 'outline-width' initial value on test div" result="PASS" /><testcase id="CSS3UI_outline_3px_ffc_10px_20px_15px" purpose="Check if 'outline:3px;background-color:#ffc;margin:10px;border:20px;padding:15px' on test div" result="PASS" /><testcase id="CSS3UI_outline_initial_value" purpose="Check the 'outline' initial value on test div" result="PASS" /><testcase id="CSS3UI_pseudo-classes_required" purpose="Check if form element required property value is required" result="PASS" /><testcase id="CSS3UI_resize" purpose="Check if the 'resize' property exists" result="PASS" /><testcase id="CSS3UI_resize_horizontal" purpose="Check if 'resize:horizontal;width:100px;overflow:auto;border:2px' on test div" result="PASS" /><testcase id="CSS3UI_resize_initial" purpose="Check if 'resize' initial value on test div" result="PASS" /><testcase id="CSS3UI_resize_vertical" purpose="Check if 'resize:vertical;width:100px;overflow:auto;border:2px' on test div" result="PASS" /><testcase id="CSS3UI_text-overflow" purpose="Check if the 'text-overflow' property exists" result="PASS" /><testcase id="CSS3UI_text-overflow_clip_auto_nowrap_border-box" purpose="Check if 'text-overflow:clip;overflow:auto;background-color:#0000FF;white-space:nowrap;box-sizing:border-box' on test div" result="PASS" /><testcase id="CSS3UI_text-overflow_ellipsis" purpose="Check if the 'text-overflow' is set to 'ellipsis'" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/CSS Flexible Box Layout Module"><testcase id="align-content-001" purpose="This test checks that a multi-line flex container with 'align-content: center' centers lines in the flex container" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="align-content-002" purpose="This test checks that a multi-line flex container with 'align-content: flex-start' packs lines toward the start of the flex container" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="align-content-003" purpose="This test checks that a multi-line flex container with 'align-content: flex-end' packs lines toward the end of the flex container" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="align-content-004" purpose="This test checks that a multi-line flex container with 'align-content: space-between' distributes lines evenly in the flex container" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="align-content-005" purpose="This test checks that a multi-line flex container with 'align-content: space-around' distributes lines evenly in the flex container with half-size spaces on either end" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="align-content-006" purpose="This test checks that a multi-line flex container with 'align-content: stretch' stretches lines to take up the remaining space" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="align-items-001" purpose="This test checks that the flex container with 'align-items: center' centers each flex item's margin box in the cross-axis of its line" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="align-items-002" purpose="This test checks that the flex container with 'align-items: flex-start' places each flex item's margin box flush with the cross-start edge of line" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="align-items-003" purpose="This test checks that the flex container with 'align-items: flex-end' places each flex item's margin box flush with the cross-end edge of line" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="align-items-004" purpose="This test checks that the flex container with 'align-items: baseline' places each flex item's margin box so that their baselines align" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="align-items-005" purpose="This test checks that the flex container with 'align-items: stretch' places each flex item's margin box so that its cross size is the same as the cross size of the line" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="css-flexbox-row" purpose="Test checks that when writing mode is vertical and flex-flow: row, the flex container is vertical" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css-flexbox-row-reverse" purpose="Test checks that when writing mode is vertical and flex-flow: row-reverse, the flex container is vertical" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css-flexbox-row-reverse-wrap" purpose="Test checks that when writing mode is vertical and flex-flow: row-reverse wrap, the flex container is vertical" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css-flexbox-row-reverse-wrap-reverse" purpose="Test checks that when writing mode is vertical and flex-flow: row-reverse wrap-reverse, the flex container is vertical" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css-flexbox-row-wrap" purpose="Test checks that when writing mode is vertical and flex-flow: row wrap, the flex container is vertical" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="css-flexbox-row-wrap-reverse" purpose="Test checks that when writing mode is vertical and flex-flow: row wrap-reverse, the flex container is vertical" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="CSS3FlexBox_align-content" purpose="Check if the 'align-content' property exists" result="PASS" /><testcase id="CSS3FlexBox_align-content_initial_value" purpose="Check if the initial value of align-content is stretch" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3794 XWALK-3794]]</testcase><testcase id="CSS3FlexBox_align-items" purpose="Check if the 'align-items' property exists" result="PASS" /><testcase id="CSS3FlexBox_align-items_initial_value" purpose="Check if the initial value of align-items is stretch" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3622 XWALK-3622]]</testcase><testcase id="CSS3FlexBox_align-self" purpose="Check if the 'align-self' property exists" result="PASS" /><testcase id="CSS3FlexBox_align-self_initial_value" purpose="Check if the initial value of align-self is stretch" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3622 XWALK-3622]]</testcase><testcase id="CSS3FlexBox_flex" purpose="Check if the 'flex' property exists" result="PASS" /><testcase id="CSS3FlexBox_flex-basis" purpose="Check if the 'flex-basis' property exists" result="PASS" /><testcase id="CSS3FlexBox_flex-basis_initial_value" purpose="Check if the initial value of flex-basis is auto" result="PASS" /><testcase id="CSS3FlexBox_flex-direction" purpose="Check if the 'flex-direction' property exists" result="PASS" /><testcase id="CSS3FlexBox_flex-flow" purpose="Check if the 'flex-flow' property exists" result="PASS" /><testcase id="CSS3FlexBox_flex-grow" purpose="Check if the 'flex-grow' property exists" result="PASS" /><testcase id="CSS3FlexBox_flex-grow_initial_value" purpose="Check if the initial value of flex-grow is 0" result="PASS" /><testcase id="CSS3FlexBox_flex-shrink" purpose="Check if the 'flex-shrink' property exists" result="PASS" /><testcase id="CSS3FlexBox_flex-shrink_initial_value" purpose="Check if the initial value of flex-shrink is 1" result="PASS" /><testcase id="CSS3FlexBox_flex-wrap" purpose="Check if the 'flex-wrap' property exists" result="PASS" /><testcase id="CSS3FlexBox_flex_initial_value" purpose="Check if the initial value of flex is '0 1 auto'" result="PASS" /><testcase id="CSS3FlexBox_justify-content" purpose="Check if the 'justify-content' property exists" result="PASS" /><testcase id="CSS3FlexBox_justify-content_initial_value" purpose="Check if the initial value of justify-content is flex-start" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3227 XWALK-3227]]</testcase><testcase id="CSS3FlexBox_min-height" purpose="Check if the 'min-height' property exists" result="PASS" /><testcase id="CSS3FlexBox_min-height_initial_value" purpose="Check if the initial value of min-height is 0px" result="PASS" /><testcase id="CSS3FlexBox_min-width" purpose="Check if the 'min-width' property exists" result="PASS" /><testcase id="CSS3FlexBox_min-width_initial_value" purpose="Check if the initial value of min-width is 0px" result="PASS" /><testcase id="CSS3FlexBox_order" purpose="Check if the 'order' property exists" result="PASS" /><testcase id="CSS3FlexBox_order_initial_value" purpose="Check if the initial value of order is 0" result="PASS" /><testcase id="display-flex-001" purpose="This test checks that an element with 'display' property set to 'flex' establishes a new block-level flex container" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="flex-001" purpose="This test checks that the flex grow factor determines the distribution of positive free space" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="flex-002" purpose="This test checks that the flex shrink factor is multiplied by the flex base size when distributing negative space" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="flex-003" purpose="This test checks that the flex items with a different flex grow factor have different flexibilities" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="flex-004" purpose="This test checks that the flex items with a different flex shrink factor have different flexibilities" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="flexbox-flex-direction-column" purpose="Test checks that flex container's main axis has the same orientation as the block axis of the current writing mode, when flex-direction = column. This assumes writing-direction = horizontal-tb', and direction = 'ltr'." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="flexbox-flex-direction-default" purpose="Test checks that flex container's main axis has the same orientation as the inline axis of the current writing mode by default. This assumes writing-direction = horizontal-tb', and direction = 'ltr'." result="PASS" /><testcase id="flexbox-flex-direction-row" purpose="Test checks that flex container's main axis has the same orientation as the inline axis of the current writing mode, when flex-direction = row. This assumes writing-direction = horizontal-tb', and direction = 'ltr'." result="PASS" /><testcase id="flexbox-flex-direction-row-reverse" purpose="Test checks that flex container's main axis has the opposite orientation as the inline axis of the current writing mode, when flex-direction = row-reverse. This assumes writing-direction = horizontal-tb', and direction = 'ltr'." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="flexbox-flex-wrap-default" purpose="Test checks that flex elements default to flex-wrap: nowrap if flex-wrap is not set. With wrapping disabled, the .green flex item should extend outside the bounds of its container, as it is set to flex:none." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="flexbox-flex-wrap-nowrap" purpose="Test checks that flex elements set to flex-wrap: nowrap will not wrap their flex items. With wrapping disabled, the .green flex item should extend outside the bounds of its container, as it is set to flex:none." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="flexbox-flex-wrap-wrap" purpose="Test checks that flex elements wrap left-to-right within their flex container when flex-wrap = 'wrap', matching the writing direction. This assumes writing-direction = horizontal-tb', and direction = 'ltr'." result="PASS" /><testcase id="flexbox-flex-wrap-wrap-reverse" purpose="Test checks that flex elements wrap left-to-right and bottom-to-top within their flex container when flex-wrap = 'wrap-reverse'. This assumes writing-direction = horizontal-tb', and direction = 'ltr'." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="justify-content-001" purpose="This test checks that the flex container with 'justify-content: center' centers flex items in the main axis of each line" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="justify-content-002" purpose="This test checks that the flex container with 'justify-content: flex-start' packs flex items toward the start of the main axis of each line" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="justify-content-003" purpose="This test checks that the flex container with 'justify-content: flex-end' packs flex items toward the end of the main axis of each line" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="justify-content-004" purpose="This test checks that the flex container with 'justify-content: space-between' evenly distributes flex items in the main axis of each line" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="justify-content-005" purpose="This test checks that the flex container with 'justify-content: space-around' evenly distributes flex items in the main axis of each line with half-size spaces on either end" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="multi-line-wrap-reverse-column-reverse" purpose="This test check that a flex container reverse-wraps blocks multiline in column-reverse direction." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="multi-line-wrap-reverse-row-reverse" purpose="This test check that a flex container reverse-wraps blocks multiline in row-reverse direction." result="PASS" /><testcase id="multi-line-wrap-with-column-reverse" purpose="This test check that a flex container wraps blocks multiline in column-reverse direction." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="multi-line-wrap-with-row-reverse" purpose="This test check that a flex container wraps blocks multiline in row-reverse direction." result="PASS" /><testcase id="order-with-column-reverse" purpose="This test check that a flex container layouts out its content starting with the lowest numbered ordinal group and going up with column-reverse direction" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="order-with-row-reverse" purpose="This test check that a flex container layouts out its content starting with the lowest numbered ordinal group and going up with row-reverse direction" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/CSS Text Module Level 3"><testcase id="CSS3TextEffects_hyphens_auto" purpose="To check  if the element hyphens test expected 'auto'" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2623 XWALK-2623]]</testcase><testcase id="CSS3TextEffects_letter-spacing_initial_value" purpose="Check  if the 'letter-spacing' initial value is 'normal'" result="PASS" /><testcase id="CSS3TextEffects_line-break_normal" purpose="To check  if the element line-break test expected 'normal'" result="PASS" /><testcase id="CSS3TextEffects_overflow-wrap_normal" purpose="To check  if the element overflow-wrap test expected 'normal'" result="PASS" /><testcase id="CSS3TextEffects_tab-size_initial" purpose="To check  if the element tab-size test expected '8'" result="PASS" /><testcase id="CSS3TextEffects_text-align_center" purpose="To check if the element text-align is expected 'center'" result="PASS" /><testcase id="CSS3TextEffects_text-align_end" purpose="Check if the 'text-align' property set to 'end' on a block element aligns the text to the end edge" result="PASS" /><testcase id="CSS3TextEffects_text-align_initial_value" purpose="Check if the initial value of text-align is 'start' on test div" result="PASS" /><testcase id="CSS3TextEffects_text-align_justify" purpose="Check if the element text-align test expected 'justify'" result="PASS" /><testcase id="CSS3TextEffects_text-align_left" purpose="Check if the inline contents are aligned to the left edge of the line box" result="PASS" /><testcase id="CSS3TextEffects_text-align_matchparent" purpose="Check if the 'text-align' property set to 'match-parent' on a block element behaves the same as 'inherit'" result="PASS" /><testcase id="CSS3TextEffects_text-align_right" purpose="Check if the inline contents are aligned to the right edge of the line box" result="PASS" /><testcase id="CSS3TextEffects_text-align_start" purpose="Check if the 'text-align' property set to 'start' on a block element aligns the text to the start edge" result="PASS" /><testcase id="CSS3TextEffects_text-decoration_initial_value" purpose="Check if the 'text-decoration' initial value is 'none'" result="PASS" /><testcase id="CSS3TextEffects_text-decoration_none" purpose="Check if the text-decoration value is none" result="PASS" /><testcase id="CSS3TextEffects_text-decoration_underline" purpose="To check if the element text-decoration is expected 'underline'" result="PASS" /><testcase id="CSS3TextEffects_text-emphasis-color_color" purpose="To check if the element text-emphasis-color is expected 'yellow'" result="PASS" /><testcase id="CSS3TextEffects_text-emphasis-style_initial_value" purpose="Check  if the 'text-emphasis-style' initial value is 'none'" result="PASS" /><testcase id="CSS3TextEffects_text-emphasis-style_none" purpose="To check if the element text-emphasis-style is expected 'none'" result="PASS" /><testcase id="CSS3TextEffects_text-emphasis_color" purpose="To check if the element text-emphasis is expected 'none rgb(255,0,0)'" result="PASS" /><testcase id="CSS3TextEffects_text-indent_initial_value" purpose="Check if the 'text-indent' initial value is '0px'" result="PASS" /><testcase id="CSS3TextEffects_text-indent_length" purpose="To check if the element text-indent is expected '40px'" result="PASS" /><testcase id="CSS3TextEffects_text-indent_percentage" purpose="Check if the text-indent value is percentage" result="PASS" /><testcase id="CSS3TextEffects_text-shadow_initial_value" purpose="Check if the 'text-shadow' initial value is 'none'" result="PASS" /><testcase id="CSS3TextEffects_text-shadow_none" purpose="Check if the text-shadow value is none" result="PASS" /><testcase id="CSS3TextEffects_text-shadow_shadow" purpose="To check if the element text-shadow is expected 'blue 2px 2px, red -2px -2px'" result="PASS" /><testcase id="CSS3TextEffects_text-transform_capitalize" purpose="Check if the text-transform value is capitalize" result="PASS" /><testcase id="CSS3TextEffects_text-transform_initial_value" purpose="Check if the initial value of text-transform  is 'none' on test div" result="PASS" /><testcase id="CSS3TextEffects_text-transform_lowercase" purpose="To check  if the element text-transform test expected 'lowercase'" result="PASS" /><testcase id="CSS3TextEffects_text-transform_none" purpose="Check if the text-transform value is none" result="PASS" /><testcase id="CSS3TextEffects_text-transform_uppercase" purpose="Check if the text-transform value is uppercase" result="PASS" /><testcase id="CSS3TextEffects_word-break_initial_value" purpose="Check  if the element word-break test expected 'normal'" result="PASS" /><testcase id="CSS3TextEffects_word-spacing_normal" purpose="To check  if the element word-spacing test expected 'normal'" result="PASS" /><testcase id="CSS3TextEffects_word-spacing_spacinglimit" purpose="To check  if the element word-spacing test expected '10px'" result="PASS" /><testcase id="CSS3TextEffects_word-wrap_breakword" purpose="Check if the word-wrap value is break-word" result="PASS" /><testcase id="CSS3TextEffects_word-wrap_initial_value" purpose="Check if the initial value of word-wrap is 'normal' on test div" result="PASS" /><testcase id="css3_TextEffects_tests_entry1" purpose="To check if the WRT CSS3 find hidden text features can compliance with relevant test scripts' descriptions" result="PASS" /><testcase id="css3_TextEffects_tests_entry11" purpose="Test that the intensity of text-shadow does not depend on the transparency of the text fill color but the value of green 0 36px 0" result="PASS" /><testcase id="css3_TextEffects_tests_entry15" purpose="To check that word-break properly shrinks a cell to one character per line when it is set to break-all" result="PASS" /><testcase id="css3_TextEffects_tests_entry3" purpose="Check width of the first to third characters are same by script and return true or false" result="PASS" /><testcase id="css3_TextEffects_tests_entry4" purpose="To check that '&amp;nbsp;' and space are same" result="PASS" /><testcase id="css3_TextEffects_tests_entry5" purpose="Check that the CSS white-space:nowrap and clear float are identical" result="PASS" /><testcase id="css3_TextEffects_tests_entry6" purpose="To check the CSS white-space:pre-wrap is rendered properly" result="PASS" /><testcase id="css3_TextEffects_tests_entry7" purpose="Check the CSS text-shadow:-5px -5px blue is rendered properly" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/HTML5 Forms"><testcase id="fieldset_checkValidity_input_false" purpose="Check if input.checkValidity() method return false if the element does not satisfy its constraints" result="PASS" /><testcase id="fieldset_checkValidity_input_true" purpose="Check if input.checkValidity() method return true if the element does satisfy its constraints" result="PASS" /><testcase id="fieldset_checkValidity_method_check" purpose="Check if the fieldset checkValidity API can return valid info normally" result="PASS" /><testcase id="fieldset_checkValidity_textarea_false" purpose="Check if textarea.checkValidity() method return false if the element does not satisfy its constraints" result="PASS" /><testcase id="fieldset_checkValidity_textarea_true" purpose="Check if textarea.checkValidity() method return true if the element does satisfy its constraints" result="PASS" /><testcase id="fieldset_disabled_attribute_check" purpose="Check if the fieldSet disabled attr can show fieldSet disabled info normally" result="PASS" /><testcase id="fieldset_disabled_default_value" purpose="Check if fieldSet.disabled attribute return false it hasn't yet been set" result="PASS" /><testcase id="fieldset_disabled_value_empty_string" purpose="Check if fieldset.disabled attribute return true it was set to empty string test" result="PASS" /><testcase id="fieldset_elements_attribute_check" purpose="Check if the fieldSet elements object can show all fieldSet controllers normally" result="PASS" /><testcase id="fieldset_elements_basic" purpose="Check if fieldset.elements length is 3 that FieldSet has 3 elements" result="PASS" /><testcase id="fieldset_elements_no_elements" purpose="Check if fieldset.elements length is 0 that FieldSet has no element" result="PASS" /><testcase id="fieldset_elements_type" purpose="Check if FieldSet elements attribute is of type object" result="PASS" /><testcase id="fieldset_form_attribute_check" purpose="Check if the form attr can show fieldSet form elements info normally" result="PASS" /><testcase id="fieldset_form_default_value" purpose="Check if the fieldset.form attribute return null if there isn't form" result="PASS" /><testcase id="fieldset_form_owner" purpose="Check if the fieldset.form attribute return the element's form owner" result="PASS" /><testcase id="fieldset_form_return_HTMLFormElement" purpose="Check if the fieldset.form attribute return object HTMLFormElement" result="PASS" /><testcase id="fieldset_input_customError_value_false" purpose="Check if fieldset input.validity.customError attribute return false when the two passwords are not equal" result="PASS" /><testcase id="fieldset_input_customError_value_true" purpose="Check if fieldset input.validity.customError attribute return true when the two passwords are equal" result="PASS" /><testcase id="fieldset_input_email_typeMismatch_value_true" purpose="Check if fieldset input.validity.typeMismatch attribute return false when a email control has a value that is email string for the form control value attribute" result="PASS" /><testcase id="fieldset_input_patternMismatch_letter_value_true" purpose="Check if fieldset input.validity.patternMismatch attribute return false when a control has a value that doesn't satisfy the pattern attribute,pattern is letter" result="PASS" /><testcase id="fieldset_input_rangeOverflow_value_true" purpose="Check if fieldset input.validity.rangeOverflow attribute return false when a control has a value that is low for the max attribute" result="PASS" /><testcase id="fieldset_input_tooLong_value_true" purpose="Check if fieldset input.validity.tooLong attribute return false when a control has a value that is too short for the form control maxlength attribute" result="PASS" /><testcase id="fieldset_input_url_typeMismatch_value_true" purpose="Check if fieldset input.validity.typeMismatch attribute return false when a url control has a value that is url string for the form control value attribute" result="PASS" /><testcase id="fieldset_input_valid_value_false" purpose="Check if fieldset input.validity.valid attribute return false when the element's value has validity problems" result="PASS" /><testcase id="fieldset_input_valueMissing_value_true" purpose="Check if fieldset input.validity.valueMissing attribute return true when a control has string value and has a required attribute" result="PASS" /><testcase id="fieldset_name_attribute_check" purpose="Check if the name attr can show the FieldSet name info accurately" result="PASS" /><testcase id="fieldset_name_default_value" purpose="Check if the fieldset.name attribute return empty string it hasn't yet been set" result="PASS" /><testcase id="fieldset_name_value_empty_string" purpose="Check if the fieldset.name attribute return empty string it was set to empty" result="PASS" /><testcase id="fieldset_name_value_string" purpose="Check if the fieldset.name attribute return string it was set to string" result="PASS" /><testcase id="fieldset_setCustomValidity_input_argument_empty_string" purpose="Check if fieldset.setCustomValidity() method with empty string argument that validationMessage returns the value of the given message argument" result="PASS" /><testcase id="fieldset_setCustomValidity_method_check" purpose="Check if the setCustomValidity API can set the validity of fieldSet accurately" result="PASS" /><testcase id="fieldset_type_attribute_check" purpose="Check if the type attr can show the fieldSet type accurately" result="PASS" /><testcase id="fieldset_type_default_value" purpose="Check if fieldset.type attribute must return the string 'fieldset'" result="PASS" /><testcase id="fieldset_type_value_string" purpose="Check if fieldset.type attribute return the string 'fieldset' when set string value to type" result="PASS" /><testcase id="fieldset_validationMessage_attribute_check" purpose="Check if the validationMessage attr can show validation message info accurately" result="PASS" /><testcase id="fieldset_validationMessage_customError" purpose="Check if fieldset.validationMessage attribute returns given of the message by setCustomValidity" result="PASS" /><testcase id="fieldset_validity_attribute_check" purpose="Check if the fieldSet validity attr can show valid info normally" result="PASS" /><testcase id="fieldset_willValidate_attribute_check" purpose="Chekc if the willValidate attr can show valid info normally" result="PASS" /><testcase id="fieldset_willValidate_button" purpose="Check if the fieldset.willValidate attribute must return true that button is a candidate for constraint validation" result="PASS" /><testcase id="fieldset_willValidate_input" purpose="Check if the fieldset.willValidate attribute must return false that input is a candidate for constraint validation" result="PASS" /><testcase id="fieldset_willValidate_keygen" purpose="Check if the fieldset.willValidate attribute must return false that keygen is a barring it from constraint validation" result="PASS" /><testcase id="fieldset_willValidate_object" purpose="Check if the fieldset.willValidate attribute must return false that button is barring it from constraint validation" result="PASS" /><testcase id="fieldset_willValidate_select" purpose="Check if the fieldset.willValidate attribute must return true that select is a candidate for constraint validation" result="PASS" /><testcase id="fieldset_willValidate_textarea" purpose="Check if the fieldset.willValidate attribute must return true that textarea is a candidate for constraint validation" result="PASS" /><testcase id="form_acceptCharset_attribute_check" purpose="Check if the form acceptCharset attr can show form info normally" result="PASS" /><testcase id="form_acceptCharset_attribute_type" purpose="Check if the form.acceptCharset attribute is of type string" result="PASS" /><testcase id="form_acceptCharset_default_value" purpose="Check if the form.acceptCharset attribute return empty it hasn't yet been set" result="PASS" /><testcase id="form_acceptCharset_value_empty_string" purpose="Check if the form.acceptCharset attribute return empty string it was set to empty" result="PASS" /><testcase id="form_acceptCharset_value_string" purpose="Check if the form.acceptCharset attribute reflect the accept-charset content attribute" result="PASS" /><testcase id="form_action_attribute_check" purpose="Check if the form action attr can show form info normally" result="PASS" /><testcase id="form_action_attribute_missing" purpose="Check if form.action attribute that on getting, when the content attribute is missing, it must be returned instead" result="PASS" /><testcase id="form_action_attribute_type" purpose="Check if form.action attribute is of type string" result="PASS" /><testcase id="form_action_value_empty_string" purpose="Check if form.action attribute that on getting, when the content attribute value is the empty string, it must be returned instead" result="PASS" /><testcase id="form_action_value_string" purpose="Check if form.action attribute must reutn document's address that contains string null if it was set null" result="PASS" /><testcase id="form_autocomplete_attribute_check" purpose="Check if the form autocomplete attr can show form info normally" result="PASS" /><testcase id="form_autocomplete_value_off" purpose="Check if form.autocomplete that the off keyword maps to the off state" result="PASS" /><testcase id="form_autocomplete_value_on" purpose="Check if form.autocomplete that the on keyword maps to the on state" result="PASS" /><testcase id="form_checkValidity_customError_invalid" purpose="Check if form checkValidity() method return false when the two passwords are not equal" result="PASS" /><testcase id="form_checkValidity_method_check" purpose="Check if the form checkValidity API can return valid info normally" result="PASS" /><testcase id="form_checkValidity_patternMismatch_invalid" purpose="Check if form checkValidity() method return false when a control has a value that doesn't satisfy the pattern attribute,pattern is letter" result="PASS" /><testcase id="form_checkValidity_typeMismatch_email_invalid" purpose="Check if form checkValidity() method return false when a email control has a value that is not email string for the form control value attribute" result="PASS" /><testcase id="form_checkValidity_typeMismatch_url_invalid" purpose="Check if form checkValidity() method return false when a url control has a value that is not url string for the form control value attribute" result="PASS" /><testcase id="form_checkValidity_valueMissing_invalid" purpose="Check if form checkValidity() method return false when a control has no value but has a required attribute" result="PASS" /><testcase id="form_elements_attribute_check" purpose="Check if the form elements can show form controllers normally" result="PASS" /><testcase id="form_elements_attribute_type" purpose="Check if the form.elements is of type object" result="PASS" /><testcase id="form_elements_basic" purpose="Check if form.elements length is 3 that form has 3 elements" result="PASS" /><testcase id="form_elements_interfaces_form" purpose="Check if the form element exists" result="PASS" /><testcase id="form_elements_interfaces_HTMLCollection" purpose="Check if the HTMLCollection element implements the interface" result="PASS" /><testcase id="form_elements_matches_length" purpose="Check if the length of form elements is 0" result="PASS" /><testcase id="form_elements_nameditem" purpose="Check form.elements should work correctly in the face of table syntax errors" result="PASS" /><testcase id="form_elements_nameditem_fieldset" purpose="Check form elements collection should include fieldsets" result="PASS" /><testcase id="form_elements_nameditem_return_RadioNodeList" purpose="Check form elements collection should return elements or RadioNodeLists" result="PASS" /><testcase id="form_elements_no_elements" purpose="Check if form.elements length is 0 that form has no elements" result="PASS" /><testcase id="form_encoding_attribute_check" purpose="Check if the form encoding attr can show form info normally" result="PASS" /><testcase id="form_encoding_attribute_type" purpose="Check if the form.encoding attribute is of type string" result="PASS" /><testcase id="form_encoding_default_value" purpose="Check if the form.encoding missing value default for the attribute is the application/x-www-form-urlencoded state" result="PASS" /><testcase id="form_encoding_value_empty_string" purpose="Check if the form.encoding attribute is the application/x-www-form-urlencoded state if the enctype was set to empty string" result="PASS" /><testcase id="form_encoding_value_multipart" purpose="Check if the form.encoding attribute reflect the enctype content attribute" result="PASS" /><testcase id="form_enctype_attribute_check" purpose="Check if the form enctype attr can show form info normally." result="PASS" /><testcase id="form_enctype_default_value" purpose="Check if the form.enctype return the conforming value associated with the state the attribute is in" result="PASS" /><testcase id="form_enctype_value_empty_string" purpose="Check if the form.enctype missing value default for the attribute is the application/x-www-form-urlencoded state" result="PASS" /><testcase id="form_enctype_value_multipart" purpose="Check if the form.enctype attribute reflect the enctype content attribute" result="PASS" /><testcase id="form_enctype_value_string" purpose="Check if the form.enctype string value for the attribute is the application/x-www-form-urlencoded state" result="PASS" /><testcase id="form_enctype_value_text_plain" purpose="Check if the form.enctype attribute must reflect the respective content attributes of the same name,the content is text/plain" result="PASS" /><testcase id="form_getter_index_check" purpose="Check if the getterIndex API can get the elements by index accurately" result="PASS" /><testcase id="form_getter_name_check" purpose="Check if the getterName can get the elements by name accurately" result="PASS" /><testcase id="form_length_attribute_check" purpose="Check if the form length attr can show the form controllers'length normally" result="PASS" /><testcase id="form_length_attribute_readonly" purpose="Check if the form.length attribute is readonly" result="PASS" /><testcase id="form_length_attribute_type" purpose="Check if the form.length is of type number" result="PASS" /><testcase id="form_length_value_basic" purpose="Check if the form.length return 5 if it has 5 elements" result="PASS" /><testcase id="form_length_value_zero" purpose="Check if the form.length return 0 if it has no elements" result="PASS" /><testcase id="form_method_attribute_check" purpose="Check if the form method attr can show form info normally" result="PASS" /><testcase id="form_method_default_value" purpose="Check if the form.method attribute return string get if is hasn't yet been set" result="PASS" /><testcase id="form_method_empty_string" purpose="Check if the form.method attribute return string get if is was set to empty string" result="PASS" /><testcase id="form_method_value_get" purpose="Check if the form.method attribute return string get if is was set to string get" result="PASS" /><testcase id="form_method_value_post" purpose="Check if the form.method attribute return string post if is was set to post" result="PASS" /><testcase id="form_name_attribute_check" purpose="Check if the form set the name attr can show form info normally" result="PASS" /><testcase id="form_name_attribute_type" purpose="Check if the form.name attribute is of type string" result="PASS" /><testcase id="form_name_default_value" purpose="Check if the form.name attribute return empty string it hasn't yet been set" result="PASS" /><testcase id="form_name_value_string" purpose="Check if the form.name attribute return string that the string was set" result="PASS" /><testcase id="form_noValidate_attribute_check" purpose="Check if the form noValidate attr can show form info normally" result="PASS" /><testcase id="form_noValidate_submit" purpose="Check if the form element noValidate is true if the element is a submit button and the element's formnovalidate attribute is present" result="PASS" /><testcase id="form_noValidate_value_false" purpose="Check if the form noValidate is false if the attribute is not present" result="PASS" /><testcase id="form_noValidate_value_true" purpose="Check if the form noValidate is true if the attribute is present" result="PASS" /><testcase id="form_reset_method" purpose="Check if the form.reset() method can be called success that input value be empty" result="PASS" /><testcase id="form_reset_method_check" purpose="Check if the reset the API can reset the form contents normally" result="PASS" /><testcase id="form_reset_method_no_argument" purpose="Check if the form.reset() method can be called success with out argument" result="PASS" /><testcase id="form_submit_method_check" purpose="Check if the form submit API can fire onsubmit event normally" result="PASS" /><testcase id="form_submit_method_type" purpose="Check if the form.submit method is of type funtion" result="PASS" /><testcase id="form_submit_onsubmit" purpose="Check if the form.submit() method that the onsubmit method be invoked" result="PASS" /><testcase id="form_target_attribute_check" purpose="Check if the form target attr can show form info normally" result="PASS" /><testcase id="form_target_default_value" purpose="Check if the form.target attribute return the empty string if it hasn't been set" result="PASS" /><testcase id="form_target_value_blank" purpose="Check if the form.target attribute return the string blank if it was set to string blank" result="PASS" /><testcase id="form_target_value_empty_string" purpose="Check if the form.target attribute return the empty string if it was set to empty string" result="PASS" /><testcase id="form_target_value_iframe" purpose="Check if the form.target attribute return the iframe's name if it was set to string of iframe's name" result="PASS" /><testcase id="form_target_value_parent" purpose="Check if the form.target attribute return the string parent if it was set to string parent" result="PASS" /><testcase id="form_target_value_self" purpose="Check if the form.target attribute return the string self if it was set to string self" result="PASS" /><testcase id="form_target_value_string" purpose="Check if the form.target attribute return the content attribute of the same name" result="PASS" /><testcase id="form_target_value_top" purpose="Check if the form.target attribute return the string top if it was set to string top" result="PASS" /><testcase id="label_control_attribute_check" purpose="Check if the Label control can show label controllers normally" result="PASS" /><testcase id="label_control_button" purpose="Check if the label control attribute return button element that the button elements is a labelable form-associated element" result="PASS" /><testcase id="label_control_hidden" purpose="Check if the label control attribute return null that the hidden elements is not a labelable form-associated element" result="PASS" /><testcase id="label_control_input" purpose="Check if the label control attribute return input element that the input elements whose type attribute is not in the Hidden state is a labelable form-associated element" result="PASS" /><testcase id="label_control_keygen" purpose="Check if the label control attribute return keygen element that the keygen elements is a labelable form-associated element" result="PASS" /><testcase id="label_control_meter" purpose="Check if the label control attribute return meter element that the meter elements is a labelable form-associated element" result="PASS" /><testcase id="label_control_no_for" purpose="Check if the label control attribute is the first descendant in tree order is the label element's labeled control if the for attribute is not specified" result="PASS" /><testcase id="label_control_output" purpose="Check if the label control attribute return output element that the output elements is a labelable form-associated element" result="PASS" /><testcase id="label_control_progress" purpose="Check if the label control attribute return progress element that the progress elements is a labelable form-associated element" result="PASS" /><testcase id="label_control_select" purpose="Check if the label control attribute select button element that the select elements is a labelable form-associated element" result="PASS" /><testcase id="label_control_textarea" purpose="Check if the label control attribute return textarea element that the textarea elements is a labelable form-associated element" result="PASS" /><testcase id="label_form_attribute_check" purpose="Check if the Label form attr can show Lable form elements info normallly" result="PASS" /><testcase id="label_form_attribute_return_htmlformelement" purpose="Check if the label.form attribute return object HTMLFormElement" result="PASS" /><testcase id="label_form_attribute_type" purpose="Check if the label.form attribute is of type object" result="PASS" /><testcase id="label_form_owner" purpose="Check if the label.form attribute return the element's form owner" result="PASS" /><testcase id="label_form_value_null" purpose="Check if the label.form attribute return null if there isn't form owner" result="PASS" /><testcase id="label_htmlFor_attribute_check" purpose="Check if the label htmlFor attr can affect the target elements" result="PASS" /><testcase id="label_htmlFor_attribute_type" purpose="Check if the label.htmlFor atrribute is of type string" result="PASS" /><testcase id="label_htmlFor_default_value" purpose="Check if the label.htmlFor atrribute return empty string if is hasn't yet been set" result="PASS" /><testcase id="label_htmlFor_value_empty_string" purpose="Check if the label.htmlFor atrribute return empty string if it was set empty string" result="PASS" /><testcase id="label_htmlFor_value_input" purpose="Check if the label.htmlFor atrribute return input id if it was set the input id" result="PASS" /><testcase id="label_htmlFor_value_string" purpose="Check if the label.htmlFor atrribute must reflect the for content attribute" result="PASS" /><testcase id="legend_form_attribute_check" purpose="Check if the Legend form can show the form info normally" result="PASS" /><testcase id="legend_form_attribute_type" purpose="Check if the legend.form attribute is of type object" result="PASS" /><testcase id="legend_form_no_fieldset" purpose="Check if the legend.form attribute return null if the legend has no fieldset element as its parent" result="PASS" /><testcase id="legend_form_owner" purpose="Check if the legend.form attribute return the form that id is 'testform'" result="PASS" /><testcase id="legend_form_return_htmlformelement" purpose="Check if the legend.form attribute return object HTMLFormElement" result="PASS" /><testcase id="legend_form_value_null" purpose="Check if the legend.form attribute return null if the legend has no form element as its parent" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/HTML5 telephone, email and URL state of input element"><testcase id="email-change-value-1" purpose="Test checks that the user agent must let latest values be a copy of the element values whenever the user changes the element values" result="PASS" /><testcase id="email-change-value-2" purpose="Test checks that the user agent must strip leading and trailing whitespace from each value in latest values whenever the user changes the element values" result="PASS" /><testcase id="email-change-value-3" purpose="Test checks that the user agent must let the element value be the result of concatenating all the values in latest values, separating each value from the next by a single commas character, maintaining the list order" result="PASS" /><testcase id="email-multiple-attribute" purpose="Test checks that multiple attribute supported for input element type attribute is in the E-mail state" result="PASS" /><testcase id="email-multiple-attribute-removed" purpose="Test checks that the user agent must run the value sanitization algorithm when the multiple attribute is removed and the multiple attribute is NOT specified on the element" result="PASS" /><testcase id="email-multiple-attribute-specified-values" purpose="Test checks that the element values are the result of splitting on commas the element value when the multiple attribute is specified on the element" result="PASS" /><testcase id="email-multiple-not-allow-insert-commas" purpose="Test checks that user agents must not allow users to set any individual value to a string containing commas when the multiple attribute is specified on the element" result="PASS" /><testcase id="email-multiple-not-allow-insert-CR" purpose="Test checks that user agents must not allow users to set any individual value to a string containing CR characters when the multiple attribute is specified on the element" result="PASS" /><testcase id="email-multiple-not-allow-insert-LF" purpose="Test checks that user agents must not allow users to set any individual value to a string containing LF characters when the multiple attribute is specified on the element" result="PASS" /><testcase id="email-not-allow-insert-CR" purpose="Test checks that user agents must not allow users to insert CR character into the value when the multiple attribute is not specified on the element" result="PASS" /><testcase id="email-not-allow-insert-LF" purpose="Test checks that user agents must not allow users to insert LF character into the value when the multiple attribute is not specified on the element" result="PASS" /><testcase id="email-set-multiple-values-1" purpose="Test checks that the user agent must run the value sanitization algorithm when the multiple attribute is set 1" result="PASS" /><testcase id="email-set-multiple-values-2" purpose="Test checks that the user agent must run the value sanitization algorithm when the multiple attribute is set 2" result="PASS" /><testcase id="email-support" purpose="Test checks that email type supported on input element" result="PASS" /><testcase id="email-value-empty-string" purpose="Test checks that user agents should allow the user to set the value to the empty string when the multiple attribute is not specified on the element" result="PASS" /><testcase id="email-value-not-empty" purpose="Test checks that the value attribute must have a value that is a single valid e-mail address if specified and not empty" result="PASS" /><testcase id="tel-not allow-insert-CR" purpose="Test checks that user agents must not allow users to insert CR character into the value" result="PASS" /><testcase id="tel-not allow-insert-LF" purpose="Test checks that user agents must not allow users to insert LF character into the value" result="PASS" /><testcase id="tel-value-1" purpose="Test checks that the value attribute must have a value that contains no LF characters if specified" result="PASS" /><testcase id="tel-value-10" purpose="Test checks that element can accept the phone number with parentheses" result="PASS" /><testcase id="tel-value-2" purpose="Test checks that the value attribute must have a value that contains no CR characters if specified" result="PASS" /><testcase id="tel-value-3" purpose="Test checks that the value sanitization algorithm is as follows: Strip line breaks from the value" result="PASS" /><testcase id="tel-value-4" purpose="Test checks that element can accept the phone number with plus sign" result="PASS" /><testcase id="tel-value-5" purpose="Test checks that element can accept the phone number with hash mark" result="PASS" /><testcase id="tel-value-6" purpose="Test checks that element can accept the phone number with hyphen" result="PASS" /><testcase id="tel-value-7" purpose="Test checks that element can accept the phone number with dots" result="PASS" /><testcase id="tel-value-8" purpose="Test checks that element can accept the phone number with whitespace" result="PASS" /><testcase id="tel-value-9" purpose="Test checks that element can accept the phone number with leading and following whitespaces" result="PASS" /><testcase id="url-not-allow-insert-LF-CR" purpose="Test checks that the value must not allow users to insert LF or CR characters into the value" result="PASS" /><testcase id="url-support" purpose="Test checks that url type supported on input element" result="PASS" /><testcase id="url-value-1" purpose="Test checks that the value sanitization algorithm is as follows: Strip line breaks from the value" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/JavaScript related HTML5 Enhancements"><testcase id="document_getElementsByClassName_argument_blank" purpose="Check if document.getElementsByClassName attribute argument set blank partition ,then compare document.getElementsByClassName.length is 1" result="PASS" /><testcase id="document_getElementsByClassName_exists" purpose="Check if the document object has getElementsByClassName method" result="PASS" /><testcase id="element_classList_add" purpose="Check if element.classList.add method set 'd3',then compare document.classList.length is 3" result="PASS" /><testcase id="element_classList_add_case_sensitive" purpose="Check if element.classList.add method set 'D3',then compare document.classList.item should not be 'd3'" result="PASS" /><testcase id="element_classList_add_empty_string" purpose="Check if element.classList.add method set empty stirng,then throw SYNTAX_ERR exception" result="PASS" /><testcase id="element_classList_add_exists" purpose="Check if element.classList.add method exists" result="PASS" /><testcase id="element_classList_add_space_characters" purpose="Check if element.classList.add method set space characters,then throw INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="element_classList_add_type" purpose="Check if element.classList.add method is of type function" result="PASS" /><testcase id="element_classList_contains" purpose="Check if element.classList.contains method set 'd1',then compare document.classList.contains is true" result="PASS" /><testcase id="element_classList_contains_case_sensitive" purpose="Check if element.classList.contains method set 'D1',then compare document.classList.contains is false" result="PASS" /><testcase id="element_classList_contains_empty_string" purpose="Check if element.classList.contains method set empty string,then throw SYNTAX_ERR exception" result="PASS" /><testcase id="element_classList_contains_exists" purpose="Check if element.classList.contains method exists" result="PASS" /><testcase id="element_classList_contains_return_type" purpose="Check if element.classList.contains method return value is of type boolean" result="PASS" /><testcase id="element_classList_contains_space_characters" purpose="Check if element.classList.contains method set space characters,then throw INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="element_classList_contains_type" purpose="Check if element.classList.contains method is of type function" result="PASS" /><testcase id="element_classList_exists" purpose="Check if the Element has classList attribute" result="PASS" /><testcase id="element_classList_item" purpose="Check if element.classList.item method set 0,then compare document.classList.item is 'd1'" result="PASS" /><testcase id="element_classList_item_exists" purpose="Check if element.classList.item method exists" result="PASS" /><testcase id="element_classList_item_lower" purpose="Check if element.classList.item method less than the number of tokens,then compare document.classList.item is null" result="PASS" /><testcase id="element_classList_item_return_type" purpose="Check if element.classList.item method return value is of type string" result="PASS" /><testcase id="element_classList_item_type" purpose="Check if element.classList.item method is of type function" result="PASS" /><testcase id="element_classList_item_upper" purpose="Check if element.classList.item method greater than the number of tokens,then compare document.classList.item is null" result="PASS" /><testcase id="element_classList_length" purpose="Check if element.classList.length attrbute compare document.classList.length is 2" result="PASS" /><testcase id="element_classList_length_exists" purpose="Check if element.classList.length attrbute exists" result="PASS" /><testcase id="element_classList_length_readonly" purpose="Check if element.classList.length attrbute is readonly" result="PASS" /><testcase id="element_classList_length_type" purpose="Check if element.classList.length attrbute is of type number" result="PASS" /><testcase id="element_classList_remove" purpose="Check if element.classList.remove method set 'd2',then compare document.classList.length is 1" result="PASS" /><testcase id="element_classList_remove_empty_string" purpose="Check if element.classList.remove method empty string,then throw SYNTAX_ERR exception" result="PASS" /><testcase id="element_classList_remove_exists" purpose="Check if element.classList.remove method exists" result="PASS" /><testcase id="element_classList_remove_space_characters" purpose="Check if element.classList.remove method space characters,then throw INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="element_classList_remove_type" purpose="Check if element.classList.remove method is of type function" result="PASS" /><testcase id="element_classList_stringifier" purpose="Check if a DOMTokenList object must stringify to the value of the DOMTokenList object's underlying string" result="PASS" /><testcase id="element_classList_toggle" purpose="Check if element.classList.toggle method set remove 'd2' and add 'd3',then compare document.classList.length is 2" result="PASS" /><testcase id="element_classList_toggle_case_sensitive" purpose="Check if element.classList.toggle method set add 'D2' and add 'd3',then compare element.classList.length is 4" result="PASS" /><testcase id="element_classList_toggle_empty_string" purpose="Check if element.classList.toggle method set empty string,then throw SYNTAX_ERR exception" result="PASS" /><testcase id="element_classList_toggle_exists" purpose="Check if element.classList.toggle method exists" result="PASS" /><testcase id="element_classList_toggle_space_characters" purpose="Check if element.classList.toggle method set space characters,then throw INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="element_classList_toggle_type" purpose="Check if element.classList.toggle method is of type function" result="PASS" /><testcase id="element_matchesSelector_exists" purpose="Check if the Element has matchesSelector attribute" result="PASS" /><testcase id="script_async_exists" purpose="Check if the script element has async attribute" result="PASS" /><testcase id="script_defer_exists" purpose="Check if the script element has defer attribute" result="PASS" /><testcase id="window_hashchange_event_exists" purpose="Check if the window has hashchange event" result="PASS" /><testcase id="window_hashchange_initHashChangeEvent_type" purpose="Check if window.hashchange.initHashChangeEvent is of type function" result="PASS" /><testcase id="window_hashchange_newURL" purpose="Check if change location.hash,then compare window.hashchange.newURL is 'window_hashchange_newURL.html#test'" result="PASS" /><testcase id="window_hashchange_newURL_readonly" purpose="Check if window.hashchange.newURL attrbute is readonly" result="PASS" /><testcase id="window_hashchange_newURL_type" purpose="Check if window.hashchange.newURL attrbute is of type string" result="PASS" /><testcase id="window_hashchange_oldURL" purpose="Check if change location.hash,then compare window.hashchange.oldURL is 'window_hashchange_oldURL.html'" result="PASS" /><testcase id="window_hashchange_oldURL_readonly" purpose="Check if window.hashchange.oldURL attrbute is readonly" result="PASS" /><testcase id="window_hashchange_oldURL_type" purpose="Check if window.hashchange.oldURL attrbute is of type string" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/Media Queries"><testcase id="CSS3MQ_aspect-ratio_max_value_1virgule0" purpose="Set 'screen; min-aspect-ratio:1/0' on CSS3 Media Queries aspect-ratio attribute, this text will not displays in red" result="PASS" /><testcase id="CSS3MQ_aspect-ratio_max_value_1virgule1" purpose="Set 'screen; max-aspect-ratio:1/1' on CSS3 Media Queries aspect-ratio attribute, When the page is visible in the output device and the page width and height ratio is less than or equal to 1/1, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_aspect-ratio_min_59virgule79" purpose="Set 'min-aspect-ratio:59/79' on CSS3 Media Queries aspect-ratio, When the page is visible in the output device and the ratio of the page width and height is more than or equal to 59/79, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_aspect-ratio_min_value_0virgule1" purpose="Set 'screen; min-aspect-ratio:0/1' on CSS3 Media Queries aspect-ratio attribute, When the page is visible in the output device and the page width and height ratio is more than or equal to 0/1,this text will displays in red" result="PASS" /><testcase id="CSS3MQ_aspect-ratio_value_59virgule80" purpose="Set 'screen; aspect-ratio:59/80' on CSS3 Media Queries, When the page is visible in the output device and the page width and height ratio is equal to 59/80, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_color_max_0" purpose="Set 'max-color:0' on the CSS3 Media color attribute,when the device is not a color device, the value of color is zero, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_color_max_255" purpose="Set 'max-color:255' on the CSS3 Media color attribute, when the number of bits per color component of your  output device is less than or equals to 256, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_color_max_neg_1" purpose="The values of the max-color property can not be negative. When set 'max-color:-1' on the CSS3 Media color attribute, this text will not displays in red" result="PASS" /><testcase id="CSS3MQ_color_min_2" purpose="Set 'min-color:2' on the CSS3 Media color attribute, when the number of bits per color component of the output device is greater than or equals to 2, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_color_min_neg_0" purpose="Set 'min-color:-0' on the CSS3 Media color attribute, when the number of bits per color component of the output device is greater than or equals to 0, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_color_min_neg_1" purpose="Set 'min-color:-1' on the CSS3 Media color attribute, when your device is greater than -1 in color, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_device-aspect-ratio_max_value_1281virgule1024" purpose="Set 'screen;max-device-aspect-ratio: 1281/1024' on the CSS3 Media Queries device-aspect-ratio attribute, When the output device screen resolution is less than or equal to 1281/1024, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_device-aspect-ratio_max_value_1virgule0" purpose="Set 'screen;max-device-aspect-ratio: 1/0' on the CSS3 Media Queries device-aspect-ratio attribute, this text will not displays in red" result="PASS" /><testcase id="CSS3MQ_device-aspect-ratio_min_1280virgule1024" purpose="Set 'min-device-aspect-ratio:1280/1024'on CSS3 Media Queries device-aspect-ratio attribute, When the output device screen resolution is more than or equal to 1280:1024, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_device-aspect-ratio_min_value_0virgule1" purpose="Set 'screen; min-device-aspect-ratio: 0/1' on the CSS3 Media Queries device-aspect-ratio attribute, when the value of the device-aspect-ratio attribute of your the output device is greater than or equals to  0/1,  this text will displays in red" result="PASS" /><testcase id="CSS3MQ_device-aspect-ratio_value_1280virgule1024" purpose="Set 'screen;device-aspect-ratio: 1280/1024;' on CSS3 Media Queries device-aspect-ratio attribute, When the output device screen resolution is 1280/1024 the text will become red" result="PASS" /><testcase id="CSS3MQ_device-height_max_vaule_1300px" purpose="Set 'max-device-height: 1300px' on CSS3 Media Queries device-height attribute, when your device is less than or equals to 1300px in height, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_device-height_max_vaule_neg_1300px" purpose="Set 'max-device-height: -1300px' on CSS3 Media Queries device-height attribute,this text will not displays in red" result="PASS" /><testcase id="CSS3MQ_device-height_min_neg_0" purpose="Set 'min-device-height:-0;' on CSS3 Media Queries device-height attribute, When your output device resolution is set greater than or equal to 0px in height, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_device-height_value_1024px" purpose="Set 'screen;device-height:1024px;' When your output device is 1024px in height, the text will displays in red" result="PASS" /><testcase id="CSS3MQ_device-height_value_between_900px_and_1200px" purpose="Set 'screen;max-device-height: 1200px;min-device-height: 900px' on CSS3 Media Queries device-height attribute, When your output device is between 900px and 1200px in height ,the text will displays in red" result="PASS" /><testcase id="CSS3MQ_device-width_max_positive" purpose="Set 'max-device-width: 960px;' on CSS3 Media Queries height attribute; When the browser width is less than 960px, the text will displays in orange" result="PASS" /><testcase id="CSS3MQ_device-width_min_neg_0" purpose="Set 'min-device-width:-0;' on CSS3 Media Queries device-width attribute, When your output device resolution is set greater than or equal to 0px in width, this text will displays in red" result="PASS" /><testcase id="CSS3MQ_device-width_value_1280px" purpose="Set 'screen;device-width:1280px;' When your output device is 1024px in width ,the text will displays in red" result="PASS" /><testcase id="CSS3MQ_device-width_value_between_900px_and_1200px" purpose="Set 'screen;max-device-width: 1200px;min-device-width: 900px' on CSS3 Media Queries device-width attribute, When your output device is between 900px and 1200px in width ,the text will displays in red" result="PASS" /><testcase id="CSS3MQ_height_min_neg_0" purpose="Set 'min-height:-0' on the Media Queries height attribute, when the page is visible and the height is more than or equal to 0, this text will displays in red." result="PASS" /><testcase id="CSS3MQ_height_value_800px" purpose="Set 'height: 800px' on CSS3 Media Queries height attribute, When the browser height is 800px, the text will displays in red" result="PASS" /><testcase id="CSS3MQ_height_value_between_900px_and_1200px" purpose="Set 'max-height: 1200px;min-height: 900px' on the Media Queries height attribute; When your output device is between 900px and 1200px in height, the text will display in red" result="PASS" /><testcase id="CSS3MQ_height_value_max_1300px" purpose="Set 'max-height: 1300px' on CSS3 Media Queries width attribute; When the browser height is less than or equal to 1300px, the text will displays in red" result="PASS" /><testcase id="CSS3MQ_height_value_max_neg_1300px" purpose="Set 'max-height: -1300px' on CSS3 Media Queries width attribute, When the browser height is less than or equal to -1300px, the text will displays in red" result="PASS" /><testcase id="CSS3MQ_height_value_neg_800px" purpose="Set 'height: -800px' on CSS3 Media Queries height attribute, the text will not displays in red" result="PASS" /><testcase id="CSS3MQ_Mediaqueries_at_import" purpose="Check that with 'media='screen and (color), projection and (color)'' mode to test the media queries syntax in HTML" result="PASS" /><testcase id="CSS3MQ_Mediaqueries_at_media" purpose="Check that with '@media screen and (color), projection and (color) {�}' mode to test the media queries syntax" result="PASS" /><testcase id="CSS3MQ_Mediaqueries_import-rule" purpose="Check that with '@import url(example.css) screen and (color), projection and (color);' mode to test the media queries syntax" result="PASS" /><testcase id="CSS3MQ_media_aspect_ratio" purpose="When the page is visible in the output device and the ratio of width and height is less than or equal to 20:11, the Bank text is displayed in red" result="PASS" /><testcase id="CSS3MQ_media_color" purpose="When your output device is support for color, the Bank text is displayed in red" result="PASS" /><testcase id="CSS3MQ_media_device_aspect_ratio" purpose="When the output device screen resolution is set to  16:10, the Bank text is displayed in red" result="PASS" /><testcase id="CSS3MQ_media_device_height" purpose="When your output device resolution is set to more than 800px in height, the Bank text is displayed in red" result="PASS" /><testcase id="CSS3MQ_media_device_width" purpose="When your output device resolution width is set to 1024px, the Bank text is displayed in red" result="PASS" /><testcase id="CSS3MQ_media_height" purpose="When the page is visible and the height is greater than 100px less than 500px, the Bank text is displayed in red." result="PASS" /><testcase id="CSS3MQ_media_orientation" purpose="When the page is visible in the output device and the width is greater than height, the Bank text is displayed in red" result="PASS" /><testcase id="CSS3MQ_orientation_value_all_landscape" purpose="Set 'all; orientation:landscape' on CSS3 Media Queries orientation attribute, When the orientation of your device is landscape, the text displays in red" result="PASS" /><testcase id="CSS3MQ_orientation_value_all_portrait" purpose="Set 'all; orientation:portrait' on CSS3 Media Queries orientation attribute, When the orientation of your device is portrait, the text will displays in red" result="PASS" /><testcase id="CSS3MQ_orientation_value_screen_landscape" purpose="Set 'screen; orientation:landscape' on the Media Queries orientation attribute, When the Orientation of your device screen is landscape, the text will display in red." result="PASS" /><testcase id="CSS3MQ_orientation_value_screen_portrait" purpose="Set 'screen;orientation:portrait;' on the Media Queries orientation attribute; When the Orientation of your device screen is portrait, the text will display in red" result="PASS" /><testcase id="CSS3MQ_width_min-width_positive_max-width_positive" purpose="Set '(min-width:400px) and (max-width:700px)' on CSS3 Media Queries width attribute, when the browser width is between 400px and 700px, the text will displays in red" result="PASS" /><testcase id="CSS3MQ_width_min_neg_0" purpose="Set 'min-width:-0' on the Media Queries width attribute, when the page is visible and the width is more than or equal to 0, this text will displays in red." result="PASS" /><testcase id="CSS3MQ_width_screen_positive" purpose="Set 'width: 800px' on CSS3 Media Queries width attribute, When the browser width is 800px, the text will displays in orange" result="PASS" /><testcase id="CSS3MQ_width_value_between_900px_and_1200px" purpose="Set 'max-width: 1200px;min-width: 900px' on the Media Queries width attribute; when the browser width is between 900px and 1200px, the text will display in red" result="PASS" /><testcase id="CSS3MQ_width_value_max_1300px" purpose="Set 'max-width: 1300px;' on CSS3 Media Queries width attribute; When the browser width is less than 1300px the text will displays in red" result="PASS" /><testcase id="CSS3MQ_width_value_max_neg_1300px" purpose="Set 'max-width: -1300px;' on CSS3 Media Queries width attribute, When the browser width is less than -1300px, the text will displays in red" result="PASS" /><testcase id="CSS3MQ_width_value_neg_800px" purpose="Set 'width: -800px' on CSS3 Media Queries width attribute, When the browser width is equal to -800px,the text will displays in red" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/Selectors API Level 1"><testcase id="selectors1_documentfragment_queryselectorall_argument_class" purpose="Check if documentfragment.querySelectorAll() method with argument of class name should return the expected number of matches" result="PASS" /><testcase id="selectors1_documentfragment_queryselectorall_argument_class_id" purpose="Check if DocumentFragment.querySelectorAll() method with argument of classname and id that return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_documentfragment_queryselectorall_argument_id" purpose="Check if documentfragment.querySelectorAll() method with argument of id name should return the expected number of matches" result="PASS" /><testcase id="selectors1_documentfragment_queryselectorall_argument_null" purpose="Check if DocumentFragment.querySelectorAll() method with argument of null that return object type of NodeList" result="PASS" /><testcase id="selectors1_documentfragment_queryselectorall_argument_tag" purpose="Check if documentfragment.querySelectorAll() method with argument of tag name should return the expected number of matches" result="PASS" /><testcase id="selectors1_documentfragment_queryselectorall_argument_tag_class" purpose="Check if DocumentFragment.querySelectorAll() method with argument of tag name and classname that return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_documentfragment_queryselectorall_argument_tag_id" purpose="Check if DocumentFragment.querySelectorAll() method with argument of tag name and id that return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_documentfragment_queryselectorall_argument_tag_tag" purpose="Check if DocumentFragment.querySelectorAll() method with argument of 2 tags name that return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_documentfragment_queryselectorall_exists" purpose="Check if DocumentFragment.querySelectorAll() method exists" result="PASS" /><testcase id="selectors1_documentfragment_queryselectorall_return_empty_nodelist" purpose="Check if DocumentFragment.querySelectorAll() method must return an empty NodeList if there are no matching Element nodes" result="PASS" /><testcase id="selectors1_documentfragment_queryselectorall_return_nodelist" purpose="Check if DocumentFragment.querySelectorAll() method return a NodeList containing all of the matching Element nodes within the subtrees of the context node, in document order" result="PASS" /><testcase id="selectors1_documentfragment_queryselectorall_type" purpose="Check if DocumentFragment.querySelectorAll() method is of type function" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_argument_class" purpose="Check if documentfragment.querySelector() method must match element with specified class" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_argument_class_id" purpose="Check if DocumentFragment.querySelector() method with argument of element's classname and id that return the first matching Element node with argument of element class" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_argument_id" purpose="Check if documentfragment.querySelector() method must match element with specified id" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_argument_null" purpose="Check if DocumentFragment.querySelector() method with argument of null that must return null" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_argument_tag" purpose="Check if documentfragment.querySelector() method must match element with specified tag" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_argument_tag_class" purpose="Check if DocumentFragment.querySelector() method with argument of element's tag name and classname that return the first matching Element node" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_argument_tag_id" purpose="Check if DocumentFragment.querySelector() method with argument of element's tag name and id that return the first matching Element node" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_argument_tag_tag" purpose="Check if DocumentFragment.querySelector() method with argument of element's 2 tags name that return the first matching Element node" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_exists" purpose="Check if DocumentFragment.querySelector() method exists" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_return_first" purpose="Check if DocumentFragment.querySelector() method must return the first matching Element node within the subtrees of the context node" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_return_null" purpose="Check if DocumentFragment.querySelector() method return null if there is no matching Element" result="PASS" /><testcase id="selectors1_documentfragment_queryselector_type" purpose="Check if DocumentFragment.querySelector() method is of type function" result="PASS" /><testcase id="selectors1_document_queryselectorall_argument_class" purpose="Check if document.querySelectorAll() method with argument of class name should return the expected number of matches" result="PASS" /><testcase id="selectors1_document_queryselectorall_argument_class_id" purpose="Check if document.querySelectorAll() method with argument of element's classname and id that must return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_document_queryselectorall_argument_id" purpose="Check if document.querySelectorAll() method with argument of id name should return the expected number of matches" result="PASS" /><testcase id="selectors1_document_queryselectorall_argument_null" purpose="Check if document.querySelectorAll() method with argument of null that return object type of NodeList" result="PASS" /><testcase id="selectors1_document_queryselectorall_argument_tag" purpose="Check if document.querySelectorAll() method with argument of tag name should return the expected number of matches" result="PASS" /><testcase id="selectors1_document_queryselectorall_argument_tag_class" purpose="Check if document.querySelectorAll() method with argument of element's tag name and classname that must return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_document_queryselectorall_argument_tag_id" purpose="Check if document.querySelectorAll() method with argument of element's tag name and id that must return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_document_queryselectorall_argument_tag_tag" purpose="Check if document.querySelectorAll() method with argument of element's 2 tags name that must return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_document_queryselectorall_exists" purpose="Check if document.querySelectorAll() method exists" result="PASS" /><testcase id="selectors1_document_queryselectorall_return_empty_nodelist" purpose="Check if document.querySelectorAll() method must return an empty NodeList if there are no matching nodes" result="PASS" /><testcase id="selectors1_document_queryselectorall_return_nodelist" purpose="Check if document.querySelectorAll() method return a NodeList containing all of the matching Element nodes within the subtrees of the context node" result="PASS" /><testcase id="selectors1_document_queryselectorall_type" purpose="Check if document.querySelectorAll() method is of type function" result="PASS" /><testcase id="selectors1_document_queryselector_argument_class" purpose="Check if document.querySelector() method must match element with specified class" result="PASS" /><testcase id="selectors1_document_queryselector_argument_class_id" purpose="Check if document.querySelector() method with argument of element's classname and id that must return the first matching Element node" result="PASS" /><testcase id="selectors1_document_queryselector_argument_id" purpose="Check if document.querySelector() method must match element with specified id" result="PASS" /><testcase id="selectors1_document_queryselector_argument_null" purpose="Check if document.querySelector() method with argument of null that must return null" result="PASS" /><testcase id="selectors1_document_queryselector_argument_tag" purpose="Check if document.querySelector() method must match element with specified tag" result="PASS" /><testcase id="selectors1_document_queryselector_argument_tag_class" purpose="Check if document.querySelector() method with argument of element's tag name and classname that must return the first matching Element node" result="PASS" /><testcase id="selectors1_document_queryselector_argument_tag_id" purpose="Check if document.querySelector() method with argument of element's tag name and id that must return the first matching Element node" result="PASS" /><testcase id="selectors1_document_queryselector_argument_tag_tag" purpose="Check if document.querySelector() method with argument of element's 2 tags name that must return the first matching Element node" result="PASS" /><testcase id="selectors1_document_queryselector_exists" purpose="Check if document.querySelector() method exists" result="PASS" /><testcase id="selectors1_document_queryselector_return_first" purpose="Check if document.querySelector() method must return the first matching Element node within the subtrees of the context node" result="PASS" /><testcase id="selectors1_document_queryselector_return_null" purpose="Check if document.querySelector() method return null if there is no matching Element" result="PASS" /><testcase id="selectors1_document_queryselector_type" purpose="Check if document.querySelector() method is of type function" result="PASS" /><testcase id="selectors1_element_queryselectorall_argument_class" purpose="Check if element.querySelectorAll() method with argument of class name should return the expected number of matches" result="PASS" /><testcase id="selectors1_element_queryselectorall_argument_class_id" purpose="Check if element.querySelectorAll() method with argument of element's classname and id that must return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_element_queryselectorall_argument_id" purpose="Check if element.querySelectorAll() method with argument of id name should return the expected number of matches" result="PASS" /><testcase id="selectors1_element_queryselectorall_argument_null" purpose="Check if element.querySelectorAll() method with argument of null that return object type of NodeList" result="PASS" /><testcase id="selectors1_element_queryselectorall_argument_tag" purpose="Check if element.querySelectorAll() method with argument of tag name should return the expected number of matches" result="PASS" /><testcase id="selectors1_element_queryselectorall_argument_tag_class" purpose="Check if element.querySelectorAll() method with argument of element's tag name and classname that must return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_element_queryselectorall_argument_tag_id" purpose="Check if element.querySelectorAll() method with argument of element's tag name and id that must return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_element_queryselectorall_argument_tag_tag" purpose="Check if element.querySelectorAll() method with argument of element's 2 tags name that must return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors1_element_queryselectorall_exists" purpose="Check if element.querySelectorAll() method exists" result="PASS" /><testcase id="selectors1_element_queryselectorall_return_empty_nodelist" purpose="Check if element.querySelectorAll() method return an empty NodeList if there are no matching nodes" result="PASS" /><testcase id="selectors1_element_queryselectorall_return_nodelist" purpose="Check if element.querySelectorAll() method must return a NodeList containing all of the matching Element nodes within the subtrees of the context node, in document order" result="PASS" /><testcase id="selectors1_element_queryselectorall_type" purpose="Check if element.querySelectorAll() method is of type function" result="PASS" /><testcase id="selectors1_element_queryselector_argument_class" purpose="Check if element.querySelector() method must match element with specified class" result="PASS" /><testcase id="selectors1_element_queryselector_argument_class_id" purpose="Check if element.querySelector() method with argument of element's classname and id that must return the first matching Element node" result="PASS" /><testcase id="selectors1_element_queryselector_argument_id" purpose="Check if element.querySelector() method must match element with specified id" result="PASS" /><testcase id="selectors1_element_queryselector_argument_null" purpose="Check if element.querySelector() method with argument of null that must return null" result="PASS" /><testcase id="selectors1_element_queryselector_argument_tag" purpose="Check if element.querySelector() method must match element with specified tag" result="PASS" /><testcase id="selectors1_element_queryselector_argument_tag_class" purpose="Check if element.querySelector() method with argument of element's tag name and classname that must return the first matching Element node" result="PASS" /><testcase id="selectors1_element_queryselector_argument_tag_id" purpose="Check if element.querySelector() method with argument of element's tag name and id that must return the first matching Element node" result="PASS" /><testcase id="selectors1_element_queryselector_argument_tag_tag" purpose="Check if element.querySelector() method with argument of element's 2 tags name that must return the first matching Element node" result="PASS" /><testcase id="selectors1_element_queryselector_exists" purpose="Check if element.querySelector() method exists" result="PASS" /><testcase id="selectors1_element_queryselector_return_first" purpose="Check if element.querySelector() method must return the first matching Element node within the subtrees of the context node" result="PASS" /><testcase id="selectors1_element_queryselector_return_null" purpose="Check if element.querySelector() method return null if there is no matching Element" result="PASS" /><testcase id="selectors1_element_queryselector_type" purpose="Check if element.querySelector() method is of type function" result="PASS" /></category><category name="W3C_HTML5 APIs/DOM, Forms and Styles/Selectors API Level 2"><testcase id="selectors2_body_nodeType" purpose="Check if the querySelector('body') returns an element with nodeType == 1" result="PASS" /><testcase id="selectors2_documentfragment_findAll_empry_string" purpose="Check if this should throw a SyntaxError when the parameter of documentfragment.findAll() is empty string" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_findAll_invalid_class" purpose="Check if this should throw a SyntaxError when the parameter of documentfragment.findAll() is invalid class" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_findAll_invalid_id" purpose="Check if this should throw a SyntaxError when the parameter of documentfragment.findAll() is invalid id" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_findAll_invalid_namespace" purpose="Check if this should throw a SyntaxError when the parameter of documentfragment.findAll() is invalid namespace" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_findAll_no_paramenter" purpose="Check if this should throw a TypeError when the documentfragment.findAll() is no parameter" result="PASS" /><testcase id="selectors2_documentfragment_findAll_null" purpose="Check if the return value is null when the parameter of documentfragment.findAll() is null" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_findAll_support" purpose="Check if DocumentFragment supports findAll method" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_findAll_undefined" purpose="Check if the return value is undefined when the parameter of documentfragment.findAll() is undefined" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_find_empry_string" purpose="Check if this should throw a SyntaxError when the parameter of documentfragment.find() is empty string" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_find_invalid_class" purpose="Check if this should throw a SyntaxError when the parameter of documentfragment.find() is invalid class" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_find_invalid_id" purpose="Check if this should throw a SyntaxError when the parameter of documentfragment.find() is invalid id" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_find_invalid_namespace" purpose="Check if this should throw a SyntaxError when the parameter of documentfragment.find() is invalid namespace" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_find_no_paramenter" purpose="Check if this should throw a TypeError when the documentfragment.find() is no parameter" result="PASS" /><testcase id="selectors2_documentfragment_find_null" purpose="Check if the return value is null when the parameter of documentfragment.find() is null" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_find_support" purpose="Check if DocumentFragment supports find method" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_find_undefined" purpose="Check if the return value is undefined when the parameter of documentfragment.find() is undefined" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_documentfragment_queryselectorall_exists" purpose="Check if NodeSelector DocumentFragment.querySelectorAll() method exists" result="PASS" /><testcase id="selectors2_documentfragment_queryselectorall_refNodes_document" purpose="Check if the DocumentFragment.querySelectorAll() method with two parameters that the second is document executes well" result="PASS" /><testcase id="selectors2_documentfragment_queryselectorall_refNodes_element" purpose="Check if the DocumentFragment.querySelectorAll() method with two parameters that the second is element executes well" result="PASS" /><testcase id="selectors2_documentfragment_queryselector_exists" purpose="Check if NodeSelector DocumentFragment.querySelector() method exists" result="PASS" /><testcase id="selectors2_documentfragment_queryselector_refNodes_document" purpose="Check if the DocumentFragment.querySelector() method with two parameters that the second is document executes well" result="PASS" /><testcase id="selectors2_documentfragment_queryselector_refNodes_element" purpose="Check if the DocumentFragment.querySelector() method with two parameters that the second is element executes well" result="PASS" /><testcase id="selectors2_document_findAll_base" purpose="Check if the document.findAll() with refNode Element matches all children of the specified reference element" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_findAll_empry_string" purpose="Check if this should throw a SyntaxError when the parameter of document.findAll() is empty string" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_findAll_invalid_class" purpose="Check if this should throw a SyntaxError when the parameter of document.findAll() is invalid class" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_findAll_invalid_id" purpose="Check if this should throw a SyntaxError when the parameter of document.findAll() is invalid id" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_findAll_invalid_namespace" purpose="Check if this should throw a SyntaxError when the parameter of document.findAll() is invalid namespace" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_findAll_mandatory" purpose="Check if the document.findAll() with no refNodes matches all children of the specified reference element" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_findAll_no_paramenter" purpose="Check if this should throw a TypeError when the document.findAll() is no parameter" result="PASS" /><testcase id="selectors2_document_findAll_null" purpose="Check if the return value is null when the parameter of document.findAll() is null" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_findAll_support" purpose="Check if document supports findAll method" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_findAll_undefined" purpose="Check if the return value is undefined when the parameter of document.findAll() is undefined" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_findAll_valid_class" purpose="Check if the document.findAll('class') matches element with specified class" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_findAll_valid_id" purpose="Check if the document.findAll('id') matches element with specified id" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_find_base" purpose="Check if the document.find() with refNode Element matches all children of the specified reference element" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_find_empry_string" purpose="Check if this should throw a SyntaxError when the parameter of document.find() is empty string" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_find_invalid_class" purpose="Check if this should throw a SyntaxError when the parameter of document.find() is invalid class" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_find_invalid_id" purpose="Check if this should throw a SyntaxError when the parameter of document.find() is invalid id" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_find_invalid_namespace" purpose="Check if this should throw a SyntaxError when the parameter of document.find() is invalid namespace" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_find_mandatory" purpose="Check if the document.find() with no refNodes matches all children of the specified reference element" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_find_no_paramenter" purpose="Check if this should throw a TypeError when the document.find() is no parameter" result="PASS" /><testcase id="selectors2_document_find_null" purpose="Check if the return value is null when the parameter of document.find() is null" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_find_support" purpose="Check if document supports find method" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_find_undefined" purpose="Check if the return value is undefined when the parameter of document.find() is undefined" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_find_valid_class" purpose="Check if the document.find('class') matches element with specified class" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_find_valid_id" purpose="Check if the document.find('id') matches element with specified id" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_document_queryselectorall_argument_string" purpose="Check if NodeSelector document.querySelectorAll() method with argument of string that must return a NodeList containing all of the matching Element nodes" result="PASS" /><testcase id="selectors2_document_queryselectorall_exists" purpose="Check if NodeSelector document.querySelectorAll() method exists" result="PASS" /><testcase id="selectors2_document_queryselectorall_refNodes_document" purpose="CCheck if the document.querySelectorAll() method with two parameters that the second is document executes well" result="PASS" /><testcase id="selectors2_document_queryselectorall_refNodes_element" purpose="Check if the document.querySelectorAll() method with two parameters that the second is element executes well" result="PASS" /><testcase id="selectors2_document_queryselectorall_return_nodelist" purpose="Check if NodeSelector document.querySelectorAll() method must return a NodeList if there are matching Element nodes within the subtrees of the context node" result="PASS" /><testcase id="selectors2_document_queryselector_argument_string" purpose="Check if NodeSelector document.querySelector() method with argument of string that must return the first matching Element node" result="PASS" /><testcase id="selectors2_document_queryselector_exists" purpose="Check if NodeSelector document.querySelector() method exists" result="PASS" /><testcase id="selectors2_document_queryselector_refNodes_document" purpose="Check if the document.querySelector() method with two parameters that the second is document executes well" result="PASS" /><testcase id="selectors2_element_findAll_empry_string" purpose="Check if this should throw a SyntaxError when the parameter of element.findAll() is empty string" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_findAll_invalid_class" purpose="Check if this should throw a SyntaxError when the parameter of element.findAll() is invalid class" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_findAll_invalid_id" purpose="Check if this should throw a SyntaxError when the parameter of element.findAll() is invalid id" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_findAll_invalid_namespace" purpose="Check if this should throw a SyntaxError when the parameter of element.findAll() is invalid namespace" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_findAll_no_paramenter" purpose="Check if this should throw a TypeError when the element.findAll() is no parameter" result="PASS" /><testcase id="selectors2_element_findAll_null" purpose="Check if the return value is null when the parameter of element.findAll() is null" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_findAll_support" purpose="Check if element supports findAll method" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_findAll_undefined" purpose="Check if the return value is undefined when the parameter of element.findAll() is undefined" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_find_empry_string" purpose="Check if this should throw a SyntaxError when the parameter of element.find() is empty string" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_find_invalid_class" purpose="Check if this should throw a SyntaxError when the parameter of element.find() is invalid class" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_find_invalid_id" purpose="Check if this should throw a SyntaxError when the parameter of element.find() is invalid id" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_find_invalid_namespace" purpose="Check if this should throw a SyntaxError when the parameter of element.find() is invalid namespace" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_find_no_paramenter" purpose="Check if this should throw a TypeError when the element.find() is no parameter" result="PASS" /><testcase id="selectors2_element_find_null" purpose="Check if the return value is null when the parameter of element.find() is null" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_find_support" purpose="Check if element supports find method" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_find_undefined" purpose="Check if the return value is undefined when the parameter of element.find() is undefined" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="selectors2_element_matches_argument_string" purpose="Check if element.matches() method with arguments of string that return true" result="PASS" /><testcase id="selectors2_element_matches_body_div" purpose="Check if the return value of matches('div', 'body div') is true" result="PASS" /><testcase id="selectors2_element_matches_body_gt_div" purpose="Check if the return value of matches('div', 'body &gt; div') is true" result="PASS" /><testcase id="selectors2_element_matches_exists" purpose="Check if element.matches() method exists" result="PASS" /><testcase id="selectors2_element_queryselectorall_exists" purpose="Check if NodeSelector element.querySelectorAll() method exists" result="PASS" /><testcase id="selectors2_element_queryselectorall_refNodes_document" purpose="Check if the element.querySelectorAll() method with two parameters that the second is document executes well" result="PASS" /><testcase id="selectors2_element_queryselectorall_refNodes_element" purpose="Check if the element.querySelectorAll() method with two parameters that the second is element executes well" result="PASS" /><testcase id="selectors2_element_queryselector_exists" purpose="Check if the type of NodeSelector element.querySelector() is 'unction'" result="PASS" /><testcase id="selectors2_element_queryselector_refNodes_document" purpose="Check if the element.querySelector() method with two parameters that the second is document executes well" result="PASS" /><testcase id="selectors2_element_queryselector_refNodes_element" purpose="Check if the element.querySelector() method with two parameters that the second is element executes well" result="PASS" /><testcase id="selectors2_level1_baseline" purpose="Check if the NodeSelector interface implements in Document node, In-document Element node, Detached Element node and Document Fragment node" result="PASS" /><testcase id="selectors2_matches_type" purpose="Check if the type of element.matches is 'function'" result="PASS" /><testcase id="selectors2_querySelectorAll_type" purpose="Check if the type of document.querySelectorAll is 'function'" result="PASS" /><testcase id="selectors2_querySelector_type" purpose="Check if the type of document.querySelector is 'function'" result="PASS" /></category><category name="W3C_HTML5 APIs/Media/Web Audio API"><testcase id="analysernode_fftSize_exists" purpose="Check if AnalyserNode.fftSize attribute exists" result="PASS" /><testcase id="analysernode_fftSize_type" purpose="Check if the type of AnalyserNode.fftSize is number" result="PASS" /><testcase id="analysernode_fftSize_value" purpose="Check if AnalyserNode.fftSize attribute value is number" result="PASS" /><testcase id="analysernode_frequencyBinCount_exists" purpose="Check if AnalyserNode.frequencyBinCount attribute exists" result="PASS" /><testcase id="analysernode_frequencyBinCount_readonly" purpose="Check if AnalyserNode.frequencyBinCount attribute is readonly" result="PASS" /><testcase id="analysernode_frequencyBinCount_type" purpose="Check if the type of AnalyserNode.frequencyBinCount is number" result="PASS" /><testcase id="analysernode_frequencyBinCount_value" purpose="Check if AnalyserNode.frequencyBinCount attribute value is half the fftSize" result="PASS" /><testcase id="analysernode_getByteFrequencyData_base" purpose="Check if AnalyserNode.getByteFrequencyData method executes well with Uint8Array parameter" result="PASS" /><testcase id="analysernode_getByteFrequencyData_exists" purpose="Check if AnalyserNode.getByteFrequencyData method exists" result="PASS" /><testcase id="analysernode_getByteFrequencyData_type" purpose="Check if the type of AnalyserNode.getByteFrequencyData is function" result="PASS" /><testcase id="analysernode_getByteTimeDomainData_base" purpose="Check if AnalyserNode.getByteTimeDomainData method executes well with Uint8Array parameter" result="PASS" /><testcase id="analysernode_getByteTimeDomainData_exists" purpose="Check if AnalyserNode.getByteTimeDomainData method exists" result="PASS" /><testcase id="analysernode_getByteTimeDomainData_type" purpose="Check if the type of AnalyserNode.getByteTimeDomainData is function" result="PASS" /><testcase id="analysernode_getFloatFrequencyData_base" purpose="Check if AnalyserNode.getFloatFrequencyData method executes well with Float32Array parameter" result="PASS" /><testcase id="analysernode_getFloatFrequencyData_exists" purpose="Check if AnalyserNode.getFloatFrequencyData method exists" result="PASS" /><testcase id="analysernode_getFloatFrequencyData_type" purpose="Check if the type of AnalyserNode.getFloatFrequencyData is function" result="PASS" /><testcase id="analysernode_maxDecibels_exists" purpose="Check if AnalyserNode.maxDecibels attribute exists" result="PASS" /><testcase id="analysernode_maxDecibels_type" purpose="Check if the type of AnalyserNode.maxDecibels is number" result="PASS" /><testcase id="analysernode_maxDecibels_value" purpose="Check if AnalyserNode.maxDecibels attribute value is float" result="PASS" /><testcase id="analysernode_minDecibels_exists" purpose="Check if AnalyserNode.minDecibels attribute exists" result="PASS" /><testcase id="analysernode_minDecibels_type" purpose="Check if the type of AnalyserNode.minDecibels attribute is number" result="PASS" /><testcase id="analysernode_minDecibels_value" purpose="Check if AnalyserNode.minDecibels attribute value is float" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="analysernode_smoothingTimeConstant_exists" purpose="Check if AnalyserNode.smoothingTimeConstant attribute exists" result="PASS" /><testcase id="analysernode_smoothingTimeConstant_type" purpose="Check if the type of AnalyserNode.smoothingTimeConstant is number" result="PASS" /><testcase id="analysernode_smoothingTimeConstant_value" purpose="Check if AnalyserNode.smoothingTimeConstant attribute value is float" result="PASS" /><testcase id="audiobuffersourcenode_buffer_exists" purpose="Check if AudioBufferSourceNode.buffer attribute exists" result="PASS" /><testcase id="audiobuffersourcenode_buffer_type" purpose="Check if the type of AudioBufferSourceNode.buffer is AudioBuffer" result="PASS" /><testcase id="audiobuffersourcenode_buffer_value" purpose="Check if the AudioBufferSourceNode.buffer is not null when set it a new AudioBufferSourceNode" result="PASS" /><testcase id="audiobuffersourcenode_FINISHED_STATE_value" purpose="Check if AudioBufferSourceNode.FINISHED_STATE value is 3" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiobuffersourcenode_loopEnd_default_value" purpose="Check if AudioBufferSourceNode.loopEnd attribute default value is 0" result="PASS" /><testcase id="audiobuffersourcenode_loopEnd_exists" purpose="Check if AudioBufferSourceNode.loopEnd attribute exists" result="PASS" /><testcase id="audiobuffersourcenode_loopEnd_type" purpose="Check if AudioBufferSourceNode.loopEnd attribute is type of number" result="PASS" /><testcase id="audiobuffersourcenode_loopEnd_value" purpose="Check if AudioBufferSourceNode.loopEnd attribute set value 0.5" result="PASS" /><testcase id="audiobuffersourcenode_loopStart_default_value" purpose="Check if AudioBufferSourceNode.loopStart attribute default value is 0" result="PASS" /><testcase id="audiobuffersourcenode_loopStart_exists" purpose="Check if AudioBufferSourceNode.loopStart attribute exists" result="PASS" /><testcase id="audiobuffersourcenode_loopStart_type" purpose="Check if AudioBufferSourceNode.loopStart attribute is type of number" result="PASS" /><testcase id="audiobuffersourcenode_loopStart_value" purpose="Check if AudioBufferSourceNode.loopStart attribute set value 0.5" result="PASS" /><testcase id="audiobuffersourcenode_loop_default_value" purpose="Check if the AudioBufferSourceNode.loop default value is false" result="PASS" /><testcase id="audiobuffersourcenode_loop_exists" purpose="Check if AudioBufferSourceNode.loop attribute exists" result="PASS" /><testcase id="audiobuffersourcenode_loop_type" purpose="Check if the type of AudioBufferSourceNode.loop is boolean" result="PASS" /><testcase id="audiobuffersourcenode_loop_value" purpose="Check if the AudioBufferSourceNode.loop is boolean value" result="PASS" /><testcase id="audiobuffersourcenode_playbackRate_default_value" purpose="Check if AudioBufferSourceNode.playbackRate.value default value is 1" result="PASS" /><testcase id="audiobuffersourcenode_playbackRate_exists" purpose="Check if AudioBufferSourceNode.playbackRate attribute exists" result="PASS" /><testcase id="audiobuffersourcenode_playbackRate_type" purpose="Check if the type of AudioBufferSourceNode.playbackRate is AudioParam" result="PASS" /><testcase id="audiobuffersourcenode_playbackState_initial_value" purpose="Check if the AudioBufferSourceNode.playbackState initial value is 0" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiobuffersourcenode_playbackState_start_value" purpose="Check if the AudioBufferSourceNode.playbackState is not 0 when start method is called" result="PASS" /><testcase id="audiobuffersourcenode_PLAYING_STATE_value" purpose="Check if AudioBufferSourceNode.PLAYING_STATE value is 2" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiobuffersourcenode_SCHEDULED_STATE_value" purpose="Check if AudioBufferSourceNode.SCHEDULED_STATE value is 1" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiobuffersourcenode_start_after_stop" purpose="Check if an exception thrown when AudioBufferSourceNode.start called after AudioBufferSourceNode.stop" result="PASS" /><testcase id="audiobuffersourcenode_start_base" purpose="Check if an audio source plays when AudioBufferSourceNode.start method called" result="PASS" /><testcase id="audiobuffersourcenode_start_exists" purpose="Check if AudioBufferSourceNode.start method exists" result="PASS" /><testcase id="audiobuffersourcenode_start_type" purpose="Check if the type of AudioBufferSourceNode.start is function" result="PASS" /><testcase id="audiobuffersourcenode_stop_base" purpose="Check if an audio source ends when AudioBufferSourceNode.stop method called" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiobuffersourcenode_stop_exists" purpose="Check if AudioBufferSourceNode.stop method exists" result="PASS" /><testcase id="audiobuffersourcenode_stop_twice" purpose="Check if an exception thrown when AudioBufferSourceNode.stop called twice" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiobuffersourcenode_stop_type" purpose="Check if the type of AudioBufferSourceNode.stop is function" result="PASS" /><testcase id="audiobuffersourcenode_UNSCHEDULED_STATE_value" purpose="Check if AudioBufferSourceNode.UNSCHEDULED_STATE value is 0" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiobuffer_duration_exists" purpose="Check if AudioBuffer.duration attribute exists" result="PASS" /><testcase id="audiobuffer_duration_readonly" purpose="Check if AudioBuffer.duration attribute is readonly" result="PASS" /><testcase id="audiobuffer_duration_type" purpose="Check if the type of AudioBuffer.duration is number" result="PASS" /><testcase id="audiobuffer_getChannelData_base" purpose="Check if the AudioBuffer.getChannelData returns a Float32Arrays value" result="PASS" /><testcase id="audiobuffer_getChannelData_exception" purpose="Check if an exception will be thrown when the parameter is bigger than numberOfChannels" result="PASS" /><testcase id="audiobuffer_getChannelData_exists" purpose="Check if AudioBuffer.getChannelData method exists" result="PASS" /><testcase id="audiobuffer_getChannelData_type" purpose="Check if the return type of AudioBuffer.getChannelData is Float32Array" result="PASS" /><testcase id="audiobuffer_length_exists" purpose="Check if AudioBuffer.length attribute exists" result="PASS" /><testcase id="audiobuffer_length_readonly" purpose="Check if AudioBuffer.length attribute is readonly" result="PASS" /><testcase id="audiobuffer_length_type" purpose="Check if the type of AudioBuffer.length is number" result="PASS" /><testcase id="audiobuffer_length_value" purpose="Check if the AudioBuffer.length is long value" result="PASS" /><testcase id="audiobuffer_numberOfChannels_exists" purpose="Check if AudioBuffer.numberOfChannels attribute exists" result="PASS" /><testcase id="audiobuffer_numberOfChannels_readonly" purpose="Check if AudioBuffer.numberOfChannels attribute is readonly" result="PASS" /><testcase id="audiobuffer_numberOfChannels_type" purpose="Check if the type of AudioBuffer.numberOfChannels is number" result="PASS" /><testcase id="audiobuffer_numberOfChannels_value" purpose="Check if the AudioBuffer.numberOfChannels is integer value" result="PASS" /><testcase id="audiobuffer_sampleRate_exists" purpose="Check if AudioBuffer.sampleRate attribute exists" result="PASS" /><testcase id="audiobuffer_sampleRate_readonly" purpose="Check if AudioBuffer.sampleRate attribute is readonly" result="PASS" /><testcase id="audiobuffer_sampleRate_type" purpose="Check if the type of AudioBuffer.sampleRate is number" result="PASS" /><testcase id="audiobuffer_sampleRate_value" purpose="Check if AudioBuffer.sampleRate attribute is float value" result="PASS" /><testcase id="audiocontext_createAnalyser_base" purpose="Check if AudioContext.createAnalyser method,return value type of is RealtimeAnalyserNode" result="PASS" /><testcase id="audiocontext_createAnalyser_exists" purpose="Check if AudioContext.createAnalyser method exists" result="PASS" /><testcase id="audiocontext_createAnalyser_type" purpose="Check if the type of AudioContext.createAnalyser is function" result="PASS" /><testcase id="audiocontext_createBiquadFilter_base" purpose="Check if AudioContext.createBiquadFilter method return value type of is BiquadFilterNode" result="PASS" /><testcase id="audiocontext_createBiquadFilter_exists" purpose="Check if AudioContext.createBiquadFilter method exists" result="PASS" /><testcase id="audiocontext_createBiquadFilter_type" purpose="Check if AudioContext.createBiquadFilter attribute is function" result="PASS" /><testcase id="audiocontext_createBufferSource_base" purpose="Check if AudioContext.createBufferSource,return value type of is AudioBufferSourceNode" result="PASS" /><testcase id="audiocontext_createBufferSource_exists" purpose="Check if AudioContext.createBufferSource method exists" result="PASS" /><testcase id="audiocontext_createBufferSource_type" purpose="Check if the type of AudioContext.createBufferSource is function" result="PASS" /><testcase id="audiocontext_createBuffer_exists" purpose="Check if AudioContext.createBuffer method exists" result="PASS" /><testcase id="audiocontext_createBuffer_three_base" purpose="Check if AudioContext.createBuffer method with three param basic usage,return value type of is AudioBuffer" result="PASS" /><testcase id="audiocontext_createBuffer_three_numberOfChannels_upper" purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the numberOfChannels are out-of-bounds" result="PASS" /><testcase id="audiocontext_createBuffer_three_sampleRate_lower" purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 22050" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiocontext_createBuffer_three_sampleRate_upper" purpose="Check if AudioContext.createBuffer method with three param,thrown exception if the sampleRate out of bounds 96000" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiocontext_createBuffer_two_base" purpose="Check if AudioContext.createBuffer method with two param,return value type of is AudioBuffer" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="audiocontext_createBuffer_type" purpose="Check if the type of AudioContext.createBuffer is function" result="PASS" /><testcase id="audiocontext_createChannelMerger_base" purpose="Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode" result="PASS" /><testcase id="audiocontext_createChannelMerger_exists" purpose="Check if AudioContext.createChannelMerger method exists" result="PASS" /><testcase id="audiocontext_createChannelMerger_no_argument" purpose="Check if AudioContext.createChannelMerger method return value type of is ChannelMergerNode if no set numberOfOutputs param" result="PASS" /><testcase id="audiocontext_createChannelMerger_type" purpose="Check if the type of AudioContext.createChannelMerger is function" result="PASS" /><testcase id="audiocontext_createChannelSplitter_base" purpose="Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode" result="PASS" /><testcase id="audiocontext_createChannelSplitter_exists" purpose="Check if AudioContext.createChannelSplitter method exists" result="PASS" /><testcase id="audiocontext_createChannelSplitter_no_argument" purpose="Check if AudioContext.createChannelSplitter method return value type of is ChannelSplitterNode if no set numberOfOutputs param" result="PASS" /><testcase id="audiocontext_createChannelSplitter_type" purpose="Check if the type of AudioContext.createChannelSplitter is function" result="PASS" /><testcase id="audiocontext_createConvolver_base" purpose="Check if AudioContext.createConvolver method return value type of is ConvolverNode" result="PASS" /><testcase id="audiocontext_createConvolver_exists" purpose="Check if AudioContext.createConvolver method exists" result="PASS" /><testcase id="audiocontext_createConvolver_type" purpose="Check if the type of AudioContext.createConvolver is function" result="PASS" /><testcase id="audiocontext_createDelayNode_base" purpose="Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 2 if maxDelayTime set 2" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiocontext_createDelayNode_no_argument" purpose="Check if AudioContext.createDelayNode method,AudioParam.maxValue value is 1 if no set maxDelayTime param" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiocontext_createDelay_exists" purpose="Check if AudioContext.createDelay method exists" result="PASS" /><testcase id="audiocontext_createDelay_type" purpose="Check if the type of AudioContext.createDelay is function" result="PASS" /><testcase id="audiocontext_createDynamicsCompressor_base" purpose="Check if AudioContext.createDynamicsCompressor method return value type of is DynamicsCompressorNode" result="PASS" /><testcase id="audiocontext_createDynamicsCompressor_exists" purpose="Check if AudioContext.createDynamicsCompressor method exists" result="PASS" /><testcase id="audiocontext_createDynamicsCompressor_type" purpose="Check if the type of AudioContext.createDynamicsCompressor is function" result="PASS" /><testcase id="audiocontext_createGain_base" purpose="Check if AudioContext.createGain method,return value type of is GainNode" result="PASS" /><testcase id="audiocontext_createGain_exists" purpose="Check if AudioContext.createGain method exists" result="PASS" /><testcase id="audiocontext_createGain_type" purpose="Check if the type of AudioContext.createGain is function" result="PASS" /><testcase id="audiocontext_createMediaElementSource_base" purpose="Check if AudioContext.createMediaElementSource method,return value type of is MediaElementAudioSourceNode" result="PASS" /><testcase id="audiocontext_createMediaElementSource_exists" purpose="Check if AudioContext.createMediaElementSource method exists" result="PASS" /><testcase id="audiocontext_createMediaElementSource_type" purpose="Check if the type of AudioContext.createMediaElementSource is function" result="PASS" /><testcase id="audiocontext_createMediaStreamSource_exists" purpose="Check if AudioContext.createMediaStreamSource method exists" result="PASS" /><testcase id="audiocontext_createMediaStreamSource_type" purpose="Check if the type of AudioContext.createMediaStreamSource is function" result="PASS" /><testcase id="audiocontext_createOscillator_base" purpose="Check if AudioContext.createOscillator method return value type of is OscillatorNode" result="PASS" /><testcase id="audiocontext_createOscillator_exists" purpose="Check if AudioContext.createOscillator method exists" result="PASS" /><testcase id="audiocontext_createOscillator_type" purpose="Check if the type of AudioContext.createOscillator is function" result="PASS" /><testcase id="audiocontext_createPanner_base" purpose="Check if AudioContext.createPanner method return value type of is PannerNode" result="PASS" /><testcase id="audiocontext_createPanner_exists" purpose="Check if AudioContext.createPanner method exists" result="PASS" /><testcase id="audiocontext_createPanner_type" purpose="Check if the type of AudioContext.createPanner is function" result="PASS" /><testcase id="audiocontext_createPeriodicWave_exists" purpose="Check if AudioContext.createPeriodicWave method exists" result="PASS" /><testcase id="audiocontext_createPeriodicWave_type" purpose="Check if the type of AudioContext.createPeriodicWave is function" result="PASS" /><testcase id="audiocontext_createScriptProcessor_base" purpose="Check if AudioContext.createScriptProcessor method,return value type of is ScriptProcessorNode" result="PASS" /><testcase id="audiocontext_createScriptProcessor_bufferSize_1024" purpose="Check if AudioContext.createScriptProcessor method,JavaScriptAudioNode.bufferSize is 1024 if bufferSize put 1024" result="PASS" /><testcase id="audiocontext_createScriptProcessor_bufferSize_16384" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 16384 if bufferSize put 16384" result="PASS" /><testcase id="audiocontext_createScriptProcessor_bufferSize_2048" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 2048 if bufferSize put 2048" result="PASS" /><testcase id="audiocontext_createScriptProcessor_bufferSize_256" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 256 if bufferSize put 256" result="PASS" /><testcase id="audiocontext_createScriptProcessor_bufferSize_4096" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 4096 if bufferSize put 4096" result="PASS" /><testcase id="audiocontext_createScriptProcessor_bufferSize_512" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 512 if bufferSize put 512" result="PASS" /><testcase id="audiocontext_createScriptProcessor_bufferSize_8192" purpose="Check if AudioContext.createScriptProcessor method,ScriptProcessorNode.bufferSize is 8192 if bufferSize put 8192" result="PASS" /><testcase id="audiocontext_createScriptProcessor_bufferSize_exception" purpose="Check if AudioContext.createScriptProcessor method,throw exception if buffersize param not is buffersize list value" result="PASS" /><testcase id="audiocontext_createScriptProcessor_exists" purpose="Check if AudioContext.createScriptProcessor method exists" result="PASS" /><testcase id="audiocontext_createScriptProcessor_three_parameters" purpose="Check if the return type of AudioContext.createScriptProcessor with three paramenters is ScriptProcessorNode" result="PASS" /><testcase id="audiocontext_createScriptProcessor_type" purpose="Check if the type of AudioContext.createScriptProcessor is function" result="PASS" /><testcase id="audiocontext_createWaveShaper_base" purpose="Check if AudioContext.createWaveShaper method,return value type of is WaveShaperNode" result="PASS" /><testcase id="audiocontext_createWaveShaper_exists" purpose="Check if AudioContext.createWaveShaper method exists" result="PASS" /><testcase id="audiocontext_createWaveShaper_type" purpose="Check if AudioContext.createWaveShaper is of type method" result="PASS" /><testcase id="audiocontext_createwavetable_base" purpose="Check if AudioContext.createwavetable method return value type of is WaveTable" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiocontext_createwavetable_exception" purpose="Check if AudioContext.createwavetable method,throw exception if real and imag param set exception type" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiocontext_currentTime_exists" purpose="Check if AudioContext.currentTime attribute exists" result="PASS" /><testcase id="audiocontext_currentTime_readonly" purpose="Check if AudioContext.currentTime attribute is readonly" result="PASS" /><testcase id="audiocontext_currentTime_type" purpose="Check if the type of AudioContext.currentTime attribute is function" result="PASS" /><testcase id="audiocontext_decodeAudioData_base" purpose="Check if AudioContext.decodeAudioData method, callback argument equals AudioBuffer if AudioContext.decodeAudioData decode success" result="PASS" /><testcase id="audiocontext_decodeAudioData_exists" purpose="Check if AudioContext.decodeAudioData method exists" result="PASS" /><testcase id="audiocontext_decodeAudioData_type" purpose="Check if the type of AudioContext.decodeAudioData is function" result="PASS" /><testcase id="audiocontext_destination_exists" purpose="Check if AudioContext.destination attribute exists" result="PASS" /><testcase id="audiocontext_destination_readonly" purpose="Check if AudioContext.destination attribute is readonly" result="PASS" /><testcase id="audiocontext_destination_type" purpose="Check if the type of AudioContext.destination is AudioDestinationNode" result="PASS" /><testcase id="audiocontext_listener_exists" purpose="Check if AudioContext.listener attribute exists" result="PASS" /><testcase id="audiocontext_listener_readonly" purpose="Check if AudioContext.listener attribute is readonly" result="PASS" /><testcase id="audiocontext_listener_type" purpose="Check if the type of AudioContext.listener is AudioListener" result="PASS" /><testcase id="audiocontext_sampleRate_exists" purpose="Check if AudioContext.sampleRate attribute exists" result="PASS" /><testcase id="audiocontext_sampleRate_readonly" purpose="Check if AudioContext.sampleRate attribute is readonly" result="PASS" /><testcase id="audiocontext_sampleRate_type" purpose="Check if the type of AudioContext.sampleRate is number" result="PASS" /><testcase id="audiodestinationnode_numberOfChannels_base" purpose="Check if AudioDestinationNode.numberOfChannels attribute set maxNumberOfChannels then AudioContext.numberOfChannels equals AudioContext.maxNumberOfChannels" result="PASS" /><testcase id="audiodestinationnode_numberOfChannels_default_value" purpose="Check if AudioDestinationNode.numberOfChannels attribute default value is 2" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiodestinationnode_numberOfChannels_upper" purpose="Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set greater than maxNumberOfChannels" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiodestinationnode_numberOfChannels_zero" purpose="Check if AudioDestinationNode.numberOfChannels attribute,throw exception if AudioContext.numberOfChannels set 0" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audiolistener_dopplerFactor_default_value" purpose="Check if the AudioListener.dopplerFactor default value is 1" result="PASS" /><testcase id="audiolistener_dopplerFactor_exists" purpose="Check if AudioListener.dopplerFactor attribute exists" result="PASS" /><testcase id="audiolistener_dopplerFactor_type" purpose="Check if the type of AudioListener.dopplerFactor is number" result="PASS" /><testcase id="audiolistener_dopplerFactor_value" purpose="Check if the AudioListener.dopplerFactor is float value" result="PASS" /><testcase id="audiolistener_setOrientation_base" purpose="Check if AudioListener.setOrientation can change the direction of the listener" result="PASS" /><testcase id="audiolistener_setOrientation_exists" purpose="Check if AudioListener.setOrientation method exists" result="PASS" /><testcase id="audiolistener_setOrientation_type" purpose="Check if the type of AudioListener.setOrientation is function" result="PASS" /><testcase id="audiolistener_setPosition_base" purpose="Check if AudioListener.setPosition can change the position of the listener in a 3D cartesian coordinate space" result="PASS" /><testcase id="audiolistener_setPosition_exists" purpose="Check if AudioListener.setPosition method exists" result="PASS" /><testcase id="audiolistener_setPosition_type" purpose="Check if the type of AudioListener.setPosition is function" result="PASS" /><testcase id="audiolistener_setVelocity_base" purpose="Check if AudioListener.setVelocity can set the velocity vector of the listener" result="PASS" /><testcase id="audiolistener_setVelocity_exists" purpose="Check if AudioListener.setVelocity method exists" result="PASS" /><testcase id="audiolistener_setVelocity_type" purpose="Check if the type of AudioListener.setVelocity is function" result="PASS" /><testcase id="audiolistener_speedOfSound_default_value" purpose="Check if the AudioListener.speedOfSound default value is 343.3" result="PASS" /><testcase id="audiolistener_speedOfSound_exists" purpose="Check if AudioListener.speedOfSound attribute exists" result="PASS" /><testcase id="audiolistener_speedOfSound_type" purpose="Check if the type of AudioListener.speedOfSound is number" result="PASS" /><testcase id="audiolistener_speedOfSound_value" purpose="Check if the AudioListener.speedOfSound is float value" result="PASS" /><testcase id="audionode_connect_exists" purpose="Check if AudioNode.connect method exists" result="PASS" /><testcase id="audionode_connect_input_exception" purpose="Check if AudioNode.connect method,throw exception if input param set out-of-bound value" result="PASS" /><testcase id="audionode_connect_output_exception" purpose="Check if AudioNode.connect method,throw exception if output param setout-of-bound value" result="PASS" /><testcase id="audionode_connect_output_input_no_argument" purpose="check if AudioNode.connect method,no throw exception if input and output param not set" result="PASS" /><testcase id="audionode_connect_three_base" purpose="check if AudioNode.connect method,no throw exception if with three param basic usage" result="PASS" /><testcase id="audionode_connect_two_arguments" purpose="Check if AudioNode.connect method,no throw exception if input param not set" result="PASS" /><testcase id="audionode_connect_type" purpose="Check if the type of AudioNode.connect is function" result="PASS" /><testcase id="audionode_context_exists" purpose="Check if AudioNode.context attribute exists" result="PASS" /><testcase id="audionode_context_readonly" purpose="Check if AudioNode.context attribute is readonly" result="PASS" /><testcase id="audionode_context_type" purpose="Check if the type of AudioNode.context is AudioContext" result="PASS" /><testcase id="audionode_disconnect_base" purpose="Check if AudioNode.disconnect method,no throw exception if input param set 0" result="PASS" /><testcase id="audionode_disconnect_exception" purpose="Check if AudioNode.disconnect method,throw exception if output param set out-of-bound value" result="PASS" /><testcase id="audionode_disconnect_exists" purpose="Check if AudioNode.disconnect method exists" result="PASS" /><testcase id="audionode_disconnect_no_argument" purpose="Check if AudioNode.disconnect method,no throw exception if input param not set" result="PASS" /><testcase id="audionode_disconnect_type" purpose="Check if the type of AudioNode.disconnect is function" result="PASS" /><testcase id="audionode_numberOfInputs_exists" purpose="Check if AudioNode.numberOfInputs attribute exists" result="PASS" /><testcase id="audionode_numberOfInputs_readonly" purpose="Check if AudioNode.numberOfInputs attribute is readonly" result="PASS" /><testcase id="audionode_numberOfInputs_type" purpose="Check if the type of AudioNode.numberOfInputs is number" result="PASS" /><testcase id="audionode_numberOfOutputs_exists" purpose="Check if AudioNode.numberOfOutputs attribute exists" result="PASS" /><testcase id="audionode_numberOfOutputs_readonly" purpose="Check if AudioNode.numberOfOutputs attribute is readonly" result="PASS" /><testcase id="audionode_numberOfOutputs_type" purpose="Check if the type of AudioNode.numberOfOutputs is number" result="PASS" /><testcase id="audioparam_cancelScheduledValues_base" purpose="Check if AudioParam.cancelScheduledValues method executes well with float type parameter" result="PASS" /><testcase id="audioparam_cancelScheduledValues_exists" purpose="Check if AudioParam.cancelScheduledValues method exists" result="PASS" /><testcase id="audioparam_cancelScheduledValues_type" purpose="Check if the type of AudioParam.cancelScheduledValues is function" result="PASS" /><testcase id="audioparam_defaultValue_exists" purpose="Check if AudioParam.defaultValue attribute exists" result="PASS" /><testcase id="audioparam_defaultValue_readonly" purpose="Check if AudioParam.defaultValue attribute is readonly" result="PASS" /><testcase id="audioparam_defaultValue_type" purpose="Check if the type of AudioParam.defaultValue is number" result="PASS" /><testcase id="audioparam_exponentialRampToValueAtTime_base" purpose="Check if AudioParam.exponentialRampToValueAtTime method executes well with two float parameters" result="PASS" /><testcase id="audioparam_exponentialRampToValueAtTime_exists" purpose="Check if AudioParam.exponentialRampToValueAtTime method exists" result="PASS" /><testcase id="audioparam_exponentialRampToValueAtTime_type" purpose="Check if the type of AudioParam.exponentialRampToValueAtTime is function" result="PASS" /><testcase id="audioparam_linearRampToValueAtTime_base" purpose="Check if AudioParam.linearRampToValueAtTime method executes well with two float parameters" result="PASS" /><testcase id="audioparam_linearRampToValueAtTime_exists" purpose="Check if AudioParam.linearRampToValueAtTime method exists" result="PASS" /><testcase id="audioparam_linearRampToValueAtTime_type" purpose="Check if the type of AudioParam.linearRampToValueAtTime is function" result="PASS" /><testcase id="audioparam_setTargetAtTime_base" purpose="Check if AudioParam.setTargetAtTime method executes well with float,double and double parameter" result="PASS" /><testcase id="audioparam_setTargetAtTime_exists" purpose="Check if AudioParam.setTargetAtTime method exists" result="PASS" /><testcase id="audioparam_setTargetAtTime_type" purpose="Check if the type of AudioParam.setTargetAtTime is function" result="PASS" /><testcase id="audioparam_setValueAtTime_base" purpose="Check if AudioParam.setValueAtTime method executes well with two float parameters" result="PASS" /><testcase id="audioparam_setValueAtTime_exists" purpose="Check if AudioParam.setValueAtTime method exists" result="PASS" /><testcase id="audioparam_setValueAtTime_type" purpose="Check if the type of AudioParam.setValueAtTime is function" result="PASS" /><testcase id="audioparam_setValueCurveAtTime_base" purpose="Check if AudioParam.setValueCurveAtTime method executes well with three parameters" result="PASS" /><testcase id="audioparam_setValueCurveAtTime_exists" purpose="Check if AudioParam.setValueCurveAtTime method exists" result="PASS" /><testcase id="audioparam_setValueCurveAtTime_type" purpose="Check if the type of AudioParam.setValueCurveAtTime is function" result="PASS" /><testcase id="audioparam_value_base" purpose="Check if AudioParam.value attribute set AudioParam.minValue then AudioParam.value equals AudioParam.minValue" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audioparam_value_exists" purpose="Check if AudioParam.value attribute exists" result="PASS" /><testcase id="audioparam_value_maxValue_upper" purpose="Check if AudioParam.value attribute,no throw exception if AudioParam.value greater than AudioParam.maxValue" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audioparam_value_minValue_upper" purpose="Check if AudioParam.value attribute,no throw exception if AudioParam.value less than AudioParam.minValue" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audioparam_value_type" purpose="Check if the type of AudioParam.value is number" result="PASS" /><testcase id="audioprocessingevent_inputBuffer_exists" purpose="Check if AudioProcessingEvent.inputBuffer attribute exists" result="PASS" /><testcase id="audioprocessingevent_inputBuffer_readonly" purpose="Check if AudioProcessingEvent.inputBuffer attribute is readonly" result="PASS" /><testcase id="audioprocessingevent_inputBuffer_type" purpose="Check if the type of AudioProcessingEvent.inputBuffer is AudioBuffer" result="PASS" /><testcase id="audioprocessingevent_inputBuffer_value" purpose="Check if the AudioProcessingEvent.inputBuffer is AudioBuffer value" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="audioprocessingevent_outputBuffer_exists" purpose="Check if AudioProcessingEvent.outputBuffer attribute exists" result="PASS" /><testcase id="audioprocessingevent_outputBuffer_readonly" purpose="Check if AudioProcessingEvent.outputBuffer attribute is readonly" result="PASS" /><testcase id="audioprocessingevent_outputBuffer_type" purpose="Check if the type of AudioProcessingEvent.outputBuffer is AudioBuffer" result="PASS" /><testcase id="audioprocessingevent_outputBuffer_value" purpose="Check if the AudioProcessingEvent.outBuffer is AudioBuffer value" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_detune_basic" purpose="Check if BiquadFilterNode.detune attribute exists and type and readonly" result="PASS" /><testcase id="biquadfilternode_frequency_exists" purpose="Check if BiquadFilterNode.frequency attribute exists" result="PASS" /><testcase id="biquadfilternode_frequency_readonly" purpose="Check if BiquadFilterNode.frequency attribute is readonly" result="PASS" /><testcase id="biquadfilternode_frequency_type" purpose="Check if the type of BiquadFilterNode.frequency is AudioParam" result="PASS" /><testcase id="biquadfilternode_gain_exists" purpose="Check if BiquadFilterNode.gain attribute exists" result="PASS" /><testcase id="biquadfilternode_gain_readonly" purpose="Check if BiquadFilterNode.gain attribute is readonly" result="PASS" /><testcase id="biquadfilternode_gain_type" purpose="Check if the type of BiquadFilterNode.gain is AudioParam" result="PASS" /><testcase id="biquadfilternode_getFrequencyResponse_base" purpose="Check if BiquadFilterNode.getFrequencyResponse method executes well with Float32Array parameter" result="PASS" /><testcase id="biquadfilternode_getFrequencyResponse_exists" purpose="Check if BiquadFilterNode.getFrequencyResponse method exists" result="PASS" /><testcase id="biquadfilternode_getFrequencyResponse_type" purpose="Check if the type of BiquadFilterNode.getFrequencyResponse is function" result="PASS" /><testcase id="biquadfilternode_Q_exists" purpose="Check if BiquadFilterNode.Q attribute exists" result="PASS" /><testcase id="biquadfilternode_Q_readonly" purpose="Check if BiquadFilterNode.Q attribute is readonly" result="PASS" /><testcase id="biquadfilternode_Q_type" purpose="Check if the type of BiquadFilterNode.Q is AudioParam" result="PASS" /><testcase id="biquadfilternode_type_allpass_phase" purpose="Check if BiquadFilterNode allpass filter changes the phase relationship between the various frequencies" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_allvalues" purpose="Check if BiquadFilterNode.type attribute may directly be set to one of BiquadFilterType values" result="PASS" /><testcase id="biquadfilternode_type_bandpass_above" purpose="Check if BiquadFilterNode bandpass filter attenuates the frequencies above the frequency range" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_bandpass_below" purpose="Check if BiquadFilterNode bandpass filter attenuates the frequencies below the frequency range" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_bandpass_center" purpose="Check if BiquadFilterNode bandpass filter allows a range of frequencies to pass through" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_default_value" purpose="Check if BiquadFilterNode.type attribute default value is 'lowpass'" result="PASS" /><testcase id="biquadfilternode_type_exists" purpose="Check if BiquadFilterNode.type attribute exists" result="PASS" /><testcase id="biquadfilternode_type_highpass_above" purpose="Check if BiquadFilterNode highpass filter allows frequencies above the cutoff frequency to pass through" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_highpass_below" purpose="Check if BiquadFilterNode highpass filter attenuates frequencies below the cutoff" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_highshelf_attenuation" purpose="Check if BiquadFilterNode highshelf filter adds a attenuation to the higher frequencies" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_highshelf_boost" purpose="Check if BiquadFilterNode highshelf filter adds a boost to the higher frequencies" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_lowpass_above" purpose="Check if BiquadFilterNode lowpass filter attenuates frequencies above the cutoff" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_lowpass_below" purpose="Check if BiquadFilterNode lowpass filter allows frequencies below the cutoff frequency to pass through" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_lowshelf_attenuation" purpose="Check if BiquadFilterNode lowshelf filter adds a attenuation to the lower frequencies" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_lowshelf_boost" purpose="Check if BiquadFilterNode lowshelf filter adds a boost to the lower frequencies" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_notch_all" purpose="Check if BiquadFilterNode notch filter allows all frequencies through" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_notch_except" purpose="Check if BiquadFilterNode notch filter allows all frequencies through except for the notch applied" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_peaking_attenuation" purpose="Check if BiquadFilterNode peaking filter adds a attenuation to a range of frequencies" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_peaking_boost" purpose="Check if BiquadFilterNode peaking filter adds a boost to a range of frequencies" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="biquadfilternode_type_type" purpose="Check if the type of BiquadFilterNode.type is string" result="PASS" /><testcase id="convolvernode_buffer_exists" purpose="Check if ConvolverNode.buffer attribute exists" result="PASS" /><testcase id="convolvernode_buffer_type" purpose="Check if the type of ConvolverNode.buffer is AudioBuffer" result="PASS" /><testcase id="convolvernode_buffer_value" purpose="Check if the ConvolverNode.buffer is AudioBuffer value" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="convolvernode_normalize_default_value" purpose="Check if the ConvolverNode.normalize default value is true" result="PASS" /><testcase id="convolvernode_normalize_exists" purpose="Check if ConvolverNode.normalize attribute exists" result="PASS" /><testcase id="convolvernode_normalize_type" purpose="Check if the type of ConvolverNode.normalize is boolean" result="PASS" /><testcase id="convolvernode_normalize_value" purpose="Check if the ConvolverNode.normalize is boolean value" result="PASS" /><testcase id="delaynode_delayTime_exists" purpose="Check if DelayNode.delayTime attribute exists" result="PASS" /><testcase id="delaynode_delayTime_readonly" purpose="Check if DelayNode.delayTime attribute is readonly" result="PASS" /><testcase id="delaynode_delayTime_type" purpose="Check if the type of DelayNode.delayTime is AudioParam" result="PASS" /><testcase id="delaynode_delayTime_value_default_value" purpose="Check if DelayNode.delayTime attribute default value is 0" result="PASS" /><testcase id="dynamicscompressornode_attack_exists" purpose="Check if DynamicsCompressorNode.attack attribute exists" result="PASS" /><testcase id="dynamicscompressornode_attack_readonly" purpose="Check if DynamicsCompressorNode.attack attribute is readonly" result="PASS" /><testcase id="dynamicscompressornode_attack_type" purpose="Check if the type of DynamicsCompressorNode.attack is AudioParam" result="PASS" /><testcase id="dynamicscompressornode_knee_exists" purpose="Check if DynamicsCompressorNode.knee attribute exists" result="PASS" /><testcase id="dynamicscompressornode_knee_readonly" purpose="Check if DynamicsCompressorNode.knee attribute is readonly" result="PASS" /><testcase id="dynamicscompressornode_knee_type" purpose="Check if the type of DynamicsCompressorNode.knee is AudioParam" result="PASS" /><testcase id="dynamicscompressornode_ratio_exists" purpose="Check if DynamicsCompressorNode.ratio attribute exists" result="PASS" /><testcase id="dynamicscompressornode_ratio_readonly" purpose="Check if DynamicsCompressorNode.ratio attribute is readonly" result="PASS" /><testcase id="dynamicscompressornode_ratio_type" purpose="Check if the type of DynamicsCompressorNode.ratio is AudioParam" result="PASS" /><testcase id="dynamicscompressornode_reduction_exists" purpose="Check if DynamicsCompressorNode.reduction attribute exists" result="PASS" /><testcase id="dynamicscompressornode_reduction_readonly" purpose="Check if DynamicsCompressorNode.reduction attribute is readonly" result="PASS" /><testcase id="dynamicscompressornode_reduction_type" purpose="Check if the type of DynamicsCompressorNode.reduction is AudioParam" result="PASS" /><testcase id="dynamicscompressornode_release_exists" purpose="Check if DynamicsCompressorNode.release attribute exists" result="PASS" /><testcase id="dynamicscompressornode_release_readonly" purpose="Check if DynamicsCompressorNode.release attribute is readonly" result="PASS" /><testcase id="dynamicscompressornode_release_type" purpose="Check if the type of DynamicsCompressorNode.release is AudioParam" result="PASS" /><testcase id="dynamicscompressornode_threshold_exists" purpose="Check if DynamicsCompressorNode.threshold attribute exists" result="PASS" /><testcase id="dynamicscompressornode_threshold_readonly" purpose="Check if DynamicsCompressorNode.threshold attribute is readonly" result="PASS" /><testcase id="dynamicscompressornode_threshold_type" purpose="Check if the type of DynamicsCompressorNode.threshold is AudioParam" result="PASS" /><testcase id="gain-node-idl-test-06" purpose="Check that the gain_node can be stringified" result="PASS" /><testcase id="gain-node-idl-test-08" purpose="AudioNode interface: gain_node must inherit property &quot;connect&quot; with the proper type (0)" result="PASS" /><testcase id="gain-node-idl-test-09" purpose="AudioNode interface: calling connect(AudioNode,unsigned long,unsigned long) on gain_node with too few arguments must throw TypeError" result="PASS" /><testcase id="gain-node-idl-test-10" purpose="AudioNode interface: gain_node must inherit property &quot;connect&quot; with the proper type (1)" result="PASS" /><testcase id="gain-node-idl-test-11" purpose="AudioNode interface: calling connect(AudioParam,unsigned long) on gain_node with too few arguments must throw TypeError" result="PASS" /><testcase id="gain-node-idl-test-12" purpose="AudioNode interface: gain_node must inherit property &quot;disconnect&quot; with the proper type (2)" result="PASS" /><testcase id="gain-node-idl-test-13" purpose="AudioNode interface: calling disconnect(unsigned long) on gain_node with too few arguments must throw TypeError" result="PASS" /><testcase id="gain-node-test" purpose="Check that GainNode is properly scaling the gain" result="PASS" /><testcase id="gainnode_gain_exists" purpose="Check if GainNode.gain attribute exists" result="PASS" /><testcase id="gainnode_gain_readonly" purpose="Check if GainNode.gain attribute is readonly" result="PASS" /><testcase id="gainnode_gain_type" purpose="Check if the type of GainNode.gain is object" result="PASS" /><testcase id="gainnode_gain_value_default_value" purpose="Check if GainNode.gain.value default value is 1" result="PASS" /><testcase id="offlineaudiocontext_oncomplete_exists" purpose="Check if OfflineAudioContext.oncomplete methodexists" result="PASS" /><testcase id="offlineaudiocontext_oncomplete_type" purpose="Check if OfflineAudioContext.oncomplete attribute is object type" result="PASS" /><testcase id="offlineaudiocontext_startRendering_exists" purpose="Check if OfflineAudioContext.startRendering method exists" result="PASS" /><testcase id="offlineaudiocontext_startRendering_type" purpose="Check if OfflineAudioContext.startRendering method is type of function" result="PASS" /><testcase id="oscillatornode_detune_exists" purpose="Check if OscillatorNode.detune attribute exists" result="PASS" /><testcase id="oscillatornode_detune_readonly" purpose="Check if OscillatorNode.detune attribute is readonly" result="PASS" /><testcase id="oscillatornode_detune_type" purpose="Check if the type of OscillatorNode.detune is AudioParam" result="PASS" /><testcase id="oscillatornode_FINISHED_STATE_value" purpose="Check if OscillatorNode.FINISHED_STATE attribute value is 3" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="oscillatornode_frequency_exists" purpose="Check if OscillatorNode.frequency attribute exists" result="PASS" /><testcase id="oscillatornode_frequency_readonly" purpose="Check if OscillatorNode.frequency attribute is readonly" result="PASS" /><testcase id="oscillatornode_frequency_type" purpose="Check if the type of OscillatorNode.frequency is AudioParam" result="PASS" /><testcase id="oscillatornode_playbackState_basic" purpose="Check if the OscillatorNode.playbackState exists and the initial value is 0 and it's readonly" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="oscillatornode_PLAYING_STATE_type" purpose="Check if OscillatorNode.PLAYING_STATE attribute is number type" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="oscillatornode_PLAYING_STATE_value" purpose="Check if OscillatorNode.PLAYING_STATE attribute value is 2" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="oscillatornode_SCHEDULED_STATE_exists" purpose="Check if OscillatorNode.SCHEDULED_STATE constant exists" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="oscillatornode_setPeriodicWave_base" purpose="Check if OscillatorNode.setPeriodicWave method executes well with a PeriodicWave argument" result="PASS" /><testcase id="oscillatornode_setPeriodicWave_type" purpose="Check if the type of OscillatorNode.setPeriodicWave is function" result="PASS" /><testcase id="oscillatornode_setWaveTable_exists" purpose="Check if OscillatorNode.setWaveTable function exists" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="oscillatornode_start_0" purpose="Check if OscillatorNode.start method executes immediately" result="PASS" /><testcase id="oscillatornode_start_after_stop" purpose="Check if an exception throws when the method of OscillatorNode.start executes after OscillatorNode.stop" result="PASS" /><testcase id="oscillatornode_start_base" purpose="Check if OscillatorNode.start method executes well with a double type argument" result="PASS" /><testcase id="oscillatornode_start_exists" purpose="Check if OscillatorNode.start method exists" result="PASS" /><testcase id="oscillatornode_start_type" purpose="Check if the type of OscillatorNode.start is function" result="PASS" /><testcase id="oscillatornode_stop_0" purpose="Check if OscillatorNode.stop method executes immediately" result="PASS" /><testcase id="oscillatornode_stop_base" purpose="Check if OscillatorNode.stop method executes well with double type parameter" result="PASS" /><testcase id="oscillatornode_stop_before_start" purpose="Check if an exception will be thrown when OscillatorNode.stop is before OscillatorNode.start" result="PASS" /><testcase id="oscillatornode_stop_exists" purpose="Check if OscillatorNode.stop method exists" result="PASS" /><testcase id="oscillatornode_stop_type" purpose="Check if an exception throws when the methods of OscillatorNode.stop and OscillatorNode.start execute at the same time" result="PASS" /><testcase id="oscillatornode_type_allvalues" purpose="Check if OscillatorNode.type attribute value is set to 'custom' value after the setWaveTable() method be used" result="PASS" /><testcase id="oscillatornode_type_exists" purpose="Check if OscillatorNode.type attribute exists" result="PASS" /><testcase id="oscillatornode_type_invalid_value" purpose="Check if OscillatorNode.type attribute can't be set to 'custom' value" result="PASS" /><testcase id="oscillatornode_type_setwavetable_value" purpose="Check if OscillatorNode.type attribute may directly be set to any of the OscillatorType values except for 'custom'" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="oscillatornode_type_type" purpose="Check if the type of OscillatorNode.type is string" result="PASS" /><testcase id="oscillatornode_UNSCHEDULED_STATE_value" purpose="Check if OscillatorNode.UNSCHEDULED_STATE attribute value is 0" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="pannernode_coneInnerAngle_exists" purpose="Check if PannerNode.coneInnerAngle attribute exists" result="PASS" /><testcase id="pannernode_coneInnerAngle_type" purpose="Check if the type of PannerNode.coneInnerAngle is number" result="PASS" /><testcase id="pannernode_coneInnerAngle_value" purpose="Check if the PannerNode.coneInnerAngle is float value" result="PASS" /><testcase id="pannernode_coneOuterAngle_exists" purpose="Check if PannerNode.coneOuterAngle attribute exists" result="PASS" /><testcase id="pannernode_coneOuterAngle_type" purpose="Check if the type of PannerNode.coneOuterAngle is number" result="PASS" /><testcase id="pannernode_coneOuterAngle_value" purpose="Check if the PannerNode.coneOuterAngle is float value" result="PASS" /><testcase id="pannernode_coneOuterGain_exists" purpose="Check if PannerNode.coneOuterGain attribute exists" result="PASS" /><testcase id="pannernode_coneOuterGain_type" purpose="Check if the type of PannerNode.coneOuterGain is number" result="PASS" /><testcase id="pannernode_coneOuterGain_value" purpose="Check if the PannerNode.coneOuterGain is float value" result="PASS" /><testcase id="pannernode_distanceModel_default_value" purpose="Check if the PannerNode.distanceModel default value is 'inverse'" result="PASS" /><testcase id="pannernode_distanceModel_exists" purpose="Check if PannerNode.distanceModel attribute exists" result="PASS" /><testcase id="pannernode_distanceModel_exponential" purpose="Check if the PannerNode .distanceModel set value 'exponential'" result="PASS" /><testcase id="pannernode_distanceModel_inverse" purpose="Check if the PannerNode.distanceModel set value 'inverse'" result="PASS" /><testcase id="pannernode_maxDistance_exists" purpose="Check if PannerNode.maxDistance attribute exists" result="PASS" /><testcase id="pannernode_maxDistance_type" purpose="Check if the type of PannerNode.maxDistance is number" result="PASS" /><testcase id="pannernode_maxDistance_value" purpose="Check if the type of PannerNode.maxDistance is float" result="PASS" /><testcase id="pannernode_panningModel_default_value" purpose="Check if the PannerNode.panningModel default value is 1" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3242 XWALK-3242]]</testcase><testcase id="pannernode_panningModel_exists" purpose="Check if PannerNode.panningModel attribute exists" result="PASS" /><testcase id="pannernode_panningModel_HRTF" purpose="Check if the PannerNode.panningModel attribute set value 'HRTF'" result="PASS" /><testcase id="pannernode_panningModel_value" purpose="Check if the PannerNode.panningModel changed another value to position the audio in 3D space" result="PASS" /><testcase id="pannernode_refDistance_exists" purpose="Check if PannerNode.refDistance attribute exists" result="PASS" /><testcase id="pannernode_refDistance_type" purpose="Check if the type of PannerNode.refDistance is number" result="PASS" /><testcase id="pannernode_refDistance_value" purpose="Check if the type of PannerNode.refDistance is float" result="PASS" /><testcase id="pannernode_rolloffFactor_exists" purpose="Check if PannerNode.rolloffFactor attribute exists" result="PASS" /><testcase id="pannernode_rolloffFactor_type" purpose="Check if the type of PannerNode.rolloffFactor is number" result="PASS" /><testcase id="pannernode_rolloffFactor_value" purpose="Check if the type of PannerNode.rolloffFactor is float" result="PASS" /><testcase id="pannernode_setOrientation_base" purpose="Check if the PannerNode.setOrientation can change the direction of the audio source" result="PASS" /><testcase id="pannernode_setOrientation_exists" purpose="Check if PannerNode.setOrientation method exists" result="PASS" /><testcase id="pannernode_setOrientation_type" purpose="Check if the type of PannerNode.setOrientation is function" result="PASS" /><testcase id="pannernode_setPosition_base" purpose="Check if PannerNode.setPosition method can change the position of a audio source" result="PASS" /><testcase id="pannernode_setPosition_exists" purpose="Check if PannerNode.setPosition method exists" result="PASS" /><testcase id="pannernode_setPosition_type" purpose="Check if the type of PannerNode.setPosition is function" result="PASS" /><testcase id="pannernode_setVelocity_base" purpose="Check if the PannerNode.setVelocity can set the velocity vector of the audio source" result="PASS" /><testcase id="pannernode_setVelocity_exists" purpose="Check if PannerNode.setVelocity function exists" result="PASS" /><testcase id="pannernode_setVelocity_type" purpose="Check if the type of PannerNode.setVelocity is function" result="PASS" /><testcase id="scriptprocessornode_bufferSize_exists" purpose="Check if ScriptProcessorNode.bufferSize attribute exists" result="PASS" /><testcase id="scriptprocessornode_bufferSize_readonly" purpose="Check if ScriptProcessorNode.bufferSize attribute is readonly" result="PASS" /><testcase id="scriptprocessornode_bufferSize_type" purpose="Check if ScriptProcessorNode.bufferSize attribute is type of number" result="PASS" /><testcase id="scriptprocessornode_bufferSize_value" purpose="Check if the type of ScriptProcessorNode.bufferSize is long" result="PASS" /><testcase id="scriptprocessornode_onaudioprocess_base" purpose="Check if ScriptProcessorNode.onaudioprocess method can receive the processing event" result="PASS" /><testcase id="scriptprocessornode_onaudioprocess_exists" purpose="Check if ScriptProcessorNode.onaudioprocess attribute exists" result="PASS" /><testcase id="waveshapernode_curve_exists" purpose="Check if WaveShaperNode.curve attribute exists" result="PASS" /><testcase id="waveshapernode_curve_greater" purpose="Check if WaveShaperNode.curve value greater than +1 will correspond to the last value in the curve array" result="PASS" /><testcase id="waveshapernode_curve_less" purpose="Check if WaveShaperNode.curve value less than -1 will correspond to the first value in the curve array" result="PASS" /><testcase id="waveshapernode_curve_type" purpose="Check if the type of WaveShaperNode.curve is Float32Array" result="PASS" /><testcase id="waveshapernode_curve_value" purpose="Check if WaveShaperNode.curve attribute value is Float32Array object" result="PASS" /><testcase id="waveshapernode_curve_zero" purpose="Check if WaveShaperNode.curve with a signal level of zero corresponding to the center value of the curve array" result="PASS" /></category><category name="W3C_HTML5 APIs/Performance and Optimization/High Resolution Time"><testcase id="Performance_idlharness" purpose="Check if the Performance idlharness tests" result="PASS" /><testcase id="Performance_monotonic-clock_001" purpose="Check if the window.performance.now() returns a positive number" result="PASS" /><testcase id="Performance_monotonic-clock_002" purpose="Check if the window.performance.now() difference is not negative" result="PASS" /><testcase id="Performance_test_cross_frame_start_001" purpose="Check if the parent performance.now() is greater than 0" result="PASS" /><testcase id="Performance_test_cross_frame_start_002" purpose="Check if the child performance.now() is greater than 0" result="PASS" /><testcase id="Performance_test_cross_frame_start_003" purpose="Check if the child performance.now() created at least 1 second after parent performance.now()" result="PASS" /><testcase id="Performance_test_cross_frame_start_004" purpose="Check if the values of the window.performance.now() are based on the current document's navigationStart" result="PASS" /></category><category name="W3C_HTML5 APIs/Performance and Optimization/Navigation Timing"><testcase id="test_document_open" purpose="This test validates window.performance.timing remains constant when a document is replaced using document.open." result="PASS" /><testcase id="test_document_readiness_exist" purpose="This test validates the loading, interactive and complete document.readyState states are available during a navigation." result="PASS" /><testcase id="test_navigate_within_document" purpose="This test validates that all of the window.performance.timing attributes remain unchanged after an in document navigation (URL fragment change)." result="PASS" /><testcase id="test_navigationtiming_attributes_type" purpose="This test validates the types of the attributes in the window.performance.navigation and window.performance.timing." result="PASS" /><testcase id="test_navigation_exist" purpose="Check if the window.performance.navigation is defined" result="PASS" /><testcase id="test_navigation_redirectCount_exist" purpose="Check if the window.performance.navigation.redirectCount is defined" result="PASS" /><testcase id="test_navigation_redirectCount_none" purpose="This test validates that the value of the window.performance.navigation.redirectCount attribute, as well as the window.performance.timing.redirectStart and redirectEnd attributes on a non-redirected navigation." result="PASS" /><testcase id="test_navigation_type_backforward" purpose="This test validates the value of window.performance.navigation.type with a forward and back navigation." result="PASS" /><testcase id="test_navigation_TYPE_BACK_FORWARD_exist" purpose="Check if the window.performance.navigation.TYPE_BACK_FORWARD is defined" result="PASS" /><testcase id="test_navigation_type_exist" purpose="Check if the window.performance.navigation.type is defined" result="PASS" /><testcase id="test_navigation_TYPE_NAVIGATE_exist" purpose="Check if the window.performance.navigation.TYPE_NAVIGATE is defined" result="PASS" /><testcase id="test_navigation_type_reload" purpose="This test validates the value of window.performance.navigation.type and the values of window.performance.timing.* with a reloaded navigation." result="PASS" /><testcase id="test_navigation_TYPE_RELOAD_exist" purpose="Check if the window.performance.navigation.TYPE_RELOAD is defined" result="PASS" /><testcase id="test_navigation_TYPE_RESERVED_exist" purpose="Check if the window.performance.navigation.TYPE_RESERVED is defined" result="PASS" /><testcase id="test_no_previous_document" purpose="This test validates the unload event times are 0 when there is no previous document." result="PASS" /><testcase id="test_performance_attributes_exist_in_object" purpose="This test validates that the window.performance object exists in an object element. (But it does not validate the values are whether correct)" result="PASS" /><testcase id="test_performance_exist" purpose="Check if the window.performance is defined" result="PASS" /><testcase id="test_readwrite" purpose="This test validates that the window.performance object is read/write." result="PASS" /><testcase id="test_timing_attributes_order" purpose="This test validates the ordering of the window.performance.timing attributes." result="PASS" /><testcase id="test_timing_client_redirect" purpose="This test validates the values of the window.navigation.redirectCount and the window.performance.timing.redirectStart/End times on a client side redirect." result="PASS" /><testcase id="test_timing_connectEnd_exist" purpose="Check if the window.performance.timing.connectEnd is defined" result="PASS" /><testcase id="test_timing_connectStart_exist" purpose="Check if the window.performance.timing.connectStart is defined" result="PASS" /><testcase id="test_timing_domainLookupEnd_exist" purpose="Check if the window.performance.timing.domainLookupEnd is defined" result="PASS" /><testcase id="test_timing_domainLookupStart_exist" purpose="Check if the window.performance.timing.domainLookupStart is defined" result="PASS" /><testcase id="test_timing_domComplete_exist" purpose="Check if the window.performance.timing.domComplete is defined" result="PASS" /><testcase id="test_timing_domContentLoadedEventEnd_exist" purpose="Check if the window.performance.timing.domContentLoadedEventEnd is defined" result="PASS" /><testcase id="test_timing_domContentLoadedEventStart_exist" purpose="Check if the window.performance.timing.domContentLoadedEventStart is defined" result="PASS" /><testcase id="test_timing_domInteractive_exist" purpose="Check if the window.performance.timing.domInteractive is defined" result="PASS" /><testcase id="test_timing_domLoading_exist" purpose="Check if the window.performance.timing.domLoading is defined" result="PASS" /><testcase id="test_timing_exist" purpose="Check if the window.performance.timing is defined" result="PASS" /><testcase id="test_timing_fetchStart_exist" purpose="Check if the window.performance.timing.fetchStart is defined" result="PASS" /><testcase id="test_timing_loadEventEnd_exist" purpose="Check if the window.performance.timing.loadEventEnd is defined" result="PASS" /><testcase id="test_timing_loadEventStart_exist" purpose="Check if the window.performance.timing.loadEventStart is defined" result="PASS" /><testcase id="test_timing_navigationStart_exist" purpose="Check if the window.performance.timing.navigationStart is defined" result="PASS" /><testcase id="test_timing_redirectEnd_exist" purpose="Check if the window.performance.timing.redirectEnd is defined" result="PASS" /><testcase id="test_timing_redirectStart_exist" purpose="Check if the window.performance.timing.redirectStart is defined" result="PASS" /><testcase id="test_timing_reload" purpose="This test validates that the window.performance.timing attributes change when a page is reloaded." result="PASS" /><testcase id="test_timing_requestStart_exist" purpose="Check if the window.performance.timing.requestStart is defined" result="PASS" /><testcase id="test_timing_responseEnd_exist" purpose="Check if the window.performance.timing.responseEnd is defined" result="PASS" /><testcase id="test_timing_responseStart_exist" purpose="Check if the window.performance.timing.responseStart is defined" result="PASS" /><testcase id="test_timing_secureConnectionStart_exist" purpose="Check if the window.performance.timing.secureConnectionStart is defined" result="PASS" /><testcase id="test_timing_server_redirect" purpose="This test validates the values of the window.navigation.redirectCount and the window.performance.timing.redirectStart/End times for a same-origin server side redirect navigation." result="PASS" /><testcase id="test_timing_unloadEventEnd_exist" purpose="Check if the window.performance.timing.unloadEventEnd is defined" result="PASS" /><testcase id="test_timing_unloadEventStart_exist" purpose="Check if the window.performance.timing.unloadEventStart is defined" result="PASS" /><testcase id="test_unique_performance_objects" purpose="This test validates that each window has a unique window.performance object." result="PASS" /></category><category name="W3C_HTML5 APIs/Performance and Optimization/Performance Timeline"><testcase id="PerformanceEntry_duration" purpose="Check if readonly PerformanceEntry.duration exists and type of string" result="PASS" /><testcase id="PerformanceEntry_duration_basic" purpose="Check if the PerformanceEntry.duration is valid" result="PASS" /><testcase id="PerformanceEntry_entryType" purpose="Check if readonly PerformanceEntry.entryType exists and type of string" result="PASS" /><testcase id="PerformanceEntry_entryType_basic" purpose="Check if the PerformanceEntry.entryType is valid" result="PASS" /><testcase id="PerformanceEntry_name" purpose="Check if readonly PerformanceEntry.name exists and type of string" result="PASS" /><testcase id="PerformanceEntry_name_basic" purpose="Check if the PerformanceEntry.name is valid" result="PASS" /><testcase id="PerformanceEntry_startTime" purpose="Check if readonly PerformanceEntry.startTime exists and type of string" result="PASS" /><testcase id="PerformanceEntry_startTime_basic" purpose="Check if the PerformanceEntry.startTime is valid" result="PASS" /><testcase id="Performance_getEntries" purpose="Check if Performance.getEntries exists and type of function" result="PASS" /><testcase id="Performance_getEntriesByName" purpose="Check if Performance.getEntriesByName exists and type of function" result="PASS" /><testcase id="Performance_getEntriesByName_basic" purpose="Check if PerformanceEntry.getEntriesByName is valid when name does not exist" result="PASS" /><testcase id="Performance_getEntriesByName_basic_1" purpose="Check if PerformanceEntry.getEntriesByName is valid when name does not exist and entryType exists" result="PASS" /><testcase id="Performance_getEntriesByName_basic_2" purpose="Check if PerformanceEntry.getEntriesByName is valid when name exists and entryType does not exist" result="PASS" /><testcase id="Performance_getEntriesByName_basic_3" purpose="Check if PerformanceEntry.getEntriesByName is valid when name and entryType do not exist" result="PASS" /><testcase id="Performance_getEntriesByName_basic_4" purpose="Check if PerformanceEntry.getEntriesByName is valid when name exists" result="PASS" /><testcase id="Performance_getEntriesByName_basic_5" purpose="Check if PerformanceEntry.getEntriesByName is valid when name and entryType exist" result="PASS" /><testcase id="Performance_getEntriesByType" purpose="Check if Performance.getEntriesByType exists and type of function" result="PASS" /><testcase id="Performance_getEntriesByType_basic" purpose="Check if PerformanceEntry.getEntriesByType is valid when entryType does not exist" result="PASS" /><testcase id="Performance_getEntriesByType_basic_1" purpose="Check if PerformanceEntry.getEntriesByType is valid when entryType exists" result="PASS" /><testcase id="Performance_getEntries_basic" purpose="Check if the Performance.getEntries() is valid" result="PASS" /></category><category name="W3C_HTML5 APIs/Performance and Optimization/Resource Timing"><testcase id="connectEnd_greater_or_equal_connectStart" purpose="Test checks that connectEnd should be greater than or equal to connectStart" result="PASS" /><testcase id="connectStart_greater_or_equal_domainLookupEnd" purpose="Test checks that connectStart should be greater than or equal to domainLookupEnd" result="PASS" /><testcase id="domainLookupEnd_greater_or_equal_domainLookupStart" purpose="Test checks that domainLookupEnd should be greater than or equal to domainLookupStart" result="PASS" /><testcase id="domainLookupStart_greater_or_equal_fetchStart" purpose="Test checks that domainLookupStart should be greater than or equal to fetchStart" result="PASS" /><testcase id="fetchStart_value_non-zero" purpose="Test checks that fetchStart should be non-zero" result="PASS" /><testcase id="performanceEntry_match_one" purpose="Test checks that Only 1 PerformanceEntry should match" result="PASS" /><testcase id="performance_getEntriesByName_defined" purpose="window.performance.getEntriesByName() is defined" result="PASS" /><testcase id="performance_getEntriesByType_defined" purpose="window.performance.getEntriesByType() is defined" result="PASS" /><testcase id="performance_getEntries_defined" purpose="window.performance.getEntries() is defined" result="PASS" /><testcase id="performance_PerformanceEntry_correct_attribute_iframe" purpose="PerformanceEntry has correct name, initiatorType, startTime, and duration (iframe)" result="PASS" /><testcase id="performance_PerformanceEntry_correct_attribute_img" purpose="PerformanceEntry has correct name, initiatorType, startTime, and duration (img)" result="PASS" /><testcase id="performance_PerformanceEntry_correct_attribute_link" purpose="PerformanceEntry has correct name, initiatorType, startTime, and duration (link)" result="PASS" /><testcase id="performance_PerformanceEntry_correct_attribute_script" purpose="PerformanceEntry has correct name, initiatorType, startTime, and duration (script)" result="PASS" /><testcase id="performance_PerformanceEntry_correct_attribute_xmlhttprequest" purpose="PerformanceEntry has correct name, initiatorType, startTime, and duration (xmlhttprequest)" result="PASS" /><testcase id="performance_PerformanceEntry_iframe" purpose="window.performance.getEntriesByName() and window.performance.getEntriesByNameType() return same data (iframe)" result="PASS" /><testcase id="performance_PerformanceEntry_img" purpose="window.performance.getEntriesByName() and window.performance.getEntriesByNameType() return same data (img)" result="PASS" /><testcase id="performance_PerformanceEntry_link" purpose="window.performance.getEntriesByName() and window.performance.getEntriesByNameType() return same data (link)" result="PASS" /><testcase id="performance_PerformanceEntry_script" purpose="window.performance.getEntriesByName() and window.performance.getEntriesByNameType() return same data (script)" result="PASS" /><testcase id="performance_PerformanceEntry_timing_attribute_iframe" purpose="PerformanceEntry has correct order of timing attributes (iframe)" result="PASS" /><testcase id="performance_PerformanceEntry_timing_attribute_img" purpose="PerformanceEntry has correct order of timing attributes (img)" result="PASS" /><testcase id="performance_PerformanceEntry_timing_attribute_link" purpose="PerformanceEntry has correct order of timing attributes (link)" result="PASS" /><testcase id="performance_PerformanceEntry_timing_attribute_script" purpose="PerformanceEntry has correct order of timing attributes (script)" result="PASS" /><testcase id="performance_PerformanceEntry_timing_attribute_xmlhttprequest" purpose="PerformanceEntry has correct order of timing attributes (xmlhttprequest)" result="PASS" /><testcase id="performance_PerformanceEntry_xmlhttprequest" purpose="window.performance.getEntriesByName() and window.performance.getEntriesByNameType() return same data (xmlhttprequest)" result="PASS" /><testcase id="redirectEnd_value_zero" purpose="Test checks that redirectEnd should be 0" result="PASS" /><testcase id="redirectStart_value_zero" purpose="Test checks that redirectStart should be 0" result="PASS" /><testcase id="requestStart_greater_or_equal_connectEnd" purpose="Test checks that requestStart should be greater than or equal to connectEnd" result="PASS" /><testcase id="resource_cached_not_Modified" purpose="Test checks that a 304 Not Modified resource appears in the buffer" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_connection_reuse" purpose="Test checks that connectStart and connectEnd are the same when a connection is reused" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_dynamic_insertion_type_iframe" purpose="Test checks that the iframe initiator type is represented even when dynamically inserted" result="PASS" /><testcase id="resource_dynamic_insertion_type_img" purpose="Test checks that the img initiator type is represented even when dynamically inserted" result="PASS" /><testcase id="resource_dynamic_insertion_type_link" purpose="Test checks that the link initiator type is represented even when dynamically inserted" result="PASS" /><testcase id="resource_frame_initiator_type" purpose="Test checks that the frame initiator type is represented" result="PASS" /><testcase id="resource_iframe_self_navigation" purpose="Test checks that iframes that navigate themselves don't appear in the buffer" result="PASS" /><testcase id="resource_ignore_data_url" purpose="Test checks that resources with data: URIs aren't present in the Resource Timing buffer" result="PASS" /><testcase id="resource_ignore_failures" purpose="Test checks that failed resources aren't present in the Resource Timing buffer" result="PASS" /><testcase id="resource_initiator_types_001" purpose="Test checks that this initiator type('resources/Ahem.ttf') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_002" purpose="Test checks that this initiator type('resources/1x1-blue.png') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_003" purpose="Test checks that this initiator type('resources/blank_page_green.htm') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_004" purpose="Test checks that this initiator type('resources/empty_script.js') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_005" purpose="Test checks that this initiator type('resources/generate_resource.cgi?types=css id=embed') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_006" purpose="Test checks that this initiator type('resources/generate_resource.cgi?types=css id=n1') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_007" purpose="Test checks that this initiator type('resources/generate_resource.cgi?types=font id=n1') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_008" purpose="Test checks that this initiator type('resources/generate_resource.cgi?types=image id=1') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_009" purpose="Test checks that this initiator type('resources/generate_resource.cgi?types=image id=2') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_010" purpose="Test checks that this initiator type('resources/generate_resource.cgi?types=image id=async_xhr') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_011" purpose="Test checks that this initiator type('resources/generate_resource.cgi?types=image id=body') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_012" purpose="Test checks that this initiator type('resources/generate_resource.cgi?types=image id=input') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_013" purpose="Test checks that this initiator type('resources/generate_resource.cgi?types=image id=n1') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_014" purpose="Test checks that this initiator type('resources/generate_resource.cgi?types=image id=object') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_015" purpose="Test checks that this initiator type('resources/generate_resource.cgi?types=image id=poster') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_initiator_types_016" purpose="Test checks that this initiator type('resources/nested.css') is represented" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_redirects_img" purpose="Test checks that resource redirect img is expected to be in the Resource Timing buffer" result="PASS" /><testcase id="resource_redirects_initiatorType_link" purpose="Test checks that resource is expected to have initiatorType link" result="PASS" /><testcase id="resource_redirects_initiatorType_script" purpose="Test checks that resource is expected to have initiatorType script" result="PASS" /><testcase id="resource_redirects_script" purpose="Test checks that resource redirect script is expected to be in the Resource Timing buffer" result="PASS" /><testcase id="resource_reparenting" purpose="Test checks that reparenting an element doesn't change the initiator document" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3546 XWALK-3546]]</testcase><testcase id="resource_script_types_001" purpose="Test checks that this type of script('resources/generate_resource.cgi?types=script id=1') loads is reported with the correct initiator" result="PASS" /><testcase id="resource_script_types_002" purpose="Test checks that this type of script('resources/generate_resource.cgi?types=script id=2') loads is reported with the correct initiator" result="PASS" /><testcase id="resource_script_types_003" purpose="Test checks that this type of script('resources/generate_resource.cgi?types=script id=3') loads is reported with the correct initiator" result="PASS" /><testcase id="resource_script_types_004" purpose="Test checks that this type of script('resources/generate_resource.cgi?types=script id=4') loads is reported with the correct initiator" result="PASS" /><testcase id="resource_script_types_005" purpose="Test checks that this type of script('resources/generate_resource.cgi?types=script id=5') loads is reported with the correct initiator" result="PASS" /><testcase id="resource_script_types_006" purpose="Test checks that this type of script('resources/generate_resource.cgi?types=script id=6') loads is reported with the correct initiator" result="PASS" /><testcase id="resource_script_types_007" purpose="Test checks that this type of script('resources/generate_resource.cgi?types=script id=7') loads is reported with the correct initiator" result="PASS" /><testcase id="resource_script_types_008" purpose="Test checks that this type of script('resources/generate_resource.cgi?types=script id=8') loads is reported with the correct initiator" result="PASS" /><testcase id="resource_script_types_009" purpose="Test checks that this type of script('resources/generate_resource.cgi?types=script id=9') loads is reported with the correct initiator" result="PASS" /><testcase id="responseEnd_greater_or_equal_responseStart" purpose="Test checks that responseEnd should be greater than or equal to responseStart" result="PASS" /><testcase id="responseStart_greater_or_equal_requestStart" purpose="Test checks that responseStart should be greater than or equal to requestStart" result="PASS" /></category><category name="W3C_HTML5 APIs/Performance and Optimization/User Timing"><testcase id="test_user_timing_clear_marks_003" purpose="Check if the performance.clearMarks() is called with a non-existent mark which shouldn't change the state of the Performance Timeline" result="PASS" /><testcase id="test_user_timing_clear_marks_005" purpose="Check if the performance.clearMarks() is called with a existed mark which should no longer be present in the Performance Timeline" result="PASS" /><testcase id="test_user_timing_clear_marks_007" purpose="Check if the performance.clearMarks() is called that clear all marks then window.performance.getEntriesByType('mark') returns an empty object" result="PASS" /><testcase id="test_user_timing_clear_measures_003" purpose="Check if the performance.clearMeasures() is called with a non-existent measure which shouldn't change the state of the Performance Timeline" result="PASS" /><testcase id="test_user_timing_clear_measures_005" purpose="Check if the performance.clearMeasures() is called with a existed measure which should no longer be present in the Performance Timeline" result="PASS" /><testcase id="test_user_timing_clear_measures_007" purpose="Check if the performance.clearMeasures() is called that clear all measures then window.performance.getEntriesByType('measure') returns an empty object" result="PASS" /><testcase id="test_user_timing_mark" purpose="Check if this test validates that the performance.mark() method is working properly" result="PASS" /><testcase id="test_user_timing_mark_exceptions" purpose="Check if throws a SYNTAX_ERR exception if the markName argument is the same name as an attribute in the PerformanceTiming interface" result="PASS" /><testcase id="test_user_timing_measure" purpose="Check if this test validates that the performance.measure() method is working properly" result="PASS" /><testcase id="test_user_timing_measure_exceptions_003" purpose="Check if the window.performance.measure() throws a SYNTAX_ERR exception whenever a non-existent mark is provided as the startMark or endMark" result="PASS" /><testcase id="test_user_timing_measure_exceptions_005" purpose="Check if the window.performance.measure() throws a SYNTAX_ERR exception whenever a non-existent mark is provided as the startMark" result="PASS" /><testcase id="test_user_timing_measure_exceptions_007" purpose="Check if the window.performance.measure() throws a SYNTAX_ERR exception whenever a non-existent mark is provided as the endMark" result="PASS" /><testcase id="test_user_timing_measure_exceptions_009" purpose="Check if the window.performance.measure() throws a SYNTAX_ERR exception whenever a non-existent marks are provided as the startMark and endMark" result="PASS" /><testcase id="test_user_timing_measure_exceptions_011" purpose="Check if the window.performance.measure() throws a INVALID_ACCESS_ERR whenever a navigation timing attribute with a value of zero is provided as the startMark or endMark" result="PASS" /><testcase id="test_user_timing_measure_exceptions_013" purpose="Check if the window.performance.measure() throws a INVALID_ACCESS_ERR whenever a navigation timing attribute with a value of zero is provided as the startMark" result="PASS" /><testcase id="test_user_timing_measure_exceptions_015" purpose="Check if the window.performance.measure() throws a INVALID_ACCESS_ERR whenever a navigation timing attribute with a value of zero is provided as the endMark" result="PASS" /><testcase id="test_user_timing_measure_exceptions_017" purpose="Check if the window.performance.measure() throws a INVALID_ACCESS_ERR whenever a navigation timing attribute with a value of zero is provided as the startMark and endMark" result="PASS" /><testcase id="test_user_timing_measure_navigation_timing" purpose="Check if the performance.measure() method is working properly when navigation timing attributes are used in place of mark names" result="PASS" /><testcase id="usertiming_mark_without_parameter" purpose="Check if the window.performance.mark() threw a TYPE_ERR exception when invoke without a parameter" result="PASS" /><testcase id="usertiming_mark_with_name_optional_attribute" purpose="Check if this test validates exception scenarios of invoking performance.mark() with param of 'secureConnectionStart'" result="PASS" /><testcase id="usertiming_measure_without_parameter" purpose="Check if the window.performance.measure() threw a TYPE_ERR exception when invoke without a parameter" result="PASS" /><testcase id="user_timing_idlharness" purpose="Check if the user timing idlharness tests" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-999 XWALK-999]]</testcase></category><category name="W3C_HTML5 APIs/Performance and Optimization/Web Workers"><testcase id="MessagePort_initial_disabled" purpose="check if MessageChannel: port message queue is initially disabled" result="PASS" /><testcase id="MessagePort_onmessage_start" purpose="check if MessageChannel port.onmessage enables message queue" result="PASS" /><testcase id="postMessage_clone_port" purpose="Check if postMessage(): clone can clone a port correctly." result="PASS" /><testcase id="postMessage_DataCloneErr" purpose="check if postMessage() with WorkerNavigator raises DATA_CLONE_ERR" result="PASS" /><testcase id="postMessage_event_properties" purpose="Check if postMessage MessageEvent can work correctly." result="PASS" /><testcase id="postMessage_ports_readonly_array" purpose="Check if ports is read-only." result="PASS" /><testcase id="postMessage_target_source" purpose="Check if the postMessage() method can work correctly when the target port is entangled with source port." result="PASS" /><testcase id="SharedWorkerConstructor" purpose="Check if shared worker object can be constructed correctly." result="FAIL">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerEventListener" purpose="Check if addEventListener method of shared worker can work correctly." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerException" purpose="check if shared worker exception Tests" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerGlobalScope_name" purpose="Check if SharedWorkerGlobalScope attribute: name can return the worker name." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerGlobalScope_onconnect" purpose="Check if SharedWorkerGlobalScope method: onconnect can work correctly." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLoadError" purpose="Check if onerror method of shared worker can be invoked when the JS file that is used to construct the shared worker object doesn't exist." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation" purpose="Check if SharedWorkerLocation object can return the absolute URL set when it is created." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation_hash" purpose="Check if SharedWorkerLocation URL can decompose IDL attribute: hash." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation_hash_encoding" purpose="Check if SharedWorkerLocation.hash can work correctly with url encoding string." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation_hash_nonexist" purpose="Check if SharedWorkerLocation.hash can work correctly with no fragment." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation_host" purpose="Check if SharedWorkerLocation URL can decompose IDL attribute: host." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation_hostname" purpose="Check if SharedWorkerLocation URL can decompose IDL attribute: hostname." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation_href" purpose="Check if SharedWorkerLocation href attribute can return the absolute URL that the WorkerLocation object represents." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation_port" purpose="Check if SharedWorkerLocation URL can decompose IDL attribute: port." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation_portocol" purpose="Check if SharedWorkerLocation URL can decompose IDL attribute: protocol." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation_search" purpose="Check if SharedWorkerLocation URL can decomposition IDL attribute: search." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation_search_fragment" purpose="Check if SharedWorkerLocation.search can work correctly with fragment." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerLocation_search_nonexist" purpose="Check if SharedWorkerLocation.search can work correctly with no component." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerName" purpose="Check if basic usage of worker name can work correctly." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerNavigator_appName" purpose="Check if SharedWorkerNavigator appName can return the name of the browser." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerNavigator_appVersion" purpose="Check if SharedWorkerNavigator appVersion can return the version of the browser." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerNavigator_online" purpose="Check if SharedWorkerNavigator.onLine can work correctly." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerNavigator_platform" purpose="Check if SharedWorkerNavigator.platform can return the name of the platform." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerNavigator_userAgent" purpose="Check if SharedWorkerNavigator.userAgent can return the complete User-Agent header." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerScriptError" purpose="check if shared worker script error Tests" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerShared_distinct" purpose="Check if shared worker objects created by different names are distinct instances." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerShared_loaded" purpose="check if shared worker shared Tests" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerShared_name_except" purpose="check if throw exception when creating SharedWorker with different URLs but same name" result="PASS" /><testcase id="SharedWorkerShared_simultaneously" purpose="check if Access simultaneously-loaded instance of shared worker." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorkerSimple" purpose="Check if shared worker can work correctly." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SharedWorker_in_iframe" purpose="check if  shared worker in iframe Tests" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="WebWorker_Blob_url_support" purpose="Check if Web Worker support Blob url" result="PASS" /><testcase id="WebWorker_DedicatedWorkerGlobalScope_onMessage_binary" purpose="Check if WorkerGlobalScope method: onMessage can receive binary data." result="PASS" /><testcase id="WebWorker_DedicatedWorkerGlobalScope_onMessage_structure" purpose="Check if WorkerGlobalScope method: onMessage can receive structure data." result="PASS" /><testcase id="WebWorker_DedicatedWorkerGlobalScope_postMessage_binary" purpose="Check if WorkerGlobalScope method: postMessage can send binary data." result="PASS" /><testcase id="WebWorker_DedicatedWorkerGlobalScope_postMessage_structure" purpose="Check if WorkerGlobalScope method: postMessage can send structured data." result="PASS" /><testcase id="WebWorker_SharedWorker_constructor_invalidURL" purpose="Check if shared worker can throw exception when constructing object with an invalid URL." result="PASS" /><testcase id="WebWorker_SharedWorker_constructor_name" purpose="Check if shared worker object can be constructed with name." result="FAIL">Test result is the same as Upstream result</testcase><testcase id="WebWorker_WorkerGlobalScope_importScripts_unsupport" purpose="Check if WorkerGlobalScope API: importScripts() can throw exception when importing an existent but unsupported format file." result="PASS" /><testcase id="WebWorker_WorkerLocation_pathname_decompose" purpose="Check if SharedWorkerLocation URL can decompose IDL attribute: pathname." result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="WorkerGlobalScope_addEventListener" purpose="check if WorkerGlobalScope API: addEventListener()" result="PASS" /><testcase id="WorkerGlobalScope_close" purpose="Check if WorkerGlobalScope Close() can clear events queue." result="PASS" /><testcase id="WorkerGlobalScope_ErrorEvent_message" purpose="Check if WorkerGlobalScope ErrorEvent.message can work correctly." result="PASS" /><testcase id="WorkerGlobalScope_EventTarget" purpose="check if WorkerGlobalScope implements EventTarget" result="PASS" /><testcase id="WorkerGlobalScope_importScripts" purpose="Check if WorkerGlobalScope API: importScripts() can work correctly." result="PASS" /><testcase id="WorkerGlobalScope_importScripts_NetworkErr" purpose="check if importScripts() with non-existent script file raises NETWORK_ERR" result="PASS" /><testcase id="WorkerGlobalScope_navigator" purpose="Check if WorkerGlobalScope attribute navigator can work correctly." result="PASS" /><testcase id="WorkerGlobalScope_onMessage" purpose="Check if WorkerGlobalScope method: onmessage can work correctly." result="PASS" /><testcase id="WorkerGlobalScope_postMessage" purpose="Check if WorkerGlobalScope method: postMessage can work correctly." result="PASS" /><testcase id="WorkerGlobalScope_removeEventListener" purpose="check if WorkerGlobalScope API: removeEventListener()" result="PASS" /><testcase id="WorkerGlobalScope_self" purpose="Check if WorkerGlobalScope attribute: self can return WorkerGlobalScope object itself." result="PASS" /><testcase id="WorkerGlobalScope_setInterval" purpose="Check if WorkerGlobalScope API: setInterval() can work correctly." result="PASS" /><testcase id="WorkerGlobalScope_setTimeout" purpose="Check if WorkerGlobalScope_setTimeout can work correctly." result="PASS" /><testcase id="WorkerGlobalScope_XMLHttpRequest" purpose="check if WorkerGlobalScope XMLHttpRequest support" result="PASS" /><testcase id="WorkerLocation" purpose="check if WorkerLocation object" result="PASS" /><testcase id="WorkerLocation_hash" purpose="Check if WorkerLocation URL can decompose IDL attribute: hash." result="PASS" /><testcase id="WorkerLocation_hash_encoding" purpose="Check if WorkerLocation.hash can work correctly with url encoding string." result="PASS" /><testcase id="WorkerLocation_hash_nonexist" purpose="Check if WorkerLocation.hash can work correctly with no fragment." result="PASS" /><testcase id="WorkerLocation_host" purpose="Check if WorkerLocation URL can decompose IDL attribute: host." result="PASS" /><testcase id="WorkerLocation_hostname" purpose="Check if WorkerLocation URL can decompose IDL attribute: hostname." result="PASS" /><testcase id="WorkerLocation_href" purpose="Check if WorkerLocation href attribute can return the absolute URL that the WorkerLocation object represents." result="PASS" /><testcase id="WorkerLocation_pathname" purpose="Check if WorkerLocation URL can decompose IDL attribute: pathname." result="PASS" /><testcase id="WorkerLocation_port" purpose="Check if WorkerLocation URL can decompose IDL attribute: port." result="PASS" /><testcase id="WorkerLocation_protocol" purpose="Check if WorkerLocation URL can decompose IDL attribute: protocol." result="PASS" /><testcase id="WorkerLocation_search" purpose="Check if WorkerLocation URL can decompose IDL attribute: search." result="PASS" /><testcase id="WorkerLocation_search_empty" purpose="Check if WorkerLocation.search can work correctly with empty fragment." result="PASS" /><testcase id="WorkerLocation_search_fragment" purpose="Check if WorkerLocation.search can work correctly with fragment." result="PASS" /><testcase id="WorkerLocation_search_nonexist" purpose="Check if WorkerLocation.search can work correctly with no query component." result="PASS" /><testcase id="WorkerNavigator_appName" purpose="Check if WorkerNavigator appName can return the name of the browser." result="PASS" /><testcase id="WorkerNavigator_appVersion" purpose="Check if WorkerNavigator appVersion can return the version of the browser." result="PASS" /><testcase id="WorkerNavigator_onLine" purpose="Check if WorkerNavigator.onLine can represent whether the browser is online." result="PASS" /><testcase id="WorkerNavigator_platform" purpose="Check if WorkerNavigator.platform can return the name of the platform." result="PASS" /><testcase id="WorkerNavigator_userAgent" purpose="Check if WorkerNavigator.userAgent can return the complete User-Agent header." result="PASS" /><testcase id="Worker_basic" purpose="Check if basic function of Web Workers can work correctly." result="PASS" /><testcase id="Worker_constructor" purpose="Check if Worker constructor can work correctly." result="PASS" /><testcase id="Worker_ErrorEvent_message" purpose="Check if ErrorEvent message attribute can represent the error message." result="PASS" /><testcase id="Worker_ErrorEvent_type" purpose="Check if AbstractWorker ErrorEvent.type can represent the error type." result="PASS" /><testcase id="Worker_script_mimetype" purpose="Check if Worker always assumes the resource file to be JavaScript, regardless of the MIME type." result="PASS" /><testcase id="Worker_terminate_event_queue" purpose="Check if AbstractWorker terminate() can clear the event queue." result="PASS" /></category><category name="W3C_HTML5 APIs/Runtime and Packaging/App URI"><testcase id="uri_hash" purpose="Check if the hash value of window.location is right" result="PASS" /><testcase id="uri_href" purpose="Check if the href value of window.location is right" result="PASS" /><testcase id="uri_image_src" purpose="Check if the src value of image is right" result="PASS" /><testcase id="uri_origin" purpose="Check if the origin value of window.location is right" result="PASS" /><testcase id="uri_pathname" purpose="Check if the pathname value of window.location is right" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1941 XWALK-1941]]</testcase><testcase id="uri_port" purpose="Check if the port value of window.location is right" result="PASS" /><testcase id="uri_protocol" purpose="Check if the protocol value of window.location is right" result="PASS" /></category><category name="W3C_HTML5 APIs/Security/Content Security Policy 1.0"><testcase id="csp_base-uri_allow" purpose="Check if base-uri is origin, that img with right address will display." result="PASS" /><testcase id="csp_base-uri_asterisk" purpose="Check if base-uri is '*', that img will show normal." result="PASS" /><testcase id="csp_base-uri_cross-origin_block" purpose="Check if base-uri is origin, that local img will not display." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_child-src_asterisk" purpose="Check if child-src is asterisk, that red image will display." result="PASS" /><testcase id="csp_child-src_cross-origin_allowed" purpose="Check if child-src is origin, that red image from the origin address will display." result="PASS" /><testcase id="csp_child-src_cross-origin_blocked" purpose="Check if child-src is origin, that red image from other address should not display." result="PASS" /><testcase id="csp_child-src_self" purpose="Check if child-src is self, that red image from self site should display." result="PASS" /><testcase id="csp_connect-src_asterisk_allowed" purpose="Check if user agent is able to open internal resource by xhr when connect-src is *." result="PASS" /><testcase id="csp_connect-src_asterisk_allowed_ext" purpose="Check if user agent is able to open external resource by xhr when connect-src is *." result="PASS" /><testcase id="csp_connect-src_cross-origin_multi_xmlhttprequest_allowed_one" purpose="Check if user agent is able to open first allowed external resource by xhr when connect-src is cross-origin." result="PASS" /><testcase id="csp_connect-src_cross-origin_multi_xmlhttprequest_allowed_two" purpose="Check if user agent is able to open second allowed external resource by xhr when connect-src is cross-origin." result="PASS" /><testcase id="csp_connect-src_cross-origin_multi_xmlhttprequest_blocked" purpose="Check if user agent is unable to open not-allowed external resource by xhr when connect-src is multi cross-origin." result="PASS" /><testcase id="csp_connect-src_cross-origin_multi_xmlhttprequest_blocked_int" purpose="Check if user agent is unable to open internal resource by xhr when connect-src is multi cross-origin." result="PASS" /><testcase id="csp_connect-src_cross-origin_xmlhttprequest_allowed" purpose="Check if user agent is able to open external resource by xhr when connect-src is cross-origin." result="PASS" /><testcase id="csp_connect-src_cross-origin_xmlhttprequest_blocked" purpose="Check if user agent is unable to open not-allowed external resource by xhr when connect-src is cross-origin." result="PASS" /><testcase id="csp_connect-src_cross-origin_xmlhttprequest_blocked_int" purpose="Check if user agent is unable to open internal resource by xhr when connect-src is cross-origin." result="PASS" /><testcase id="csp_connect-src_none_xmlhttprequest_blocked" purpose="Check if user agent is unable to open internal resource by xhr when connect-src is none." result="PASS" /><testcase id="csp_connect-src_none_xmlhttprequest_blocked_ext" purpose="Check if user agent is unable to open external resource by xhr when connect-src is none." result="PASS" /><testcase id="csp_connect-src_self_xmlhttprequest_allowed" purpose="Check if user agent is able to open internal resource by xhr when connect-src is 'self'." result="PASS" /><testcase id="csp_connect-src_self_xmlhttprequest_blocked" purpose="Check if user agent is unable to open external resource by xhr when connect-src is 'self'." result="PASS" /><testcase id="csp_default-src-inline-blocked" purpose="Check if default-src is 'self' but without unsafe-inline, that inline script will be blocked." result="PASS" /><testcase id="csp_default-src_asterisk" purpose="Check if default-src is '*' that inline script won't be executed" result="PASS" /><testcase id="csp_default-src_asterisk_unsafe-inline_internal" purpose="Check if default-src is '*' and about is 'unsafe-inline, that internal script will be executed" result="PASS" /><testcase id="csp_default-src_asterisk_unsafe-inline_local" purpose="Check if default-src is '*' and about is 'unsafe-inline, that local script will be executed" result="PASS" /><testcase id="csp_default-src_cross-origin_connect_multi_xmlhttprequest_allowed_one" purpose="Check if user agent is able to open first allowed resource by xhr when default-src is multi cross-origin." result="PASS" /><testcase id="csp_default-src_cross-origin_connect_multi_xmlhttprequest_allowed_two" purpose="Check if user agent is able to open second allowed resource by xhr when default-src is multi cross-origin." result="PASS" /><testcase id="csp_default-src_cross-origin_connect_multi_xmlhttprequest_blocked" purpose="Check if user agent is unable to open not-allowed external resource by xhr when default-src is multi cross-origin." result="PASS" /><testcase id="csp_default-src_cross-origin_connect_multi_xmlhttprequest_blocked_int" purpose="Check if user agent is unable to open internal resource by xhr when default-src is multi cross-origin." result="PASS" /><testcase id="csp_default-src_cross-origin_connect_xmlhttprequest_allowed" purpose="Check if user agent is able to open internal resource by xhr when default-src is cross-origin." result="PASS" /><testcase id="csp_default-src_cross-origin_connect_xmlhttprequest_blocked" purpose="Check if user agent is unable to open not-allowed external resource by xhr when default-src is cross-origin." result="PASS" /><testcase id="csp_default-src_cross-origin_connect_xmlhttprequest_blocked_int" purpose="Check if user agent is unable to open internal resource by xhr when default-src is cross-origin." result="PASS" /><testcase id="csp_default-src_cross-origin_font_allowed" purpose="Check if user agent is able to use external font resource when default-src is cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_default-src_cross-origin_font_blocked" purpose="Check if user agent is unable to use internal font resource when default-src is cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-501 XWALK-501]]</testcase><testcase id="csp_default-src_cross-origin_multi_font_allowed_one" purpose="Check if user agent is able to use the first allowed external font resource when default-src is multi cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_default-src_cross-origin_multi_font_allowed_two" purpose="Check if user agent is able to use the second allowed external font resource when default-src is multi cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_default-src_cross-origin_multi_font_blocked" purpose="Check if user agent is unable to use the not allowed external font resource when default-src is multi cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-501 XWALK-501]]</testcase><testcase id="csp_default-src_cross-origin_multi_font_blocked_int" purpose="Check if user agent is unable to use the internal font resource when default-src is multi cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-501 XWALK-501]]</testcase><testcase id="csp_default-src_cross-origin_style_allow" purpose="Check if user agent is able to use external style resource when default-src is cross-origin." result="PASS" /><testcase id="csp_default-src_cross-origin_style_block" purpose="Check if user agent is unable to use not allowed external style resource when default-src is cross-origin." result="PASS" /><testcase id="csp_default-src_cross-origin_style_inline_block" purpose="Check if user agent is unable to use inline style when default-src is cross-origin." result="PASS" /><testcase id="csp_default-src_cross-origin_style_internal_block" purpose="Check if user agent is unable to use internal style resource when default-src is cross-origin." result="PASS" /><testcase id="csp_default-src_cross-origin_unsafe-inline_local" purpose="Check if default-src is cross-origin, that local script will be blocked" result="PASS" /><testcase id="csp_default-src_cross-origin_unsafe-inline_right" purpose="Check if default-src is cross-origin, that internal script with right address will be excuted" result="PASS" /><testcase id="csp_default-src_cross-origin_unsafe-inline_wrong" purpose="Check if default-src is cross-origin, that internal script with wrong address will be blocked" result="PASS" /><testcase id="csp_default-src_multi_cross-origin_style_allow_one" purpose="Check if user agent is able to use the first allowed external style resource when default-src is multi cross-origin." result="PASS" /><testcase id="csp_default-src_multi_cross-origin_style_allow_two" purpose="Check if user agent is able to use the second allowed external style resource when default-src is multi cross-origin." result="PASS" /><testcase id="csp_default-src_multi_cross-origin_style_block" purpose="Check if user agent is unable to use not allowed external style resource when default-src is multi cross-origin." result="PASS" /><testcase id="csp_default-src_multi_cross-origin_style_inline_block" purpose="Check if user agent is unable to use inline style when default-src is multi cross-origin." result="PASS" /><testcase id="csp_default-src_multi_cross-origin_style_internal_block" purpose="Check if user agent is unable to use internal style when default-src is multi cross-origin." result="PASS" /><testcase id="csp_default-src_multi_cross-origin_unsafe-inline_local" purpose="Check if default-src is multi cross-origin, that local script will be blocked" result="PASS" /><testcase id="csp_default-src_multi_cross-origin_unsafe-inline_right" purpose="Check if default-src is multi cross-origin, that internal script with right address will be excuted" result="PASS" /><testcase id="csp_default-src_multi_cross-origin_unsafe-inline_wrong" purpose="Check if default-src is multi cross-origin, that internal script with wrong address will be blocked" result="PASS" /><testcase id="csp_default-src_none_connect_xmlhttprequest_blocked" purpose="Check if user agent is unable to open internal resource by xhr when default-src is none." result="PASS" /><testcase id="csp_default-src_none_connect_xmlhttprequest_blocked_ext" purpose="Check if user agent is unable to open external resource by xhr when default-src is none." result="PASS" /><testcase id="csp_default-src_none_font_blocked_ext" purpose="Check if user agent is unable to use external font resource when default-src is none." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-501 XWALK-501]]</testcase><testcase id="csp_default-src_none_font_blocked_int" purpose="Check if user agent is unable to use internal font resource when default-src is none." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-501 XWALK-501]]</testcase><testcase id="csp_default-src_none_script" purpose="Check if user agent is unable to use inline script when default-src is none." result="PASS" /><testcase id="csp_default-src_none_style_blocked_ext" purpose="Check if user agent is unable to use external style when default-src is none." result="PASS" /><testcase id="csp_default-src_none_style_blocked_inline" purpose="Check if user agent is unable to use inline style when default-src is none." result="PASS" /><testcase id="csp_default-src_none_style_blocked_int" purpose="Check if user agent is unable to use internal style when default-src is none." result="PASS" /><testcase id="csp_default-src_self" purpose="Check if default-src is 'self' that inline script won't be executed" result="PASS" /><testcase id="csp_default-src_self_about_unsafe-inline_iframe" purpose="Check if default-src is 'self' and about is 'unsafe-inline, that inline script in iframe will be executed" result="PASS" /><testcase id="csp_default-src_self_about_unsafe-inline_img" purpose="Check if default-src is 'self' and about is 'unsafe-inline, that inline script in img will be executed" result="PASS" /><testcase id="csp_default-src_self_about_unsafe-inline_script" purpose="Check if default-src is 'self' and about is 'unsafe-inline, that inline script will be executed" result="PASS" /><testcase id="csp_default-src_self_connect_xmlhttprequest_allowed" purpose="Check if user agent is able to open internal resource by xhr when default-src is self." result="PASS" /><testcase id="csp_default-src_self_connect_xmlhttprequest_blocked" purpose="Check if user agent is unable to open external resource by xhr when default-src is self." result="PASS" /><testcase id="csp_default-src_self_default_src_self" purpose="Check if user agent is able to use the allowed external script resource when default-src is self." result="PASS" /><testcase id="csp_default-src_self_font_allowed" purpose="Check if user agent is able to use internal font resource when default-src is self." result="PASS" /><testcase id="csp_default-src_self_font_blocked" purpose="Check if user agent is able to use external font resource when default-src is self." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-501 XWALK-501]]</testcase><testcase id="csp_default-src_self_frame_allowed" purpose="Check if user agent is able to use internal frame resource when default-src is self." result="PASS" /><testcase id="csp_default-src_self_frame_blocked" purpose="Check if user agent is unable to use external default resource when default-src is self." result="PASS" /><testcase id="csp_default-src_self_img_allowed" purpose="Check if user agent is able to use internal image resource when default-src is self." result="PASS" /><testcase id="csp_default-src_self_img_blocked" purpose="Check if user agent is unable to use external image resource when default-src is self." result="PASS" /><testcase id="csp_default-src_self_object_allowed" purpose="Check if user agent is able to use internal object resource when default-src is self." result="PASS" /><testcase id="csp_default-src_self_object_blocked" purpose="Check if user agent is unable to use external object resource when default-src is self." result="PASS" /><testcase id="csp_default-src_self_script_allowed" purpose="Check if user agent is able to use internal script when default-src is self." result="PASS" /><testcase id="csp_default-src_self_script_blocked" purpose="Check if user agent is unable to use external script when default-src is self." result="PASS" /><testcase id="csp_default-src_self_script_src_self_unsafe-line_allowed" purpose="Check if user agent is able to use the allowed external script resource when default-src is self and script-src is self." result="PASS" /><testcase id="csp_default-src_self_style_allowed" purpose="Check if user agent is able to use internal style when default-src is self." result="PASS" /><testcase id="csp_default-src_self_style_blocked" purpose="Check if user agent is unable to use external style when default-src is self." result="PASS" /><testcase id="csp_default-src_self_style_inline_blocked" purpose="Check if user agent is unable to use inline style when default-src is self." result="PASS" /><testcase id="csp_default-src_self_xhr" purpose="Check if user agent is able to open external resource by xhr when default-src is self." result="PASS" /><testcase id="csp_enforcing_multiple_policies" purpose="When multiple policies are present, Check if each must be enforced or reported." result="PASS" /><testcase id="csp_font-src_asterisk_allowed_ext" purpose="Check if user agent is able to use external font resource when font-src is *." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2767 XWALK-2767]]</testcase><testcase id="csp_font-src_asterisk_allowed_int" purpose="Check if user agent is able to use internal font resource when font-src is *." result="PASS" /><testcase id="csp_font-src_cross-origin_allowed" purpose="Check if user agent is able to use external font resource when font-src is cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2767 XWALK-2767]]</testcase><testcase id="csp_font-src_cross-origin_blocked" purpose="Check if user agent is unable to use internal font resource when font-src is cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2767 XWALK-2767]]</testcase><testcase id="csp_font-src_cross-origin_multi_allowed_one" purpose="Check if user agent is able to use the first allowed external font resource when font-src is multi cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2767 XWALK-2767]]</testcase><testcase id="csp_font-src_cross-origin_multi_allowed_two" purpose="Check if user agent is able to use the second allowed external font resource when font-src is multi cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2767 XWALK-2767]]</testcase><testcase id="csp_font-src_cross-origin_multi_blocked" purpose="Check if user agent is unable to use the not allowed external font resource when font-src is multi cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2767 XWALK-2767]]</testcase><testcase id="csp_font-src_cross-origin_multi_blocked_int" purpose="Check if user agent is unable to use the internal font resource when font-src is multi cross origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2767 XWALK-2767]]</testcase><testcase id="csp_font-src_none_blocked_ext" purpose="Check if user agent is unable to use external font resource when font-src is none." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-501 XWALK-501]]</testcase><testcase id="csp_font-src_none_blocked_int" purpose="Check if user agent is unable to use internal font resource when font-src is none." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-501 XWALK-501]]</testcase><testcase id="csp_font-src_self_allowed" purpose="Check if user agent is able to use internal font resource when font-src is self." result="PASS" /><testcase id="csp_font-src_self_blocked" purpose="Check if user agent is unable to use external font resource when font-src is self." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-501 XWALK-501]]</testcase><testcase id="csp_frame-ancestors_asterisk" purpose="Check if frame-ancestors is asterisk, the iframe will show normal." result="PASS" /><testcase id="csp_frame-ancestors_none" purpose="Check if frame-ancestors is none, the iframe should not display." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_frame-src_asterisk_allowed_ext" purpose="Check if user agent is able to use external frame resource when frame-src is asterisk." result="PASS" /><testcase id="csp_frame-src_asterisk_allowed_int" purpose="Check if user agent is able to use internal frame resource when frame-src is asterisk." result="PASS" /><testcase id="csp_frame-src_cross-origin_allowed" purpose="Check if user agent is able to use external frame resource when frame-src is cross-origin." result="PASS" /><testcase id="csp_frame-src_cross-origin_blocked" purpose="Check if user agent is unable to use not allowed eternal frame resource when frame-src is cross-origin." result="PASS" /><testcase id="csp_frame-src_cross-origin_blocked_int" purpose="Check if user agent is unable to use internal frame resource when frame-src is cross-origin." result="PASS" /><testcase id="csp_frame-src_cross-origin_multi_allowed_one" purpose="Check if user agent is able to use the first external frame resource when frame-src is multi cross-origin." result="PASS" /><testcase id="csp_frame-src_cross-origin_multi_allowed_two" purpose="Check if user agent is able to use the second external frame resource when frame-src is multi cross-origin." result="PASS" /><testcase id="csp_frame-src_cross-origin_multi_blocked" purpose="Check if user agent is unable to use the not allowed external frame resource when frame-src is multi cross-origin." result="PASS" /><testcase id="csp_frame-src_cross-origin_multi_blocked_int" purpose="Check if user agent is unable to use the internal frame resource when frame-src is multi cross-origin." result="PASS" /><testcase id="csp_frame-src_none_blocked_ext" purpose="Check if user agent is unable to use external frame resource when frame-src is none." result="PASS" /><testcase id="csp_frame-src_none_blocked_int" purpose="Check if user agent is unable to use internal frame resource when frame-src is none." result="PASS" /><testcase id="csp_frame-src_self_allowed" purpose="Check if user agent is able to use internal frame resource when frame-src is self." result="PASS" /><testcase id="csp_frame-src_self_blocked" purpose="Check if user agent is unable to use external frame resource when frame-src is self." result="PASS" /><testcase id="csp_html-meta-elemtn" purpose="Check if a policy ina n HTML meta element with an http-equiv attribute that match for Content-Security-Policy." result="PASS" /><testcase id="csp_img-src_asterisk_allowed_ext" purpose="Check if user agent is able to use external image resource when img-src is *." result="PASS" /><testcase id="csp_img-src_asterisk_allowed_int" purpose="Check if user agent is able to use internal image resource when img-src is *." result="PASS" /><testcase id="csp_img-src_cross-origin_allowed" purpose="Check if user agent is able to use external image resource when img-src is cross-origin." result="PASS" /><testcase id="csp_img-src_cross-origin_blocked" purpose="Check if user agent is unable to use not-allowed external image resource when img-src is cross-origin." result="PASS" /><testcase id="csp_img-src_cross-origin_blocked_int" purpose="Check if user agent is unable to use internal image resource when img-src is cross-origin." result="PASS" /><testcase id="csp_img-src_cross-origin_multi_allowed_one" purpose="Check if user agent is able to use the first allowed external image resource when img-src is multi cross-origin." result="PASS" /><testcase id="csp_img-src_cross-origin_multi_blocked" purpose="Check if user agent is unable to use the not-allowed external image resource when img-src is multi cross-origin." result="PASS" /><testcase id="csp_img-src_cross-origin_multi_blocked_int" purpose="Check if user agent is unable to use the internal image resource when img-src is multi cross-origin." result="PASS" /><testcase id="csp_img-src_cross-two" purpose="Check if user agent is able to use the second allowed external image resource when img-src is multi cross-origin." result="PASS" /><testcase id="csp_img-src_none_blocked_ext" purpose="Check if user agent is unable to use the external image resource when img-src is 'none'." result="PASS" /><testcase id="csp_img-src_none_blocked_int" purpose="Check if user agent is unable to use the internal image resource when img-src is 'none'." result="PASS" /><testcase id="csp_img-src_self_allowed" purpose="Check if user agent is able to use the internal image resource when img-src is 'self'." result="PASS" /><testcase id="csp_img-src_self_blocked" purpose="Check if user agent is unable to use the external image resource when img-src is 'self'." result="PASS" /><testcase id="csp_media-src_asterisk_audio_allowed_ext" purpose="Check if user agent is able to use the external audio resource when media-src is *." result="PASS" /><testcase id="csp_media-src_asterisk_audio_allowed_int" purpose="Check if user agent is able to use the internal audio resource when media-src is *." result="PASS" /><testcase id="csp_media-src_asterisk_video_allowed_ext" purpose="Check if user agent is able to use the external video resource when media-src is *." result="PASS" /><testcase id="csp_media-src_asterisk_video_allowed_int" purpose="Check if user agent is able to use the internal video resource when media-src is *." result="PASS" /><testcase id="csp_media-src_corss-origin_audio_allowed_ext" purpose="Check if user agent is able to use the external audio resource when media-src is cross-origin." result="PASS" /><testcase id="csp_media-src_corss-origin_audio_blocked_ext" purpose="Check if user agent is unable to use the not allowed external audio resource when media-src is cross-origin." result="PASS" /><testcase id="csp_media-src_corss-origin_audio_blocked_int" purpose="Check if user agent is unable to use the internal audio resource when media-src is cross-origin." result="PASS" /><testcase id="csp_media-src_corss-origin_video_allowed_ext" purpose="Check if user agent is able to use the external video resource when media-src is cross-origin." result="PASS" /><testcase id="csp_media-src_corss-origin_video_blocked_ext" purpose="Check if user agent is unable to use the not allowed external video resource when media-src is cross-origin." result="PASS" /><testcase id="csp_media-src_corss-origin_video_blocked_int" purpose="Check if user agent is unable to use the internal video resource when media-src is cross-origin." result="PASS" /><testcase id="csp_media-src_none_audio_blocked_ext" purpose="Check if user agent is unable to use the external audio resource when media-src is none." result="PASS" /><testcase id="csp_media-src_none_audio_blocked_int" purpose="Check if user agent is unable to use the internal audio resource when media-src is none." result="PASS" /><testcase id="csp_media-src_none_video_blocked_ext" purpose="Check if user agent is unable to use the external video resource when media-src is none." result="PASS" /><testcase id="csp_media-src_none_video_blocked_int" purpose="Check if user agent is unable to use the internal video resource when media-src is none." result="PASS" /><testcase id="csp_media-src_self_audio_default" purpose="Check if audio current src is null by default when media-src is self." result="PASS" /><testcase id="csp_media-src_self_audio_external" purpose="Check that audio current src is empty if the source is cross origin when media-src is self." result="PASS" /><testcase id="csp_media-src_self_audio_internal" purpose="Check that audio current src is not empty if the source is origin when media-src is self." result="PASS" /><testcase id="csp_media-src_self_video_default" purpose="Check if video current src is null by default when media-src is self." result="PASS" /><testcase id="csp_media-src_self_video_external" purpose="Check that video current src is empty if the source is cross origin when media-src is self." result="PASS" /><testcase id="csp_media-src_self_video_internal" purpose="Check that video current src is not empty if the source is origin when media-src is self." result="PASS" /><testcase id="csp_object-src_asterisk_allowed_ext" purpose="Check if user agent is able to use external image resource when object-src is *." result="PASS" /><testcase id="csp_object-src_asterisk_allowed_int" purpose="Check if user agent is able to use internal image resource when object-src is *." result="PASS" /><testcase id="csp_object-src_cross-origin_allowed" purpose="Check if user agent is able to use external image resource when object-src is cross-origin." result="PASS" /><testcase id="csp_object-src_cross-origin_blocked" purpose="Check if user agent is unable to use not allowed external resource when object-src is cross-origin." result="PASS" /><testcase id="csp_object-src_cross-origin_blocked_int" purpose="Check if user agent is unable to use internal resource when object-src is cross-origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_object-src_cross-origin_multi_allowed_one" purpose="Check if user agent is able to use the first allowed external image resource when object-src is multi cross-origin." result="PASS" /><testcase id="csp_object-src_cross-origin_multi_blocked" purpose="Check if user agent is unable to use not allowed external resource when object-src is multi cross-origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-501 XWALK-501]]</testcase><testcase id="csp_object-src_cross-origin_multi_blocked_int" purpose="Check if user agent is unable to use internal resource when object-src is multi cross-origin." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-501 XWALK-501]]</testcase><testcase id="csp_object-src_cross-two" purpose="Check if user agent is able to use the second allowed external image resource when object-src is multi cross-origin." result="PASS" /><testcase id="csp_object-src_none_blocked_ext" purpose="Check if user agent is unable to use external resource when object-src is none." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_object-src_none_blocked_int" purpose="Check if user agent is unable to use internal resource when object-src is none." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_object-src_self_allowed" purpose="Check if user agent is able to use the internal image resource when object-src is 'self'." result="PASS" /><testcase id="csp_object-src_self_blocked" purpose="Check if user agent is unable to use external resource when object-src is self." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_plugin-types_allowed" purpose="Check if plugin-types is origin, the image with right format will display." result="PASS" /><testcase id="csp_plugin-types_blocked" purpose="Check if plugin-types is origin, the image with wrong format will not display." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_referrer_always" purpose="Check if referrer is always, shoul return referrer." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_referrer_default" purpose="Check if referrer is default, shoul return referrer." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_referrer_never" purpose="Check if referrer is never, the referrer shoul return null." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_referrer_origin" purpose="Check if referrer is origin, shoul return the ASCII serialization of referrer." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_ro_connect-src_asterisk_allowed" purpose="Check if user agent is able to open internal resource by xhr when only connect-src is *." result="PASS" /><testcase id="csp_ro_connect-src_asterisk_allowed_ext" purpose="Check if user agent is able to open external resource by xhr when only connect-src is *." result="PASS" /><testcase id="csp_ro_connect-src_cross-origin_multi_xmlhttprequest_allowed_one" purpose="Check if user agent is able to open first allowed external resource by xhr when only connect-src is cross-origin." result="PASS" /><testcase id="csp_ro_connect-src_cross-origin_multi_xmlhttprequest_allowed_two" purpose="Check if user agent is able to open second allowed external resource by xhr when only connect-src is cross-origin." result="PASS" /><testcase id="csp_ro_connect-src_cross-origin_multi_xmlhttprequest_blocked" purpose="Check if user agent is able to open not-allowed external resource by xhr when connect-src is multi cross-origin." result="PASS" /><testcase id="csp_ro_connect-src_cross-origin_multi_xmlhttprequest_blocked_int" purpose="Check if user agent is able to open internal resource by xhr when connect-src is multi cross-origin." result="PASS" /><testcase id="csp_ro_connect-src_cross-origin_xmlhttprequest_allowed" purpose="Check if user agent is able to open external resource by xhr when only connect-src is cross-origin." result="PASS" /><testcase id="csp_ro_connect-src_cross-origin_xmlhttprequest_blocked" purpose="Check if user agent is able to open not-allowed external resource by xhr when connect-src is cross-origin." result="PASS" /><testcase id="csp_ro_connect-src_cross-origin_xmlhttprequest_blocked_int" purpose="Check if user agent is able to open internal resource by xhr when connect-src is cross-origin." result="PASS" /><testcase id="csp_ro_connect-src_none_xmlhttprequest_blocked" purpose="Check if user agent is able to open internal resource by xhr when connect-src is none." result="PASS" /><testcase id="csp_ro_connect-src_none_xmlhttprequest_blocked_ext" purpose="Check if user agent is able to open external resource by xhr when connect-src is none." result="PASS" /><testcase id="csp_ro_connect-src_self_xmlhttprequest_allowed" purpose="Check if user agent is able to open internal resource by xhr when only connect-src is 'self'." result="PASS" /><testcase id="csp_ro_connect-src_self_xmlhttprequest_blocked" purpose="Check if user agent is able to open external resource by xhr when connect-src is 'self'." result="PASS" /><testcase id="csp_ro_font-src_self_allowed_ext" purpose="Check if user agent is able to use external font resource when font-src is self in report only mode." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2735 XWALK-2735]]</testcase><testcase id="csp_ro_font-src_self_allowed_int" purpose="Check if user agent is able to use internal font resource when font-src is self in report only mode." result="PASS" /><testcase id="csp_ro_frame-src_self_allowed_ext" purpose="Check if user agent is able to use external frame resource when ro frame-src is self." result="PASS" /><testcase id="csp_ro_frame-src_self_allowed_int" purpose="Check if user agent is able to use internal frame resource when ro frame-src is self." result="PASS" /><testcase id="csp_ro_img-src_self_allowed_ext" purpose="Check if user agent is able to use the external image resource when img-src is 'self' in report-only mode." result="PASS" /><testcase id="csp_ro_img-src_self_allowed_int" purpose="Check if user agent is able to use the internal image resource when img-src is 'self' in report-only mode." result="PASS" /><testcase id="csp_ro_media-src_corss-origin_audio_blocked_ext" purpose="Check if user agent is able to use the not allowed external audio resource when media-src is cross-origin in report only mode." result="PASS" /><testcase id="csp_ro_media-src_corss-origin_audio_blocked_int" purpose="Check if user agent is able to use the internal audio resource when media-src is cross-origin in report only mode." result="PASS" /><testcase id="csp_ro_media-src_corss-origin_video_blocked_ext" purpose="Check if user agent is able to use the not allowed external video resource when media-src is cross-origin in report only mode." result="PASS" /><testcase id="csp_ro_media-src_corss-origin_video_blocked_int" purpose="Check if user agent is able to use the internal video resource when media-src is cross-origin in report only mode." result="PASS" /><testcase id="csp_ro_media-src_none_audio_blocked_ext" purpose="Check if user agent is able to use the external audio resource when media-src is none in report only mode." result="PASS" /><testcase id="csp_ro_media-src_none_audio_blocked_int" purpose="Check if user agent is able to use the internal audio resource when media-src is none in report only mode." result="PASS" /><testcase id="csp_ro_media-src_none_video_blocked_ext" purpose="Check if user agent is able to use the external video resource when media-src is none in report only mode." result="PASS" /><testcase id="csp_ro_media-src_none_video_blocked_int" purpose="Check if user agent is able to use the internal video resource when media-src is none in report only mode." result="PASS" /><testcase id="csp_ro_object-src_self_allowed_ext" purpose="Check if user agent is able to use the external image resource when object-src is 'self' in report-only mode." result="PASS" /><testcase id="csp_ro_object-src_self_allowed_int" purpose="Check if user agent is able to use the internal image resource when object-src is 'self' in report-only mode." result="PASS" /><testcase id="csp_ro_script-src_self_unsafe-inline" purpose="Check if internal script works well when script-src is self, unsafe-inline in report only mode." result="PASS" /><testcase id="csp_ro_script-src_self_unsafe-inline_external" purpose="Check if cross origin script is unable to work when script-src is self, unsafe-inline in report only mode." result="PASS" /><testcase id="csp_ro_script-src_self_unsafe-inline_internal" purpose="Check if inline script works well when script-src is self, unsafe-inline in report only mode." result="PASS" /><testcase id="csp_ro_script-src_self_unsafe-inline_unsafe-eval" purpose="Check if inline function eval works well when script-src is self, unsafe-inline, unsafe-eval in report only mode." result="PASS" /><testcase id="csp_ro_script-src_self_unsafe-inline_unsafe-eval_external" purpose="Check if cross origin eval function is unable to work when script-src is self, unsafe-inline, unsafe-eval in report only mode." result="PASS" /><testcase id="csp_ro_script-src_self_unsafe-inline_unsafe-eval_internal" purpose="Check if internal script works well when script-src is self, unsafe-inline, unsafe-eval in report only mode." result="PASS" /><testcase id="csp_ro_style-src_asterisk_blocked_inline" purpose="Check if user agent is able to use inline style resource when style-src is * in report only mode." result="PASS" /><testcase id="csp_ro_style-src_cross-origin_blocked" purpose="Check if user agent is able to use not allowed external style resource when style-src is cross origin in report only mode." result="PASS" /><testcase id="csp_ro_style-src_cross-origin_blocked_inline" purpose="Check if user agent is able to use inline style resource when style-src is cross origin in report only mode." result="PASS" /><testcase id="csp_ro_style-src_cross-origin_blocked_int" purpose="Check if user agent is able to use internal style resource when style-src is cross origin in report only mode." result="PASS" /><testcase id="csp_ro_style-src_cross-origin_multi_blocked" purpose="Check if user agent is able to use not allowed external style resource when style-src is multi cross origin in report only mode." result="PASS" /><testcase id="csp_ro_style-src_cross-origin_multi_blocked_inline" purpose="Check if user agent is able to use inline style resource when style-src is multi cross origin in report only mode." result="PASS" /><testcase id="csp_ro_style-src_cross-origin_multi_blocked_int" purpose="Check if user agent is able to use internal style resource when style-src is multi cross origin in report only mode." result="PASS" /><testcase id="csp_ro_style-src_none_blocked_ext" purpose="Check if user agent is able to use external style resource when style-src is none in report only mode." result="PASS" /><testcase id="csp_ro_style-src_none_blocked_inline" purpose="Check if user agent is able to use inline style resource when style-src is none in report only mode." result="PASS" /><testcase id="csp_ro_style-src_none_blocked_int" purpose="Check if user agent is able to use internal style resource when style-src is none in report only mode." result="PASS" /><testcase id="csp_ro_style-src_self_blocked" purpose="Check if user agent is able to use external style resource when style-src is self in report only mode." result="PASS" /><testcase id="csp_ro_style-src_self_blocked_inline" purpose="Check if user agent is able to use inline style resource when style-src is self in report only mode." result="PASS" /><testcase id="csp_ro_style-src_unsafe-inline_blocked_ext" purpose="Check if user agent is able to use external style resource when style-src is unsafe-inline in report only mode." result="PASS" /><testcase id="csp_ro_style-src_unsafe-inline_blocked_int" purpose="Check if user agent is able to use internal style resource when style-src is unsafe-inline in report only mode." result="PASS" /><testcase id="csp_sandbox_allow-same-origin_allow-scripts-inline" purpose="Check if inline function works well when sandbox is allow-same-origin allow-scripts." result="PASS" /><testcase id="csp_sandbox_allow-same-origin_allow-scripts_event" purpose="Check if event handler function works well when sandbox is allow-same-origin allow-scripts." result="PASS" /><testcase id="csp_sandbox_allow-same-origin_allow-scripts_external" purpose="Check if external function works well when sandbox is allow-same-origin allow-scripts." result="PASS" /><testcase id="csp_sandbox_allow-same-origin_allow-scripts_int" purpose="Check if internal function works well when sandbox is allow-same-origin allow-scripts." result="PASS" /><testcase id="csp_sandbox_empty_event" purpose="Check if user agent is unable to use javascript in event handler when sandbox is empty." result="PASS" /><testcase id="csp_sandbox_empty_ext" purpose="Check if user agent is unable to use javascript in external when sandbox is empty." result="PASS" /><testcase id="csp_sandbox_empty_inline" purpose="Check if user agent is unable to use javascript inline when sandbox is empty." result="PASS" /><testcase id="csp_sandbox_empty_int" purpose="Check if user agent is unable to use javascript internal when sandbox is empty." result="PASS" /><testcase id="csp_script-src_asterisk_allowed_ext" purpose="Check if user agent is able to use the external script resource when script-src is *." result="PASS" /><testcase id="csp_script-src_asterisk_allowed_int" purpose="Check if user agent is able to use the internal script resource when script-src is *." result="PASS" /><testcase id="csp_script-src_cross-origin" purpose="Check if user agent is unable to use the inline script resource when script-src is cross-origin." result="PASS" /><testcase id="csp_script-src_cross-origin_block_inline" purpose="Check if user agent is unable to use the inline script resource when there is no 'unsafe-inline' in script-src." result="PASS" /><testcase id="csp_script-src_cross-origin_multi_allowed_one" purpose="Check if user agent is able to use the first external script resource when script-src is cross-origin." result="PASS" /><testcase id="csp_script-src_cross-origin_multi_allowed_two" purpose="Check if user agent is able to use the second external script resource when script-src is cross-origin." result="PASS" /><testcase id="csp_script-src_cross-origin_multi_blocked" purpose="Check if user agent is unable to use the internal script resource when script-src is multi cross-origin." result="PASS" /><testcase id="csp_script-src_cross-origin_unsafe-inline_allowed" purpose="Check if user agent is able to use the external script resource when script-src is cross-origin unsafe-inline." result="PASS" /><testcase id="csp_script-src_cross-origin_unsafe-inline_blocked" purpose="Check if user agent is unable to use the internal script resource when script-src is cross-origin unsafe-inline." result="PASS" /><testcase id="csp_script-src_cross-origin_unsafe-inline_blocked_ext" purpose="Check if user agent is unable to use the not allowed external script resource when script-src is cross-origin unsafe-inline." result="PASS" /><testcase id="csp_script-src_none" purpose="Check if user agent is unable to use script resource when script-src is none." result="PASS" /><testcase id="csp_script-src_self_unsafe-inline" purpose="Check if internal script works well when script-src is self, unsafe-inline." result="PASS" /><testcase id="csp_script-src_self_unsafe-inline_external" purpose="Check if cross origin script is unable to work when script-src is self, unsafe-inline." result="PASS" /><testcase id="csp_script-src_self_unsafe-inline_internal" purpose="Check if inline script works well when script-src is self, unsafe-inline." result="PASS" /><testcase id="csp_script-src_self_unsafe-inline_unsafe-eval" purpose="Check if inline function eval works well when script-src is self, unsafe-inline, unsafe-eval." result="PASS" /><testcase id="csp_script-src_self_unsafe-inline_unsafe-eval_external" purpose="Check if cross origin eval function is unable to work when script-src is self, unsafe-inline, unsafe-eval." result="PASS" /><testcase id="csp_script-src_self_unsafe-inline_unsafe-eval_internal" purpose="Check if internal script works well when script-src is self, unsafe-inline, unsafe-eval." result="PASS" /><testcase id="csp_script-src_self_unsafe-line_allowed" purpose="Check if user agent is able to use the allowed external script resource when script-src is self with unsafe-inlune." result="PASS" /><testcase id="csp_script-src_self_unsafe-line_blocked" purpose="Check if user agent is unable to use the internal script resource when script-src is self." result="PASS" /><testcase id="csp_script-src_unsafe-inline_allowed" purpose="Check if user agent is able to use the inline script resource when script-src is only unsafe-inline." result="PASS" /><testcase id="csp_script-src_unsafe-inline_allowed_event" purpose="Check if user agent is able to use the inline script called by event resource when script-src is only unsafe-inline." result="PASS" /><testcase id="csp_script-src_unsafe-inline_allowed_iframe" purpose="Check if user agent is able to use the inline script in iframe resource when script-src is only unsafe-inline." result="PASS" /><testcase id="csp_script-src_unsafe-inline_blocked_ext" purpose="Check if user agent is unable to use the external script resource when script-src is only unsafe-inline." result="PASS" /><testcase id="csp_script-src_unsafe-inline_blocked_int" purpose="Check if user agent is unable to use the internal script resource when script-src is only unsafe-inline." result="PASS" /><testcase id="csp_script-src_unsafe-inline_unsafe-eval_allowed_inline" purpose="Check if user agent is able to use the inline script resource when script-src is unsafe-eval." result="PASS" /><testcase id="csp_script-src_unsafe-inline_unsafe-eval_allowed_int" purpose="Check if user agent is able to use the eval script resource when default-src is unsafe-eval." result="PASS" /><testcase id="csp_style-src_asterisk_allowed_ext" purpose="Check if user agent is able to use external style resource when style-src is *." result="PASS" /><testcase id="csp_style-src_asterisk_allowed_int" purpose="Check if user agent is able to use internal style resource when style-src is *." result="PASS" /><testcase id="csp_style-src_asterisk_blocked_inline" purpose="Check if user agent is unable to use inline style resource when style-src is *." result="PASS" /><testcase id="csp_style-src_cross-origin_allowed" purpose="Check if user agent is able to use external style resource when style-src is cross origin." result="PASS" /><testcase id="csp_style-src_cross-origin_blocked" purpose="Check if user agent is unable to use not allowed external style resource when style-src is cross origin." result="PASS" /><testcase id="csp_style-src_cross-origin_blocked_inline" purpose="Check if user agent is unable to use inline style resource when style-src is cross origin." result="PASS" /><testcase id="csp_style-src_cross-origin_blocked_int" purpose="Check if user agent is unable to use internal style resource when style-src is cross origin." result="PASS" /><testcase id="csp_style-src_cross-origin_multi_allowed_one" purpose="Check if user agent is able to use the first allowed external style resource when style-src is multi cross origin." result="PASS" /><testcase id="csp_style-src_cross-origin_multi_allowed_two" purpose="Check if user agent is able to use the second allowed external style resource when style-src is multi cross origin." result="PASS" /><testcase id="csp_style-src_cross-origin_multi_blocked" purpose="Check if user agent is unable to use not allowed external style resource when style-src is multi cross origin." result="PASS" /><testcase id="csp_style-src_cross-origin_multi_blocked_inline" purpose="Check if user agent is unable to use inline style resource when style-src is multi cross origin." result="PASS" /><testcase id="csp_style-src_cross-origin_multi_blocked_int" purpose="Check if user agent is unable to use internal style resource when style-src is multi cross origin." result="PASS" /><testcase id="csp_style-src_none_blocked_ext" purpose="Check if user agent is unable to use external style resource when style-src is none." result="PASS" /><testcase id="csp_style-src_none_blocked_inline" purpose="Check if user agent is unable to use inline style resource when style-src is none." result="PASS" /><testcase id="csp_style-src_none_blocked_int" purpose="Check if user agent is unable to use internal style resource when style-src is none." result="PASS" /><testcase id="csp_style-src_self_allowed" purpose="Check if user agent is able to use internal style resource when style-src is self." result="PASS" /><testcase id="csp_style-src_self_blocked" purpose="Check if user agent is unable to use external style resource when style-src is self." result="PASS" /><testcase id="csp_style-src_self_blocked_inline" purpose="Check if user agent is unable to use inline style resource when style-src is self." result="PASS" /><testcase id="csp_style-src_unsafe-inline_allowed" purpose="Check if user agent is able to use inline style resource when style-src is unsafe-inline." result="PASS" /><testcase id="csp_style-src_unsafe-inline_blocked_ext" purpose="Check if user agent is unable to use external style resource when style-src is unsafe-inline." result="PASS" /><testcase id="csp_style-src_unsafe-inline_blocked_int" purpose="Check if user agent is unable to use internal style resource when style-src is unsafe-inline." result="PASS" /></category><category name="W3C_HTML5 APIs/Security/Cross-Origin Resource Sharing"><testcase id="cors_XMLHttpRequest_add_max_age" purpose="Check if optionally add a single Access-Control-Max-Age header with as value the amount of seconds the user agent is allowed to cache the result of the request" result="PASS" /><testcase id="cors_XMLHttpRequest_allow_credentials_true" purpose="Check if the response uses the value of the Origin header as value, and adds a single Access-Control-Allow-Credentials header with the literal string 'true' as value when the resource supports credentials add a single Access-Control-Allow-Origin header" result="PASS" /><testcase id="cors_XMLHttpRequest_base" purpose="Check if example of using XMLHttpRequest from a client-side Web application can cross origin share the resource" result="PASS" /><testcase id="cors_XMLHttpRequest_credentials_false_origin" purpose="Check if the response adds a single Access-Control-Allow-Origin header and literal string '*' as value when the resource does not supports credentials add a single Access-Control-Allow-Origin header" result="PASS" /><testcase id="cors_XMLHttpRequest_get" purpose="Check that the XMLHttpRequest supports CORS if the request method is get" result="PASS" /><testcase id="cors_XMLHttpRequest_getResponseHeader_not_null" purpose="Check if the getResponseHeader() method of XMLHttpRequest will return valid value when the field name is an ASCII case-insensitive match for one of the values of the Access-Control-Expose-Headers headers" result="PASS" /><testcase id="cors_XMLHttpRequest_getResponseHeader_null" purpose="Check if the getResponseHeader() method of XMLHttpRequest will return null when the field name does not match for one of the values of the Access-Control-Expose-Headers headers" result="PASS" /><testcase id="cors_XMLHttpRequest_get_true" purpose="Check if the XMLHttpRequest supports CORS when the request method is get and async flag is true" result="PASS" /><testcase id="cors_XMLHttpRequest_post" purpose="Check that the XMLHttpRequest supports CORS if the request method is posted" result="PASS" /><testcase id="cors_XMLHttpRequest_post_true" purpose="Check if the XMLHttpRequest supports CORS when the request method is post and async flag is true" result="PASS" /></category><category name="W3C_HTML5 APIs/Security/HTML5 The iframe element"><testcase id="attri_allow-same-origin_child_content" purpose="Allow parent content to access sandbox child iframe content when sandbox='allow-same-origin'" result="PASS" /><testcase id="attri_allow-same-origin_content" purpose="Check that allow sandbox iframe to access other content from the same origin if sandbox='allow-same-origin'" result="PASS" /><testcase id="attri_allow-same-origin_cookie" purpose="document.cookie access is allowed inside iframe with sandbox='allow-same-origin." result="PASS" /><testcase id="attri_allow-same-origin_storage" purpose="Allow localStorage and sessionStorage access inside iframe with sandbox='allow-same-origin allow-scripts'" result="PASS" /><testcase id="attri_allow-script_script_exec" purpose="Check that allow script to exec inside iframe with sandbox attribute if sandbox='allow-scripts'" result="PASS" /><testcase id="attri_default_block_child_contents" purpose="Check that block the parent content to access the child iframe content of sandbox if sandbox attribute exists" result="PASS" /><testcase id="attri_default_block_cookie" purpose="Block document.cookie inside iframe with the sandbox attribute" result="PASS" /><testcase id="attri_default_block_script_exec" purpose="Block script execution inside iframe with sandbox attribute" result="PASS" /><testcase id="attri_default_block_storage" purpose="Block localStorage and sessionStorage inside iframe with the sandbox attribute" result="PASS" /><testcase id="attri_default_block_submit" purpose="Block form submission inside iframe with sandbox attribute" result="PASS" /><testcase id="attri_default_block_XMLHttpRequest" purpose="Block XMLHttpRequest in an iframe with the sandbox attribute" result="PASS" /><testcase id="attri_format_ios_10" purpose="value of sandbox attribute must be an unordered set of unique space-separated tokens. Ios special tag 10" result="PASS" /><testcase id="attri_format_ios_12" purpose="value of sandbox attribute must be an unordered set of unique space-separated tokens. Ios specialtag 10" result="PASS" /><testcase id="attri_format_ios_return" purpose="value of sandbox attribute must be an unordered set of unique space-separated tokens. Ios return tag" result="PASS" /><testcase id="attri_format_ios_space" purpose="value of sandbox attribute must be an unordered set of unique space-separated tokens. Ios space tag" result="PASS" /><testcase id="attri_format_ios_tab" purpose="value of sandbox attribute must be an unordered set of unique space-separated tokens. Ios tab tag" result="PASS" /><testcase id="attri_format_return" purpose="value of sandbox attribute must be an unordered set of unique space-separated tokens. Return tag" result="PASS" /><testcase id="attri_format_space_4tab" purpose="Check if the value of sandbox attribute must be an unordered set of unique space-separated tokens" result="PASS" /><testcase id="attri_format_tab" purpose="value of sandbox attribute must be an unordered set of unique space-separated tokens. Tab tag" result="PASS" /><testcase id="iframe_contentDocument_attribute_exsits" purpose="Check if the iframe.contentDocument attribute exists" result="PASS" /><testcase id="iframe_contentDocument_return_document" purpose="Check if the iframe.contentDocument attribute must return the Document object of the active document of the iframe element's nested browsing context" result="PASS" /><testcase id="iframe_contentWindow_attribute_exists" purpose="Check if the iframe.contentWindow attribute exists" result="PASS" /><testcase id="iframe_contentWindow_document_value" purpose="Check if the iframe.contentWindow.document attribute return the Document object of the active document" result="PASS" /><testcase id="iframe_contentWindow_return_window" purpose="Check if the iframe.contentWindow attribute must return the WindowProxy object of the object element's nested browsing context, if it has one" result="PASS" /><testcase id="iframe_height_attribute_exists" purpose="Check if the iframe.height attribute exists" result="PASS" /><testcase id="iframe_height_attribute_type" purpose="Check if the iframe.height attribute is of type DOMString" result="PASS" /><testcase id="iframe_height_basic" purpose="Check if the iframe.height attribute must reflect the respective content attributes of the same name" result="PASS" /><testcase id="iframe_height_value_empty_string" purpose="Check if the iframe.height attribute return empty string that it been set empty string" result="PASS" /><testcase id="iframe_height_value_float" purpose="Check if the iframe.height attribute been set float integers value that it clientHeight is valid non-negative integers" result="PASS" /><testcase id="iframe_height_value_negative" purpose="Check if the iframe.height attribute been set negative integers value that it clientHeight is valid non-negative integers" result="PASS" /><testcase id="iframe_name_attribute_exists" purpose="Check if the iframe.name attribute exists" result="PASS" /><testcase id="iframe_name_attribute_type" purpose="Check if the iframe.name attribute is of type DOMString" result="PASS" /><testcase id="iframe_name_default_value" purpose="Check if iframe.name default value is empty string" result="PASS" /><testcase id="iframe_name_value_empty_string" purpose="Check if the iframe.name attribute must reflect the respective content attributes of the same name,the value is empty string" result="PASS" /><testcase id="iframe_name_value_string" purpose="Check if the iframe.name attribute must reflect the respective content attributes of the same name" result="PASS" /><testcase id="iframe_sandbox_allow-same-origin" purpose="Check if iframe.sandbox attribute set 'allow-same-origin',then compare iframe.sandbox is 'allow-same-origin'" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4017 XWALK-4017]]</testcase><testcase id="iframe_sandbox_attribute_exists" purpose="Check if the iframe.sandbox attribute exists" result="PASS" /><testcase id="iframe_sandbox_example_allow-same-origin_allow-forms_allow-scripts" purpose="Check if iframe.sandbox attribute set 'allow-same-origin,allow-forms,allow-scripts',then compare HTMLIFrameElement.sandbox is 'allow-same-origin,allow-forms,allow-scripts'" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4017 XWALK-4017]]</testcase><testcase id="iframe_sandbox_example_default_value" purpose="Check if the iframe.sandbox attribute default value is empty string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4017 XWALK-4017]]</testcase><testcase id="iframe_sandbox_value_allow_scripts" purpose="Check if the iframe.sandbox return allow-scripts that it been set value same name" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4017 XWALK-4017]]</testcase><testcase id="iframe_sandbox_value_allow_top_navigation" purpose="Check if the iframe.sandbox return allow-top-navigation that it been set value same name" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4017 XWALK-4017]]</testcase><testcase id="iframe_srcdoc_attribute_exists" purpose="Check if the iframe.srcdoc attribute exists" result="PASS" /><testcase id="iframe_srcdoc_attribute_type" purpose="Check if the iframe.srcdoc attribute is of type DOMString" result="PASS" /><testcase id="iframe_srcdoc_default_value" purpose="Check if the srcdoc attribute default value is empty string" result="PASS" /><testcase id="iframe_srcdoc_quotes_escaped" purpose="Check if the attribute srcdoc of iframe,srcdoc quotes have to be escaped" result="PASS" /><testcase id="iframe_srcdoc_src_bind" purpose="Check if src attribute and the srcdoc attribute are both specified together, the srcdoc attribute takes priority" result="PASS" /><testcase id="iframe_srcdoc_value_empty_string" purpose="Check if the iframe.srcdoc attribute return empty string if it been set empty string" result="PASS" /><testcase id="iframe_srcdoc_value_string" purpose="Check if the iframe.srcdoc attribute must reflect the respective content attributes of the same name" result="PASS" /><testcase id="iframe_src_attribute_exists" purpose="Check if the iframe.src attribute exists" result="PASS" /><testcase id="iframe_src_attribute_present" purpose="Check if the iframe.src attribute must be a valid non-empty URL potentially surrounded by spaces if the attribute present" result="PASS" /><testcase id="iframe_src_attribute_type" purpose="Check if the iframe.src attribute is of type DOMString" result="PASS" /><testcase id="iframe_src_value_string" purpose="Check if the iframe.src attribute must reflect the respective content attributes of the same name" result="PASS" /><testcase id="iframe_width_attribute_exists" purpose="Check if the iframe.width attribute exists" result="PASS" /><testcase id="iframe_width_attribute_type" purpose="Check if the iframe.width attribute is of type DOMString" result="PASS" /><testcase id="iframe_width_value_default" purpose="Test checks that iframe.width attribute default value is empty string" result="PASS" /><testcase id="iframe_width_value_empty_string" purpose="Check if the iframe.width attribute return null if it been set empty string" result="PASS" /><testcase id="iframe_width_value_float" purpose="Check if the iframe.width attribute been set float value that it clientWidth is valid non-negative integers" result="PASS" /><testcase id="iframe_width_value_negative" purpose="Check if the iframe.width attribute been set negative integers value that it clientWidth is valid non-negative integers" result="PASS" /><testcase id="iframe_width_value_string" purpose="Check if the iframe.width attribute must reflect the respective content attributes of the same name" result="PASS" /></category><category name="W3C_HTML5 APIs/Storage/File API: Directories and System"><testcase id="DirectoryEntry_createReader_base" purpose="Check if success creates a new DirectoryReader to read Entries" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_createReader_exist" purpose="Check if DirectoryEntry.createReader exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_createReader_return_type" purpose="Check if the type of createReader return value is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getDirectory_base" purpose="Check if getDirectory() has all valid arguments that expecting successCallback() is to be invoke" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getDirectory_entry" purpose="Check if create or look up a directory by DirectoryEntry interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getDirectory_exist" purpose="Check if DirectoryEntry.getDirectory exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getDirectory_Flags_both_true" purpose="Check if create and exclusive are both true and the path already exists, getDirectory fail" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getDirectory_Flags_create_false_path_is_file" purpose="Check If create is not true and the path exists, but is a file, getDirectory fail" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getDirectory_Flags_create_false_path_notexist" purpose="Check if create is not true and the path doesn't exist, getDirectory fail" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getDirectory_Flags_create_true_path_notexist" purpose="Check if create is true, the path doesn't exist, and no other error occurs, getDirectory create and return a corresponding DirectoryEntry" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getDirectory_no_arguments" purpose="Check if getDirectory () without arguments that exception is thrown" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getFile_base" purpose="Check if getFile() has all valid arguments that expecting successCallback() to be invoke" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getFile_entry" purpose="Check if create or look up a file by DirectoryEntry interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getFile_exist" purpose="Check if DirectoryEntry.getFile exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getFile_Flags_both_true" purpose="Check if create and exclusive are both true and the path already exists, getFile fail" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getFile_Flags_create_false_path_is_directory" purpose="Check if create is not true and the path exists, but is a directory, getFile failed" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getFile_Flags_create_false_path_notexist" purpose="Check if create is not true and the path doesn't exist, getFile fail" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getFile_Flags_create_true_path_is_illegalcharacter" purpose="Check if create is true, but the path is illegal character, getFile failed" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getFile_Flags_create_true_path_notexist" purpose="Check if create is true, the path doesn't exist, and no other error occurs, getFile create it as a zero-length file and return a corresponding FileEntry" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getFile_no_arguments" purpose="Check if getFile () without arguments that exception is thrown" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getFile_path_empty_string" purpose="Check if the parameter path is set empty string that expecting errorCallback() is to be invoked in getFile() method" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_getFile_path_null" purpose="Check if the parameter path is set null that expecting errorCallback() is to be invoked in getFile() method" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_removeRecursively_base" purpose="Check if delete a directory and all of its contents" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_removeRecursively_entry" purpose="Check if success delete a directory" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_removeRecursively_exist" purpose="Check if DirectoryEntry.removeRecursively exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_removeRecursively_fail_root_directory_entry" purpose="Check if it is an error to attempt to delete the root directory of a filesystem" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_removeRecursively_not_empty_directory" purpose="Check if trying to delete a directory that contains a file" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryEntry_removeRecursively_no_arguments" purpose="Check if removeRecursively () without arguments that exception is thrown" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryReader_readEntries_all_entries" purpose="Check if the readEntries must return each entry in the directory exactly once" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryReader_readEntries_arguments_null" purpose="Check if readEntries() witho arguments null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryReader_readEntries_arguments_string" purpose="Check if readEntries() witho arguments type is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryReader_readEntries_base" purpose="Check if readEntries() has all valid arguments that expecting successCallback() is to be invoke" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryReader_readEntries_entries_no_itselfandparent" purpose="Check if the entries produced by readEntries must not include the directory itself ['.'] or its parent ['..']" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryReader_readEntries_entry" purpose="Check if the readEntries method of DirectoryReader interface" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryReader_readEntries_exist" purpose="Check if DirectoryReader.readEntries exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="DirectoryReader_readEntries_no_arguments" purpose="Check if readEntries () without arguments that exception is thrown" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="EntriesCallback_handleEvent_entries_type" purpose="Check if the type of the parameter entries is Entry[] in EntryCallback interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="EntriesCallback_handleEvent_exist" purpose="Check if EntriesCallback.handleEvent exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="EntryCallback_handleEvent_entry_type" purpose="Check if the type of the parameter entry is Entry in EntryCallback interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="EntryCallback_handleEvent_exist" purpose="Check if EntryCallback.handleEvent exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_copyTo_base" purpose="Check if can copy a file to a different location on the file system" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_copyTo_exist" purpose="Check if Entry.copyTo exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_copyTo_itself" purpose="Check if throw an exception when copy an entry inside itself at any depth if it is a directory" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_copyTo_no_arguments" purpose="Check if copyTo () without arguments that exception is thrown" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_copyTo_parent_noexist" purpose="Check if the parameter parent is not exist that expecting errorCallback() is to be invoked in copyTo() method" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_copyTo_parent_not_provide" purpose="Check if throw an exception when copy it into its parent if a name different from its current one isn't provided" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_copyTo_parent_null" purpose="Check if the parameter parent is set null that expecting errorCallback() is to be invoked in copyTo() method" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_copyTo_success_file_entry" purpose="Check if success copy an entry to a different location on the file system" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_filesystem_create" purpose="Check the file system on which the entry resides" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_filesystem_entry" purpose="Check the entry resides" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_filesystem_exist" purpose="Check if Entry.filesystem exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_filesystem_readonly" purpose="Check if the Entry.filesystem attribute is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_filesystem_type" purpose="Check if the type of Entry.filesystem attribute is object" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_fullPath_directory_entry" purpose="Check if Entry can get the full absolute path of a directory" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_fullPath_exist" purpose="Check if Entry.fullPath exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_fullPath_file_entry" purpose="Check if Entry can get the full absolute path of a file" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_fullPath_readonly" purpose="Check if the Entry.fullPath attribute is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_fullPath_type" purpose="Check if the type of Entry.fullPath is DOMString" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_getMetadata_arguments_null" purpose="Check if getMetadata () with arguments null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_getMetadata_arguments_string" purpose="Check if getMetadata () with arguments type is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_getMetadata_base" purpose="Check if getMetadata() has all valid arguments that expecting successCallback() is to be invoke" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_getMetadata_entry" purpose="Check if can look up metadata" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_getMetadata_exist" purpose="Check if Entry.getMetadata exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_getMetadata_no_arguments" purpose="Check if getMetadata () without arguments that exception is thrown" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_getParent_arguments_string" purpose="Check if getParent() with arguments null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_getParent_base" purpose="Check if getParent() has all valid arguments that expecting successCallback() is to be invoke" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_getParent_entry" purpose="Check if getParent() look up the parent DirectoryEntry containing this Entry" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_getParent_exist" purpose="Check if Entry.getParent exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_getParent_root_entry" purpose="Check if the Entry is the root of its filesystem, its parent is itself." result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_isDirectory_exist" purpose="Check if Entry.isDirectory exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_isDirectory_false" purpose="Check if the Entry is not a directory" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_isDirectory_readonly" purpose="Check if the Entry.isDirectory attribute is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_isDirectory_true" purpose="Check if the Entry is a directory" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_isDirectory_type" purpose="Check if the type of Entry.isDirectory attribute is boolean" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_isFile_exist" purpose="Check if Entry.isFile exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_isFile_false" purpose="Check if the Entry is not a file" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_isFile_readonly" purpose="Check if the Entry.isFile attribute is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_isFile_true" purpose="Check if the Entry is a file" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_isFile_type" purpose="Check if the type of Entry.isFile attribute is boolean" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_base" purpose="Check if moveTo() has all valid arguments that expecting successCallback() is to be invoke" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_directory_occupied_by_file" purpose="Check if throw an exception when move a directory to a path occupied by a file" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_exist" purpose="Check if Entry.moveTo exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_file_occupied_by_directory" purpose="Check if throw an exception when move move a file to a path occupied by a directory" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_itself" purpose="Check if throw an exception when move a directory inside itself or to any child at any depth" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_newName_entry" purpose="Check if success rename across the method of moveTo()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_no_arguments" purpose="Check if moveTo () without arguments that exception is thrown" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_occupied_by_notempty_directory" purpose="Check if throw an exception when move any element to a path occupied by a directory which is not empty" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_parent_noexist" purpose="Check if the parameter parent is not exist that expecting errorCallback() is to be invoked in moveTo() method" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_parent_not_provide" purpose="Check if throw an exception when move an entry into its parent if a name different from its current one isn't provided" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_parent_null" purpose="Check if the parameter parent is set null that expecting errorCallback() is to be invoked in moveTo() method" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_success_directory_entry" purpose="Check if can delete and replace that directory which an existing directory" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_moveTo_success_file_entry" purpose="Check if can delete and replace that file which an existing file" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_name_base" purpose="Check if successfully using the attribute name of the entry" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_name_exist" purpose="Check if Entry.name exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_name_readonly" purpose="Check if the type of Entry.name attribute is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_name_type" purpose="Check if the type of Entry.name attribute is DOMString" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_remove_arguments_null" purpose="Check if remove () without arguments null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_remove_arguments_string" purpose="Check if remove () without arguments type is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_remove_base" purpose="Check if success deletes a file or directory." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_remove_entry" purpose="Check if success delete a file or directory." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_remove_errorCallback" purpose="Check if fail to delete a file or directory." result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_remove_exist" purpose="Check if Entry.remove exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_remove_fail_not_empty_entry" purpose="Check if fail to delete a directory that is not empty" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_remove_fail_root_directory_entry" purpose="Check if fail to delete the root directory of a filesystem" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_remove_no_arguments" purpose="Check if remove () without arguments that exception is thrown" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_toURL_base" purpose="Check if toURL() return a correct URL" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_toURL_exist" purpose="Check if Entry.toURL exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_toURL_mimeType_entry" purpose="Check if entry.toURL with a mimeType parameter" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Entry_toURL_return_type" purpose="Check if the type of entry.URL return value is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="ErrorCallback_handleEvent_err_type" purpose="Check if the type of the parameter err is FileError in ErrorCallback interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="ErrorCallback_handleEvent_exist" purpose="Check if ErrorCallback.handleEvent exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileCallback_handleEvent_exist" purpose="Check if FileCallback.handleEvent exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileCallback_handleEvent_file_type" purpose="Check if the type of the parameter file is File in FileCallback interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileEntry_createWriter_arguments_null" purpose="Check if createWriter() with arguments null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileEntry_createWriter_arguments_string" purpose="Check if createWriter () with arguments type is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileEntry_createWriter_base" purpose="Check if success creates a new FileWriter by FileEntry.createWriter()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileEntry_createWriter_exist" purpose="Check if FileEntry.createWriter exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileEntry_createWriter_length_entry" purpose="Check if create a new FileWriter associated with the file that this FileEntry represents" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileEntry_createWriter_no_arguments" purpose="Check if createWriter () without arguments that exception is thrown" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileEntry_file_arguments_null" purpose="Check if file() with arguments null" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileEntry_file_arguments_string" purpose="Check if file () with arguments type is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileEntry_file_base" purpose="Check if success returns a File by FileEntry.file()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileEntry_file_exist" purpose="Check if FileEntry.file exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileEntry_file_no_arguments" purpose="Check if file () without arguments that exception is thrown" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSystemCallback_handleEvent_exist" purpose="Check if FileSystemCallback.handleEvent exist" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSystemCallback_handleEvent_filesystem_type" purpose="Check if the type of the filesystem entry in FileSystemCallback interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSystem_defined_name_fail_entry" purpose="Check if can't create name when the name is not be unique across the list" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSystem_defined_name_success_entry" purpose="Check if can create name when the name if be unique across the list" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSystem_name_base" purpose="Check if FileSystem.name is the name of the file system" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSystem_name_exist" purpose="Check if FileSystem.name exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSystem_name_readonly" purpose="Check if the FileSystem.name attribute is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSystem_name_type" purpose="Check if the type of FileSystem.name is string" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSystem_root_base" purpose="Check if FileSystem.root is the root directory of the file system" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSystem_root_readonly" purpose="Check if the FileSystem.root attribute is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSystem_root_type" purpose="Check if the type of FileSystem.root is DirectoryEntry" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriterCallback_handleEvent_exist" purpose="Check if FileWriterCallback.handleEvent exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriterCallback_handleEvent_fileWriter_type" purpose="Check if the type of the parameter fileWriter is FileWriter in FileWriterCallback interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Flags_create_false" purpose="Check if the user create a file or directory fail" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Flags_create_true" purpose="Check if the user create a file or directory successfully" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Flags_exclusive_false" purpose="Check if exclusive have no effect when its value is false" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Flags_exclusive_true" purpose="Check if exclusive is true, it'll causes getFile and getDirectory to fail if the target path already exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_ENCODING_ERR_exist" purpose="Check if FileError.ENCODING_ERR constant exists from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_ENCODING_ERR_type" purpose="Check if FileError.ENCODING_ERR constant is of type unsigned short from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_ENCODING_ERR_value" purpose="Check if FileError.ENCODING_ERR constant is of numeric value 5 from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_INVALID_MODIFICATION_ERR_base" purpose="Check if successfully throw FileError.INVALID_MODIFICATION_ERR" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_INVALID_MODIFICATION_ERR_exist" purpose="Check if FileError.INVALID_MODIFICATION_ERR constant exists from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_INVALID_MODIFICATION_ERR_type" purpose="Check if FileError.INVALID_MODIFICATION_ERR constant is of type unsigned short from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_INVALID_MODIFICATION_ERR_value" purpose="Check if FileError.INVALID_MODIFICATION_ERR constant is of numeric value 9 from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_INVALID_STATE_ERR_exist" purpose="Check if FileError.INVALID_STATE_ERR constant exists from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_INVALID_STATE_ERR_type" purpose="Check if FileError.INVALID_STATE_ERR constant is of type unsigned short from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_INVALID_STATE_ERR_value" purpose="Check if FileError.INVALID_STATE_ERR constant is of numeric value 7 from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_NOT_FOUND_ERR_base" purpose="Check if successfully exception FileError.NOT_FOUND_ERR" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_NOT_FOUND_ERR_exist" purpose="Check if FileError.NOT_FOUND_ERR constant exists from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_NOT_FOUND_ERR_type" purpose="Check if FileError.NOT_FOUND_ERR constant is of type unsigned short from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_NOT_FOUND_ERR_value" purpose="Check if FileError.NOT_FOUND_ERR constant is of numeric value 1 from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_NOT_READABLE_ERR_exist" purpose="Check if FileError.NOT_READABLE_ERR constant exists from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_NOT_READABLE_ERR_type" purpose="Check if FileError.NOT_READABLE_ERR constant is of type unsigned short from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_NOT_READABLE_ERR_value" purpose="Check if FileError.NOT_READABLE_ERR constant is of numeric value 4 from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_NO_MODIFICATION_ALLOWED_ERR_exist" purpose="Check if FileError.NO_MODIFICATION_ALLOWED_ERR constant exists from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_NO_MODIFICATION_ALLOWED_ERR_type" purpose="Check if FileError.NO_MODIFICATION_ALLOWED_ERR constant is of type unsigned short from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_NO_MODIFICATION_ALLOWED_ERR_value" purpose="Check if FileError.NO_MODIFICATION_ALLOWED_ERR constant is of numeric value 6 from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_PATH_EXISTS_ERR_base" purpose="Check if successfully throw exception FileError.PATH_EXISTS_ERR when failing to create a file or directory due to the existence of a file or directory with the same path" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_PATH_EXISTS_ERR_exist" purpose="Check if FileError.PATH_EXISTS_ERR constant exists from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_PATH_EXISTS_ERR_type" purpose="Check if FileError.PATH_EXISTS_ERR constant is of type unsigned short from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_PATH_EXISTS_ERR_value" purpose="Check if FileError.PATH_EXISTS_ERR constant is of numeric value 12 from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_QUOTA_EXCEEDED_ERR_exist" purpose="Check if FileError.QUOTA_EXCEEDED_ERR constant exists from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_QUOTA_EXCEEDED_ERR_type" purpose="Check if FileError.QUOTA_EXCEEDED_ERR constant is of type unsigned short from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_QUOTA_EXCEEDED_ERR_value" purpose="Check if FileError.QUOTA_EXCEEDED_ERR constant is of numeric value 10 from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_SECURITY_ERR_exist" purpose="Check if FileError.SECURITY_ERR constant exists from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_SECURITY_ERR_type" purpose="Check if FileError.SECURITY_ERR constant is of type unsigned short from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_SECURITY_ERR_value" purpose="Check if FileError.SECURITY_ERR constant is of numeric value 2 from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_SYNTAX_ERR_exist" purpose="Check if FileError.SYNTAX_ERR constant exists from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_SYNTAX_ERR_type" purpose="Check if FileError.SYNTAX_ERR constant is of type unsigned short from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_SYNTAX_ERR_value" purpose="Check if FileError.SYNTAX_ERR constant is of numeric value 8 from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_TYPE_MISMATCH_ERR_base" purpose="Check if successfully throw FileError.TYPE_MISMATCH_ERR" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_TYPE_MISMATCH_ERR_exist" purpose="Check if FileError.TYPE_MISMATCH_ERR constant exists from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_TYPE_MISMATCH_ERR_type" purpose="Check if FileError.TYPE_MISMATCH_ERR constant is of type unsigned short from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FS_FileError_TYPE_MISMATCH_ERR_value" purpose="Check if FileError.TYPE_MISMATCH_ERR constant is of numeric value 11 from the perspective of getFile()" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="MetadataCallback_handleEvent_exist" purpose="Check if MetadataCallback.handleEvent exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="MetadataCallback_handleEvent_metadata_type" purpose="Check if the type of the parameter metadata is Metadata in MetadataCallback interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Metadata_modificationTime" purpose="Check if the readonly attribute modificationTime of Metadata exists and type of date" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Metadata_modificationTime_exist" purpose="Check if the modificationTime exist" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Metadata_modificationTime_readonly" purpose="Check if the modificationTime value is readonly" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Metadata_modificationTime_type" purpose="Check if the type of the modificationTime entry in Metadata interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="Metadata_size" purpose="Check if the readonly attribute size of Metadata exists and type of number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="VoidCallback_handleEvent_exists" purpose="Check if VoidCallback.handleEvent exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="window_LocalFileSystem_PERSISTENT_exist" purpose="Check if the PERSISTENT exist" result="PASS" /><testcase id="window_LocalFileSystem_PERSISTENT_Type" purpose="Check if the attribute PERSISTENT type is number in the LocalFileSystem interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="window_LocalFileSystem_PERSISTENT_value" purpose="Check if the attribute PERSISTENT vaule is 1 in the LocalFileSystem interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="window_LocalFileSystem_requestFileSystem_arguments_err_type" purpose="Check if requestFileSystem() with arguments type is error" result="PASS" /><testcase id="window_LocalFileSystem_requestFileSystem_base" purpose="Check if the requestFileSystem can give access to an origin-private filesystem" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="window_LocalFileSystem_requestFileSystem_exist" purpose="Check if the requestFileSystem exists" result="PASS" /><testcase id="window_LocalFileSystem_requestFileSystem_no_arguments" purpose="Check if requestFileSystem() without arguments that exception is thrown" result="PASS" /><testcase id="window_LocalFileSystem_requestFileSystem_one_arguments" purpose="Check if requestFileSystem() with only one argument that exception is thrown" result="PASS" /><testcase id="window_LocalFileSystem_requestFileSystem_two_arguments" purpose="Check if requestFileSystem() with only two arguments that exception is thrown" result="PASS" /><testcase id="window_LocalFileSystem_resolveLocalFileSystemURL_base" purpose="Check if the resolveLocalFileSystemURL allows the user to look up the Entry for a file or directory referred to by a local URL" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="window_LocalFileSystem_resolveLocalFileSystemURL_exist" purpose="Check if the resolveLocalFileSystemURL exist" result="PASS" /><testcase id="window_LocalFileSystem_resolveLocalFileSystemURL_no_arguments" purpose="Check if resolveLocalFileSystemURL() without arguments that exception is thrown" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="window_LocalFileSystem_resolveLocalFileSystemURL_successCallback_null" purpose="Check if the parameter successCallback is set null that expecting errorCallback() is to be invoked in resolveLocalFileSystemURL interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="window_LocalFileSystem_resolveLocalFileSystemURL_url_null" purpose="Check if the parameter url is set null that expecting errorCallback() is to be invoked in resolveLocalFileSystemURL interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="window_LocalFileSystem_TEMPORARY_exist" purpose="Check if the TEMPORARY exist" result="PASS" /><testcase id="window_LocalFileSystem_TEMPORARY_type" purpose="Check if the attribute TEMPORARY type is number in the LocalFileSystem interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="window_LocalFileSystem_TEMPORARY_value" purpose="Check if the attribute TEMPORARY vaule is 0 in the LocalFileSystem interface" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase></category><category name="W3C_HTML5 APIs/Storage/File API: Writer"><testcase id="Blob_append_blob_size" purpose="Check if the Blob append an exist blob, then compare its value with blob.Size which is 4" result="PASS" /><testcase id="Blob_constructor_visible_in_window" purpose="Check if Blob constructor must be visible when the script's global object is a Window object" result="PASS" /><testcase id="Blob_getBlob_string_type" purpose="Check if Blob() method set 'text/plain', then compare blob.type is 'text/plain'" result="PASS" /><testcase id="FileSaver_abort_exist" purpose="Check if FileSaver.abort exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_const_DONE_type" purpose="Check if the type of const DONE is number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_const_INIT_type" purpose="Check if the type of const INIT is number" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_DONE_exist" purpose="Check if FileSaver.DONE exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_error_exist" purpose="Check if FileSaver.error exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_error_type" purpose="Check if the type of FileSaver.error is DOMError" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_INIT_exist" purpose="Check if FileSaver.INIT exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_onabort_event_type" purpose="Ckeck if the event type of FileSaver.onabort is abort" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_onabort_exist" purpose="Check if FileSaver.onabort exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_onerror_exist" purpose="Check if FileSaver.onerror attribute exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_onprogress_exist" purpose="Check if FileSaver.onprogress attribute exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_onwriteend_exist" purpose="Check if FileSaver.onwriteend attribute exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_onwritestart_exist" purpose="Check if FileSaver.onwritestart attribute exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_onwrite_exist" purpose="Check if FileSaver.onwrite attribute exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileSaver_readyState_exist" purpose="Check if FileSaver.readyState attribute exists" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3279 XWALK-3279]]</testcase><testcase id="FileSaver_WRITING_exist" purpose="Check if FileSaver.WRITING exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriterSync_length_normal" purpose="Check if FileWriterSync.length attribute is normal" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriterSync_position_normal" purpose="Check if FileWriterSync.position attribute is normal" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriterSync_seek_normal" purpose="Check if FileWriterSync.seek method is normal" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriterSync_truncate_normal" purpose="Check if FileWriterSync.truncate method is normal" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriterSync_write_normal" purpose="Check if FileWriterSync.write method is normal" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriter_abort_normal" purpose="Check if FileSaver.abort method is normal" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriter_length_normal" purpose="Check if the value of FileWriter.length attribute is normal" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriter_position_normal" purpose="Check if the value of FileWriter.position attribute is normal" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriter_seek_normal" purpose="Check if FileSaver.seek method is normal" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriter_truncate_normal" purpose="Check if FileWriter.truncate method is normal" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FileWriter_write_normal" purpose="Check if FileWriter.write method is normal" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-837 XWALK-837]]</testcase><testcase id="FW_FileError_code_readonly" purpose="Check if FW_FileError.code attribute is readonly" result="PASS" /><testcase id="FW_FileError_code_type" purpose="Check if FileError.code attribute is type number" result="PASS" /><testcase id="FW_FileError_const_ABORT_ERR" purpose="Check if the const FileError.ABORT_ERR is equal 3 in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_ABORT_ERR_type" purpose="Check if the type of FileError.ABORT_ERR is number in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_ENCODING_ERR" purpose="Check if the const FileError.ENCODING_ERR is equal 5 in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_ENCODING_ERR_type" purpose="Check if the type of FileError.ENCODING_ERR is numberin in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_INVALID_STATE_ERR" purpose="Check if the const FileError.INVALID_STATE_ERR is equal 7 in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_INVALID_STATE_ERR_type" purpose="Check if the type of FileError.INVALID_STATE_ERR is number in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_NOT_FOUND_ERR" purpose="Check if the const FileError.NOT_FOUND_ERR is equal 1 in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_NOT_FOUND_ERR_type" purpose="Check if the type of FileError.NOT_FOUND_ERR is number in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_NOT_READABLE_ERR" purpose="Check if the const FileError.NOT_READABLE_ERR is equal 4 in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_NOT_READABLE_ERR_type" purpose="Check if the type of FileError.NOT_READABLE_ERR is number in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_NO_MODIFICATION_ALLOWED_ERR" purpose="Check if the const FileError.NO_MODIFICATION_ALLOWED_ERR is equal 6 in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_NO_MODIFICATION_ALLOWED_ERR_type" purpose="Check if the type of FileError.NO_MODIFICATION_ALLOWED_ERR is number in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_SECURITY_ERR" purpose="Check if the const FileError.SECURITY_ERR is equal 2 in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_SECURITY_ERR_type" purpose="Check if the type of FileError.SECURITY_ERR is number in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_SYNTAX_ERR" purpose="Check if the const FileError.SYNTAX_ERR is equal 8 in FileWriter module" result="PASS" /><testcase id="FW_FileError_const_SYNTAX_ERR_type" purpose="Check if the type of FileError.SYNTAX_ERR is number in FileWriter module" result="PASS" /></category><category name="W3C_HTML5 APIs/Storage/HTML5 Application caches"><testcase id="appcache_abort_exist" purpose="Check if the ApplicationCache.abort method exists" result="PASS" /><testcase id="appcache_cache_in_window" purpose="Check if window.applicationCache returns the ApplicationCache object that applies to the active document of that Window" result="PASS" /><testcase id="appcache_CHECKING_exist" purpose="Check if ApplicationCache.CHECKING exists" result="PASS" /><testcase id="appcache_CHECKING_type" purpose="Check if appcache.CHECKING const is of type number" result="PASS" /><testcase id="appcache_CHECKING_value" purpose="Check if the value of constant appcache.CHECKING is 2" result="PASS" /><testcase id="appcache_DOWNLOADING_exist" purpose="Check if ApplicationCache.DOWNLOADING exists" result="PASS" /><testcase id="appcache_DOWNLOADING_type" purpose="Check if appcache.DOWNLOADING const is of type number" result="PASS" /><testcase id="appcache_DOWNLOADING_value" purpose="Check if the value of constant appcache.DOWNLOADING is 3" result="PASS" /><testcase id="appcache_IDLE_exist" purpose="Check if ApplicationCache.IDLE exists" result="PASS" /><testcase id="appcache_IDLE_type" purpose="Check if appcache.IDLE const is of type number" result="PASS" /><testcase id="appcache_IDLE_value" purpose="Check if the value of constant appcache.IDLE is 1" result="PASS" /><testcase id="appcache_OBSOLETE_exist" purpose="Check if ApplicationCache.OBSOLETE exists" result="PASS" /><testcase id="appcache_OBSOLETE_type" purpose="Check if appcache.OBSOLETE const is of type number" result="PASS" /><testcase id="appcache_OBSOLETE_value" purpose="Check if the value of constant appcache.OBSOLETE is 5" result="PASS" /><testcase id="appcache_oncached_exist" purpose="Check if ApplicationCache.oncached method exists" result="PASS" /><testcase id="appcache_onchecking_exist" purpose="Check if ApplicationCache.onchecking method exists" result="PASS" /><testcase id="appcache_ondownloading_exist" purpose="Check if ApplicationCache.ondownloading method exists" result="PASS" /><testcase id="appcache_onerror_exist" purpose="Check if ApplicationCache.onerror method exists" result="PASS" /><testcase id="appcache_onnoupdate_exist" purpose="Check if ApplicationCache.onnoupdate method exists" result="PASS" /><testcase id="appcache_onobsolete_exist" purpose="Check if ApplicationCache.onobsolete method exists" result="PASS" /><testcase id="appcache_onprogress_exist" purpose="Check if ApplicationCache.onprogress method exists" result="PASS" /><testcase id="appcache_onupdateready_exist" purpose="Check if ApplicationCache.onupdateready method exists" result="PASS" /><testcase id="appcache_status_exist" purpose="Check if ApplicationCache.status attribute exists" result="PASS" /><testcase id="appcache_status_readonly" purpose="Check if appcache.status attribute is readonly" result="PASS" /><testcase id="appcache_status_type" purpose="Check if ApplicationCache.status is of type number" result="PASS" /><testcase id="appcache_status_UNCACHED" purpose="Check if the value of appcache.status is applicationCache.UNCACHED" result="PASS" /><testcase id="appcache_swapCache_exist" purpose="Check if ApplicationCache.swapCache method exists" result="PASS" /><testcase id="appcache_swapCache_newcache_execption_InvalidStateError" purpose="Check if ApplicationCache.swapCache() throws InvalidStateError exception when there is no newer application cache" result="PASS" /><testcase id="appcache_UNCACHED_exist" purpose="Check if ApplicationCache.UNCACHED exists" result="PASS" /><testcase id="appcache_UNCACHED_type" purpose="Check if appcache.UNCACHED const is of type number" result="PASS" /><testcase id="appcache_UNCACHED_value" purpose="Check if the value of constant appcache.UNCACHED is 0" result="PASS" /><testcase id="appcache_UPDATEREADY_exist" purpose="Check if ApplicationCache.UPDATEREADY exists" result="PASS" /><testcase id="appcache_UPDATEREADY_type" purpose="Check if appcache.UPDATEREADY const is of type number" result="PASS" /><testcase id="appcache_UPDATEREADY_value" purpose="Check if the value of constant appcache.UPDATEREADY is 4" result="PASS" /><testcase id="appcache_update_exist" purpose="Check if ApplicationCache.update method exists" result="PASS" /><testcase id="appcache_update_nocache_execption_InvalidStateError" purpose="Check if ApplicationCache.update() method throws InvalidStateError exception when no application cache to update" result="PASS" /></category><category name="W3C_HTML5 APIs/Storage/Indexed Database API"><testcase id="IDBCursorWithValue_value_exist.html" purpose="Check if IDBCursorWithValue.value attribute exists" result="PASS" /><testcase id="IDBCursorWithValue_value_readonly" purpose="Check if IDBCursorWithValue.value is readonly" result="PASS" /><testcase id="IDBCursorWithValue_value_type" purpose="Check if IDBCursorWithValue.value attribute is of type object" result="PASS" /><testcase id="IDBCursor_advance_base" purpose="Check if IDBCursor.advance() has normal arguments that expecting this method runs the steps for asynchronously executing a request" result="PASS" /><testcase id="IDBCursor_advance_exception_InvalidStateError" purpose="Check if IDBCursor.advance() throws an exception InvalidStateError when the cursor is currently being iterated, or has iterated past its end" result="PASS" /><testcase id="IDBCursor_advance_exception_TransactionInactiveError" purpose="Check if IDBCursor.advance() throws an exception TransactionInactiveError when the value passed into the count parameter was zero or a negative number" result="PASS" /><testcase id="IDBCursor_advance_exception_TypeError" purpose="Check if IDBCursor.advance() throws an exception TypeError when the value passed into the count parameter was zero or a negative number" result="PASS" /><testcase id="IDBCursor_advance_exists" purpose="Check if IDBCursor.advance method exists" result="PASS" /><testcase id="idbcursor_advance_index" purpose="Check if IDBCursor.advance() iterate index cursor number of times specified by count" result="PASS" /><testcase id="idbcursor_advance_objectstore" purpose="Check if IDBCursor.advance() iterate objectstore cursor number of times specified by count" result="PASS" /><testcase id="IDBCursor_continue_cursor_direction_nextunique" purpose="Check if IDBCursor.continue() throws an exception DataError when the key parameter is greater than or equal to this cursor's position and this cursor's direction is nextunique" result="PASS" /><testcase id="IDBCursor_continue_exception_DataError" purpose="Check if IDBCursor.continue() throws an exception DataError when the key parameter was specified but did not contain a valid key" result="PASS" /><testcase id="IDBCursor_continue_exception_InvalidStateError" purpose="Check if IDBCursor.continue() throws an exception InvalidStateError when the cursor is currently being iterated, or has iterated past its end" result="PASS" /><testcase id="IDBCursor_continue_exception_TransactionInactiveError" purpose="Check if IDBCursor.continue() throws an exception TransactionInactiveError when the transaction this IDBCursor belongs to is not active" result="PASS" /><testcase id="idbcursor_continue_index" purpose="Check if iterate to the next record by index" result="PASS" /><testcase id="idbcursor_continue_index2" purpose="check to pass a key parameter is not a valid key by index" result="PASS" /><testcase id="idbcursor_continue_index3" purpose="Check if can iterate to the previous record when the direction is set for the next record by index" result="PASS" /><testcase id="idbcursor_continue_index4" purpose="Check if can iterate to the next record when the direction is set for the previous record by index" result="PASS" /><testcase id="IDBCursor_continue_no_argument" purpose="Check if IDBCursor.continue() has no argument argument that expecting this method runs the steps for asynchronously executing a request" result="PASS" /><testcase id="idbcursor_continue_objectstore" purpose="Check if iterate to the next record on index" result="PASS" /><testcase id="idbcursor_continue_objectstore2" purpose="Check if can pass a key parameter is not a valid key on objectstore" result="PASS" /><testcase id="idbcursor_continue_objectstore3" purpose="Check if can iterate to the previous record when the direction is set for the next record on objectstore" result="PASS" /><testcase id="idbcursor_continue_objectstore4" purpose="Check if can iterate to the next record when the direction is already set to the previous one on object store" result="PASS" /><testcase id="IDBCursor_delete_exception_InvalidStateError" purpose="Check if IDBCursor.delete() throws an exception InvalidStateError when the cursor was created using openKeyCursor" result="PASS" /><testcase id="IDBCursor_delete_exist" purpose="Check if IDBCursor.delete method exists" result="PASS" /><testcase id="idbcursor_delete_index" purpose="Check if can remove a record from the object store by index" result="PASS" /><testcase id="idbcursor_delete_index2" purpose="Check if can remove a record in a read-only transaction by index" result="PASS" /><testcase id="idbcursor_delete_index3" purpose="Check if can remove a record in an inactive transaction by index" result="PASS" /><testcase id="idbcursor_delete_objectstore" purpose="Check if can remove a record from the object store by objectstore" result="PASS" /><testcase id="idbcursor_delete_objectstore2" purpose="Check if can remove a record in a read-only transaction by object store" result="PASS" /><testcase id="idbcursor_delete_objectstore3" purpose="Check if can remove a record in an inactive transaction by object store" result="PASS" /><testcase id="IDBCursor_direction_exists" purpose="Check if IDBCursor.direction method exists" result="PASS" /><testcase id="IDBCursor_direction_readonly" purpose="Check if IDBCursor.direction attribute is readonly" result="PASS" /><testcase id="IDBCursor_key_exist" purpose="Check if IDBCursor.key method exists" result="PASS" /><testcase id="IDBCursor_key_normal_value" purpose="Check if the value of IDBCursor.key attribute is normal" result="PASS" /><testcase id="IDBCursor_key_readonly" purpose="Check if IDBCursor.key attribute is readonly" result="PASS" /><testcase id="IDBCursor_key_type" purpose="Check if IDBCursor.key attribute is of type string" result="PASS" /><testcase id="IDBCursor_primaryKey_exist" purpose="Check if IDBCursor.primaryKey attribute exists" result="PASS" /><testcase id="IDBCursor_primaryKey_normal_value" purpose="Check if the value of IDBCursor.primaryKey attribute is normal" result="PASS" /><testcase id="IDBCursor_primaryKey_readonly" purpose="Check if IDBCursor.primaryKey attribute is readonly" result="PASS" /><testcase id="IDBCursor_primaryKey_type" purpose="Check if IDBCursor.primaryKey attribute is of type string" result="PASS" /><testcase id="IDBCursor_source_exists" purpose="Check if IDBCursor.source attribute exists" result="PASS" /><testcase id="IDBCursor_source_readonly" purpose="Check if IDBCursor.source attribute is readonly" result="PASS" /><testcase id="IDBCursor_source_type" purpose="Check if IDBCursor.source attribute is of object type" result="PASS" /><testcase id="IDBCursor_update_exception_DataCloneError" purpose="Check if IDBCursor.update() throws an exception DataCloneError when the data being stored could not be cloned by the internal structured cloning algorithm" result="PASS" /><testcase id="IDBCursor_update_exist" purpose="Check if IDBCursor.update method exists" result="PASS" /><testcase id="idbcursor_update_index" purpose="Check if can modify a record in the object store by index" result="PASS" /><testcase id="idbcursor_update_index2" purpose="Check if can modify a record in a read-only transaction by index" result="PASS" /><testcase id="idbcursor_update_index3" purpose="Check if can modify a record in an inactive transaction by index" result="PASS" /><testcase id="idbcursor_update_objectstore" purpose="Check if can modify a record in object store" result="PASS" /><testcase id="idbcursor_update_objectstore2" purpose="Check if can modify a record in a read-only transaction by object store" result="PASS" /><testcase id="idbcursor_update_objectstore3" purpose="Check if can modify a record in an inactive transaction by object store" result="PASS" /><testcase id="idbdatabase_close" purpose="Check if IDBDatabase.close() unblock the version change transaction created by an open database request" result="PASS" /><testcase id="idbdatabase_close2" purpose="Check if IDBDatabase.close() unblock the delete database request" result="PASS" /><testcase id="IDBDatabase_close_base" purpose="Check if a database connection to be closed, when IDBDatabase.close() is called" result="PASS" /><testcase id="IDBDatabase_close_exist" purpose="Check if IDBDatabase.close method exists" result="PASS" /><testcase id="idbdatabase_createObjectStore" purpose="Check if createObjectStore() method works" result="PASS" /><testcase id="idbdatabase_createObjectStore2" purpose="Check if create an object store with the correct 'name' and 'keyPath' properties" result="PASS" /><testcase id="idbdatabase_createObjectStore3" purpose="Check if can create an object store outside of a version changed transaction" result="PASS" /><testcase id="idbdatabase_createObjectStore4" purpose="Check if can create an object store that already exists" result="PASS" /><testcase id="idbdatabase_createObjectStore5" purpose="Check if the name of object store appears in database" result="PASS" /><testcase id="idbdatabase_createObjectStore6" purpose="Check if create an object store with an invalid key path" result="PASS" /><testcase id="IDBDatabase_createObjectStore_base" purpose="Check if createObjectStore() has two valid arguments that expecting IDBObjectStore object to be created" result="PASS" /><testcase id="IDBDatabase_createObjectStore_exception_ConstraintError" purpose="Check if IDBDatabase.createObjectStore() throws an exception ConstraintError when an object store with the same name, compared in a case-sensitive manner, already exists in the connected database" result="PASS" /><testcase id="IDBDatabase_createObjectStore_exception_InvalidStateError" purpose="Check if IDBDatabase.createObjectStore() was not called from a VERSION_CHANGE transaction callback that expecting an exception InvalidStateError to be thrown" result="PASS" /><testcase id="IDBDatabase_createObjectStore_exist" purpose="Check if IDBDatabaseSync.createObjectStore method exists" result="PASS" /><testcase id="IDBDatabase_createObjectStore_keyPath_Array_invalid" purpose="Check if IDBDatabase.createObjectStore() throws an exception SyntaxError when keyPath is an Array which any items is an invalid string" result="PASS" /><testcase id="IDBDatabase_createObjectStore_keyPath_empty_string" purpose="Check if IDBDatabase.createObjectStore() throws an exception InvalidAccessError when the keyPath parameter is specified to the empty string" result="PASS" /><testcase id="IDBDatabase_createObjectStore_mandatory" purpose="Check if createObjectStore() has a valid argument that expecting an IDBObjectStore object to be created" result="PASS" /><testcase id="IDBDatabase_createObjectStore_optionalparameters_null" purpose="Check if createObjectStore() has a null argument optionalParameters that expecting an IDBObjectStore object to be created" result="PASS" /><testcase id="idbdatabase_deleteObjectStore" purpose="Check if the name of object store removed from database when deleteObjectStore() method invoked" result="PASS" /><testcase id="idbdatabase_deleteObjectStore2" purpose="Check if can remove the object store outside of a version changed transaction" result="PASS" /><testcase id="idbdatabase_deleteObjectStore3" purpose="Check if can remove an object store which does not exist" result="PASS" /><testcase id="IDBDatabase_deleteObjectStore_base" purpose="Check if deleteObjectStore() has a valid argument that expecting the object store to be destroy" result="PASS" /><testcase id="IDBDatabase_deleteObjectStore_called_outside_VERSION_CHANGE" purpose="Check if IDBDatabase.deleteObjectStore() throws an exception InvalidStateError when deleteObjectStore() was not called from a VERSION_CHANGE transaction callback" result="PASS" /><testcase id="IDBDatabase_deleteObjectStore_exist" purpose="Check if IDBDatabase.deleteObjectStore method exists" result="PASS" /><testcase id="IDBDatabase_name_exist" purpose="Check if IDBDatabase.name attribute exists" result="PASS" /><testcase id="IDBDatabase_name_normal_value" purpose="Check if the value of IDBDatabase.name attribute is normal" result="PASS" /><testcase id="IDBDatabase_name_readonly" purpose="Check if IDBDatabase.name attribute is readonly" result="PASS" /><testcase id="IDBDatabase_name_type" purpose="Check if IDBDatabase.name attribute is of type string" result="PASS" /><testcase id="IDBDatabase_objectStoreNames_exist" purpose="Check if IDBDatabase.objectStoreNames attribute exists" result="PASS" /><testcase id="IDBDatabase_objectStoreNames_readonly" purpose="Check if IDBDatabase.objectStoreNames attribute is readonly" result="PASS" /><testcase id="IDBDatabase_objectStoreNames_type" purpose="Check if IDBDatabase.objectStoreNames attribute is of type DOMStringList" result="PASS" /><testcase id="IDBDatabase_onabort_base" purpose="Check if the abort event has been triggered that expecting an IDBDatabase.onabort handler to be invoked" result="PASS" /><testcase id="IDBDatabase_onabort_exist" purpose="Check if IDBDatabase.onabort attribute exists" result="PASS" /><testcase id="IDBDatabase_onerror_base" purpose="Check if the error event has been triggered that expecting an IDBDatabase.onerror handler to be invoked" result="PASS" /><testcase id="IDBDatabase_onerror_exist" purpose="Check if IDBDatabase.onerror attribute exists" result="PASS" /><testcase id="IDBDatabase_onversionchange_base" purpose="Check if the versionchange event has been triggered that expecting IDBDatabase.onversionchange handler to be invoked" result="PASS" /><testcase id="IDBDatabase_onversionchange_exist" purpose="Check if IDBDatabase.onversionchange attribute exists" result="PASS" /><testcase id="idbdatabase_transaction" purpose="Check if can open a database transaction with a invalid scope" result="PASS" /><testcase id="idbdatabase_transaction2" purpose="Check if transaction() method has none mode argument" result="PASS" /><testcase id="idbdatabase_transaction3" purpose="Check if can open a transaction on closed database connection" result="PASS" /><testcase id="IDBDatabase_transaction_base" purpose="Check if transaction() has two valid arguments that expecting an IDBTransaction object to be created" result="PASS" /><testcase id="IDBDatabase_transaction_exception_InvalidAccessError" purpose="Check if IDBDatabase.transaction was called with an empty list of store names that expecting an exception InvalidAccessError to be thrown" result="PASS" /><testcase id="IDBDatabase_transaction_exception_InvalidStateError" purpose="Check if the IDBDatabase.close() method has been called on this IDBDatabase instance that expecting an exception InvalidStateError to be thrown" result="PASS" /><testcase id="IDBDatabase_transaction_exception_NotFoundError" purpose="Check if one of the names provided in the storeNames argument doesn't exist in this database that expecting an exception NotFoundError to be thrown" result="PASS" /><testcase id="IDBDatabase_transaction_exist" purpose="Check if IDBDatabase.transaction method exists" result="PASS" /><testcase id="IDBDatabase_transaction_mandatory" purpose="Check if transaction() has a valid argument that expecting an IDBTransaction object to be created" result="PASS" /><testcase id="IDBDatabase_transaction_return_type" purpose="Check if the return type of IDBDatabase.transaction is IDBTransaction" result="PASS" /><testcase id="IDBDatabase_version_exist" purpose="Check if IDBDatabase.version attribute exists" result="PASS" /><testcase id="IDBDatabase_version_readonly" purpose="Check if IDBDatabase.version attribute is readonly" result="PASS" /><testcase id="IDBDatabase_version_type" purpose="Check if IDBDatabase.version attribute is of type number" result="PASS" /><testcase id="IDBEnvironment_indexedDB_exist" purpose="Check if IDBEnvironment.indexedDB attribute exists" result="PASS" /><testcase id="IDBEnvironment_indexedDB_readonly" purpose="Check if IDBEnvironment.indexedDB attribute is readonly" result="PASS" /><testcase id="IDBEnvironment_indexedDB_type" purpose="Check if IDBEnvironment.indexedDB attribute is of type IDBFactory" result="PASS" /><testcase id="idbfactory_cmp" purpose="Check if the cmp() method returns correct value when compared keys" result="PASS" /><testcase id="IDBFactory_cmp_base" purpose="Check if IDBFactory.cmp() has two valid arguments that expecting a number object to be created" result="PASS" /><testcase id="IDBFactory_cmp_exception_DataError" purpose="Check if IDBFactory.cmp() throws an exception DataError when one of the supplied keys was not a valid key" result="PASS" /><testcase id="IDBFactory_cmp_exist" purpose="Check if IDBFactory.cmp method exists" result="PASS" /><testcase id="idbfactory_deleteDatabase" purpose="Check if deleteDatabase() method must create a request with no source when invoked" result="PASS" /><testcase id="IDBFactory_deleteDatabase_exist" purpose="Check if IDBFactory.deleteDatabase method exists" result="PASS" /><testcase id="idbfactory_open2" purpose="Check if can open database when database 'name' and 'version' are correctly set" result="PASS" /><testcase id="idbfactory_open3" purpose="Check if can open current database when no version" result="PASS" /><testcase id="idbfactory_open4" purpose="Check if can open current database when new database has default version" result="PASS" /><testcase id="idbfactory_open5" purpose="Check if the new database is empty" result="PASS" /><testcase id="idbfactory_open6" purpose="Check if can open database with a lower version than current" result="PASS" /><testcase id="idbfactory_open7" purpose="Check if can open database with a higher version than current" result="PASS" /><testcase id="idbfactory_open8" purpose="Check if an error event will occur when in version change transaction aborts open" result="PASS" /><testcase id="IDBFactory_open_base" purpose="Check if IDBFactory.open() has two valid arguments that expecting an IDBOpenDBRequest object to be created" result="PASS" /><testcase id="IDBFactory_open_exist" purpose="Check if IDBFactory.open method exists" result="PASS" /><testcase id="IDBFactory_open_return_event_type_success" purpose="Check if the type of event is success when a success is returned from IDBFactory.open()" result="PASS" /><testcase id="IDBFactory_open_source_null" purpose="Check if open() method must create a request with no source when invoked" result="PASS" /><testcase id="IDBFactory_open_version_negative" purpose="Check if the value of IDBFactory.version is a negative number that expecting an exception TypeError to be thrown" result="PASS" /><testcase id="IDBFactory_open_version_zero" purpose="Check if the value of IDBFactory.version is zero that expecting an exception TypeError to be thrown" result="PASS" /><testcase id="idbindex_count" purpose="Check if IDBObjectStore.count() returns the number of records in the object store" result="PASS" /><testcase id="idbindex_count2" purpose="Check if IDBObjectStore.count() returns the number of records that have keys within the range" result="PASS" /><testcase id="IDBIndex_count_exception_DataError" purpose="Check if IDBIndex.count() throws an exception DataError when the key parameter is not a valid key" result="PASS" /><testcase id="IDBIndex_count_exception_InvalidStateError" purpose="Check if IDBIndex.count() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBIndex_count_exist" purpose="Check if IDBIndex.count method exists" result="PASS" /><testcase id="IDBIndex_count_no_argument" purpose="Check if IDBIndex.count() has no argument that expecting an IDBRequest object to be created" result="PASS" /><testcase id="idbindex_get" purpose="Check if get() method returns records" result="PASS" /><testcase id="idbindex_get2" purpose="Check if can retrieve record where the index contains duplicate values" result="PASS" /><testcase id="idbindex_get3" purpose="Check if IDBIndex.get() can retrieve a record that doesn't exist" result="PASS" /><testcase id="idbindex_get4" purpose="Check if IDBIndex.get() returns the record with the first key in the range" result="PASS" /><testcase id="idbindex_getKey" purpose="Check if getKey() method works" result="PASS" /><testcase id="idbindex_getKey2" purpose="Check if can retrieve record's primary key where the index contains duplicate values" result="PASS" /><testcase id="idbindex_getKey3" purpose="Check if IDBIndex.getKey() can retrieve a record that doesn't exist" result="PASS" /><testcase id="idbindex_getKey4" purpose="Check if IDBIndex.getKey() returns the record with the first key in the range" result="PASS" /><testcase id="IDBIndex_getKey_base" purpose="Check if IDBIndex.getKey() has valid arguments that expecting an IDBRequest object to be created" result="PASS" /><testcase id="IDBIndex_getKey_exception_DataError" purpose="Check if IDBIndex.getKey() throws an exception DataError when the range parameter is not passed key range" result="PASS" /><testcase id="IDBIndex_getKey_exception_InvalidStateError" purpose="Check if IDBIndex.getKey() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBIndex_getKey_exception_TransactionInactiveError" purpose="Check if IDBIndex.getKey() throws an exception TransactionInactiveError when the transaction this IDBIndex belongs to is not active" result="PASS" /><testcase id="IDBIndex_get_base" purpose="Check if IDBIndex.get() has valid arguments that expecting an IDBRequest object to be created" result="PASS" /><testcase id="IDBIndex_get_exception_DataError" purpose="Check if IDBIndex.get() throws an exception DataError when the range parameter is not passed key range" result="PASS" /><testcase id="IDBIndex_get_exception_InvalidStateError" purpose="Check if IDBIndex.get() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBIndex_get_exception_TransactionInactiveError" purpose="Check if IDBIndex.get() throws an exception TransactionInactiveError when the transaction this IDBIndex belongs to is not active" result="PASS" /><testcase id="IDBIndex_keyPath_exists" purpose="Check if IDBIndex.keyPath attribute exists" result="PASS" /><testcase id="IDBIndex_keyPath_normal_value" purpose="Check if the value of IDBIndex.keyPath attribute is normal" result="PASS" /><testcase id="IDBIndex_keyPath_readonly" purpose="Check if IDBIndex.keyPath attribute is readonly" result="PASS" /><testcase id="IDBIndex_keyPath_type" purpose="Check if IDBIndex.keyPath attribute is of type string" result="PASS" /><testcase id="IDBIndex_multiEntry_exist" purpose="Check if IDBIndex.multiEntry attribute exists" result="PASS" /><testcase id="IDBIndex_multiEntry_readonly" purpose="Check if IDBIndex.multientry attribute is readonly" result="PASS" /><testcase id="IDBIndex_multiEntry_type" purpose="Check if IDBIndex.multientry attribute is of type boolean" result="PASS" /><testcase id="IDBIndex_name_exist" purpose="Check if IDBIndex.name attribute exists" result="PASS" /><testcase id="IDBIndex_name_normal_value" purpose="Check if the value of IDBIndex.name attribute is normal" result="PASS" /><testcase id="IDBIndex_name_readonly" purpose="Check if IDBIndex.name attribute is readonly" result="PASS" /><testcase id="IDBIndex_name_type" purpose="Check if IDBIndex.name attribute is of type string" result="PASS" /><testcase id="IDBIndex_objectStore_exists" purpose="Check if IDBIndex.objectStore attribute exists" result="PASS" /><testcase id="IDBIndex_objectStore_readonly" purpose="Check if IDBIndex.objectStore attribute is readonly" result="PASS" /><testcase id="IDBIndex_objectStore_type" purpose="Check if IDBIndex.objectStore attribute is of type IDBObjectStore" result="PASS" /><testcase id="IDBIndex_openCursor_base" purpose="Check if IDBIndex.openCursor() has valid arguments that expecting an IDBRequest object to be created" result="PASS" /><testcase id="IDBIndex_openCursor_exception_DataError" purpose="Check if IDBIndex.openCursor() throws an exception DataError when the range parameter is not passed key range" result="PASS" /><testcase id="IDBIndex_openCursor_exception_InvalidStateError" purpose="Check if IDBIndex.openCursor() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBIndex_openCursor_exception_TransactionInactiveError" purpose="Check if IDBIndex.openCursor() throws an exception TransactionInactiveError when the transaction this IDBIndex belongs to is not active" result="PASS" /><testcase id="IDBIndex_openCursor_exists" purpose="Check if IDBIndex.openCursor method exists" result="PASS" /><testcase id="IDBIndex_openCursor_no_argument" purpose="Check if IDBIndex.openCursor() has no argument that expecting an IDBRequest object to be created" result="PASS" /><testcase id="IDBIndex_openKeyCursor_base" purpose="Check if IDBIndex.openKeyCursor() has valid arguments that expecting an IDBRequest object to be created" result="PASS" /><testcase id="IDBIndex_openKeyCursor_exception_DataError" purpose="Check if IDBIndex.openKeyCursor() throws an exception DataError when the range parameter is not passed key range" result="PASS" /><testcase id="IDBIndex_openKeyCursor_exception_InvalidStateError" purpose="Check if IDBIndex.openKeyCursor() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBIndex_openKeyCursor_exception_TransactionInactiveError" purpose="Check if IDBIndex.openKeyCursor() throws an exception TransactionInactiveError when the transaction this IDBIndex belongs to is not active" result="PASS" /><testcase id="IDBIndex_openKeyCursor_exist" purpose="Check if IDBIndex.openKeyCursor method exists" result="PASS" /><testcase id="IDBIndex_openKeyCursor_no_argument" purpose="Check if IDBIndex.openKeyCursor() has no argument that expecting an IDBRequest object to be created" result="PASS" /><testcase id="IDBIndex_unique_exist" purpose="Check if IDBIndex.unique attribute exists" result="PASS" /><testcase id="IDBIndex_unique_readonly" purpose="Check if IDBIndex.unique attribute is readonly" result="PASS" /><testcase id="IDBIndex_unique_type" purpose="Check if IDBIndex.unique attribute is of type boolean" result="PASS" /><testcase id="IDBKeyRange_bound_base" purpose="Check if IDBKeyRange.bound() has four valid arguments that expecting a new key range to be created" result="PASS" /><testcase id="IDBKeyRange_bound_exist" purpose="Check if IDBKeyRange.bound method exists" result="PASS" /><testcase id="IDBKeyRange_bound_lowerOpen_default_false" purpose="Check if the default value of the parameter lowerOpen of IDBKeyRange.bound() is false" result="PASS" /><testcase id="IDBKeyRange_bound_lower_invalid" purpose="Check if IDBKeyRange.bound() throws an exception DataError when the lower parameter is invalid key" result="PASS" /><testcase id="IDBKeyRange_bound_lower_larger_than_upper" purpose="Check if the lower key is greater than the upper key that expecting an exception DataError to be thrown" result="PASS" /><testcase id="IDBKeyRange_bound_mandatory" purpose="Check if IDBKeyRange.bound() has two valid arguments that expecting a new key range to be created" result="PASS" /><testcase id="IDBKeyRange_bound_return_lowerOpen_lowerOpen" purpose="Check if IDBKeyRange.bound() creates and returns a new key range with lowerOpen set to lowerOpen" result="PASS" /><testcase id="IDBKeyRange_bound_return_lower_lower" purpose="Check if IDBKeyRange.bound() creates and returns a new key range with lower set to lower" result="PASS" /><testcase id="IDBKeyRange_bound_return_type" purpose="Check if the rerutn type of IDBKeyRange.bound() is IDBKeyRange" result="PASS" /><testcase id="IDBKeyRange_bound_return_upperOpen_upperOpen" purpose="Check if IDBKeyRange.bound() creates and returns a new key range with upperOpen set to upperOpen" result="PASS" /><testcase id="IDBKeyRange_bound_return_upper_upper" purpose="Check if IDBKeyRange.bound() creates and returns a new key range with upper set to upper" result="PASS" /><testcase id="IDBKeyRange_bound_three_arguments" purpose="Check if IDBKeyRange.bound() has three valid arguments that expecting a new key range to be created" result="PASS" /><testcase id="IDBKeyRange_bound_upperOpen_default_false" purpose="Check if the default value of the parameter upperOpen of IDBKeyRange.bound() is false" result="PASS" /><testcase id="IDBKeyRange_bound_upper_invalid" purpose="Check if IDBKeyRange.bound() throws an exception DataError when the upper parameter is invalid key" result="PASS" /><testcase id="IDBKeyRange_lower" purpose="Check if IDBKeyRange.lower attribute exists" result="PASS" /><testcase id="IDBKeyRange_lowerBound" purpose="Check if IDBKeyRange.lowerBound method exists" result="PASS" /><testcase id="IDBKeyRange_lowerBound_base" purpose="Check if IDBKeyRange.lowerBound() has two valid arguments that expecting a new key range to be created" result="PASS" /><testcase id="IDBKeyRange_lowerBound_exception_DataError" purpose="Check if IDBKeyRange.lowerBound() throws an exception DataError when the value parameter was not passed a valid key" result="PASS" /><testcase id="IDBKeyRange_lowerBound_mandatory" purpose="Check if IDBKeyRange.lowerBound() has a valid argument that expecting a new key range to be created" result="PASS" /><testcase id="IDBKeyRange_lowerBound_return_lowerOpen_open" purpose="Check if IDBKeyRange.lowerBound() creates and returns a new key range with lowerOpen set to open" result="PASS" /><testcase id="IDBKeyRange_lowerBound_return_lower_lower" purpose="Check if IDBKeyRange.lowerBound() creates and returns a new key range with lower set to lower" result="PASS" /><testcase id="IDBKeyRange_lowerBound_return_type" purpose="Check if the return type of IDBKeyRange.lowerBound() is IDBKeyRange" result="PASS" /><testcase id="IDBKeyRange_lowerBound_return_upperOpen_true" purpose="Check if IDBKeyRange.lowerBound() creates and returns a new key range with upperOpen set to true" result="PASS" /><testcase id="IDBKeyRange_lowerBound_return_upper_undefined" purpose="Check if IDBKeyRange.lowerBound() creates and returns a new key range with upper set to undefined" result="PASS" /><testcase id="IDBKeyRange_lowerOpen_exist" purpose="Check if IDBKeyRange.lowerOpen attribute exists" result="PASS" /><testcase id="IDBKeyRange_lowerOpen_normal_value" purpose="Check if the value of IDBKeyRange.lowerOpen attribute is normal" result="PASS" /><testcase id="IDBKeyRange_lowerOpen_readonly" purpose="Check if IDBKeyRange.lowerOpen attribute is readonly" result="PASS" /><testcase id="IDBKeyRange_lowerOpen_type" purpose="Check if IDBKeyRange.lowerOpen attribute is of type boolean" result="PASS" /><testcase id="IDBKeyRange_lower_normal_value" purpose="Check if the value of IDBKeyRange.lower attribute is normal" result="PASS" /><testcase id="IDBKeyRange_lower_readonly" purpose="Check if IDBKeyRange.lower attribute is readonly" result="PASS" /><testcase id="IDBKeyRange_only_base" purpose="Check if IDBKeyRange.only() has a valid argument that an IDBKeyRange object is to be created" result="PASS" /><testcase id="IDBKeyRange_only_exception_DataError" purpose="Check if only() has an argument null that expecting an exception DataError to be thrown" result="PASS" /><testcase id="IDBKeyRange_only_exist" purpose="Check if IDBKeyRange.only method exists" result="PASS" /><testcase id="IDBKeyRange_only_return_lowerOpen_false" purpose="Check if IDBKeyRange.only() creates and returns a new key range with lowerOpen set to false" result="PASS" /><testcase id="IDBKeyRange_only_return_lower_value" purpose="Check if IDBKeyRange.only() creates and returns a new key range with lower set to value" result="PASS" /><testcase id="IDBKeyRange_only_return_type" purpose="Check if the return type of IDBKeyRange.only() is IDBKeyRange" result="PASS" /><testcase id="IDBKeyRange_only_return_upperOpen_false" purpose="Check if IDBKeyRange.only() creates and returns a new key range with upperOpen set to value" result="PASS" /><testcase id="IDBKeyRange_only_return_upper_value" purpose="Check if IDBKeyRange.only() creates and returns a new key range with upper set to value" result="PASS" /><testcase id="IDBKeyRange_upperBound_base" purpose="Check if IDBKeyRange.upperBound() has two valid arguments that expecting a new key range to be created" result="PASS" /><testcase id="IDBKeyRange_upperBound_exception_DataError" purpose="Check if IDBKeyRange.upperBound() throws an exception DataError when the value parameter was not passed a valid key" result="PASS" /><testcase id="IDBKeyRange_upperBound_exist" purpose="Check if IDBKeyRange.upperBound method exists" result="PASS" /><testcase id="IDBKeyRange_upperBound_mandatory" purpose="Check if IDBKeyRange.upperBound() has a valid argument that expecting a new key range to be created" result="PASS" /><testcase id="IDBKeyRange_upperBound_return_lowerOpen_true" purpose="Check if IDBKeyRange.upperBound() creates and returns a new key range with lowerOpen set to true" result="PASS" /><testcase id="IDBKeyRange_upperBound_return_lower_undefined" purpose="Check if IDBKeyRange.upperbound() creates and returns a new key range with lower set to undefined" result="PASS" /><testcase id="IDBKeyRange_upperBound_return_type" purpose="Check if the return type of IDBKeyRange.upperBound() is IDBKeyRange" result="PASS" /><testcase id="IDBKeyRange_upperBound_return_upperOpen_open" purpose="Check if IDBKeyRange.upperBound() creates and returns a new key range with upperOpen set to open" result="PASS" /><testcase id="IDBKeyRange_upperBound_return_upper_value" purpose="Check if IDBKeyRange.upperBound() creates and returns a new key range with upper set to value" result="PASS" /><testcase id="IDBKeyRange_upperOpen_exist" purpose="Check if IDBKeyRange.upperOpen attribute exists" result="PASS" /><testcase id="IDBKeyRange_upperOpen_normal_value" purpose="Check if the value of IDBKeyRange.upperOpen attribute is normal" result="PASS" /><testcase id="IDBKeyRange_upperOpen_readonly" purpose="Check if IDBKeyRange.upperOpen attribute is readonly" result="PASS" /><testcase id="IDBKeyRange_upperOpen_type" purpose="Check if IDBKeyRange.upperOpen attribute is of type boolean" result="PASS" /><testcase id="IDBKeyRange_upper_exist" purpose="Check if IDBKeyRange.upper attribute exists" result="PASS" /><testcase id="IDBKeyRange_upper_normal_value" purpose="Check if the value of IDBKeyRange.upper attribute is normal" result="PASS" /><testcase id="IDBKeyRange_upper_readonly" purpose="Check if IDBKeyRange.upper attribute is readonly" result="PASS" /><testcase id="idbobjectstore_add" purpose="Check if an object store uses in-line keys on add() method" result="PASS" /><testcase id="idbobjectstore_add10" purpose="Check if can call 'add' without a key argument when the object store intend to use out-of-line keys" result="PASS" /><testcase id="idbobjectstore_add11" purpose="Check if can add a record with an invalid in line key" result="PASS" /><testcase id="idbobjectstore_add12" purpose="Check if can call 'add' without in-line key defined" result="PASS" /><testcase id="idbobjectstore_add13" purpose="Check if can add a record with an invalid out of line key" result="PASS" /><testcase id="idbobjectstore_add14" purpose="Check if can add a record with an invalid key in index" result="PASS" /><testcase id="idbobjectstore_add2" purpose="Check if an object store uses out-of-line keys on add() method" result="PASS" /><testcase id="idbobjectstore_add3" purpose="Check if the record of object store already has the same key existed on add() method" result="PASS" /><testcase id="idbobjectstore_add4" purpose="Check if object store can still add when the 'unique: true' specified by index" result="PASS" /><testcase id="idbobjectstore_add5" purpose="Check if the key path of object store is an object attribute on add() method" result="PASS" /><testcase id="idbobjectstore_add6" purpose="Check if object store uses autoIncrement and inline keys on add() method" result="PASS" /><testcase id="idbobjectstore_add7" purpose="Check if object store uses autoIncrement and out-of-line keys on add() method" result="PASS" /><testcase id="idbobjectstore_add8" purpose="Check if object store has properties of autoIncrement with true value and key path object on add() method" result="PASS" /><testcase id="idbobjectstore_add9" purpose="Check if can add a record with an invalid  inline key" result="PASS" /><testcase id="IDBObjectStore_add_exception_DataCloneError" purpose="Check if IDBObjectStore.add() throws an exception DataCloneErro when the data being stored could not be cloned by the internal structured cloning algorithm" result="PASS" /><testcase id="IDBObjectStore_add_exception_InvalidStateError" purpose="Check if IDBObjectStore.add() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBObjectStore_add_exception_ReadOnlyError" purpose="Check if IDBObjectStore.add() throws an exception ReadOnlyError when the transaction this IDBObjectStore belongs to is has its mode set to READ_ONLY" result="PASS" /><testcase id="IDBObjectStore_add_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.add() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS" /><testcase id="IDBObjectStore_add_exist" purpose="Check if IDBObjectStore.add method exists" result="PASS" /><testcase id="IDBObjectStore_add_mandatory" purpose="Check if IDBObjectStore.add() has one mandatory normal argument that expecting IDBRequest object to be created" result="PASS" /><testcase id="idbobjectstore_clear" purpose="Check if clear() method works" result="PASS" /><testcase id="idbobjectstore_clear2" purpose="Check if clear() method removes all records in an index" result="PASS" /><testcase id="IDBObjectStore_clear_base" purpose="Check if IDBObjectStore.clear() runs the steps for asynchronously executing a request and returns the IDBRequest created by these steps" result="PASS" /><testcase id="IDBObjectStore_clear_exception_InvalidStateError" purpose="Check if IDBObjectStore.clear() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBObjectStore_clear_exception_ReadOnlyError" purpose="Check if IDBObjectStore.clear() throws an exception ReadOnlyError when the transaction this IDBObjectStore belongs to is has its mode set to READ_ONLY" result="PASS" /><testcase id="IDBObjectStore_clear_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.clear() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS" /><testcase id="IDBObjectStore_clear_exist" purpose="Check if IDBObjectStore.clear method exists" result="PASS" /><testcase id="idbobjectstore_count" purpose="Check if the count() method returns the number of records in the object store" result="PASS" /><testcase id="idbobjectstore_count2" purpose="Check if the count() method returns the number of records that have keys within the range" result="PASS" /><testcase id="IDBObjectStore_count_base" purpose="Check if IDBObjectStore.count() has all valid arguments that expecting an IDBRequest object to be created" result="PASS" /><testcase id="IDBObjectStore_count_exception_DataError" purpose="Check if IDBObjectStore.count() throws an exception DataError when the key parameter is not a valid key" result="PASS" /><testcase id="IDBObjectStore_count_exception_InvalidStateError" purpose="Check if IDBObjectStore.count() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBObjectStore_count_exist" purpose="Check if IDBObjectStore.count method exists" result="PASS" /><testcase id="IDBObjectStore_count_no_argument" purpose="Check if IDBObjectStore.count() has no argument that expecting an IDBRequest object to be created" result="PASS" /><testcase id="idbobjectstore_createIndex" purpose="Check if createIndex() method works" result="PASS" /><testcase id="idbobjectstore_createIndex2" purpose="Check if can create an index that the unique value is already exist on an object store" result="PASS" /><testcase id="IDBObjectStore_createIndex_exception_ConstraintError" purpose="Check if IDBObjectStore.createIndex() throws an exception ConstraintError when an index with the same name already exists" result="PASS" /><testcase id="IDBObjectStore_createIndex_exception_InvalidStateError" purpose="Check if IDBObjectStore.createIndex() throws an exception InvalidStateError when this function is called from outside a VERSION_CHANGE transaction callback" result="PASS" /><testcase id="IDBObjectStore_createIndex_exception_NotSupportedError" purpose="Check if IDBObjectStore.createIndex() throws an exception NotSupportedError when keyPath is an Array and the multientry property in the optionalParameters is true" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3067 XWALK-3067]]</testcase><testcase id="IDBObjectStore_createIndex_exist" purpose="Check if IDBObjectStore.createIndex method exists" result="PASS" /><testcase id="IDBObjectStore_createIndex_keyPath_string_invalid" purpose="Check if IDBObjectStore.createIndex() throws an exception SyntaxError when keyPath is a string and is not a valid key path" result="PASS" /><testcase id="IDBObjectStore_createIndex_mandatory" purpose="Check if IDBObjectStore.createIndex() has two mandatory valid argument that new index is to be created" result="PASS" /><testcase id="IDBObjectStore_createIndex_optionalParameters_null" purpose="Check if IDBObjectStore.createIndex() has a null argument optionalParameters that new index is to be created" result="PASS" /><testcase id="idbobjectstore_delete" purpose="Check if delete() method removes record with inline keys" result="PASS" /><testcase id="idbobjectstore_delete2" purpose="Check if the key dismatch any records on delete() method" result="PASS" /><testcase id="idbobjectstore_delete3" purpose="Check if the key path of object store is an object attribute" result="PASS" /><testcase id="idbobjectstore_delete4" purpose="Check if delete() method removes record with out-of-line keys" result="PASS" /><testcase id="idbobjectstore_delete5" purpose="Check if IDBObjectStore.delete() can removes all of the records in the range" result="PASS" /><testcase id="idbobjectstore_deleteIndex" purpose="Check if can remove the index when the deleteIndex() method invoked" result="PASS" /><testcase id="IDBObjectStore_deleteIndex_exception_InvalidStateError" purpose="Check if IDBObjectStore.deleteIndex() throws an exception InvalidStateError when this method was not called from a VERSION_CHANGE transaction callback" result="PASS" /><testcase id="IDBObjectStore_deleteIndex_exception_NotFoundError" purpose="Check if IDBObjectStore.deleteIndex() throws an exception NotFoundError when there is no index with the given name" result="PASS" /><testcase id="IDBObjectStore_deleteIndex_exist" purpose="Check if IDBObjectStore.deleteIndex method exists" result="PASS" /><testcase id="IDBObjectStore_delete_exception_DataError" purpose="Check if IDBObjectStore.delete() throws an exception DataError when the key parameter is not a valid key or a key range" result="PASS" /><testcase id="IDBObjectStore_delete_exception_ReadOnlyError" purpose="Check if IDBObjectStore.delete() throws an exception ReadOnlyError when the transaction this IDBObjectStore belongs to is has its mode set to READ_ONLY" result="PASS" /><testcase id="IDBObjectStore_delete_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.delete() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS" /><testcase id="IDBObjectStore_delete_exist" purpose="Check if IDBObjectStore.delete method exists" result="PASS" /><testcase id="idbobjectstore_get" purpose="Check if the key is a number" result="PASS" /><testcase id="idbobjectstore_get2" purpose="Check if the key is a string" result="PASS" /><testcase id="idbobjectstore_get3" purpose="Check if the key is a Date" result="PASS" /><testcase id="idbobjectstore_get4" purpose="Check if can retrieve a record that doesn't exist" result="PASS" /><testcase id="idbobjectstore_get5" purpose="Check if IDBObjectStore.get() returns the record with the first key in the range" result="PASS" /><testcase id="IDBObjectStore_get_exception_DataError" purpose="Check if IDBObjectStore.get() throws an exception DataError when the key parameter is not a valid key" result="PASS" /><testcase id="IDBObjectStore_get_exception_InvalidStateError" purpose="Check if IDBObjectStore.get() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBObjectStore_get_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.get() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS" /><testcase id="IDBObjectStore_get_exist" purpose="Check if IDBObjectStore.get method exists" result="PASS" /><testcase id="idbobjectstore_index" purpose="Check if index() method works" result="PASS" /><testcase id="IDBObjectStore_indexNames_exist" purpose="Check if IDBObjectStore.indexNames method exists" result="PASS" /><testcase id="IDBObjectStore_indexNames_normal_value" purpose="Check if the value of IDBObjectStore.indexNames attribute is normal" result="PASS" /><testcase id="IDBObjectStore_indexNames_readonly" purpose="Check if IDBObjectStore.indexNames attribute is readonly" result="PASS" /><testcase id="IDBObjectStore_indexNames_type" purpose="Check if IDBObjectStore.indexNames attribute is of type DOMStringList" result="PASS" /><testcase id="IDBObjectStore_index_exception_InvalidStateError" purpose="Check if IDBObjectStore.index() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBObjectStore_index_exception_NotFoundError" purpose="Check if IDBObjectStore.index() throws an exception NotFoundError when there is no index with the given name" result="PASS" /><testcase id="IDBObjectStore_index_exits" purpose="Check if IDBObjectStore.index method exists" result="PASS" /><testcase id="IDBObjectStore_keyPath_exist" purpose="Check if IDBObjectStore.keyPath attribute exists" result="PASS" /><testcase id="IDBObjectStore_keyPath_normal_value" purpose="Check if the value of IDBObjectStore.keyPath attribute is normal" result="PASS" /><testcase id="IDBObjectStore_keyPath_readonly" purpose="Check if IDBObjectStore.keyPath attribute is readonly" result="PASS" /><testcase id="IDBObjectStore_keyPath_type" purpose="Check if IDBObjectStore.keyPath attribute is of type string" result="PASS" /><testcase id="IDBObjectStore_name_exist" purpose="Check if IDBObjectStore.name attribute exists" result="PASS" /><testcase id="IDBObjectStore_name_normal_value" purpose="Check if the value of IDBObjectStore.name attribute is normal" result="PASS" /><testcase id="IDBObjectStore_name_readonly" purpose="Check if IDBObjectStore.name attribute is readonly" result="PASS" /><testcase id="IDBObjectStore_name_type" purpose="Check if IDBObjectStore.name attribute is of type string" result="PASS" /><testcase id="IDBObjectStore_openCursor_base" purpose="Check if IDBObjectStore.openCursor() has all two valid arguments that expecting an IDBRequest object to be created" result="PASS" /><testcase id="IDBObjectStore_openCursor_exception_DataError" purpose="Check if IDBObjectStore.openCursor() throws an exception DataError when the range parameter was not a valid key" result="PASS" /><testcase id="IDBObjectStore_openCursor_exception_InvalidStateError" purpose="Check if IDBObjectStore.openCursor() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBObjectStore_openCursor_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.openCursor() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS" /><testcase id="IDBObjectStore_openCursor_exist" purpose="Check if IDBObjectStore.openCursor method exists" result="PASS" /><testcase id="idbobjectstore_put" purpose="Check if an object store uses in-line keys on put() method" result="PASS" /><testcase id="idbobjectstore_put10" purpose="Check if can call 'put' without an key argument when the object store intend to use out-of-line keys" result="PASS" /><testcase id="idbobjectstore_put11" purpose="Check if can put a record with an invalid key" result="PASS" /><testcase id="idbobjectstore_put12" purpose="Check if can put a record without define any keys" result="PASS" /><testcase id="idbobjectstore_put13" purpose="Check if can put a record with an invalid out of line key" result="PASS" /><testcase id="idbobjectstore_put14" purpose="Check if can put a record with an invalid key in index" result="PASS" /><testcase id="idbobjectstore_put2" purpose="Check if an object store uses out-of-line keys on put() method" result="PASS" /><testcase id="idbobjectstore_put3" purpose="Check if the record of object store already has the same key existed on put() method" result="PASS" /><testcase id="idbobjectstore_put4" purpose="Check if object store can still put when the 'unique: true' specified by index" result="PASS" /><testcase id="idbobjectstore_put5" purpose="Check if the key path of object store is an object attribute on put() method" result="PASS" /><testcase id="idbobjectstore_put6" purpose="Check if object store uses autoIncrement and inline keys on put() method" result="PASS" /><testcase id="idbobjectstore_put7" purpose="Check if object store uses autoIncrement and out-of-line keys on put() method" result="PASS" /><testcase id="idbobjectstore_put8" purpose="Check if object store has properties of autoIncrement with true value and key path object on put() method" result="PASS" /><testcase id="idbobjectstore_put9" purpose="Check if can put a record with an invalid in line key" result="PASS" /><testcase id="IDBObjectStore_put_exception_DataCloneError" purpose="Check if IDBObjectStore.put() throws an exception DataCloneError when the data being stored could not be cloned by the internal structured cloning algorithm" result="PASS" /><testcase id="IDBObjectStore_put_exception_InvalidStateError" purpose="Check if IDBObjectStore.put() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBObjectStore_put_exception_ReadOnlyError" purpose="Check if IDBObjectStore.put() throws an exception ReadOnlyError when the transaction this IDBObjectStore belongs to is has its mode set to READ_ONLY" result="PASS" /><testcase id="IDBObjectStore_put_exception_TransactionInactiveError" purpose="Check if IDBObjectStore.put() throws an exception TransactionInactiveError when the transaction this IDBObjectStore belongs to is not active" result="PASS" /><testcase id="IDBObjectStore_put_exist" purpose="Check if IDBObjectStore.put method exists" result="PASS" /><testcase id="IDBObjectStore_put_mandatory" purpose="Check if IDBObjectStore.put() has one mandatory normal argument that expecting an IDBRequest object to be created" result="PASS" /><testcase id="IDBObjectStore_transaction_exist" purpose="Check if IDBObjectStore.transaction attribute exists" result="PASS" /><testcase id="IDBObjectStore_transaction_normal_value" purpose="Check if the value of IDBObjectStore.transaction attribute is normal" result="PASS" /><testcase id="IDBObjectStore_transaction_readonly" purpose="Check if IDBObjectStore.transaction attribute is readonly" result="PASS" /><testcase id="IDBObjectStore_transaction_type" purpose="Check if IDBObjectStore.transaction attribute is of IDBTransaction object type" result="PASS" /><testcase id="IDBOpenDBRequest_onblocked_exist" purpose="Check if IDBOpenDBRequest.onblocked method exists" result="PASS" /><testcase id="IDBOpenDBRequest_onupgradeneeded_base" purpose="Check if the error event has been triggered that expecting an upgradeneeded handler to be invoked" result="PASS" /><testcase id="IDBOpenDBRequest_onupgradeneeded_exist" purpose="Check if IDBOpenDBRequest.onupgradeneeded method exists" result="PASS" /><testcase id="IDBRequest_error_default_value" purpose="Check if the default value of IDBRequest.error attribute is null" result="PASS" /><testcase id="IDBRequest_error_exception_InvalidStateError" purpose="Check if IDBRequest.error throws an exception InvalidStateError when the done flag was set to false" result="PASS" /><testcase id="IDBRequest_error_exist" purpose="Check if IDBRequest.error attribute exists" result="PASS" /><testcase id="IDBRequest_error_readonly" purpose="Check if IDBRequest.error attribute is readonly" result="PASS" /><testcase id="IDBRequest_error_type" purpose="Check if IDBRequest.error attribute is of object type" result="PASS" /><testcase id="IDBRequest_onerror_base" purpose="Check if the error event has been triggered that expecting an onerror handler to be invoked" result="PASS" /><testcase id="IDBRequest_onerror_exist" purpose="Check if IDBRequest.onerror method exists" result="PASS" /><testcase id="IDBRequest_onsuccess_base" purpose="Check if the success event has been triggered that expecting an onsuccess handler to be invoked" result="PASS" /><testcase id="IDBRequest_onsuccess_exist" purpose="Check if IDBRequest.onsuccess method exists" result="PASS" /><testcase id="IDBRequest_readyState_exist" purpose="Check if IDBRequest.readyState attribute exists" result="PASS" /><testcase id="IDBRequest_readyState_readonly" purpose="Check if IDBRequest.readyState attribute is readonly" result="PASS" /><testcase id="IDBRequest_result_exception_InvalidStateError" purpose="Check if IDBRequest.result throws an exception InvalidStateError when the done flag is set to false" result="PASS" /><testcase id="IDBRequest_result_exist" purpose="Check if IDBRequest.result method exists" result="PASS" /><testcase id="IDBRequest_result_normal_value" purpose="Check if the value of IDBRequest.result attribute is normal" result="PASS" /><testcase id="IDBRequest_result_readonly" purpose="Check if IDBRequest.result attribute is readonly" result="PASS" /><testcase id="IDBRequest_source_exist" purpose="Check if IDBRequest.source attribute exists" result="PASS" /><testcase id="IDBRequest_source_readonly" purpose="Check if IDBRequest.source attribute is readonly" result="PASS" /><testcase id="IDBRequest_source_type" purpose="Check if IDBRequest.source attribute is of object type" result="PASS" /><testcase id="IDBRequest_transaction_exist" purpose="Check if IDBRequest.transaction method exists" result="PASS" /><testcase id="IDBRequest_transaction_readonly" purpose="Check if IDBRequest.transaction attribute is readonly" result="PASS" /><testcase id="IDBRequest_transaction_type" purpose="Check if IDBRequest.transaction attribute is of IDBTransaction object type" result="PASS" /><testcase id="IDBTransaction_abort_base" purpose="Check if IDBTransaction.abort() is invoked successfully that expecting the onabort event to be triggered" result="PASS" /><testcase id="IDBTransaction_abort_exception_InvalidStateError" purpose="Check if IDBTransaction.abort() throws an exception InvalidStateError when the transaction has already been aborted" result="PASS" /><testcase id="IDBTransaction_abort_exist" purpose="Check if IDBTransaction.abort method exists" result="PASS" /><testcase id="IDBTransaction_db_exist" purpose="Check if IDBTransaction.db attribute exists" result="PASS" /><testcase id="IDBTransaction_db_normal_value" purpose="Check if the value of IDBTransaction.db attribute is normal" result="PASS" /><testcase id="IDBTransaction_db_readonly" purpose="Check if IDBTransaction.db attribute is readonly" result="PASS" /><testcase id="IDBTransaction_db_type" purpose="Check if IDBTransaction.db attribute is of IDBDatabase object type" result="PASS" /><testcase id="IDBTransaction_mode_exist" purpose="Check if IDBTransaction.mode attribute exists" result="PASS" /><testcase id="IDBTransaction_mode_readonly" purpose="Check if IDBTransaction.mode attribute is readonly" result="PASS" /><testcase id="IDBTransaction_objectStore_base" purpose="Check if IDBTransaction.objectStore() has one valid argument that expecting an IDBObjectStore object to be returned" result="PASS" /><testcase id="IDBTransaction_objectStore_exception_InvalidStateError" purpose="Check if IDBTransaction.objectStore() throws an exception InvalidStateError when a request is made on a source object that has been deleted or removed" result="PASS" /><testcase id="IDBTransaction_objectStore_exception_NotFoundError" purpose="Check if IDBTransaction.objectStore() throws an exception NotFoundError when the requested object store is not in this transaction's scope" result="PASS" /><testcase id="IDBTransaction_objectStore_exist" purpose="Check if IDBTransaction.objectStore attribute exists" result="PASS" /><testcase id="IDBTransaction_onabort_base" purpose="Check if the abort event has been triggered that expecting an IDBTransaction.onabort handler to be invoked" result="PASS" /><testcase id="IDBTransaction_onabort_exist" purpose="Check if IDBTransaction.onabort method exists" result="PASS" /><testcase id="IDBTransaction_oncomplete_base" purpose="Check if the complete event has been triggered that expecting an IDBTransaction.oncomplete handler to be invoked" result="PASS" /><testcase id="IDBTransaction_oncomplete_exist" purpose="Check if IDBTransaction.oncomplete method exists" result="PASS" /><testcase id="IDBTransaction_onerror_base" purpose="Check if the error event has been triggered that expecting an IDBTransaction.onerror handler to be invoked" result="PASS" /><testcase id="IDBTransaction_onerror_exist" purpose="Check if IDBTransaction.onerror method exists" result="PASS" /><testcase id="IDBTransaction_READ_ONLY" purpose="check if modification operations are not allowed when the transaction mode is READ_ONLY" result="PASS" /><testcase id="IDBTransaction_READ_WRITE" purpose="Check if modification operations are allowed when the transaction mode is READ_WRITE" result="PASS" /><testcase id="IDBTransaction_VERSION_CHANGE" purpose="Check if allowing to perform any operations, including ones that delete and create object stores and indexes when the transaction mode is VERSION_CHANGE" result="PASS" /><testcase id="IDBVersionChangeEvent_newVersion_readonly" purpose="Check if IDBVersionChangeEvent.newVersion attribute is readonly" result="PASS" /><testcase id="IDBVersionChangeEvent_newVersion_type" purpose="Check if IDBVersionChangeEvent.newVersion attribute is of type number" result="PASS" /><testcase id="IDBVersionChangeEvent_oldVersion_readonly" purpose="Check if IDBVersionChangeEvent.oldVersion attribute is readonly" result="PASS" /><testcase id="IDBVersionChangeEvent_oldVersion_type" purpose="Check if IDBVersionChangeEvent.oldVersion attribute is of type number" result="PASS" /><testcase id="idb_webworkers" purpose="Check if all instances of the WorkerUtils type are defined to also implement the IDBEnvironment interface" result="PASS" /><testcase id="index_sort_order" purpose="Check if key sort order in an index is 'number / Date / DOMString'" result="PASS" /><testcase id="objectstore_keyorder" purpose="Check if key sort order in an object store is 'number / Date / DOMString'" result="PASS" /></category><category name="W3C_HTML5 APIs/Storage/Web SQL Database"><testcase id="DatabaseCallback_handleEvent_database" purpose="Check if DatabaseCallback handleEvent() method with database argument that handleEvent will be invoked" result="PASS" /><testcase id="DatabaseCallback_handleEvent_no_arguments" purpose="Check if DatabaseCallback handleEvent() method no set arguments that handleEvent will be invoked" result="PASS" /><testcase id="DatabaseSync_changeVersion_exist" purpose="Check if the DatabaseSync.changeVersion method exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="DatabaseSync_readTransaction_exist" purpose="Check if the DatabaseSync.readtransaction method exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="DatabaseSync_readTransaction_null_transaction" purpose="Check if an exception should be thrown when readTransaction callback parameter is null on sync database" result="PASS" /><testcase id="DatabaseSync_transaction_exist" purpose="Check if the DatabaseSync.transaction method exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="DatabaseSync_version_exist" purpose="Check if the DatabaseSync.version attribute exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="DatabaseSync_version_normal" purpose="Check if the DatabaseSync.version returns the normal value of sync database's version" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="DatabaseSync_version_readonly" purpose="Check if the DatabaseSync.version is readonly" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="Database_changeversion_base" purpose="Check if Database.changeVersion has all valid arguments that expecting the database'version is to be changed" result="PASS" /><testcase id="Database_changeVersion_exist" purpose="Check if the Database.changeVersion method exists" result="PASS" /><testcase id="Database_changeVersion_newVersion_2point0" purpose="Check if the parameter 'newVersion' of the method Database.changeVersion is 2.0 that expecting the database's version is to be 2.0" result="PASS" /><testcase id="Database_changeVersion_newversion_less_oldversion" purpose="Check if Database.changeVersion() can change database's version when the new Version less than old version" result="PASS" /><testcase id="Database_changeVersion_newVersion_null" purpose="Check if the parameter 'newVersion' of the method Database.changeVersion is null that expecting the database's version is to be 'null'" result="PASS" /><testcase id="Database_changeVersion_no_argument" purpose="Check if Database.changeVersion has no argument that expecting an exception is to be thrown" result="PASS" /><testcase id="Database_changeVersion_no_errorcallback" purpose="Check if Database.changeVersion can update database version and update schema without errro callback" result="PASS" /><testcase id="Database_changeVersion_no_successCallback" purpose="Check if changeVersion() method with no successCallback that database version will be string 2.0" result="PASS" /><testcase id="Database_changeVersion_oldVersion_error" purpose="Check if changeVersion() method with error oldVersion that errorCallback will be called" result="PASS" /><testcase id="Database_changeVersion_with_schema_update" purpose="Check if Database.changeVersion can update database version and update schema at same time" result="PASS" /><testcase id="Database_changeVersion_wrong_old_version" purpose="Check if Database.changeVersion has a wrong oldVersion that expecting a VERSION_ERR exception is to be thrown" result="PASS" /><testcase id="Database_readTransaction_base" purpose="Check if Database.readTransaction() can run readRransaction to execute the read-only database operations" result="PASS" /><testcase id="Database_readTransaction_callback_null" purpose="Check if readTransaction() method set null value of callback that expecting an exception is to be thrown" result="PASS" /><testcase id="Database_readTransaction_errorCallback" purpose="Check if readTransaction() method with no preflight operation or postflight operation that errorCallback will be called" result="PASS" /><testcase id="Database_readTransaction_errorCallback_null" purpose="Check if readTransaction() method set null value of errorCallback that callback will be invoked" result="PASS" /><testcase id="Database_readTransaction_exist" purpose="Check if the Database.readTransaction method exists" result="PASS" /><testcase id="Database_readTransaction_insert_operation" purpose="Check if Database.readTransaction() method throws an SYNTAX_ERR exception when run readRransaction to execute the write database operations" result="PASS" /><testcase id="Database_readTransaction_no_argument" purpose="Check if Database.readTransaction has no argument that expecting an exception is to be thrown" result="PASS" /><testcase id="Database_readTransaction_successCallback_null" purpose="Check if readTransaction() method set null value of successCallback that callback will be invoked" result="PASS" /><testcase id="Database_readTransaction_update_operation" purpose="Check if Database.readTransaction() method throws an SYNTAX_ERR exception when run readRransaction to execute the update database operations" result="PASS" /><testcase id="Database_transaction_base" purpose="Check if transaction() method has full valid arguments that expecting the sql is to be executed" result="PASS" /><testcase id="Database_transaction_callback_null" purpose="Check if transaction() method set null value of callback that expecting a TYPE_MISMATCH_ERR exception is to be thrown" result="PASS" /><testcase id="Database_transaction_errorCallback" purpose="Check if transaction() method with no preflight operation or postflight operation that errorCallback will be called" result="PASS" /><testcase id="Database_transaction_errorCallback_null" purpose="Check if transaction() method set null value of errorCallback that callback will be invoked" result="PASS" /><testcase id="Database_transaction_exist" purpose="Check if the Database.transaction method exists" result="PASS" /><testcase id="Database_transaction_no_argument" purpose="Check if Database.transaction has no argument that expecting an exception is to be thrown" result="PASS" /><testcase id="Database_transaction_successCallback" purpose="Check if transaction() method with right operation that successCallback will be invoked" result="PASS" /><testcase id="Database_transaction_successCallback_null" purpose="Check if transaction() method set null value of successCallback that callback will be invoked" result="PASS" /><testcase id="Database_version_2point0" purpose="Check if the database version is 2.0" result="PASS" /><testcase id="Database_version_basic" purpose="Check if the type of version is string and it is readonly" result="PASS" /><testcase id="Database_version_empty_string" purpose="Check if the database's version is empty string" result="PASS" /><testcase id="Database_version_exist" purpose="Check if the Database.version attribute exists" result="PASS" /><testcase id="Database_version_normal" purpose="Check if the attribute Database.version has a normal value" result="PASS" /><testcase id="Database_version_null" purpose="Check if the database'sversion is string null" result="PASS" /><testcase id="SQLError_code_2" purpose="Check if changeVersion() method with error oldversion that SQLError.code will be 2" result="PASS" /><testcase id="SQLError_code_5" purpose="Check if executeSql() method missing argument that SQLError code will be 5" result="PASS" /><testcase id="SQLError_code_basic" purpose="Check if the type of e.code is number and it's readonly" result="PASS" /><testcase id="SQLError_code_exist" purpose="Check if the SQLError.code attribute exists" result="PASS" /><testcase id="SQLError_CONSTRAINT_ERR_exist" purpose="Check if the SQLError.CONSTRAINT_ERR exists and its type is number and its value is 7" result="PASS" /><testcase id="SQLError_DATABASE_ERR_exist" purpose="Check if the SQLError.CONSTRAINT_ERR exists and its type is number and its value is 1" result="PASS" /><testcase id="SQLError_message_argument" purpose="Check if executeSql() method missing argument that SQLError.message will be number of '?'s in statement string does not match argument count" result="PASS" /><testcase id="SQLError_message_basic" purpose="Check if the e.message exists and its type is string and it's readonly" result="PASS" /><testcase id="SQLError_QUOTA_ERR_basic" purpose="Check if the e.QUOTA_ERR exists and its type is number and its value is 4" result="PASS" /><testcase id="SQLError_SYNTAX_ERR_basic" purpose="Check if the e.SYNTAX_ERR exists and its type is number and its value is 5" result="PASS" /><testcase id="SQLError_TIMEOUT_ERR_basic" purpose="CCheck if the e.TIMEOUT_ERR exists and its type is number and its value is 7" result="PASS" /><testcase id="SQLError_TOO_LARGE_ERR_basic" purpose="Check if the e.TOO_LARGE_ERR exists and its type is number and its value is 3" result="PASS" /><testcase id="SQLError_UNKNOWN_ERR_basic" purpose="Check if the e.UNKNOWN_ERR exists and its type is number and its value is 0" result="PASS" /><testcase id="SQLError_VERSION_ERR_basic" purpose="Check if the e.VERSION_ERR exists and its type is number and its value is 2" result="PASS" /><testcase id="SQLException_code_exist" purpose="Check if the SQLException.code attribute exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SQLException_code_support_check" purpose="Check if the Exception Code definition is in webruntime" result="PASS" /><testcase id="SQLException_CONSTRAINT_ERR_exist" purpose="Check if the SQLException.CONSTRAINT_ERR constant exists" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2768 XWALK-2768]]Test result is the same as Upstream result</testcase><testcase id="SQLException_DATABASE_ERR_exist" purpose="Check if the SQLException.DATABASE_ERR constant exists" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2768 XWALK-2768]]Test result is the same as Upstream result</testcase><testcase id="SQLException_message_exist" purpose="Check if the SQLException.message attribute exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SQLException_QUOTA_ERR_exist" purpose="Check if the SQLException.QUOTA_ERR constant exists" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2768 XWALK-2768]]Test result is the same as Upstream result</testcase><testcase id="SQLException_SYNTAX_ERR_exist" purpose="Check if the SQLException.SYNTAX_ERR constant exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SQLException_TIMEOUT_ERR_exist" purpose="Check if the SQLException.TIMEOUT_ERR constant exists" result="BLOCK">Test result is the same as Upstream result</testcase><testcase id="SQLException_TOO_LARGE_ERR_exist" purpose="Check if the SQLException.TOO_LARGE_ERR constant exists" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2768 XWALK-2768]]Test result is the same as Upstream result</testcase><testcase id="SQLException_UNKNOWN_ERR_exist" purpose="Check if the SQLException.UNKNOWN_ERR constant exists" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2768 XWALK-2768]]Test result is the same as Upstream result</testcase><testcase id="SQLException_VERSION_ERR_exist" purpose="Check if the SQLException.VERSION_ERR constant exists" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2768 XWALK-2768]]Test result is the same as Upstream result</testcase><testcase id="SQLResultSetRowList_item_3_content" purpose="Check if SQLResultSetRowList item index of 3 that content_string will be test4" result="PASS" /><testcase id="SQLResultSetRowList_item_3_id" purpose="Check if SQLResultSetRowList item index of 3 that id_number will be 4" result="PASS" /><testcase id="SQLResultSetRowList_item_exist" purpose="Check if the SQLResultSetRowList.item method exists" result="PASS" /><testcase id="SQLResultSetRowList_item_no_argument" purpose="Check if SQLResultSetRowList.item has no argument that expecting an exception is to be thrown" result="PASS" /><testcase id="SQLResultSetRowList_length_0" purpose="Check if the SQLResultSetRowList length is 0 with select table of no any rows" result="PASS" /><testcase id="SQLResultSetRowList_length_1" purpose="Check if the SQLResultSetRowList length is 1 with select table have one row" result="PASS" /><testcase id="SQLResultSetRowList_length_10" purpose="Check if the SQLResultSetRowList length is 10 with select table have 10 rows" result="PASS" /><testcase id="SQLResultSetRowList_length_basic" purpose="Check if the type of rows.length is number and it's readonly" result="PASS" /><testcase id="SQLResultSetRowList_length_exist" purpose="Check if the SQLResultSetRowList.length attribute exists" result="PASS" /><testcase id="SQLResultSet_insertId_basic" purpose="Check if the type of r.insertId is number and it's readonly" result="PASS" /><testcase id="SQLResultSet_insertId_delete" purpose="Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when do delete operation" result="PASS" /><testcase id="SQLResultSet_insertId_drop_table" purpose="Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when drop table" result="PASS" /><testcase id="SQLResultSet_insertId_exception_INVALID_ACCESS_ERR" purpose="Check if the statement did not insert a row, then the attribute must instead raise an INVALID_ACCESS_ERR exception" result="PASS" /><testcase id="SQLResultSet_insertId_exist" purpose="Check if the SQLResultSet.insertId attribute exists" result="PASS" /><testcase id="SQLResultSet_insertId_insert_3rows" purpose="Check if the statement inserted 3 rows, the ID of the last row must be the one returned" result="PASS" /><testcase id="SQLResultSet_insertId_update" purpose="Check if SQLResultSet.insertId() throw an INVALID_ACCESS_ERR exception when do update operation" result="PASS" /><testcase id="SQLResultSet_insert_result" purpose="Check if the value of SQLResultSet's attribute is correct when do insert opertaion" result="PASS" /><testcase id="SQLResultSet_rowsAffected_basic" purpose="Check if the type of r.rowsAffected is number and it's readonly" result="PASS" /><testcase id="SQLResultSet_rowsAffected_exist" purpose="Check if the SQLResultSet.rowsAffected attribute exists" result="PASS" /><testcase id="SQLResultSet_rowsAffected_insert" purpose="Check if the rowsAffected attribute must return one rows that were changed by the insert statement" result="PASS" /><testcase id="SQLResultSet_rowsAffected_select" purpose="Check if the statement did not affected any rows, then the rowsAffected must return zero" result="PASS" /><testcase id="SQLResultSet_rowsAffected_update" purpose="Check if the rowsAffected attribute should return two rows that were changed by the update statement" result="PASS" /><testcase id="SQLResultSet_rows_basic" purpose="Check if the type of r.rows is object and it's readonly" result="PASS" /><testcase id="SQLResultSet_rows_exist" purpose="Check if the SQLResultSet.rows attribute exists" result="PASS" /><testcase id="SQLResultSet_rows_item" purpose="Check if SQLResultSet rows item(0) returns an type of object" result="PASS" /><testcase id="SQLResultSet_select_result" purpose="Check if invoke executeSql to execute select statement that expecting the value of results is correct" result="PASS" /><testcase id="SQLResultSet_select_result_in_readTransaction" purpose="Check if invoke executeSql to execute select statement in readTransaction that expecting the value of results is correct" result="PASS" /><testcase id="SQLResultSet_table_create_result" purpose="Check if invoke executeSql to execute create table statuement (non-record relevant statement) that expecting the value of results is correct" result="PASS" /><testcase id="SQLResultSet_update_result" purpose="Check if invoke executeSql to execute UPDATE statement that expecting the value of results is correct" result="PASS" /><testcase id="SQLStatementCallback_handleEvent_no_arguments" purpose="Check if the SQLStatementCallback handleEvent with no arguments that handleEvent will be invoked" result="PASS" /><testcase id="SQLStatementCallback_handleEvent_select" purpose="Check if the SQLStatementCallback handleEvent() method with resultSet argument that resultSet.rows.length is 3" result="PASS" /><testcase id="SQLStatementCallback_handleEvent_transaction" purpose="Check if the SQLStatementCallback handleEvent() method with SQLTransaction argument that SQLTransaction returns an type of object" result="PASS" /><testcase id="SQLStatementCallback_handleEvent_transaction_resultSet" purpose="Check if the SQLStatementCallback handleEvent() method with SQLTransaction and resultSet arguments that resultSet.insertId is 1" result="PASS" /><testcase id="SQLStatementErrorCallback_handleEvent_no_arguments" purpose="Check if SQLStatementErrorCallback handleEvent() method with no arguments that handleEvent will be invoked" result="PASS" /><testcase id="SQLStatementErrorCallback_handleEvent_SQLError_CONSTRAINT_ERR" purpose="Check if executeSql() method insert existing value into primary key column that SQLStatementErrorCallback will be invoked and SQLError.code will be CONSTRAINT_ERR" result="PASS" /><testcase id="SQLStatementErrorCallback_handleEvent_SQLError_SYNTAX_ERR" purpose="Check if executeSql() method with syntax error that SQLStatementErrorCallback will be invoked and SQLError.code will be SYNTAX_ERR" result="PASS" /><testcase id="SQLStatementErrorCallback_handleEvent_transaction" purpose="Check if SQLStatementErrorCallback handleEvent() method with transaction argument that handleEvent will be invoked" result="PASS" /><testcase id="SQLStatementErrorCallback_handleEvent_transaction_SQLError" purpose="Check if SQLStatementErrorCallback handleEvent() method with transaction and SQLError arguments that handleEvent will be invoked" result="PASS" /><testcase id="SQLTransactionCallback_handleEvent_no_arguments" purpose="Check if the SQLTransactionCallback handleEvent with no arguments that handleEvent will be invoked" result="PASS" /><testcase id="SQLTransactionCallback_handleEvent_SQLTransaction" purpose="Check if the SQLTransactionCallback handleEvent with SQLTransaction argument that handleEvent will be invoked" result="PASS" /><testcase id="SQLTransactionErrorCallback_handleEvent_SQLError_SYNTAX_ERR" purpose="Check if executeSql() method missing argument that SQLTransactionErrorCallback will be invoked and SQLError.code will be SYNTAX_ERR" result="PASS" /><testcase id="SQLTransactionErrorCallback_handleEvent_SQLError_VERSION_ERR" purpose="Check if changeVersion() method with error oldversion that SQLTransactionErrorCallback will be invoked and SQLError.code will be VERSION_ERR" result="PASS" /><testcase id="SQLTransactionSync_executeSql_exist" purpose="Check if the SQLTransactionSync.executeSql method exists" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="SQLTransaction_executeSql_base" purpose="Check if SQLTransaction.executeSql has all valid arguments that expecting the select statement is to be executed successfully" result="PASS" /><testcase id="SQLTransaction_executeSql_create" purpose="Check if the executeSql() method statement create table that successCallback will be invoked" result="PASS" /><testcase id="SQLTransaction_executeSql_errorcallback_substeps_null" purpose="Check if sql step will be skipped if one substep with error" result="PASS" /><testcase id="SQLTransaction_executeSql_exception_INVALID_STATE_ERR" purpose="Check if SQLTransaction.executeSql should be thrown a INVALID_STATE_ERR exception when no executeSql in transaction" result="PASS" /><testcase id="SQLTransaction_executeSql_exist" purpose="Check if the SQLTransaction.executeSql method exists" result="PASS" /><testcase id="SQLTransaction_executeSql_insert" purpose="Check if the executeSql() method statement insert value into table that successCallback will be invoked" result="PASS" /><testcase id="SQLTransaction_executeSql_no_argument" purpose="Check if SQLTransaction.executeSql has no argument that expecting an exception is to be thrown" result="PASS" /><testcase id="SQLTransaction_executeSql_null_optional_arguments" purpose="Check if can invoke SQLTransaction.executeSql with only available statement and other parameters are null" result="PASS" /><testcase id="SQLTransaction_executeSql_null_statement" purpose="Check if can invoke SQLTransaction.executeSql invoke executeSql with only null statement" result="PASS" /><testcase id="SQLTransaction_executeSql_skip_substeps" purpose="Check if SQLTransaction execute sql step will be skipped if one substep with error" result="PASS" /><testcase id="SQLTransaction_executeSql_update" purpose="Check if the executeSql() method statement update table that successCallback will be invoked" result="PASS" /><testcase id="SQLTransaction_executeSql_with_question_in_statement" purpose="Check if the SQLTransaction.executeSql() execute sql with question mark (?) as wildcard that expecting a SYNTAX_ERR exception is to be thrown" result="PASS" /><testcase id="SQLTransaction_executeSql_with_unsupported_keyword" purpose="Check if the SQLTransaction.executeSql() execute sql with unsupported keyword that expecting a SYNTAX_ERR exception is to be thrown" result="PASS" /><testcase id="window_example_construct_query" purpose="Check if example of constructing the query using only '?' characters, and then pass the variables in as the second argument" result="PASS" /><testcase id="window_example_executesql_substitute_variables" purpose="Check if example of substituting variables into statements without risking SQL injection" result="PASS" /><testcase id="window_example_manipulate_database" purpose="Check if example of a script using webdatabase API" result="PASS" /><testcase id="window_openDatabase_base" purpose="Check if window.openDatabase has all valid arguments that expecting a database object is to be returned" result="PASS" /><testcase id="window_openDatabase_callback" purpose="Check if openDatabase() method with callback that database will be created successfully" result="PASS" /><testcase id="window_openDatabase_creationCallback_version" purpose="Check if the database having the empty string as its version when the window.openDatabase callback is invoked" result="PASS" /><testcase id="window_openDatabase_exception_INVALID_STATE_ERR" purpose="Check if window.openDatabase throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided" result="PASS" /><testcase id="window_openDatabase_exist" purpose="Check if the window.openDatabase method exists" result="PASS" /><testcase id="window_openDatabase_name_case_sensitive" purpose="Check if database names must be compared in a case-sensitive manner when calls window.openDatabase" result="PASS" /><testcase id="window_openDatabase_name_empty_string" purpose="Check if the argument 'name' of the method window.openDatabase is empty string that expecting a database object is to be returned" result="PASS" /><testcase id="window_openDatabase_name_null" purpose="Check if the argument 'name' of the method window.openDatabase is null that expecting a database object is to be returned" result="PASS" /><testcase id="window_openDatabase_no_argument" purpose="Check if window.openDatabase has no argument that expecting an exception is to be thrown" result="PASS" /><testcase id="window_openDatabase_no_callback" purpose="Check if openDatabase() method have no set creationCallback that database will be created successfully" result="PASS" /><testcase id="window_openDatabase_no_creationCallback_version" purpose="Check if the database is created with the given database version as its version when the window.openDatabase callback is not provided" result="PASS" /><testcase id="window_openDatabase_no_estimatedsize" purpose="Check if openDatabase() method have no set estimatedSize value that expecting an exception will be thrown" result="PASS" /><testcase id="window_openDatabase_version_2point0" purpose="Check if openDatabase() method set version value 2.0 that database will be created successfully" result="PASS" /><testcase id="window_openDatabase_version_empty_string" purpose="Check if the argument 'version' of the method window.openDatabase is empty string that expecting a database object is to be returned" result="PASS" /><testcase id="window_openDatabase_version_null" purpose="Check if the argument 'version' of the method window.openDatabase is null that expecting a database object is to be returned" result="PASS" /><testcase id="WorkerUtils_openDatabaseSync_exception_INVALID_STATE_ERR" purpose="Check if WorkerUtils.openDatabaseSync throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided" result="PASS" /><testcase id="WorkerUtils_openDatabaseSync_exist" purpose="Check if the WorkerUtils.openDatabaseSync method exists" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="WorkerUtils_openDatabaseSync_no_argument" purpose="Check if WorkerUtils.openDatabaseSync has no argument that expecting an exception is to be thrown" result="PASS" /><testcase id="WorkerUtils_openDatabase_exception_INVALID_STATE_ERR" purpose="Check if WorkerUtils.openDatabase throws an exception INVALID_STATE_ERR when there is already a database with the given name from the origin, but the database has a different version than the version provided" result="PASS" /><testcase id="WorkerUtils_openDatabase_exist" purpose="Check if the WorkerUtils.openDatabase method exists" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="WorkerUtils_openDatabase_no_argument" purpose="Check if WorkerUtils.openDatabase has no argument that expecting an exception is to be thrown" result="PASS" /></category><category name="W3C_HTML5 APIs/Storage/Web Storage"><testcase id="event_constructor" purpose="Check if the argument eventInitDict of the StorageEvent's constructor that expecting StorageEvent object is to be created" result="PASS" /><testcase id="event_constructor_js" purpose="Check if the value of the argument eventInitDict of the StorageEvent's constructor is 'null' when set it null" result="PASS" /><testcase id="event_local_key" purpose="Check if key add of local event can be listener" result="PASS" /><testcase id="event_local_newvalue" purpose="Check if newValue change of local event can be listener" result="PASS" /><testcase id="event_local_oldvalue" purpose="Check if oldValue change of local event can be listener" result="PASS" /><testcase id="event_local_storagearea" purpose="Check if storageArea change of local event can be listener" result="PASS" /><testcase id="event_local_storageeventinit" purpose="Check if the initial of local StorageEvent.storageArea to be initial" result="PASS" /><testcase id="event_local_url" purpose="Check if url change of local event can be listener" result="PASS" /><testcase id="event_session_key" purpose="Check if key add of session event can be listener" result="PASS" /><testcase id="event_session_newvalue" purpose="Check if newvalue change of session event can be listener" result="PASS" /><testcase id="event_session_oldvalue" purpose="Check if oldvalue change of session event can be listener" result="PASS" /><testcase id="event_session_storagearea" purpose="Check if storageArea change of session event can be listener" result="PASS" /><testcase id="event_session_storageeventinit" purpose="Check if the initial of session storageeventinit test to be inital" result="PASS" /><testcase id="event_session_url" purpose="Check if url change of session event can be listener" result="PASS" /><testcase id="Idlharness_13" purpose="Check if window.localStorage can be stringify" result="PASS" /><testcase id="Idlharness_15" purpose="Check if window.localStorage inherit property &quot;key&quot; with the proper type" result="PASS" /><testcase id="Idlharness_17" purpose="Check if window.localStorage inherit property &quot;getItem&quot; with the proper type" result="PASS" /><testcase id="Idlharness_19" purpose="Check if window.localStorage inherit property &quot;setItem&quot; with the proper type" result="PASS" /><testcase id="Idlharness_21" purpose="Check if window.localStorage inherit property &quot;removeItem&quot; with the proper type" result="PASS" /><testcase id="Idlharness_23" purpose="Check if window.localStorage inherit property &quot;clear&quot; with the proper type" result="PASS" /><testcase id="missing_arguments_1" purpose="Check if throw TypeError when calling function localStorage.key()" result="PASS" /><testcase id="missing_arguments_10" purpose="Check if throw TypeError when calling function sessionStorage.removeItem()" result="PASS" /><testcase id="missing_arguments_2" purpose="Check if throw TypeError when calling function localStorage.getItem()" result="PASS" /><testcase id="missing_arguments_3" purpose="Check if throw TypeError when calling function localStorage.setItem()" result="PASS" /><testcase id="missing_arguments_4" purpose="Check if throw TypeError when calling function localStorage.setItem('a')" result="PASS" /><testcase id="missing_arguments_5" purpose="Check if throw TypeError when calling function localStorage.removeItem()" result="PASS" /><testcase id="missing_arguments_6" purpose="Check if throw TypeError when calling function sessionStorage.key()" result="PASS" /><testcase id="missing_arguments_7" purpose="Check if throw TypeError when calling function sessionStorage.getItem()" result="PASS" /><testcase id="missing_arguments_8" purpose="Check if throw TypeError when calling function sessionStorage.setItem()" result="PASS" /><testcase id="missing_arguments_9" purpose="Check if throw TypeError when calling function sessionStorage.setItem('a')" result="PASS" /><testcase id="StorageEvent_constructor_base" purpose="Check if StorageEvent's constructor has two valid arguments that expecting StorageEvent object is to be created" result="PASS" /><testcase id="StorageEvent_constructor_key_undefined" purpose="Check if the value of StorageEvent.key is 'undefined' when set it undefined" result="PASS" /><testcase id="StorageEvent_constructor_newValue_undefined" purpose="Check if the value of StorageEvent.newValue is 'undefined' when set it undefined" result="PASS" /><testcase id="StorageEvent_constructor_no_key" purpose="Check if the value of StorageEvent.key is null when StorageEvent's constructor no key" result="PASS" /><testcase id="StorageEvent_constructor_no_newValue" purpose="Check if the value of StorageEvent.newValue is null when StorageEvent's constructor no newValue" result="PASS" /><testcase id="StorageEvent_constructor_no_oldValue" purpose="Check if the value of StorageEvent.oldValue is null when StorageEvent's contructor no oldValue" result="PASS" /><testcase id="StorageEvent_constructor_no_url" purpose="Check if the value of StorageEvent.url is empty string when StorageEvent's constructor no url" result="PASS" /><testcase id="StorageEvent_constructor_oldValue_undefined" purpose="Check if the value of StorageEvent.oldValue is 'undefined' when set it undefined" result="PASS" /><testcase id="StorageEvent_constructor_url_undefined" purpose="Check if the value of StorageEvent.url is 'undefined' when set it undefined" result="PASS" /><testcase id="StorageEvent_key_empty_string" purpose="Check if the value of StorageEvent.key is empty string" result="PASS" /><testcase id="StorageEvent_key_exist" purpose="Check if StorageEvent.key exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4036 XWALK-4036]]</testcase><testcase id="StorageEvent_key_normal_value" purpose="Check if the value of StorageEvent.key is normal value" result="PASS" /><testcase id="StorageEvent_key_readonly" purpose="Check if StorageEvent.key is readonly" result="PASS" /><testcase id="StorageEvent_key_type" purpose="Check if the type of StorageEvent.key is string" result="PASS" /><testcase id="StorageEvent_newValue_empty_string.html" purpose="Check if the value of StorageEvent.newValue is empty string" result="PASS" /><testcase id="StorageEvent_newValue_exist" purpose="Check if StorageEvent.newValue exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4036 XWALK-4036]]</testcase><testcase id="StorageEvent_newValue_initial_value" purpose="Check if the initial value of StorageEvent.newValue is null" result="PASS" /><testcase id="StorageEvent_newValue_normal_value" purpose="Check if StorageEvent.newValue has a normal value" result="PASS" /><testcase id="StorageEvent_newValue_readonly" purpose="Check if StorageEvent.newValue is readonly" result="PASS" /><testcase id="StorageEvent_newValue_type" purpose="Check if the type of StorageEvent.newValue is string" result="PASS" /><testcase id="StorageEvent_oldValue_empty_string" purpose="Check if the value of StorageEvent.oldValue is empty string" result="PASS" /><testcase id="StorageEvent_oldValue_exist" purpose="Check if StorageEvent.oldValue exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4036 XWALK-4036]]</testcase><testcase id="StorageEvent_oldValue_initial_value" purpose="Check if the initial value of StorageEvent.oldValue is null" result="PASS" /><testcase id="StorageEvent_oldValue_normal_value" purpose="Check if StorageEvent.oldValue has a normal value" result="PASS" /><testcase id="StorageEvent_oldValue_readonly" purpose="Check if StorageEvent.oldValue is readonly" result="PASS" /><testcase id="StorageEvent_oldValue_type" purpose="Check if the type of StorageEvent.oldValue is string" result="PASS" /><testcase id="StorageEvent_storageArea_clear_base" purpose="Check if StorageEvent.storageArea.clear can clear the key/value pair from the list" result="PASS" /><testcase id="StorageEvent_storageArea_exist" purpose="Check if StorageEvent.storageArea exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4036 XWALK-4036]]</testcase><testcase id="StorageEvent_storageArea_getItem_base" purpose="Check if StorageEvent.storageArea.getItem returns the current value associated with the given key" result="PASS" /><testcase id="StorageEvent_storageArea_initial_value" purpose="Check if the initial value of StorageEvent.storageArea is null" result="PASS" /><testcase id="StorageEvent_storageArea_key_base" purpose="Check if StorageEvent.storageArea.key returns the name of the nth key in the list" result="PASS" /><testcase id="StorageEvent_storageArea_length_normal_value" purpose="Check if StorageEvent.storageArea.length has a normal value" result="PASS" /><testcase id="StorageEvent_storageArea_localStorage" purpose="Check if the value of StorageEvent.storageArea is localStorage object" result="PASS" /><testcase id="StorageEvent_storageArea_readonly" purpose="Check if StorageEvent.storageArea is readonly" result="PASS" /><testcase id="StorageEvent_storageArea_removeItem_base" purpose="Check if StorageEvent.storageArea.removeItem can remove the key/value pair from the list" result="PASS" /><testcase id="StorageEvent_storageArea_sessionStorage" purpose="Check if the value of StorageEvent.storageArea is sessionStorage object" result="PASS" /><testcase id="StorageEvent_storageArea_type" purpose="Check if the type of StorageEvent.storageArea is Storage" result="PASS" /><testcase id="StorageEvent_url_empty_string" purpose="Check if the value of StorageEvent.url is empty string" result="PASS" /><testcase id="StorageEvent_url_exist" purpose="Check if StorageEvent.url exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4036 XWALK-4036]]</testcase><testcase id="StorageEvent_url_initial_value" purpose="Check if the initial value of StorageEvent.url is empty string" result="PASS" /><testcase id="StorageEvent_url_normal_value" purpose="Check if StorageEvent.url has a normal value" result="PASS" /><testcase id="StorageEvent_url_readonly" purpose="Check if StorageEvent.url is readonly" result="PASS" /><testcase id="StorageEvent_url_type" purpose="Check if the type of StorageEvent.url is string" result="PASS" /><testcase id="Storage_clear_empty_storage" purpose="Check if clear empty storage" result="PASS" /><testcase id="Storage_example_insurance_on_trip" purpose="Check if the user had been insurance on this trip" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4397 XWALK-4397]]</testcase><testcase id="Storage_example_load_page_times" purpose="Check if the page can display a count of how many times the user has loaded it" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4397 XWALK-4397]]</testcase><testcase id="Storage_getItem_base" purpose="Check if the current value associated with the given key returned when Storage.getItem has a valid argument" result="PASS" /><testcase id="storage_getItem_exist" purpose="Check if the getItem method exists in storage interface" result="PASS" /><testcase id="Storage_getItem_key_null" purpose="Check if the current value associated with the given key returned when Storage.getItem has null argument" result="PASS" /><testcase id="Storage_getItem_key_undefined" purpose="Check if the current value associated with the given key returned when Storage.getItem has undefined argument" result="PASS" /><testcase id="Storage_getItem_no_argument" purpose="Check if an exception thrown when Storage.getItem has no argument" result="PASS" /><testcase id="storage_getItem_unexisted_key" purpose="Check if can call 'getItem' with unexisted key" result="PASS" /><testcase id="Storage_keys_case_sensitive" purpose="Check if storage key is case sensitive or not" result="PASS" /><testcase id="Storage_keys_numeric" purpose="Check if can use numbers as keys" result="PASS" /><testcase id="Storage_key_empty_string" purpose="Check if can set/get item key as empty string" result="PASS" /><testcase id="Storage_key_exist" purpose="Check if the key attibute exists in storage interface" result="PASS" /><testcase id="Storage_key_index_equals_length" purpose="Check if a null key returned when index is equal to the number of key/value pairs in the object" result="PASS" /><testcase id="Storage_key_index_greater_length" purpose="Check if a null key returned when index is greater than the number of key/value pairs in the object" result="PASS" /><testcase id="Storage_key_index_nonascii" purpose="Check if can use non-ascii character in keys" result="PASS" /><testcase id="Storage_key_index_nonexisted" purpose="Check if Storage.key returns null when the index is non-existed" result="PASS" /><testcase id="Storage_key_index_undefined" purpose="Check if the name of the key returned when Storage.key has a undefined argument" result="PASS" /><testcase id="Storage_key_index_zero" purpose="Check the zero index of Storage.key" result="PASS" /><testcase id="storage_key_invalid_parameter" purpose="Check if can use invalid argument in key()" result="PASS" /><testcase id="Storage_key_no_argument" purpose="Check if an exception thrown when Storage.key has no argument" result="PASS" /><testcase id="Storage_key_override_length" purpose="Check if set key name as 'length', to override storage attribute length" result="PASS" /><testcase id="Storage_key_undefined" purpose="Check if can set key as undefined" result="PASS" /><testcase id="Storage_length_exist" purpose="Check if the length attibute exists in storage interface" result="PASS" /><testcase id="Storage_length_normal_value" purpose="Check if Storage.length has a normal value" result="PASS" /><testcase id="Storage_length_readonly" purpose="Check if Storage.length attribute is readonly" result="PASS" /><testcase id="Storage_length_type" purpose="Check if the type of Storage.length attribute is number" result="PASS" /><testcase id="Storage_length_zero" purpose="Check if the value of Storage.length attribute is zero" result="PASS" /><testcase id="storage_local_builtins" purpose="Check if the builtins of localStorage" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="storage_local_clear" purpose="Check if localStorage.clear removes all the key/value pairs associated with the object" result="PASS" /><testcase id="storage_local_getitem" purpose="Check if localStorage.getItem returns the current value associated with the given key" result="PASS" /><testcase id="storage_local_index_js" purpose="Check if the localStorage key(index) get the value" result="PASS" /><testcase id="storage_local_index_js_1" purpose="Check if enable localStorage interface" result="PASS" /><testcase id="storage_local_index_js_2" purpose="Check if can get localStorage attributes from numeric index" result="PASS" /><testcase id="storage_local_index_js_3" purpose="Check if can get localStorage attributes from index string" result="PASS" /><testcase id="storage_local_index_js_4" purpose="Check if can get localStorage attributes from the key" result="PASS" /><testcase id="storage_local_in_js_1" purpose="Check if a attribute is in localStorage when the attribute added by localStorage index" result="PASS" /><testcase id="storage_local_in_js_2" purpose="Check if a attribute is in localStorage when the attribute added by localStorage.setItem" result="PASS" /><testcase id="storage_local_key" purpose="Check if localStorage.key(n) should return the right thing" result="PASS" /><testcase id="storage_local_length" purpose="Check if localStorage.length attribute can returns the number of key/value pairs associated with the object" result="PASS" /><testcase id="storage_local_removeitem" purpose="Check if localStorage.removeItem can removes the key/value pair associated with the object" result="PASS" /><testcase id="storage_local_setitem" purpose="Check if localStorage.setItem can add a key/value pair" result="PASS" /><testcase id="storage_local_setitem_quotaexceedederr" purpose="Check if localStorage.setItem failed can throw an QuotaExceededError exception" result="PASS" /><testcase id="Storage_removeItem_base" purpose="Check if the current value associated with the given key removed when Storage.removeItem has normal argument" result="PASS" /><testcase id="Storage_removeItem_change_order" purpose="Check if Storage.removeItem can change the order of keys" result="PASS" /><testcase id="Storage_removeItem_key_null" purpose="Check if localStorage.length attribute value equals to 0." result="PASS" /><testcase id="Storage_removeItem_key_undefined" purpose="Check if the current value associated with the given key removed Storage.removeItem has undefined argument" result="PASS" /><testcase id="Storage_removeItem_nonexisted_item" purpose="Check if the function will do nothing when removeItem has a nonexisted key" result="PASS" /><testcase id="Storage_removeItem_no_argument" purpose="Check if an exception thrown when Storage.removeItem has no argument" result="PASS" /><testcase id="storage_session_builtins" purpose="Check if the builtins of sessionStorage" result="FAIL">Test result is the same as Upstream result</testcase><testcase id="storage_session_clear" purpose="Check if sessionStorage.clear can removes all the key/value pairs associated with the object" result="PASS" /><testcase id="storage_session_getitem" purpose="Check if sessionStorage.getItem can returns the current value associated with the given key" result="PASS" /><testcase id="storage_session_index_js" purpose="Check if the sessionStorage key(index) get the value" result="PASS" /><testcase id="storage_session_index_js_1" purpose="Check if enable sessionStorage interface" result="PASS" /><testcase id="storage_session_index_js_2" purpose="Check if can get sessionStorage attributes from numeric index" result="PASS" /><testcase id="storage_session_index_js_3" purpose="Check if can get sessionStorage attributes from index string" result="PASS" /><testcase id="storage_session_index_js_4" purpose="Check if can get sessionStorage attributes from the key" result="PASS" /><testcase id="storage_session_in_js_1" purpose="Check if a attribute is in localStorage when the attribute added by sessionStorage index" result="PASS" /><testcase id="storage_session_in_js_2" purpose="Check if a attribute is in localStorage when the attribute added by sessionStorage.setItem" result="PASS" /><testcase id="storage_session_key" purpose="Check if sessionStorage.key(n) can returns the name of the nth key in the list" result="PASS" /><testcase id="storage_session_length" purpose="Check if sessionStorage.length attribute can returns the number of key/value pairs associated with the object" result="PASS" /><testcase id="storage_session_removeitem" purpose="Check if sessionStorage.removeItem can removes the key/value pair associated with the object" result="PASS" /><testcase id="storage_session_setitem" purpose="Check if the sessionStorage.setItem can add a key/value pair" result="PASS" /><testcase id="storage_session_setitem_quotaexceedederr" purpose="Check if the sessionStorage.setItem failed can throw an QuotaExceededError exception" result="PASS" /><testcase id="Storage_setItem_base" purpose="Check if a key/value pair added to the list when Storage.setItem has two valid arguments" result="PASS" /><testcase id="Storage_setItem_exist" purpose="Check if the setItem method exists in storage interface" result="PASS" /><testcase id="Storage_setItem_key_null" purpose="Check if a new key/value pair is added to the list when the 'key' argument of the Storage.setItem is null" result="PASS" /><testcase id="Storage_setItem_key_null_value_null" purpose="Check if a new key/value pair is added to the list when the arguments of the Storage.setItem are all null" result="PASS" /><testcase id="Storage_setItem_key_undefined" purpose="Check if a key/value pair is added to the list when Storage.setItem has a undefined argument" result="PASS" /><testcase id="Storage_setItem_no_argument" purpose="Check if an exception is thrown when Storage.setItem has no argument" result="PASS" /><testcase id="Storage_setItem_update_value" purpose="Check if the setItem can update value" result="PASS" /><testcase id="Storage_setItem_value_null" purpose="Check if a new key/value pair is added to the list when the 'value' argument of the Storage.setItem is null" result="PASS" /><testcase id="Storage_setItem_value_same" purpose="Check if Storage.setItem can add a new key/value pair with same value to the list" result="PASS" /><testcase id="window_localStorage_enumerate_storage" purpose="Check if that can enumerate a Storage object with the way localStorage.key and get the values" result="PASS" /><testcase id="window_localStorage_exist" purpose="Check if localStorage attribute exists" result="PASS" /><testcase id="window_localStorage_getItem_exist" purpose="Check if the getItem method exists in localStorage interface" result="PASS" /><testcase id="window_localStorage_getItem_key_nonexisted" purpose="Check if localStorage.getItem returns null when the given key nonexisted" result="PASS" /><testcase id="window_localStorage_getItem_key_null" purpose="Check if the current value associated with the given key returned when localStorage.getItem has null argument" result="PASS" /><testcase id="window_localStorage_getItem_key_undefined" purpose="Check if the current value associated with the given key returned when localStorage.getItem has undefined argument" result="PASS" /><testcase id="window_localStorage_getItem_no_argument" purpose="Check if an exception thrown when localStorage.getItem has no argument" result="PASS" /><testcase id="window_localStorage_iframe_item" purpose="Check if localStorage access to the API for pages from other domains running in iframes" result="PASS" /><testcase id="window_localStorage_key_zero" purpose="Check the value of localStorage.key(0)" result="PASS" /><testcase id="window_localStorage_length_exist" purpose="Check if the length attibute exists in localStorage interface" result="PASS" /><testcase id="window_localStorage_length_readonly" purpose="Check if localStorage.length attribute is readonly" result="PASS" /><testcase id="window_localStorage_length_type" purpose="Check if the type of localStorage.length attribute is number" result="PASS" /><testcase id="window_localStorage_readonly" purpose="Check if window.localStorage is readonly" result="PASS" /><testcase id="window_localStorage_setItem_base" purpose="Check if localStorage.setItem add a key/value pair with the given key in the list associated with the object" result="PASS" /><testcase id="window_localStorage_setItem_empty_string" purpose="Check if the value of localStorage.setItem is empty string" result="PASS" /><testcase id="window_localStorage_setItem_exist" purpose="Check if the setItem method exists in localStorage interface" result="PASS" /><testcase id="window_localStorage_setItem_no_argument" purpose="Check if the localStorage.setItem has no argument" result="PASS" /><testcase id="window_localStorage_setItem_no_value" purpose="Check if the localStorage.setItem haven't any value" result="PASS" /><testcase id="window_localStorage_setItem_null" purpose="Check if the value of localStorage.setItem is null" result="PASS" /><testcase id="window_localStorage_setItem_undefined" purpose="Check if the value of localStorage.setItem is undefined" result="PASS" /><testcase id="window_localStorage_setItem_update_value" purpose="Check if the localStorage.setItem updates value" result="PASS" /><testcase id="window_localStorage_set_value_with_enumerate_way" purpose="Check if localStorage can set values with 'localStorage.key = value'" result="PASS" /><testcase id="window_localStorage_store_nonstrings" purpose="Check if localStorage can only stores strings" result="PASS" /><testcase id="window_localStorage_type" purpose="Check if the type of window.localStorage is Storage" result="PASS" /><testcase id="window_sessionStorage_enumerate_storage" purpose="Check if that can enumerate a Storage object with the way sessionStorage.key and get the values" result="PASS" /><testcase id="window_sessionStorage_exist" purpose="Check if sessionStorage attribute exists" result="PASS" /><testcase id="window_sessionStorage_getItem_exist" purpose="Check if the getItem method exists in sessionStorage interface" result="PASS" /><testcase id="window_sessionStorage_getItem_key_nonexisted" purpose="Check if sessionStorage.getItem returns null when the given key nonexisted" result="PASS" /><testcase id="window_sessionStorage_getItem_key_null" purpose="Check if the current value associated with the given key returned when sessionStorage.getItem has null argument" result="PASS" /><testcase id="window_sessionStorage_getItem_key_undefined" purpose="Check if the current value associated with the given key returned when sessionStorage.getItem has undefined argument" result="PASS" /><testcase id="window_sessionStorage_getItem_no_argument" purpose="Check if an exception thrown when sessionStorage.getItem has no argument" result="PASS" /><testcase id="window_sessionStorage_iframe_item" purpose="Check if sessionStorage access to the API for pages from other domains running in iframes" result="PASS" /><testcase id="window_sessionStorage_key_zero" purpose="Check the value of sessionStorage.key(0)" result="PASS" /><testcase id="window_sessionStorage_length_exist" purpose="Check if length attibute exists in sessionStorage interface" result="PASS" /><testcase id="window_sessionStorage_length_readonly" purpose="Check if sessionStorage.length attribute is readonly" result="PASS" /><testcase id="window_sessionStorage_length_type" purpose="Check if the type of sessionStorage.length attribute is number" result="PASS" /><testcase id="window_sessionStorage_readonly" purpose="Check if window.sessionStorage is readonly" result="PASS" /><testcase id="window_sessionStorage_setItem_base" purpose="Check if the sessionStorage.setItem add a key/value pair with the given key in the list associated with the object" result="PASS" /><testcase id="window_sessionStorage_setItem_empty_string" purpose="Check if the value of sessionStorage.setItem is empty string" result="PASS" /><testcase id="window_sessionStorage_setItem_exist" purpose="Check if the setItem method exists in sessionStorage interface" result="PASS" /><testcase id="window_sessionStorage_setItem_no_argument" purpose="Check if the sessionStorage.setItem has no argument" result="PASS" /><testcase id="window_sessionStorage_setItem_no_value" purpose="Check if the sessionStorage.setItem haven't any value" result="PASS" /><testcase id="window_sessionStorage_setItem_null" purpose="Check if the value of sessionStorage.setItem is null" result="PASS" /><testcase id="window_sessionStorage_setItem_undefined" purpose="Check if the value of sessionStorage.setItem is undefined" result="PASS" /><testcase id="window_sessionStorage_setItem_update_value" purpose="Check if the sessionStorage.setItem updates value" result="PASS" /><testcase id="window_sessionStorage_set_value_with_enumerate_way" purpose="Check if sessionStorage can set values with 'sessionStorage.key = value'" result="PASS" /><testcase id="window_sessionStorage_store_nonstrings" purpose="Check if sessionStorage can only stores strings" result="PASS" /><testcase id="window_sessionStorage_type" purpose="Check if the type of window.sessionStorage is Storage" result="PASS" /></category><category name="W3C_HTML5 APIs/System Apps/Contacts Manager"><testcase id="ContactAddress_countryName" purpose="Check if the implementation of ContactAddress countryName attribute is valid" result="PASS" /><testcase id="ContactAddress_countryName_attribute" purpose="Check if the attribute ContactAddress.countryName exists and typeof string" result="PASS" /><testcase id="ContactAddress_countryName_only" purpose="Check if the ContactAddress can be initialized with one attribute" result="PASS" /><testcase id="ContactAddress_locality" purpose="Check if the implementation of ContactAddress locality attribute is valid" result="PASS" /><testcase id="ContactAddress_locality_attribute" purpose="Check if the attribute ContactAddress.locality exists and typeof string" result="PASS" /><testcase id="ContactAddress_partset" purpose="Check if the ContactAddress can be initialized with part set" result="PASS" /><testcase id="ContactAddress_postalCode" purpose="Check if the implementation of ContactAddress postalCode attribute is valid" result="PASS" /><testcase id="ContactAddress_postalCode_attribute" purpose="Check if the attribute ContactAddress.postalCode exists and typeof string" result="PASS" /><testcase id="ContactAddress_preferred" purpose="Check if the implementation of ContactAddress preferred attribute is valid" result="PASS" /><testcase id="ContactAddress_preferred_attribute" purpose="Check if the attribute ContactAddress.preferred exists and typeof boolean" result="PASS" /><testcase id="ContactAddress_region" purpose="Check if the implementation of ContactAddress region attribute is valid" result="PASS" /><testcase id="ContactAddress_region_attribute" purpose="Check if the attribute ContactAddress.region exists and typeof strin" result="PASS" /><testcase id="ContactAddress_streetAddress" purpose="Check if the implementation of ContactAddress streetAddress attribute is valid" result="PASS" /><testcase id="ContactAddress_streetAddress_attribute" purpose="Check if the attribute ContactAddress.streetAddress exists and typeof string" result="PASS" /><testcase id="ContactAddress_types" purpose="Check if the implementation of ContactAddress types attribute is valid" result="PASS" /><testcase id="ContactAddress_types_attribute" purpose="Check if the attribute ContactAddress.types exists and typeof object" result="PASS" /><testcase id="ContactAddress_types_multiple" purpose="Check if the ContactAddress can be initialized with two types" result="PASS" /><testcase id="ContactField_partset" purpose="Check if the ContactField can be initialized with part set" result="PASS" /><testcase id="ContactField_preferred" purpose="Check if the implementation of ContactField preferred attribute is valid" result="PASS" /><testcase id="ContactField_preferred_attribute" purpose="Check if the attribute ContactField.preferred exists and typeof boolean" result="PASS" /><testcase id="ContactField_types" purpose="Check if the implementation of ContactField types attribute is valid" result="PASS" /><testcase id="ContactField_types_attribute" purpose="Check if the attribute ContactField.types exists and typeof object" result="PASS" /><testcase id="ContactField_types_multiple" purpose="Check if the ContactField can be initialized with two types" result="PASS" /><testcase id="ContactField_value" purpose="Check if the implementation of ContactField value attribute is valid" result="PASS" /><testcase id="ContactField_value_attribute" purpose="Check if the attribute ContactField.value exists and typeof string" result="PASS" /><testcase id="ContactField_value_only" purpose="Check if the ContactField can be initialized with one attribute" result="PASS" /><testcase id="ContactName_additionalNames" purpose="Check if the implementation of ContactName additionalNames attribute is valid" result="PASS" /><testcase id="ContactName_additionalNames_attribute" purpose="Check if the attribute ContactName.additionalNames exists and typeof object" result="PASS" /><testcase id="ContactName_additionalNames_multiple" purpose="Check if the ContactName can be initialized with two additionalNames" result="PASS" /><testcase id="ContactName_attribute_fullmultiple" purpose="Check if the ContactName can be initialized with all attributes full multiple" result="PASS" /><testcase id="ContactName_displayName" purpose="Check if the implementation of ContactName displayName attribute is valid" result="PASS" /><testcase id="ContactName_displayName_attribute" purpose="Check if the attribute ContactName.displayName exists and typeof string" result="PASS" /><testcase id="ContactName_displayName_only" purpose="Check if the ContactName can be initialized with one attribute" result="PASS" /><testcase id="ContactName_familyNames" purpose="Check if the implementation of ContactName familyNames attribute is valid" result="PASS" /><testcase id="ContactName_familyNames_attribute" purpose="Check if the attribute ContactName.familyNames exists and typeof object" result="PASS" /><testcase id="ContactName_familyNames_multiple" purpose="Check if the ContactName can be initialized with two familyNames" result="PASS" /><testcase id="ContactName_givenNames" purpose="Check if the implementation of ContactName givenNames attribute is valid" result="PASS" /><testcase id="ContactName_givenNames_attribute" purpose="Check if the attribute ContactName.givenNames exists and typeof object" result="PASS" /><testcase id="ContactName_givenNames_multiple" purpose="Check if the ContactName can be initialized with two givenNames" result="PASS" /><testcase id="ContactName_honorificPrefixes" purpose="Check if the implementation of ContactName honorificPrefixes attribute is valid" result="PASS" /><testcase id="ContactName_honorificPrefixes_attribute" purpose="Check if the attribute ContactName.honorificPrefixes exists and typeof object" result="PASS" /><testcase id="ContactName_honorificPrefixes_multiple" purpose="Check if the ContactName can be initialized with two honorificPrefixes" result="PASS" /><testcase id="ContactName_honorificSuffixes" purpose="Check if the implementation of ContactName honorificSuffixes attribute is valid" result="PASS" /><testcase id="ContactName_honorificSuffixes_attribute" purpose="Check if the attribute ContactName.honorificSuffixes exists and typeof object" result="PASS" /><testcase id="ContactName_honorificSuffixes_multiple" purpose="Check if the ContactName can be initialized with two honorificSuffixes" result="PASS" /><testcase id="ContactName_nicknames" purpose="Check if the implementation of ContactName nicknames attribute is valid" result="PASS" /><testcase id="ContactName_nicknames_attribute" purpose="Check if the attribute ContactName.nicknames exists and typeof object" result="PASS" /><testcase id="ContactName_nicknames_multiple" purpose="Check if the ContactName can be initialized with two nicknames" result="PASS" /><testcase id="ContactName_partset" purpose="Check if the ContactName can be initialized with part set" result="PASS" /><testcase id="ContactsChangeEvent_added" purpose="Check if the implementation of ContactsChangeEvent added attribute is valid" result="PASS" /><testcase id="ContactsChangeEvent_added_attribute" purpose="Check if the readonly attribute ContactsChangeEvent.added exists and typeof object" result="PASS" /><testcase id="ContactsChangeEvent_modified" purpose="Check if the implementation of ContactsChangeEvent modified attribute is valid" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2947 XWALK-2947]]</testcase><testcase id="ContactsChangeEvent_modified_attribute" purpose="Check if the readonly attribute ContactsChangeEvent.modified exists and typeof object" result="PASS" /><testcase id="ContactsChangeEvent_removed" purpose="Check if the implementation of ContactsChangeEvent removed attribute is valid" result="PASS" /><testcase id="ContactsChangeEvent_removed_attribute" purpose="Check if the readonly attribute ContactsChangeEvent.removed exists and typeof object" result="PASS" /><testcase id="ContactsManager_clear" purpose="Check if clear method of ContactsManager can work properly" result="PASS" /><testcase id="ContactsManager_clear_empty" purpose="Check if clear method of ContactsManager can work properly with no contact" result="PASS" /><testcase id="ContactsManager_clear_method" purpose="Check if the ContactsManager.clear exists and typeof function" result="PASS" /><testcase id="ContactsManager_clear_multiple" purpose="Check if clear method of ContactsManager can work properly with multiple contacts" result="PASS" /><testcase id="ContactsManager_find" purpose="Check if find method of ContactsManager can work properly" result="PASS" /><testcase id="ContactsManager_find_all_multiple" purpose="Check if find method of ContactsManager can work properly with all attributes multiple" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1716 XWALK-1716]]</testcase><testcase id="ContactsManager_find_fields_multiple" purpose="Check if find method of ContactsManager can work properly with two fields" result="PASS" /><testcase id="ContactsManager_find_method" purpose="Check if the ContactsManager.find exists and typeof function" result="PASS" /><testcase id="ContactsManager_find_operator_contains" purpose="Check if find method of ContactsManager can work properly with contains operator" result="PASS" /><testcase id="ContactsManager_find_operator_is" purpose="Check if find method of ContactsManager can work properly with is operator" result="PASS" /><testcase id="ContactsManager_find_optional_full" purpose="Check if find method of ContactsManager can work properly with full optional parameters" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1716 XWALK-1716]]</testcase><testcase id="ContactsManager_find_resultsLimit" purpose="Check if find method of ContactsManager can work properly with resultsLimit" result="PASS" /><testcase id="ContactsManager_find_sortBy_multiple" purpose="Check if find method of ContactsManager can work properly with two sortBy" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1716 XWALK-1716]]</testcase><testcase id="ContactsManager_find_sortOrder_ascending" purpose="Check if find method of ContactsManager can work properly with sortOrder ascending" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1716 XWALK-1716]]</testcase><testcase id="ContactsManager_find_sortOrder_descending" purpose="Check if find method of ContactsManager can work properly with sortOrder descending" result="PASS" /><testcase id="ContactsManager_oncontactschange" purpose="Check if the implementation of ContactsManager oncontactschange event is valid" result="PASS" /><testcase id="ContactsManager_oncontactschange_clear" purpose="Check if ContactsManager oncontactschange event is fired when clear contact" result="PASS" /><testcase id="ContactsManager_oncontactschange_remove" purpose="Check if ContactsManager oncontactschange event is fired when remove contact" result="PASS" /><testcase id="ContactsManager_oncontactschange_update" purpose="Check if ContactsManager oncontactschange event is fired when update contact" result="PASS" /><testcase id="ContactsManager_remove" purpose="Check if remove method of ContactsManager can work properly" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2946 XWALK-2946]]</testcase><testcase id="ContactsManager_remove_method" purpose="Check if the ContactsManager.remove exists and typeof function" result="PASS" /><testcase id="ContactsManager_remove_no_found" purpose="Check if remove method of ContactsManager can work properly with no contact found" result="PASS" /><testcase id="ContactsManager_save" purpose="Check if save method of ContactsManager can work properly" result="PASS" /><testcase id="ContactsManager_save_addresses_fullset" purpose="Check if save method of ContactsManager can work properly with addresses full set" result="PASS" /><testcase id="ContactsManager_save_addresses_multiple" purpose="Check if save method of ContactsManager can work properly with two addresses" result="PASS" /><testcase id="ContactsManager_save_addresses_partset" purpose="Check if save method of ContactsManager can work properly with addresses part set" result="PASS" /><testcase id="ContactsManager_save_categories_multiple" purpose="Check if save method of ContactsManager can work properly with multiple categories" result="PASS" /><testcase id="ContactsManager_save_Contact_fullset" purpose="Check if save method of ContactsManager can work properly with contact full set" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4108 XWALK-4108]]</testcase><testcase id="ContactsManager_save_emails_fullset" purpose="Check if save method of ContactsManager can work properly with emails full set" result="PASS" /><testcase id="ContactsManager_save_emails_multiple" purpose="Check if save method of ContactsManager can work properly with two emails" result="PASS" /><testcase id="ContactsManager_save_emails_partset" purpose="Check if save method of ContactsManager can work properly with emails part set" result="PASS" /><testcase id="ContactsManager_save_get_remove" purpose="Check if remove method of ContactsManager can work properly after save and get" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-2946 XWALK-2946]]</testcase><testcase id="ContactsManager_save_impp_fullset" purpose="Check if save method of ContactsManager can work properly with impp full set" result="PASS" /><testcase id="ContactsManager_save_impp_multiple" purpose="Check if save method of ContactsManager can work properly with two impp" result="PASS" /><testcase id="ContactsManager_save_impp_partset" purpose="Check if save method of ContactsManager can work properly with impp part set" result="PASS" /><testcase id="ContactsManager_save_jobTitles_multiple" purpose="Check if save method of ContactsManager can work properly with multiple jobTitles" result="PASS" /><testcase id="ContactsManager_save_method" purpose="Check if the ContactsManager.save exists and typeof function" result="PASS" /><testcase id="ContactsManager_save_name_fullset" purpose="Check if save method of ContactsManager can work properly with name full set" result="PASS" /><testcase id="ContactsManager_save_name_partset" purpose="Check if save method of ContactsManager can work properly with name part set" result="PASS" /><testcase id="ContactsManager_save_notes_multiple" purpose="Check if save method of ContactsManager can work properly with multiple notes" result="PASS" /><testcase id="ContactsManager_save_organizations_multiple" purpose="Check if save method of ContactsManager can work properly with multiple organizations" result="PASS" /><testcase id="ContactsManager_save_phoneNumbers_fullset" purpose="Check if save method of ContactsManager can work properly with phoneNumbers full set" result="PASS" /><testcase id="ContactsManager_save_phoneNumbers_multiple" purpose="Check if save method of ContactsManager can work properly with two phoneNumbers" result="PASS" /><testcase id="ContactsManager_save_phoneNumbers_partset" purpose="Check if save method of ContactsManager can work properly with phoneNumbers part set" result="PASS" /><testcase id="ContactsManager_save_photos_multiple" purpose="Check if save method of ContactsManager can work properly with multiple photos" result="PASS" /><testcase id="ContactsManager_save_update" purpose="Check if save method of ContactsManager can work properly with update operation" result="PASS" /><testcase id="ContactsManager_save_urls_fullset" purpose="Check if save method of ContactsManager can work properly with urls full set" result="PASS" /><testcase id="ContactsManager_save_urls_multiple" purpose="Check if save method of ContactsManager can work properly with two urls" result="PASS" /><testcase id="ContactsManager_save_urls_partset" purpose="Check if save method of ContactsManager can work properly with urls part set" result="PASS" /><testcase id="ContactTelField_attributes" purpose="Check if the attribute ContactTelField.carrier exists and typeof string" result="PASS" /><testcase id="ContactTelField_carrier" purpose="Check if the implementation of ContactTelField carrier attribute is valid" result="PASS" /><testcase id="ContactTelField_partset" purpose="Check if the ContactTelField can be initialized with part set" result="PASS" /><testcase id="ContactTelField_preferred" purpose="Check if the implementation of ContactTelField preferred attribute is valid" result="PASS" /><testcase id="ContactTelField_types" purpose="Check if the implementation of ContactTelField types attribute is valid" result="PASS" /><testcase id="ContactTelField_types_multiple" purpose="Check if the ContactTelField can be initialized with two types" result="PASS" /><testcase id="ContactTelField_value" purpose="Check if the implementation of ContactTelField value attribute is valid" result="PASS" /><testcase id="ContactTelField_value_only" purpose="Check if the ContactTelField can be initialized with one attribute" result="PASS" /><testcase id="Contact_addresses" purpose="Check if the implementation of Contact addresses attribute is valid" result="PASS" /><testcase id="Contact_addresses_attribute" purpose="Check if the attribute Contact.addresses exists and typeof object" result="PASS" /><testcase id="Contact_anniversary" purpose="Check if the implementation of Contact anniversary attribute is valid" result="PASS" /><testcase id="Contact_anniversary_attribute" purpose="Check if the attribute Contact.anniversary exists and typeof object" result="PASS" /><testcase id="Contact_birthday" purpose="Check if the implementation of Contact birthday attribute is valid" result="PASS" /><testcase id="Contact_birthday_attribute" purpose="Check if the attribute Contact.birthday exists and typeof object" result="PASS" /><testcase id="Contact_categories" purpose="Check if the implementation of Contact categories attribute is valid" result="PASS" /><testcase id="Contact_categories_attribute" purpose="Check if the attribute Contact.categories exists and typeof object" result="PASS" /><testcase id="Contact_emails" purpose="Check if the implementation of Contact emails attribute is valid" result="PASS" /><testcase id="Contact_emails_attribute" purpose="Check if the attribute Contact.emails exists and typeof object" result="PASS" /><testcase id="Contact_gender" purpose="Check if the implementation of Contact gender attribute is valid" result="PASS" /><testcase id="Contact_gender_attribute" purpose="Check if the attribute Contact.gender exists and typeof object" result="PASS" /><testcase id="Contact_id" purpose="Check if the Contact id attribute is null before save" result="PASS" /><testcase id="Contact_impp" purpose="Check if the implementation of Contact impp attribute is valid" result="PASS" /><testcase id="Contact_impp_attribute" purpose="Check if the attribute Contact.impp exists and typeof object" result="PASS" /><testcase id="Contact_jobTitles" purpose="Check if the implementation of Contact jobTitles attribute is valid" result="PASS" /><testcase id="Contact_jobTitles_attribute" purpose="Check if the attribute Contact.jobTitles exists and typeof object" result="PASS" /><testcase id="Contact_lastUpdated" purpose="Check if the Contact lastUpdated is null before save" result="PASS" /><testcase id="Contact_name" purpose="Check if the implementation of Contact name attribute is valid" result="PASS" /><testcase id="Contact_name_attribute" purpose="Check if the attribute Contact.name exists and typeof object" result="PASS" /><testcase id="Contact_notes" purpose="Check if the implementation of Contact notes attribute is valid" result="PASS" /><testcase id="Contact_notes_attribute" purpose="Check if the attribute Contact.notes exists and typeof object" result="PASS" /><testcase id="Contact_organizations" purpose="Check if the implementation of Contact organizations attribute is valid" result="PASS" /><testcase id="Contact_organizations_attribute" purpose="Check if the attribute Contact.organizations exists and typeof object" result="PASS" /><testcase id="Contact_phoneNumbers" purpose="Check if the implementation of Contact phoneNumbers attribute is valid" result="PASS" /><testcase id="Contact_phoneNumbers_attribute" purpose="Check if the attribute Contact.phoneNumbers exists and typeof object" result="PASS" /><testcase id="Contact_photos" purpose="Check if the implementation of Contact photos attribute is valid" result="PASS" /><testcase id="Contact_photos_attribute" purpose="Check if the attribute Contact.photos exists and typeof object" result="PASS" /><testcase id="Contact_urls" purpose="Check if the implementation of Contact urls attribute is valid" result="PASS" /><testcase id="Contact_urls_attribute" purpose="Check if the attribute Contact.urls exists and typeof object" result="PASS" /><testcase id="Navigator_contacts" purpose="Check if the Navigator contacts attribute must not be null" result="PASS" /><testcase id="Navigator_contacts_attribute" purpose="Check if the readonly attribute Navigator.contacts exists and typeof object" result="PASS" /></category><category name="W3C_HTML5 APIs/System Apps/Raw Sockets"><testcase id="RawSockets_interface_basic_TCPServerSocket" purpose="This test validates the TCPServerSocket exists" result="PASS" /><testcase id="RawSockets_interface_basic_TCPSocket" purpose="This test validates the TCPSocket exists" result="PASS" /><testcase id="RawSockets_interface_basic_UDPSocket" purpose="This test validates the UDPSocket exists" result="PASS" /><testcase id="TCPServerSocket_addressReuse_default" purpose="Check if the default value of TCPServerSocket.addressReuse is true" result="PASS" /><testcase id="TCPServerSocket_addressReuse_false" purpose="Check if the value of TCPServerSocket.addressReuse can be set by the options argument in the constructor" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2414 XWALK-2414]]</testcase><testcase id="TCPServerSocket_close_basic" purpose="Check if TCPServerSocket.close exists and type of function" result="PASS" /><testcase id="TCPServerSocket_close_method" purpose="Check if close the TCP server socket after calling close method" result="PASS" /><testcase id="TCPServerSocket_localAddress_basic" purpose="Check if readonly TCPServerSocket.localAddress exists and type of DOMString" result="PASS" /><testcase id="TCPServerSocket_localPort_basic" purpose="Check if readonly TCPServerSocket.localPort exists and type of unsigned short" result="PASS" /><testcase id="TCPServerSocket_onconnect_basic" purpose="Check if TCPServerSocket.onconnect exists and type of event" result="PASS" /><testcase id="TCPServerSocket_onconnect_event" purpose="Check if onconnect event can be fired when an incoming connection attempt on the specified port and address has been accepted" result="PASS" /><testcase id="TCPServerSocket_onconnect_with_connect" purpose="Check if set up the onconnect event successful for TCPServerSocket using the type connect" result="PASS" /><testcase id="TCPServerSocket_onerror_basic" purpose="Check if TCPServerSocket.onerror exists and type of event" result="PASS" /><testcase id="TCPServerSocket_onopen_event" purpose="Check if onopen event can be fired when the socket is open and ready to receive connection attempts from clients" result="PASS" /><testcase id="TCPServerSocket_onopen_with_open" purpose="Check if set up the onopen event successful for TCPServerSocket using the type open" result="PASS" /><testcase id="TCPServerSocket_readyState_basic" purpose="Check if readonly TCPServerSocket.readyState exists and type of enum" result="PASS" /><testcase id="TCPServerSocket_readyState_closed" purpose="Check if the value of readyState is closed when the socket is in closed state" result="PASS" /><testcase id="TCPServerSocket_readyState_open" purpose="Check if the value of readyState is open when the socket is in open state" result="PASS" /><testcase id="TCPServerSocket_readyState_opening" purpose="Check if the value of readyState is opening when the socket is in opening state" result="PASS" /><testcase id="TCPServerSocket_resume_basic" purpose="Check if TCPServerSocket.resume exists and type of function" result="PASS" /><testcase id="TCPServerSocket_resume_method" purpose="Check if resume listening for incoming connections and invocations after calling resume method" result="PASS" /><testcase id="TCPServerSocket_set_valid_localAddress" purpose="Check if TCPServerSocket.localAddress can be set by the constructors options arguments valid localAddress member" result="PASS" /><testcase id="TCPServerSocket_set_valid_localPort" purpose="Check if TCPServerSocket.localPort can be set by the constructors options arguments valid localPort member" result="PASS" /><testcase id="TCPServerSocket_suspend_basic" purpose="Check if TCPServerSocket.suspend exists and type of function" result="PASS" /><testcase id="TCPServerSocket_suspend_method" purpose="Check if pause listening for incoming connections and invocations after calling suspend method" result="PASS" /><testcase id="TCPSocket_addressReuse_default" purpose="Check if the default value of TCPSocket.addressReuse is true" result="PASS" /><testcase id="TCPSocket_addressReuse_false" purpose="Check if the value of TCPSocket.addressReuse can be set by the options argument in the constructor" result="PASS" /><testcase id="TCPSocket_bufferedAmount_ArrayBuffer" purpose="Check if the value of TCPSocket.bufferedAmount is the number of bytes which have previously been buffered by calls to the send methods of this socket with ArrayBuffer" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3484 XWALK-3484]]</testcase><testcase id="TCPSocket_bufferedAmount_ArrayBufferView" purpose="Check if the value of TCPSocket.bufferedAmount is the number of bytes which have previously been buffered by calls to the send methods of this socket with ArrayBufferView" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3484 XWALK-3484]]</testcase><testcase id="TCPSocket_bufferedAmount_basic" purpose="Check if readonly TCPSocket.bufferedAmount exists and type of unsigned long" result="PASS" /><testcase id="TCPSocket_bufferedAmount_Blob" purpose="Check if the value of TCPSocket.bufferedAmount is the number of bytes which have previously been buffered by calls to the send methods of this socket with Blob" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3484 XWALK-3484]]</testcase><testcase id="TCPSocket_bufferedAmount_zero" purpose="Check if the value of TCPSocket.bufferedAmount is zero without sending anything when connectted" result="PASS" /><testcase id="TCPSocket_close_basic" purpose="Check if TCPSocket.close exists and type of function" result="PASS" /><testcase id="TCPSocket_close_method" purpose="Check if the value of readyState is closed after calling close method" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2420 XWALK-2420]]</testcase><testcase id="TCPSocket_halfclose_basic" purpose="Check if TCPSocket.halfclose exists and type of function" result="PASS" /><testcase id="TCPSocket_halfclose_method" purpose="Check if can not send data but can receive data after calling halfclose method" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2420 XWALK-2420]]</testcase><testcase id="TCPSocket_localAddress_absent" purpose="Check if use the routing table to determine the local interface(s) that can be used to connect to the selected remoteAddress when localAddress is absent" result="PASS" /><testcase id="TCPSocket_localAddress_basic" purpose="Check if readonly TCPSocket.localAddress exists and type of DOMString" result="PASS" /><testcase id="TCPSocket_localAddress_exception" purpose="Check if TCPSocket throw a DOM exception invoked with the constructors options arguments invalid localAddress member" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2408 XWALK-2408]]</testcase><testcase id="TCPSocket_localPort_absent" purpose="Check if bind the socket to an ephemeral local port decided by the system and set the localPort attribute to this port when localPort is absent" result="PASS" /><testcase id="TCPSocket_localPort_basic" purpose="Check if readonly TCPSocket.localPort exists and type of unsigned short" result="PASS" /><testcase id="TCPSocket_noDelay_default" purpose="Check if the default value of TCPSocket.noDelay is true" result="PASS" /><testcase id="TCPSocket_onclose_basic" purpose="Check if TCPSocket.onclose exists and type of event" result="PASS" /><testcase id="TCPSocket_onclose_event" purpose="Check if onclose event can be fired when the connection to the server has been closed" result="PASS" /><testcase id="TCPSocket_onclose_with_close" purpose="Check if set up the onclose event successful for TCPSocket using the type close" result="PASS" /><testcase id="TCPSocket_ondrain_basic" purpose="Check if TCPSocket.ondrain exists and type of event" result="PASS" /><testcase id="TCPSocket_onerror_basic" purpose="Check if TCPSocket.onerror exists and type of event" result="PASS" /><testcase id="TCPSocket_onerror_event" purpose="Check if onerror event can be fired when there is an error" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3485 XWALK-3485]]</testcase><testcase id="TCPSocket_onerror_with_error" purpose="Check if set up the onerror event successful for TCPSocket using the type error" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3485 XWALK-3485]]</testcase><testcase id="TCPSocket_onopen_basic" purpose="Check if TCPSocket.onopen exists and type of event" result="PASS" /><testcase id="TCPSocket_onopen_event" purpose="Check if onopen event when the socket is open and the connection to the server has been established" result="PASS" /><testcase id="TCPSocket_onopen_with_open" purpose="Check if set up the onopen event successful for TCPSocket using the type open" result="PASS" /><testcase id="TCPSocket_readyState_basic" purpose="Check if readonly TCPSocket.readyState exists and type of enum" result="PASS" /><testcase id="TCPSocket_readyState_closed" purpose="Check if the value of readyState is closed when the socket is in closed state" result="PASS" /><testcase id="TCPSocket_readyState_closing" purpose="Check if the value of readyState is closing when the socket is in closing state" result="PASS" /><testcase id="TCPSocket_readyState_halfclosed" purpose="Check if the value of readyState is halfclosed when the socket is in halfclosed state" result="PASS" /><testcase id="TCPSocket_readyState_open" purpose="Check if the value of readyState is open when the socket is in open state" result="PASS" /><testcase id="TCPSocket_readyState_opening" purpose="Check if the value of readyState is opening when the socket is in opening state" result="PASS" /><testcase id="TCPSocket_remoteAddress_basic" purpose="Check if readonly TCPSocket.remoteAddress exists and type of DOMString" result="PASS" /><testcase id="TCPSocket_remoteAddress_exception" purpose="Check if TCPSocket throw a DOM exception invoked with the constructors options arguments invalid remoteAddress member" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2408 XWALK-2408]]</testcase><testcase id="TCPSocket_remotePort_basic" purpose="Check if readonly TCPSocket.remotePort exists and type of DOMString" result="PASS" /><testcase id="TCPSocket_resume_basic" purpose="Check if TCPSocket.resume exists and type of function" result="PASS" /><testcase id="TCPSocket_resume_method" purpose="Check if resume reading incoming TCP data and invoking ondata as usual after calling resume method" result="PASS" /><testcase id="TCPSocket_send_ArrayBuffer" purpose="Check if can send ArrayBuffer using send method" result="PASS" /><testcase id="TCPSocket_send_ArrayBufferView" purpose="Check if can send ArrayBufferView using send method" result="PASS" /><testcase id="TCPSocket_send_basic" purpose="Check if TCPSocket.send exists and type of function" result="PASS" /><testcase id="TCPSocket_send_Blob" purpose="Check if can send Blob object using send method" result="PASS" /><testcase id="TCPSocket_send_DOMString" purpose="Check if can send DOMString using send method" result="PASS" /><testcase id="TCPSocket_set_noDelay" purpose="Check if TCPSocket.noDelay can be set to false" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1728 XWALK-1728]]</testcase><testcase id="TCPSocket_set_valid_localAddress" purpose="Check if TCPSocket.localAddress can be set by the constructors options argument s valid localAddress member" result="PASS" /><testcase id="TCPSocket_set_valid_localPort" purpose="Check if TCPSocket.localPort can be set by the constructors options arguments valid localPort member" result="PASS" /><testcase id="TCPSocket_suspend_basic" purpose="Check if TCPSocket.suspend exists and type of function" result="PASS" /><testcase id="TCPSocket_suspend_method" purpose="Check if pause reading incoming TCP data and invocations of the ondata handler until resume is called." result="PASS" /><testcase id="UDPSocket_addressReuse_basic" purpose="Check if readonly UDPSocket.addressReuse exists and type of boolean" result="PASS" /><testcase id="UDPSocket_bufferedAmount_basic" purpose="Check if readonly UDPSocket.bufferedAmount exists and type of unsigned long" result="PASS" /><testcase id="UDPSocket_close_basic" purpose="Check if UDPSocket.close exists and type of function" result="PASS" /><testcase id="UDPSocket_joinMulticastGroup_basic" purpose="Check if UDPSocket.joinMulticastGroup exists and type of function" result="PASS" /><testcase id="UDPSocket_leaveMulticastGroup_basic" purpose="Check if UDPSocket.leaveMulticastGroup exists and type of function" result="PASS" /><testcase id="UDPSocket_localAddress_basic" purpose="Check if readonly UDPSocket.localAddress exists and type of DOMString" result="PASS" /><testcase id="UDPSocket_localPort_basic" purpose="Check if readonly UDPSocket.localPort exists and type of unsigned short" result="PASS" /><testcase id="UDPSocket_loopback_basic" purpose="Check if readonly UDPSocket.loopback exists and type of boolean" result="PASS" /><testcase id="UDPSocket_ondrain_basic" purpose="Check if UDPSocket.ondrain exists and type of event" result="PASS" /><testcase id="UDPSocket_onerror_basic" purpose="Check if UDPSocket.onerror exists and type of event" result="PASS" /><testcase id="UDPSocket_onmessage_basic" purpose="Check if UDPSocket.onmessage exists and type of event" result="PASS" /><testcase id="UDPSocket_readyState_basic" purpose="Check if readonly UDPSocket.readyState exists and type of enum" result="PASS" /><testcase id="UDPSocket_remoteAddress_basic" purpose="Check if readonly UDPSocket.remoteAddress exists and type of DOMString" result="PASS" /><testcase id="UDPSocket_remotePort_basic" purpose="Check if readonly UDPSocket.remotePort exists and type of unsigned short" result="PASS" /><testcase id="UDPSocket_resume_basic" purpose="Check if UDPSocket.resume exists and type of function" result="PASS" /><testcase id="UDPSocket_send_basic" purpose="Check if UDPSocket.send exists and type of function" result="PASS" /><testcase id="UDPSocket_suspend_basic" purpose="Check if UDPSocket.suspend exists and type of function" result="PASS" /></category><category name="W3C_HTML5 APIs/TBD/Gamepad"><testcase id="GamepadEvent_basic" purpose="Check if GamepadEvent exist" result="PASS" /><testcase id="Navigator_getGamepads_basic" purpose="Check if getGamepads attribute of navigator exist and type of function" result="PASS" /><testcase id="Navigator_getGamepads_value" purpose="Check if the value of navigator.getGamepads() type of object" result="PASS" /></category><category name="W3C_HTML5 APIs/UI/HTML5 Drag and drop"><testcase id="dragdrop_004" purpose="Check auto state of draggable attribute for 'a' element" result="PASS" /><testcase id="dragdrop_005" purpose="Check auto state of draggable attribute for div element" result="PASS" /><testcase id="dragdrop_006" purpose="Check auto state of draggable attribute for img element" result="PASS" /><testcase id="dragdrop_007" purpose="Check false state of draggable attribute" result="PASS" /><testcase id="dragdrop_008" purpose="Check true state of draggable attribute" result="PASS" /><testcase id="dragdrop_dropzone" purpose="Check if the dropzone attribute exists" result="PASS" /></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/Attributes"><testcase id="output_node_created" purpose="Check if output node created" result="PASS" /></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/Base64"><testcase id="base64_atob_ tnfr abtnfr cdtnfr" purpose="Check if atob(&quot; tnfr abtnfr cdtnfr &quot;) returns 'i鐓¥召x1d'" result="PASS" /><testcase id="base64_atob_-0" purpose="Check if atob(-0) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_-Infinity" purpose="Check if atob(-Infinity) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_/" purpose="Check if atob('/') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_////A" purpose="Check if atob('////A') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_///A" purpose="Check if atob('///A') returns non-ASCII string" result="PASS" /><testcase id="base64_atob_//A" purpose="Check if atob('//A') returns non-ASCII string" result="PASS" /><testcase id="base64_atob_/A" purpose="Check if atob('/A') returns non-ASCII character" result="PASS" /><testcase id="base64_atob_0" purpose="Check if atob(0) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_0nonsense" purpose="Check if atob('0nonsense') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_1.5" purpose="Check if atob(1.5) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_12" purpose="Check if atob(12) returns non-ASCII character" result="PASS" /><testcase id="base64_atob_7" purpose="Check if atob(7) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_=" purpose="Check if atob('=') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_==" purpose="Check if atob('==') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_===" purpose="Check if atob('===') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_====" purpose="Check if atob('====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_=====" purpose="Check if atob('=====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_=a" purpose="Check if atob('=a') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_=a=" purpose="Check if atob('=a=') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_a" purpose="Check if atob('a') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_A" purpose="Check if atob('A') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_A/" purpose="Check if atob('A/') returns x03" result="PASS" /><testcase id="base64_atob_a=" purpose="Check if atob('a=') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_a==" purpose="Check if atob('a==') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_a===" purpose="Check if atob('a===') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_a====" purpose="Check if atob('a====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_a=====" purpose="Check if atob('a=====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_a=b" purpose="Check if atob('a=b') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_a=b=" purpose="Check if atob('a=b=') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_AA/" purpose="Check if atob('AA/') returns 0x0f" result="PASS" /><testcase id="base64_atob_AAA/" purpose="Check if atob('AAA/') returns non-ASCII character" result="PASS" /><testcase id="base64_atob_AAAA/" purpose="Check if atob('AAAA/') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_ab" purpose="Check if atob('ab') returns i" result="PASS" /><testcase id="base64_atob_ab=" purpose="Check if atob('ab=') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_ab==" purpose="Check if atob('ab==') returns i" result="PASS" /><testcase id="base64_atob_ab===" purpose="Check if atob('ab===') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_ab====" purpose="Check if atob('ab====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_ab=====" purpose="Check if atob('ab=====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_ab=c" purpose="Check if atob('ab=c') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_ab=c=" purpose="Check if atob('ab=c=') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abc" purpose="Check if atob('abc') returns non-ASCII character" result="PASS" /><testcase id="base64_atob_abc=" purpose="Check if atob('abc=') returns i dot" result="PASS" /><testcase id="base64_atob_abc==" purpose="Check if atob('abc==') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abc===" purpose="Check if atob('abc===') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abc====" purpose="Check if atob('abc====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abc=====" purpose="Check if atob('abc=====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abc=d" purpose="Check if atob('abc=d') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abc=d=" purpose="Check if atob('abc=d=') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcd" purpose="Check if atob('abcd') returns non-ASCII string" result="PASS" /><testcase id="base64_atob_abcd ===" purpose="Check if atob('abcd ===') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcd0nonsense" purpose="Check if atob('abcd0nonsense') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcd=" purpose="Check if atob('abcd=') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcd==" purpose="Check if atob('abcd==') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcd===" purpose="Check if atob('abcd===') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcd====" purpose="Check if atob('abcd====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcd=====" purpose="Check if atob('abcd=====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcd===_second" purpose="Check if atob('abcd===_second') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcd===_space" purpose="Check if atob('abcd=== ') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcde" purpose="Check if atob('abcde') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcde=" purpose="Check if atob('abcde=') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcde==" purpose="Check if atob('abcde==') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcde===" purpose="Check if atob('abcde===') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcde====" purpose="Check if atob('abcde====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcde=====" purpose="Check if atob('abcde=====') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abcd_space" purpose="Check if atob('abcd ') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abfcd" purpose="Check if atob(&quot;abfcd&quot;) returns 'i鐓¥召x1d'" result="PASS" /><testcase id="base64_atob_abncd" purpose="Check if atob('abncd') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_abrcd" purpose="Check if atob(&quot;abrcd&quot;) returns 'i鐓¥召x1d'" result="PASS" /><testcase id="base64_atob_abtcd" purpose="Check if atob(&quot;abtcd&quot;) returns 'i鐓¥召x1d'" result="PASS" /><testcase id="base64_atob_abtnfr =tnfr =tnfr" purpose="Check if atob(&quot;abtnfr =tnfr =tnfr &quot;) returns 'I'" result="PASS" /><testcase id="base64_atob_abtnfr cd" purpose="Check if atob(&quot;abtnfr cd&quot;) returns 'i鐓¥召x1d'" result="PASS" /><testcase id="base64_atob_abu00a0cd" purpose="Check if atob(&quot;ab?cd&quot;) raises an InvalidCharacterError exception" result="PASS" /><testcase id="base64_atob_ab_space_cd" purpose="Check if atob(&quot;ab cd&quot;) returns 'i鐓¥召x1d'" result="PASS" /><testcase id="base64_atob_empty_string" purpose="Check if atob('') returns empty string" result="PASS" /><testcase id="base64_atob_false" purpose="Check if atob(false) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_Infinity" purpose="Check if atob(Infinity) returns non-ASCII character" result="PASS" /><testcase id="base64_atob_NaN" purpose="Check if atob(NaN) returns non-ASCII character" result="PASS" /><testcase id="base64_atob_null" purpose="Check if atob(null) returns non-ASCII character" result="PASS" /><testcase id="base64_atob_object_abcd" purpose="Check if atob(object 'abcd') returns non-ASCII character" result="PASS" /><testcase id="base64_atob_object_foo" purpose="Check if atob(object 'foo') returns non-ASCII character" result="PASS" /><testcase id="base64_atob_space_abcd" purpose="Check if atob(' abcd') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_space_abcd===" purpose="Check if atob(' abcd===') raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_atob_String.fromCharCode(0xd800, 0xdc00)" purpose="Check if atob(String.fromCharCode(0xd800, 0xdc00)) raises INVALID_CHARACTER_ERR" result="PASS" /><testcase id="base64_atob_string_0" purpose="Check if atob('0') raises INVALID_CHARACTER_ERR" result="PASS" /><testcase id="base64_atob_true" purpose="Check if atob(true) returns non-ASCII character" result="PASS" /><testcase id="base64_atob_undefined" purpose="Check if atob(undefined) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_btoa_0" purpose="Check if btoa(0) returns MA==" result="PASS" /><testcase id="base64_btoa_1.5" purpose="Check if btoa(1.5) returns MS41" result="PASS" /><testcase id="base64_btoa_12" purpose="Check if btoa(12) returns MTI=" result="PASS" /><testcase id="base64_btoa_7" purpose="Check if btoa(7) returns Nw==" result="PASS" /><testcase id="base64_btoa_a" purpose="Check if btoa('a') returns YQ==" result="PASS" /><testcase id="base64_btoa_ab" purpose="Check if btoa('ab') returns YWI=" result="PASS" /><testcase id="base64_btoa_abc" purpose="Check if btoa('abc') returns YWJj" result="PASS" /><testcase id="base64_btoa_abcd" purpose="Check if btoa('abcd') returns YWJjZA==" result="PASS" /><testcase id="base64_btoa_abcde" purpose="Check if btoa('abcde') returns YWJjZGU=" result="PASS" /><testcase id="base64_btoa_a_backslash_0b" purpose="Check if btoa('a0b') returns YQBi" result="PASS" /><testcase id="base64_btoa_backslash_0" purpose="Check if btoa('0') returns AA==" result="PASS" /><testcase id="base64_btoa_backslash_0a" purpose="Check if btoa('0a') returns AGE=" result="PASS" /><testcase id="base64_btoa_empty_string" purpose="Check if btoa('') returns empty string" result="PASS" /><testcase id="base64_btoa_false" purpose="Check if btoa(false) returns ZmFsc2U=" result="PASS" /><testcase id="base64_btoa_fromCharCode_0" purpose="Check if btoa(String.fromCharCode(0)) returns AA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_0xd800_0xdc00" purpose="Check if btoa(String.fromCharCode(0xd800, 0xdc00)) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_btoa_fromCharCode_1" purpose="Check if btoa(String.fromCharCode(1)) returns AQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_10" purpose="Check if btoa(String.fromCharCode(10)) returns Cg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_100" purpose="Check if btoa(String.fromCharCode(100)) returns ZA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_10000" purpose="Check if btoa(String.fromCharCode(10000)) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_btoa_fromCharCode_101" purpose="Check if btoa(String.fromCharCode(101)) returns ZQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_102" purpose="Check if btoa(String.fromCharCode(102)) returns Zg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_103" purpose="Check if btoa(String.fromCharCode(103)) returns Zw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_104" purpose="Check if btoa(String.fromCharCode(104)) returns aA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_105" purpose="Check if btoa(String.fromCharCode(105)) returns aQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_106" purpose="Check if btoa(String.fromCharCode(106)) returns ag==" result="PASS" /><testcase id="base64_btoa_fromCharCode_107" purpose="Check if btoa(String.fromCharCode(107)) returns aw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_108" purpose="Check if btoa(String.fromCharCode(108)) returns bA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_109" purpose="Check if btoa(String.fromCharCode(109)) returns bQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_11" purpose="Check if btoa(String.fromCharCode(11)) returns Cw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_110" purpose="Check if btoa(String.fromCharCode(110)) returns bg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_111" purpose="Check if btoa(String.fromCharCode(111)) returns bw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_112" purpose="Check if btoa(String.fromCharCode(112)) returns cA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_113" purpose="Check if btoa(String.fromCharCode(113)) returns cQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_114" purpose="Check if btoa(String.fromCharCode(114)) returns cg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_115" purpose="Check if btoa(String.fromCharCode(115)) returns cw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_116" purpose="Check if btoa(String.fromCharCode(116)) returns dA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_117" purpose="Check if btoa(String.fromCharCode(117)) returns dQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_118" purpose="Check if btoa(String.fromCharCode(118)) returns dg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_119" purpose="Check if btoa(String.fromCharCode(119)) returns dw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_12" purpose="Check if btoa(String.fromCharCode(12)) returns DA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_120" purpose="Check if btoa(String.fromCharCode(120)) returns eA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_121" purpose="Check if btoa(String.fromCharCode(121)) returns eQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_122" purpose="Check if btoa(String.fromCharCode(122)) returns eg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_123" purpose="Check if btoa(String.fromCharCode(123)) returns ew==" result="PASS" /><testcase id="base64_btoa_fromCharCode_124" purpose="Check if btoa(String.fromCharCode(124)) returns fA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_125" purpose="Check if btoa(String.fromCharCode(125)) returns fQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_126" purpose="Check if btoa(String.fromCharCode(126)) returns fg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_127" purpose="Check if btoa(String.fromCharCode(127)) returns fw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_128" purpose="Check if btoa(String.fromCharCode(128)) returns gA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_129" purpose="Check if btoa(String.fromCharCode(129)) returns gQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_13" purpose="Check if btoa(String.fromCharCode(13)) returns DQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_130" purpose="Check if btoa(String.fromCharCode(130)) returns gg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_131" purpose="Check if btoa(String.fromCharCode(131)) returns gw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_132" purpose="Check if btoa(String.fromCharCode(132)) returns hA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_133" purpose="Check if btoa(String.fromCharCode(133)) returns hQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_134" purpose="Check if btoa(String.fromCharCode(134)) returns hg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_135" purpose="Check if btoa(String.fromCharCode(135)) returns hw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_136" purpose="Check if btoa(String.fromCharCode(136)) returns iA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_137" purpose="Check if btoa(String.fromCharCode(137)) returns iQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_138" purpose="Check if btoa(String.fromCharCode(138)) returns ig==" result="PASS" /><testcase id="base64_btoa_fromCharCode_139" purpose="Check if btoa(String.fromCharCode(139)) returns iw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_14" purpose="Check if btoa(String.fromCharCode(14)) returns Dg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_140" purpose="Check if btoa(String.fromCharCode(140)) returns jA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_141" purpose="Check if btoa(String.fromCharCode(141)) returns jQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_142" purpose="Check if btoa(String.fromCharCode(142)) returns jg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_143" purpose="Check if btoa(String.fromCharCode(143)) returns jw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_144" purpose="Check if btoa(String.fromCharCode(144)) returns kA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_145" purpose="Check if btoa(String.fromCharCode(145)) returns kQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_146" purpose="Check if btoa(String.fromCharCode(146)) returns kg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_147" purpose="Check if btoa(String.fromCharCode(147)) returns kw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_148" purpose="Check if btoa(String.fromCharCode(148)) returns lA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_149" purpose="Check if btoa(String.fromCharCode(149)) returns lQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_15" purpose="Check if btoa(String.fromCharCode(15)) returns Dw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_150" purpose="Check if btoa(String.fromCharCode(150)) returns lg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_151" purpose="Check if btoa(String.fromCharCode(151)) returns lw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_152" purpose="Check if btoa(String.fromCharCode(152)) returns mA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_153" purpose="Check if btoa(String.fromCharCode(153)) returns mQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_154" purpose="Check if btoa(String.fromCharCode(154)) returns mg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_155" purpose="Check if btoa(String.fromCharCode(155)) returns mw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_156" purpose="Check if btoa(String.fromCharCode(156)) returns nA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_157" purpose="Check if btoa(String.fromCharCode(157)) returns nQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_158" purpose="Check if btoa(String.fromCharCode(158)) returns ng==" result="PASS" /><testcase id="base64_btoa_fromCharCode_159" purpose="Check if btoa(String.fromCharCode(159)) returns nw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_16" purpose="Check if btoa(String.fromCharCode(16)) returns EA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_160" purpose="Check if btoa(String.fromCharCode(160)) returns oA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_161" purpose="Check if btoa(String.fromCharCode(161)) returns oQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_162" purpose="Check if btoa(String.fromCharCode(162)) returns og==" result="PASS" /><testcase id="base64_btoa_fromCharCode_163" purpose="Check if btoa(String.fromCharCode(163)) returns ow==" result="PASS" /><testcase id="base64_btoa_fromCharCode_164" purpose="Check if btoa(String.fromCharCode(164)) returns pA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_165" purpose="Check if btoa(String.fromCharCode(165)) returns pQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_166" purpose="Check if btoa(String.fromCharCode(166)) returns pg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_167" purpose="Check if btoa(String.fromCharCode(167)) returns pw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_168" purpose="Check if btoa(String.fromCharCode(168)) returns qA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_169" purpose="Check if btoa(String.fromCharCode(169)) returns qQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_17" purpose="Check if btoa(String.fromCharCode(17)) returns EQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_170" purpose="Check if btoa(String.fromCharCode(170)) returns qg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_171" purpose="Check if btoa(String.fromCharCode(171)) returns qw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_172" purpose="Check if btoa(String.fromCharCode(172)) returns rA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_173" purpose="Check if btoa(String.fromCharCode(173)) returns rQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_174" purpose="Check if btoa(String.fromCharCode(174)) returns rg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_175" purpose="Check if btoa(String.fromCharCode(175)) returns rw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_176" purpose="Check if btoa(String.fromCharCode(176)) returns sA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_177" purpose="Check if btoa(String.fromCharCode(177)) returns sQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_178" purpose="Check if btoa(String.fromCharCode(178)) returns sg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_179" purpose="Check if btoa(String.fromCharCode(179)) returns sw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_18" purpose="Check if btoa(String.fromCharCode(18)) returns Eg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_180" purpose="Check if btoa(String.fromCharCode(180)) returns tA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_181" purpose="Check if btoa(String.fromCharCode(181)) returns tQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_182" purpose="Check if btoa(String.fromCharCode(182)) returns tg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_183" purpose="Check if btoa(String.fromCharCode(183)) returns tw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_184" purpose="Check if btoa(String.fromCharCode(184)) returns uA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_185" purpose="Check if btoa(String.fromCharCode(185)) returns uQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_186" purpose="Check if btoa(String.fromCharCode(186)) returns ug==" result="PASS" /><testcase id="base64_btoa_fromCharCode_187" purpose="Check if btoa(String.fromCharCode(187)) returns uw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_188" purpose="Check if btoa(String.fromCharCode(188)) returns vA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_189" purpose="Check if btoa(String.fromCharCode(189)) returns vQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_19" purpose="Check if btoa(String.fromCharCode(19)) returns Ew==" result="PASS" /><testcase id="base64_btoa_fromCharCode_190" purpose="Check if btoa(String.fromCharCode(190)) returns vg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_191" purpose="Check if btoa(String.fromCharCode(191)) returns vw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_192" purpose="Check if btoa(String.fromCharCode(192)) returns wA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_193" purpose="Check if btoa(String.fromCharCode(193)) returns wQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_194" purpose="Check if btoa(String.fromCharCode(194)) returns wg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_195" purpose="Check if btoa(String.fromCharCode(195)) returns ww==" result="PASS" /><testcase id="base64_btoa_fromCharCode_196" purpose="Check if btoa(String.fromCharCode(196)) returns xA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_197" purpose="Check if btoa(String.fromCharCode(197)) returns xQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_198" purpose="Check if btoa(String.fromCharCode(198)) returns xg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_199" purpose="Check if btoa(String.fromCharCode(199)) returns xw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_2" purpose="Check if btoa(String.fromCharCode(2)) returns Ag==" result="PASS" /><testcase id="base64_btoa_fromCharCode_20" purpose="Check if btoa(String.fromCharCode(20)) returns FA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_200" purpose="Check if btoa(String.fromCharCode(200)) returns yA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_201" purpose="Check if btoa(String.fromCharCode(201)) returns yQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_202" purpose="Check if btoa(String.fromCharCode(202)) returns yg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_203" purpose="Check if btoa(String.fromCharCode(203)) returns yw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_204" purpose="Check if btoa(String.fromCharCode(204)) returns zA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_205" purpose="Check if btoa(String.fromCharCode(205)) returns zQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_206" purpose="Check if btoa(String.fromCharCode(206)) returns zg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_207" purpose="Check if btoa(String.fromCharCode(207)) returns zw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_208" purpose="Check if btoa(String.fromCharCode(208)) returns 0A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_209" purpose="Check if btoa(String.fromCharCode(209)) returns 0Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_21" purpose="Check if btoa(String.fromCharCode(21)) returns FQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_210" purpose="Check if btoa(String.fromCharCode(210)) returns 0g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_211" purpose="Check if btoa(String.fromCharCode(211)) returns 0w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_212" purpose="Check if btoa(String.fromCharCode(212)) returns 1A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_213" purpose="Check if btoa(String.fromCharCode(213)) returns 1Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_214" purpose="Check if btoa(String.fromCharCode(214)) returns 1g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_215" purpose="Check if btoa(String.fromCharCode(215)) returns 1w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_216" purpose="Check if btoa(String.fromCharCode(216)) returns 2A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_217" purpose="Check if btoa(String.fromCharCode(217)) returns 2Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_218" purpose="Check if btoa(String.fromCharCode(218)) returns 2g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_219" purpose="Check if btoa(String.fromCharCode(219)) returns 2w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_22" purpose="Check if btoa(String.fromCharCode(22)) returns Fg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_220" purpose="Check if btoa(String.fromCharCode(220)) returns 3A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_221" purpose="Check if btoa(String.fromCharCode(221)) returns 3Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_222" purpose="Check if btoa(String.fromCharCode(222)) returns 3g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_223" purpose="Check if btoa(String.fromCharCode(223)) returns 3w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_224" purpose="Check if btoa(String.fromCharCode(224)) returns 4A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_225" purpose="Check if btoa(String.fromCharCode(225)) returns 4Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_226" purpose="Check if btoa(String.fromCharCode(226)) returns 4g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_227" purpose="Check if btoa(String.fromCharCode(227)) returns 4w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_228" purpose="Check if btoa(String.fromCharCode(228)) returns 5A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_229" purpose="Check if btoa(String.fromCharCode(229)) returns 5Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_23" purpose="Check if btoa(String.fromCharCode(23)) returns Fw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_230" purpose="Check if btoa(String.fromCharCode(230)) returns 5g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_231" purpose="Check if btoa(String.fromCharCode(231)) returns 5w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_232" purpose="Check if btoa(String.fromCharCode(232)) returns 6A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_233" purpose="Check if btoa(String.fromCharCode(233)) returns 6Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_234" purpose="Check if btoa(String.fromCharCode(234)) returns 6g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_235" purpose="Check if btoa(String.fromCharCode(235)) returns 6w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_236" purpose="Check if btoa(String.fromCharCode(236)) returns 7A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_237" purpose="Check if btoa(String.fromCharCode(237)) returns 7Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_238" purpose="Check if btoa(String.fromCharCode(238)) returns 7g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_239" purpose="Check if btoa(String.fromCharCode(239)) returns 7w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_24" purpose="Check if btoa(String.fromCharCode(24)) returns GA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_240" purpose="Check if btoa(String.fromCharCode(240)) returns 8A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_241" purpose="Check if btoa(String.fromCharCode(241)) returns 8Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_242" purpose="Check if btoa(String.fromCharCode(242)) returns 8g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_243" purpose="Check if btoa(String.fromCharCode(243)) returns 8w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_244" purpose="Check if btoa(String.fromCharCode(244)) returns 9A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_245" purpose="Check if btoa(String.fromCharCode(245)) returns 9Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_246" purpose="Check if btoa(String.fromCharCode(246)) returns 9g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_247" purpose="Check if btoa(String.fromCharCode(247)) returns 9w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_248" purpose="Check if btoa(String.fromCharCode(248)) returns +A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_249" purpose="Check if btoa(String.fromCharCode(249)) returns +Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_25" purpose="Check if btoa(String.fromCharCode(25)) returns GQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_250" purpose="Check if btoa(String.fromCharCode(250)) returns +g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_251" purpose="Check if btoa(String.fromCharCode(251)) returns +w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_252" purpose="Check if btoa(String.fromCharCode(252)) returns /A==" result="PASS" /><testcase id="base64_btoa_fromCharCode_253" purpose="Check if btoa(String.fromCharCode(253)) returns /Q==" result="PASS" /><testcase id="base64_btoa_fromCharCode_254" purpose="Check if btoa(String.fromCharCode(254)) returns /g==" result="PASS" /><testcase id="base64_btoa_fromCharCode_255" purpose="Check if btoa(String.fromCharCode(255)) returns /w==" result="PASS" /><testcase id="base64_btoa_fromCharCode_256" purpose="Check if btoa(String.fromCharCode(256)) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_btoa_fromCharCode_257" purpose="Check if btoa(String.fromCharCode(257)) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_btoa_fromCharCode_26" purpose="Check if btoa(String.fromCharCode(26)) returns Gg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_27" purpose="Check if btoa(String.fromCharCode(27)) returns Gw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_28" purpose="Check if btoa(String.fromCharCode(28)) returns HA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_29" purpose="Check if btoa(String.fromCharCode(29)) returns HQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_3" purpose="Check if btoa(String.fromCharCode(3)) returns Aw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_30" purpose="Check if btoa(String.fromCharCode(30)) returns Hg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_31" purpose="Check if btoa(String.fromCharCode(31)) returns Hw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_32" purpose="Check if btoa(String.fromCharCode(32)) returns IA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_33" purpose="Check if btoa(String.fromCharCode(33)) returns IQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_34" purpose="Check if btoa(String.fromCharCode(34)) returns Ig==" result="PASS" /><testcase id="base64_btoa_fromCharCode_35" purpose="Check if btoa(String.fromCharCode(35)) returns Iw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_36" purpose="Check if btoa(String.fromCharCode(36)) returns JA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_37" purpose="Check if btoa(String.fromCharCode(37)) returns JQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_38" purpose="Check if btoa(String.fromCharCode(38)) returns Jg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_39" purpose="Check if btoa(String.fromCharCode(39)) returns Jw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_4" purpose="Check if btoa(String.fromCharCode(4)) returns BA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_40" purpose="Check if btoa(String.fromCharCode(40)) returns KA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_41" purpose="Check if btoa(String.fromCharCode(41)) returns KQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_42" purpose="Check if btoa(String.fromCharCode(42)) returns Kg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_43" purpose="Check if btoa(String.fromCharCode(43)) returns Kw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_44" purpose="Check if btoa(String.fromCharCode(44)) returns LA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_45" purpose="Check if btoa(String.fromCharCode(45)) returns LQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_46" purpose="Check if btoa(String.fromCharCode(46)) returns Lg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_47" purpose="Check if btoa(String.fromCharCode(47)) returns Lw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_48" purpose="Check if btoa(String.fromCharCode(48)) returns MA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_49" purpose="Check if btoa(String.fromCharCode(49)) returns MQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_5" purpose="Check if btoa(String.fromCharCode(5)) returns BQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_50" purpose="Check if btoa(String.fromCharCode(50)) returns Mg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_51" purpose="Check if btoa(String.fromCharCode(51)) returns Mw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_52" purpose="Check if btoa(String.fromCharCode(52)) returns NA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_53" purpose="Check if btoa(String.fromCharCode(53)) returns NQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_54" purpose="Check if btoa(String.fromCharCode(54)) returns Ng==" result="PASS" /><testcase id="base64_btoa_fromCharCode_55" purpose="Check if btoa(String.fromCharCode(55)) returns Nw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_56" purpose="Check if btoa(String.fromCharCode(56)) returns OA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_57" purpose="Check if btoa(String.fromCharCode(57)) returns OQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_58" purpose="Check if btoa(String.fromCharCode(58)) returns Og==" result="PASS" /><testcase id="base64_btoa_fromCharCode_59" purpose="Check if btoa(String.fromCharCode(59)) returns Ow==" result="PASS" /><testcase id="base64_btoa_fromCharCode_6" purpose="Check if btoa(String.fromCharCode(6)) returns Bg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_60" purpose="Check if btoa(String.fromCharCode(60)) returns PA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_61" purpose="Check if btoa(String.fromCharCode(61)) returns PQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_62" purpose="Check if btoa(String.fromCharCode(62)) returns Pg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_63" purpose="Check if btoa(String.fromCharCode(63)) returns Pw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_64" purpose="Check if btoa(String.fromCharCode(64)) returns QA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_65" purpose="Check if btoa(String.fromCharCode(65)) returns QQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_65534" purpose="Check if btoa(String.fromCharCode(65534)) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_btoa_fromCharCode_65535" purpose="Check if btoa(String.fromCharCode(65535)) raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_btoa_fromCharCode_66" purpose="Check if btoa(String.fromCharCode(66)) returns Qg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_67" purpose="Check if btoa(String.fromCharCode(67)) returns Qw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_68" purpose="Check if btoa(String.fromCharCode(68)) returns RA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_69" purpose="Check if btoa(String.fromCharCode(69)) returns RQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_7" purpose="Check if btoa(String.fromCharCode(7)) returns Bw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_70" purpose="Check if btoa(String.fromCharCode(70)) returns Rg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_71" purpose="Check if btoa(String.fromCharCode(71)) returns Rw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_72" purpose="Check if btoa(String.fromCharCode(72)) returns SA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_73" purpose="Check if btoa(String.fromCharCode(73)) returns SQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_74" purpose="Check if btoa(String.fromCharCode(74)) returns Sg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_75" purpose="Check if btoa(String.fromCharCode(75)) returns Sw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_76" purpose="Check if btoa(String.fromCharCode(76)) returns TA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_77" purpose="Check if btoa(String.fromCharCode(77)) returns TQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_78" purpose="Check if btoa(String.fromCharCode(78)) returns Tg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_79" purpose="Check if btoa(String.fromCharCode(79)) returns Tw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_8" purpose="Check if btoa(String.fromCharCode(8)) returns CA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_80" purpose="Check if btoa(String.fromCharCode(80)) returns UA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_81" purpose="Check if btoa(String.fromCharCode(81)) returns UQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_82" purpose="Check if btoa(String.fromCharCode(82)) returns Ug==" result="PASS" /><testcase id="base64_btoa_fromCharCode_83" purpose="Check if btoa(String.fromCharCode(83)) returns Uw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_84" purpose="Check if btoa(String.fromCharCode(84)) returns VA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_85" purpose="Check if btoa(String.fromCharCode(85)) returns VQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_86" purpose="Check if btoa(String.fromCharCode(86)) returns Vg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_87" purpose="Check if btoa(String.fromCharCode(87)) returns Vw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_88" purpose="Check if btoa(String.fromCharCode(88)) returns WA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_89" purpose="Check if btoa(String.fromCharCode(89)) returns WQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_9" purpose="Check if btoa(String.fromCharCode(9)) returns CQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_90" purpose="Check if btoa(String.fromCharCode(90)) returns Wg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_91" purpose="Check if btoa(String.fromCharCode(91)) returns Ww==" result="PASS" /><testcase id="base64_btoa_fromCharCode_92" purpose="Check if btoa(String.fromCharCode(92)) returns XA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_93" purpose="Check if btoa(String.fromCharCode(93)) returns XQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_94" purpose="Check if btoa(String.fromCharCode(94)) returns Xg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_95" purpose="Check if btoa(String.fromCharCode(95)) returns Xw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_96" purpose="Check if btoa(String.fromCharCode(96)) returns YA==" result="PASS" /><testcase id="base64_btoa_fromCharCode_97" purpose="Check if btoa(String.fromCharCode(97)) returns YQ==" result="PASS" /><testcase id="base64_btoa_fromCharCode_98" purpose="Check if btoa(String.fromCharCode(98)) returns Yg==" result="PASS" /><testcase id="base64_btoa_fromCharCode_99" purpose="Check if btoa(String.fromCharCode(99)) returns Yw==" result="PASS" /><testcase id="base64_btoa_fromCharCode_concatenated" purpose="Check if btoa(String.fromCharCode(0) + ... + String.fromCharCode(255))) concatenates first 256 code points" result="PASS" /><testcase id="base64_btoa_hebrew" purpose="Check if btoa() with non-ASCII character raises INVALID_CHARACTER_ERR exception" result="PASS" /><testcase id="base64_btoa_Infinity" purpose="Check if btoa(Infinity) returns SW5maW5pdHk=" result="PASS" /><testcase id="base64_btoa_minus_0" purpose="Check if btoa(-0) returns MA==" result="PASS" /><testcase id="base64_btoa_minus_Infinity" purpose="Check if btoa(-Infinity) returns LUluZmluaXR5" result="PASS" /><testcase id="base64_btoa_NaN" purpose="Check if btoa(NaN) returns TmFO" result="PASS" /><testcase id="base64_btoa_null" purpose="Check if btoa('null') returns bnVsbA==" result="PASS" /><testcase id="base64_btoa_object_foo" purpose="Check if btoa(object 'foo') returns Zm9v" result="PASS" /><testcase id="base64_btoa_true" purpose="Check if btoa(true) returns dHJ1ZQ==" result="PASS" /><testcase id="base64_btoa_undefined" purpose="Check if btoa('undefined') returns dW5kZWZpbmVk" result="PASS" /><testcase id="base64_btoa_xffxffxc0" purpose="Check if btoa('xffxffxc0') returns ///A" result="PASS" /></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/Browsers"><testcase id="history_supported" purpose="Check if the history tag supported" result="PASS" /><testcase id="window_alert_base" purpose="Check if pop the alert dialog" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4397 XWALK-4397]]</testcase><testcase id="window_confirm_base" purpose="Check if pop the confirm dialog" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4397 XWALK-4397]]</testcase><testcase id="window_external_AddSearchProvider_basic" purpose="Test checks that window.external.AddSearchProvider method exists" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1724 XWALK-1724]]</testcase><testcase id="window_onerror_basic" purpose="Test checks that window.onerror attribute exists" result="PASS" /><testcase id="window_prompt_base" purpose="Check if pop the prompt dialog" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4397 XWALK-4397]]</testcase></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/Collections"><testcase id="document_all_indexed_item" purpose="Test lookup IMG in collection using ()" result="PASS" /><testcase id="document_all_item_1" purpose="Test lookup by index using ()" result="PASS" /><testcase id="document_all_item_2" purpose="Test lookup by index using []" result="PASS" /><testcase id="document_all_item_3" purpose="Test lookup IMG by name" result="PASS" /><testcase id="document_all_length" purpose="Test for HTMLAllCollection size" result="PASS" /><testcase id="document_all_namedItem" purpose="Test lookup IMG by namedItem" result="PASS" /><testcase id="document_all_named_item" purpose="Test lookup IMG in collection using []" result="PASS" /></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/Dom"><testcase id="document_execCommand_exist" purpose="Test checks that document.execCommand method exists" result="PASS" /><testcase id="document_isContentEditable_exist" purpose="Test checks that HTML element isContentEditable attribute exists" result="PASS" /><testcase id="document_onchange_event" purpose="Check the document onchange event exists" result="PASS" /><testcase id="document_oninput_event" purpose="Check the document oninput event exists" result="PASS" /><testcase id="document_oninvalid_event" purpose="Check the document oninvalid event exists" result="PASS" /><testcase id="document_queryCommandEnabled_exist" purpose="Test checks that document.queryCommandEnabled method exists" result="PASS" /><testcase id="document_queryCommandIndeterm_exist" purpose="Test checks that document.queryCommandIndeterm method exists" result="PASS" /><testcase id="document_queryCommandState_exist" purpose="Test checks that document.queryCommandState method exists" result="PASS" /><testcase id="document_queryCommandSupported_exist" purpose="Test checks that document.queryCommandSupported method exists" result="PASS" /><testcase id="document_queryCommandValue_exist" purpose="Test checks that document.queryCommandValue method exists" result="PASS" /><testcase id="mutationobserver_exist" purpose="Check if the MutationObserver interface exist" result="PASS" /></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/ForeignContent"><testcase id="math_parse_one_annotation-xml" purpose="Check if empty element tags in annotation-xml is parsed as per XML" result="PASS" /><testcase id="math_parse_one_childnodes_length" purpose="Check if math has 2 children (empty tag syntax)" result="PASS" /><testcase id="math_parse_one_html_tags_in_annotation-xml" purpose="Check if html tags are allowed in annotation-xml/@encoding='text/html'" result="PASS" /><testcase id="math_parse_one_id_attribute" purpose="Check if id attribute is recognised on math elements" result="PASS" /><testcase id="math_parse_one_kopf_entity" purpose="Check if html element supports Kopf (Plane 1) entity code point" result="PASS" /><testcase id="math_parse_one_namespaceuri" purpose="Check if math is in MathML Namespace" result="PASS" /><testcase id="math_parse_one_nested_mrow" purpose="Check if nested mrow elements is parsed correctly" result="PASS" /><testcase id="math_parse_one_node_name" purpose="Check if node name is math" result="PASS" /><testcase id="math_parse_one_rang_lang_entity" purpose="Check if html element supports rang and lang entity code points" result="PASS" /></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/HTMLFormControlsCollection"><testcase id="htmlformcontrolscollection_elements_length" purpose="Check the length of HTMLFormControlsCollection" result="PASS" /><testcase id="htmlformcontrolscollection_indexed_item_1" purpose="Check the indexed item by (index)" result="PASS" /><testcase id="htmlformcontrolscollection_indexed_item_2" purpose="Check the indexed item by [index]" result="PASS" /><testcase id="htmlformcontrolscollection_indexed_item_3" purpose="Check the indexed item by [name]" result="PASS" /><testcase id="htmlformcontrolscollection_in_fieldset" purpose="Check if the HTMLFormControlsCollection interface is used for the collections of listed elements in a fieldset" result="PASS" /><testcase id="htmlformcontrolscollection_in_form" purpose="Check if the HTMLFormControlsCollection interface is used for the collections of listed elements in a form" result="PASS" /><testcase id="htmlformcontrolscollection_namedItem_mismatched" purpose="Check the value of HTMLFormControlsCollection.namedItem when no element matches" result="PASS" /><testcase id="htmlformcontrolscollection_namedItem_multiple_matched" purpose="Check if the namedItem can get the multiple elements in the form" result="PASS" /><testcase id="htmlformcontrolscollection_namedItem_scope" purpose="Check if the namedItem is applied to the elements with id or name content attribute in the form" result="PASS" /><testcase id="htmlformcontrolscollection_namedItem_single_matched" purpose="Check if the namedItem is applied to the elements with id or name content attribute in the form" result="PASS" /><testcase id="htmlformcontrolscollection_namedItem_type" purpose="Check the type of HTMLFormControlsCollection.namedItem" result="PASS" /><testcase id="htmlformcontrolscollection_namedItem_value" purpose="Check the value of HTMLFormControlsCollection.namedItem" result="PASS" /></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/HTMLOptionsCollection"><testcase id="htmloptionscollection_add" purpose="Add non-option to collection" result="PASS" /><testcase id="htmloptionscollection_length" purpose="Check the original length" result="PASS" /><testcase id="htmloptionscollection_length_insert_optgroup" purpose="Check legnth after optgroup elements are inserted" result="PASS" /><testcase id="htmloptionscollection_length_set_longer" purpose="Setting length to longer value" result="PASS" /><testcase id="htmloptionscollection_length_set_original" purpose="Setting length to original value has no effect" result="PASS" /><testcase id="htmloptionscollection_length_set_shorter" purpose="Setting length to shorter value" result="PASS" /><testcase id="htmloptionscollection_nameditem_id" purpose="namedItem id attribute" result="PASS" /><testcase id="htmloptionscollection_nameditem_mismatched" purpose="namedItem doesn't match anything" result="PASS" /><testcase id="htmloptionscollection_nameditem_multiple_1" purpose="namedItem id attribute multiple attributes one element" result="PASS" /><testcase id="htmloptionscollection_nameditem_multiple_2" purpose="namedItem name attribute multiple attributes one element" result="PASS" /><testcase id="htmloptionscollection_nameditem_name" purpose="namedItem name attribute" result="PASS" /></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/RadioNodeList"><testcase id="radionodelist_value_checked" purpose="Check the value attribute when an radio button is checked" result="PASS" /><testcase id="radionodelist_value_not_checked" purpose="Check the value attribute when no element is checked" result="PASS" /><testcase id="radionodelist_value_set_existing_value" purpose="Setting an existing value to RadioNodeList" result="PASS" /><testcase id="radionodelist_value_set_new_value" purpose="Setting an new value to RadioNodeList" result="PASS" /></category><category name="W3C_HTML5 APIs/W3C_EXTRAHTML5/Rendering"><testcase id="htmlkeygenelement_challenge_attribute" purpose="Check the keygen challenge attribute exists" result="PASS" /><testcase id="htmlkeygenelement_element_support" purpose="Check if the keygen element supported" result="PASS" /><testcase id="htmlkeygenelement_keytype_attribute" purpose="Check the keytype attribute exists" result="PASS" /></category><category name="Crosswalk WRT/Core Shell"><testcase id="Crosswalk_Multiple_Tab_DiffPages" purpose="Validate Crosswalk enable multiple instances for different pages" result="PASS" /><testcase id="Crosswalk_Multiple_Tab_ErrorPages" purpose="Validate Crosswalk enable multiple instances for error pages" result="PASS" /><testcase id="Crosswalk_Multiple_Tab_LocalPages" purpose="Validate Crosswalk enable multiple instances for local pages" result="PASS" /><testcase id="Crosswalk_Multiple_Tab_OtherPages" purpose="Validate Crosswalk enable multiple instances for https,ftp pages" result="PASS" /><testcase id="Crosswalk_Multiple_Tab_SamePages" purpose="Validate Crosswalk enable multiple instances for same pages" result="PASS" /></category><category name="Crosswalk WRT/Extension System"><testcase id="Crosswalk_EmbeddedMode_Extension_Close_viaTerminal" purpose="Validate if Crosswalk support the external extension close in the embedded mode" result="PASS" /><testcase id="Crosswalk_EmbeddedMode_Extension_Install" purpose="Validate if Crosswalk support the external extension install in the embedded mode" result="PASS" /><testcase id="Crosswalk_EmbeddedMode_Extension_Launch_viaTerminal" purpose="Validate if Crosswalk support the external extension launch in the embedded mode" result="PASS" /><testcase id="Crosswalk_EmbeddedMode_Extension_Uninstall_viaTerminal" purpose="Validate if Crosswalk support the external extension uninstall in the embedded mode" result="PASS" /><testcase id="Crosswalk_EmbeddedMode_Extension_XwalkRuntimeLibUninstall_viaTerminal" purpose="Validate if Crosswalk support the external extension in the embedded mode with runtimelib uninstall" result="PASS" /></category><category name="Crosswalk WRT/Internet Standard/Cookie"><testcase id="Crosswalk_Cookie_Add_Cookies" purpose="Validate the cookie name and value can be add" result="PASS" /><testcase id="Crosswalk_Cookie_App_Background" purpose="Validate all the cookies can be get" result="PASS" /><testcase id="Crosswalk_Cookie_App_Close" purpose="Validate all the cookies can be get" result="PASS" /><testcase id="Crosswalk_Cookie_App_Reboot" purpose="Validate all the cookies can be get" result="PASS" /><testcase id="Crosswalk_Cookie_App_Reinstall" purpose="Validate all the cookies can be get" result="PASS" /><testcase id="Crosswalk_Cookie_Modify_Cookies" purpose="Validate the cookie name and value can be modify" result="PASS" /><testcase id="Crosswalk_Cookie_Refresh_Cookies" purpose="Validate the cookie name and value can be get after refresh" result="PASS" /><testcase id="Crosswalk_Cookie_Remove_Cookies" purpose="Validate the cookie name and value can be delete" result="PASS" /><testcase id="Crosswalk_Cookie_XwalkRuntimeLib_Update" purpose="Validate all the cookies can be get" result="PASS" /></category><category name="Crosswalk WRT/Internet Standard/Scheme"><testcase id="Crosswalk_WebApp_HttpAuth_Failure" purpose="Validate the http authentication if input wrong username/password (via http://httpbin.org/basic-auth/user/passwd)" result="PASS" /><testcase id="Crosswalk_WebApp_HttpAuth_Success" purpose="Validate the http authentication if input correct username/password (via http://httpbin.org/basic-auth/user/passwd)" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_App" purpose="Validate the scheme 'app://' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Content" purpose="Validate the scheme 'content://' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Geo_1" purpose="Validate the scheme 'geo:' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Geo_10" purpose="Validate the scheme 'geo:/' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Geo_2" purpose="Validate the scheme 'geo:0' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Geo_3" purpose="Validate the scheme 'geo:0,0' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Geo_4" purpose="Validate the scheme 'geo:100' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Geo_5" purpose="Validate the scheme 'geo:10000000.123,100000000.12345' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Geo_6" purpose="Validate the scheme 'geo:-100' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Geo_7" purpose="Validate the scheme 'geo:-100.1,0.1234' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Geo_8" purpose="Validate the scheme 'geo:address' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Geo_9" purpose="Validate the scheme 'geo:0,0.0?address' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Mailto_1" purpose="Validate the scheme 'mailto:' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Mailto_2" purpose="Validate the scheme 'mailto:/' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Mailto_3" purpose="Validate the scheme 'mailto:abc' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Mailto_4" purpose="Validate the scheme 'mailto:123456' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Mailto_5" purpose="Validate the scheme 'mailto:abc.123456' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Mailto_6" purpose="Validate the scheme 'mailto:abc@corp' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Mailto_7" purpose="Validate the scheme 'mailto:abc@gmail.com' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Market" purpose="Validate the scheme 'market:' is implemented in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_Scheme_Sms" purpose="Validate the scheme 'sms:' is implemented in Crosswalk" result="PASS">not support on tablet, tested on ZTE Geek phone</testcase><testcase id="Crosswalk_WebApp_Scheme_Tel" purpose="Validate the scheme 'tel:' is implemented in Crosswalk" result="PASS">not support on tablet, tested on ZTE Geek phone</testcase></category><category name="Crosswalk WRT/Manifest"><testcase id="Crosswalk_combinationtest" purpose="Validate if app can packing ,install and launch" result="PASS" /><testcase id="Crosswalk_descriptiontest/1" purpose="Validate if value of the description in manifest file/descriptiontest.TestManifestFunctions.test_description_chinese" result="PASS" /><testcase id="Crosswalk_descriptiontest/2" purpose="Validate if value of the description in manifest file/descriptiontest.TestManifestFunctions.test_description_long" result="PASS" /><testcase id="Crosswalk_descriptiontest/3" purpose="Validate if value of the description in manifest file/descriptiontest.TestManifestFunctions.test_description_null" result="PASS" /><testcase id="Crosswalk_descriptiontest/4" purpose="Validate if value of the description in manifest file/descriptiontest.TestManifestFunctions.test_description_specific" result="PASS" /><testcase id="Crosswalk_Fullscreen_Immersive_Bottom" purpose="Validate if Crosswalk enable the fullscreen immersive mode by swiping up from bottom" result="PASS" /><testcase id="Crosswalk_Fullscreen_Immersive_Top" purpose="Validate if Crosswalk enable the fullscreen immersive mode by swiping down from top" result="PASS" /><testcase id="Crosswalk_Immersive_Fullscreen" purpose="Validate the Crosswalk enable the launch the app of fullscreen immersive mode and the app can work well" result="PASS" /><testcase id="Crosswalk_Manifest_Check/1" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_negative_manifest264" result="PASS" /><testcase id="Crosswalk_Manifest_Check/10" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest104" result="PASS" /><testcase id="Crosswalk_Manifest_Check/100" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest186" result="PASS" /><testcase id="Crosswalk_Manifest_Check/101" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest187" result="PASS" /><testcase id="Crosswalk_Manifest_Check/102" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest188" result="PASS" /><testcase id="Crosswalk_Manifest_Check/103" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest189" result="PASS" /><testcase id="Crosswalk_Manifest_Check/104" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest19" result="PASS" /><testcase id="Crosswalk_Manifest_Check/105" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest190" result="PASS" /><testcase id="Crosswalk_Manifest_Check/106" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest191" result="PASS" /><testcase id="Crosswalk_Manifest_Check/107" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest192" result="PASS" /><testcase id="Crosswalk_Manifest_Check/108" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest193" result="PASS" /><testcase id="Crosswalk_Manifest_Check/109" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest194" result="PASS" /><testcase id="Crosswalk_Manifest_Check/11" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest105" result="PASS" /><testcase id="Crosswalk_Manifest_Check/110" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest195" result="PASS" /><testcase id="Crosswalk_Manifest_Check/111" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest196" result="PASS" /><testcase id="Crosswalk_Manifest_Check/112" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest197" result="PASS" /><testcase id="Crosswalk_Manifest_Check/113" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest198" result="PASS" /><testcase id="Crosswalk_Manifest_Check/114" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest199" result="PASS" /><testcase id="Crosswalk_Manifest_Check/115" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest2" result="PASS" /><testcase id="Crosswalk_Manifest_Check/116" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest20" result="PASS" /><testcase id="Crosswalk_Manifest_Check/117" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest200" result="PASS" /><testcase id="Crosswalk_Manifest_Check/118" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest201" result="PASS" /><testcase id="Crosswalk_Manifest_Check/119" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest202" result="PASS" /><testcase id="Crosswalk_Manifest_Check/12" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest106" result="PASS" /><testcase id="Crosswalk_Manifest_Check/120" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest203" result="PASS" /><testcase id="Crosswalk_Manifest_Check/121" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest204" result="PASS" /><testcase id="Crosswalk_Manifest_Check/122" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest205" result="PASS" /><testcase id="Crosswalk_Manifest_Check/123" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest206" result="PASS" /><testcase id="Crosswalk_Manifest_Check/124" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest207" result="PASS" /><testcase id="Crosswalk_Manifest_Check/125" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest208" result="PASS" /><testcase id="Crosswalk_Manifest_Check/126" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest209" result="PASS" /><testcase id="Crosswalk_Manifest_Check/127" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest21" result="PASS" /><testcase id="Crosswalk_Manifest_Check/128" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest210" result="PASS" /><testcase id="Crosswalk_Manifest_Check/129" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest211" result="PASS" /><testcase id="Crosswalk_Manifest_Check/13" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest107" result="PASS" /><testcase id="Crosswalk_Manifest_Check/130" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest212" result="PASS" /><testcase id="Crosswalk_Manifest_Check/131" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest213" result="PASS" /><testcase id="Crosswalk_Manifest_Check/132" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest214" result="PASS" /><testcase id="Crosswalk_Manifest_Check/133" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest215" result="PASS" /><testcase id="Crosswalk_Manifest_Check/134" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest216" result="PASS" /><testcase id="Crosswalk_Manifest_Check/135" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest217" result="PASS" /><testcase id="Crosswalk_Manifest_Check/136" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest218" result="PASS" /><testcase id="Crosswalk_Manifest_Check/137" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest219" result="PASS" /><testcase id="Crosswalk_Manifest_Check/138" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest22" result="PASS" /><testcase id="Crosswalk_Manifest_Check/139" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest220" result="PASS" /><testcase id="Crosswalk_Manifest_Check/14" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest108" result="PASS" /><testcase id="Crosswalk_Manifest_Check/140" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest221" result="PASS" /><testcase id="Crosswalk_Manifest_Check/141" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest222" result="PASS" /><testcase id="Crosswalk_Manifest_Check/142" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest223" result="PASS" /><testcase id="Crosswalk_Manifest_Check/143" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest224" result="PASS" /><testcase id="Crosswalk_Manifest_Check/144" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest225" result="PASS" /><testcase id="Crosswalk_Manifest_Check/145" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest226" result="PASS" /><testcase id="Crosswalk_Manifest_Check/146" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest227" result="PASS" /><testcase id="Crosswalk_Manifest_Check/147" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest228" result="PASS" /><testcase id="Crosswalk_Manifest_Check/148" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest229" result="PASS" /><testcase id="Crosswalk_Manifest_Check/149" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest23" result="PASS" /><testcase id="Crosswalk_Manifest_Check/15" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest109" result="PASS" /><testcase id="Crosswalk_Manifest_Check/150" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest230" result="PASS" /><testcase id="Crosswalk_Manifest_Check/151" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest231" result="PASS" /><testcase id="Crosswalk_Manifest_Check/152" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest232" result="PASS" /><testcase id="Crosswalk_Manifest_Check/153" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest233" result="PASS" /><testcase id="Crosswalk_Manifest_Check/154" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest234" result="PASS" /><testcase id="Crosswalk_Manifest_Check/155" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest235" result="PASS" /><testcase id="Crosswalk_Manifest_Check/156" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest236" result="PASS" /><testcase id="Crosswalk_Manifest_Check/157" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest237" result="PASS" /><testcase id="Crosswalk_Manifest_Check/158" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest238" result="PASS" /><testcase id="Crosswalk_Manifest_Check/159" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest239" result="PASS" /><testcase id="Crosswalk_Manifest_Check/16" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest11" result="PASS" /><testcase id="Crosswalk_Manifest_Check/160" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest24" result="PASS" /><testcase id="Crosswalk_Manifest_Check/161" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest240" result="PASS" /><testcase id="Crosswalk_Manifest_Check/162" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest241" result="PASS" /><testcase id="Crosswalk_Manifest_Check/163" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest242" result="PASS" /><testcase id="Crosswalk_Manifest_Check/164" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest243" result="PASS" /><testcase id="Crosswalk_Manifest_Check/165" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest244" result="PASS" /><testcase id="Crosswalk_Manifest_Check/166" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest245" result="PASS" /><testcase id="Crosswalk_Manifest_Check/167" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest246" result="PASS" /><testcase id="Crosswalk_Manifest_Check/168" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest247" result="PASS" /><testcase id="Crosswalk_Manifest_Check/169" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest248" result="PASS" /><testcase id="Crosswalk_Manifest_Check/17" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest110" result="PASS" /><testcase id="Crosswalk_Manifest_Check/170" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest249" result="PASS" /><testcase id="Crosswalk_Manifest_Check/171" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest25" result="PASS" /><testcase id="Crosswalk_Manifest_Check/172" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest250" result="PASS" /><testcase id="Crosswalk_Manifest_Check/173" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest251" result="PASS" /><testcase id="Crosswalk_Manifest_Check/174" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest252" result="PASS" /><testcase id="Crosswalk_Manifest_Check/175" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest253" result="PASS" /><testcase id="Crosswalk_Manifest_Check/176" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest254" result="PASS" /><testcase id="Crosswalk_Manifest_Check/177" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest255" result="PASS" /><testcase id="Crosswalk_Manifest_Check/178" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest256" result="PASS" /><testcase id="Crosswalk_Manifest_Check/179" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest257" result="PASS" /><testcase id="Crosswalk_Manifest_Check/18" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest111" result="PASS" /><testcase id="Crosswalk_Manifest_Check/180" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest258" result="PASS" /><testcase id="Crosswalk_Manifest_Check/181" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest259" result="PASS" /><testcase id="Crosswalk_Manifest_Check/182" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest26" result="PASS" /><testcase id="Crosswalk_Manifest_Check/183" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest260" result="PASS" /><testcase id="Crosswalk_Manifest_Check/184" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest261" result="PASS" /><testcase id="Crosswalk_Manifest_Check/185" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest262" result="PASS" /><testcase id="Crosswalk_Manifest_Check/186" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest263" result="PASS" /><testcase id="Crosswalk_Manifest_Check/187" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest27" result="PASS" /><testcase id="Crosswalk_Manifest_Check/188" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest28" result="PASS" /><testcase id="Crosswalk_Manifest_Check/189" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest29" result="PASS" /><testcase id="Crosswalk_Manifest_Check/19" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest112" result="PASS" /><testcase id="Crosswalk_Manifest_Check/190" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest3" result="PASS" /><testcase id="Crosswalk_Manifest_Check/191" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest30" result="PASS" /><testcase id="Crosswalk_Manifest_Check/192" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest31" result="PASS" /><testcase id="Crosswalk_Manifest_Check/193" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest32" result="PASS" /><testcase id="Crosswalk_Manifest_Check/194" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest33" result="PASS" /><testcase id="Crosswalk_Manifest_Check/195" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest34" result="PASS" /><testcase id="Crosswalk_Manifest_Check/196" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest35" result="PASS" /><testcase id="Crosswalk_Manifest_Check/197" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest36" result="PASS" /><testcase id="Crosswalk_Manifest_Check/198" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest37" result="PASS" /><testcase id="Crosswalk_Manifest_Check/199" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest38" result="PASS" /><testcase id="Crosswalk_Manifest_Check/2" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_negative_manifest265" result="PASS" /><testcase id="Crosswalk_Manifest_Check/20" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest113" result="PASS" /><testcase id="Crosswalk_Manifest_Check/200" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest39" result="PASS" /><testcase id="Crosswalk_Manifest_Check/201" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest4" result="PASS" /><testcase id="Crosswalk_Manifest_Check/202" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest40" result="PASS" /><testcase id="Crosswalk_Manifest_Check/203" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest41" result="PASS" /><testcase id="Crosswalk_Manifest_Check/204" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest42" result="PASS" /><testcase id="Crosswalk_Manifest_Check/205" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest43" result="PASS" /><testcase id="Crosswalk_Manifest_Check/206" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest44" result="PASS" /><testcase id="Crosswalk_Manifest_Check/207" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest45" result="PASS" /><testcase id="Crosswalk_Manifest_Check/208" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest46" result="PASS" /><testcase id="Crosswalk_Manifest_Check/209" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest47" result="PASS" /><testcase id="Crosswalk_Manifest_Check/21" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest114" result="PASS" /><testcase id="Crosswalk_Manifest_Check/210" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest48" result="PASS" /><testcase id="Crosswalk_Manifest_Check/211" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest49" result="PASS" /><testcase id="Crosswalk_Manifest_Check/212" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest5" result="PASS" /><testcase id="Crosswalk_Manifest_Check/213" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest50" result="PASS" /><testcase id="Crosswalk_Manifest_Check/214" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest51" result="PASS" /><testcase id="Crosswalk_Manifest_Check/215" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest52" result="PASS" /><testcase id="Crosswalk_Manifest_Check/216" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest53" result="PASS" /><testcase id="Crosswalk_Manifest_Check/217" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest54" result="PASS" /><testcase id="Crosswalk_Manifest_Check/218" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest55" result="PASS" /><testcase id="Crosswalk_Manifest_Check/219" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest56" result="PASS" /><testcase id="Crosswalk_Manifest_Check/22" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest115" result="PASS" /><testcase id="Crosswalk_Manifest_Check/220" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest57" result="PASS" /><testcase id="Crosswalk_Manifest_Check/221" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest58" result="PASS" /><testcase id="Crosswalk_Manifest_Check/222" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest59" result="PASS" /><testcase id="Crosswalk_Manifest_Check/223" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest6" result="PASS" /><testcase id="Crosswalk_Manifest_Check/224" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest60" result="PASS" /><testcase id="Crosswalk_Manifest_Check/225" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest61" result="PASS" /><testcase id="Crosswalk_Manifest_Check/226" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest62" result="PASS" /><testcase id="Crosswalk_Manifest_Check/227" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest63" result="PASS" /><testcase id="Crosswalk_Manifest_Check/228" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest64" result="PASS" /><testcase id="Crosswalk_Manifest_Check/229" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest65" result="PASS" /><testcase id="Crosswalk_Manifest_Check/23" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest116" result="PASS" /><testcase id="Crosswalk_Manifest_Check/230" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest66" result="PASS" /><testcase id="Crosswalk_Manifest_Check/231" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest67" result="PASS" /><testcase id="Crosswalk_Manifest_Check/232" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest68" result="PASS" /><testcase id="Crosswalk_Manifest_Check/233" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest69" result="PASS" /><testcase id="Crosswalk_Manifest_Check/234" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest7" result="PASS" /><testcase id="Crosswalk_Manifest_Check/235" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest70" result="PASS" /><testcase id="Crosswalk_Manifest_Check/236" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest71" result="PASS" /><testcase id="Crosswalk_Manifest_Check/237" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest72" result="PASS" /><testcase id="Crosswalk_Manifest_Check/238" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest73" result="PASS" /><testcase id="Crosswalk_Manifest_Check/239" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest74" result="PASS" /><testcase id="Crosswalk_Manifest_Check/24" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest117" result="PASS" /><testcase id="Crosswalk_Manifest_Check/240" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest75" result="PASS" /><testcase id="Crosswalk_Manifest_Check/241" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest76" result="PASS" /><testcase id="Crosswalk_Manifest_Check/242" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest77" result="PASS" /><testcase id="Crosswalk_Manifest_Check/243" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest78" result="PASS" /><testcase id="Crosswalk_Manifest_Check/244" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest79" result="PASS" /><testcase id="Crosswalk_Manifest_Check/245" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest8" result="PASS" /><testcase id="Crosswalk_Manifest_Check/246" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest80" result="PASS" /><testcase id="Crosswalk_Manifest_Check/247" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest81" result="PASS" /><testcase id="Crosswalk_Manifest_Check/248" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest82" result="PASS" /><testcase id="Crosswalk_Manifest_Check/249" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest83" result="PASS" /><testcase id="Crosswalk_Manifest_Check/25" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest118" result="PASS" /><testcase id="Crosswalk_Manifest_Check/250" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest84" result="PASS" /><testcase id="Crosswalk_Manifest_Check/251" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest85" result="PASS" /><testcase id="Crosswalk_Manifest_Check/252" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest86" result="PASS" /><testcase id="Crosswalk_Manifest_Check/253" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest87" result="PASS" /><testcase id="Crosswalk_Manifest_Check/254" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest88" result="PASS" /><testcase id="Crosswalk_Manifest_Check/255" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest89" result="PASS" /><testcase id="Crosswalk_Manifest_Check/256" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest9" result="PASS" /><testcase id="Crosswalk_Manifest_Check/257" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest90" result="PASS" /><testcase id="Crosswalk_Manifest_Check/258" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest91" result="PASS" /><testcase id="Crosswalk_Manifest_Check/259" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest92" result="PASS" /><testcase id="Crosswalk_Manifest_Check/26" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest119" result="PASS" /><testcase id="Crosswalk_Manifest_Check/260" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest93" result="PASS" /><testcase id="Crosswalk_Manifest_Check/261" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest94" result="PASS" /><testcase id="Crosswalk_Manifest_Check/262" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest95" result="PASS" /><testcase id="Crosswalk_Manifest_Check/263" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest96" result="PASS" /><testcase id="Crosswalk_Manifest_Check/264" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest97" result="PASS" /><testcase id="Crosswalk_Manifest_Check/265" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest98" result="PASS" /><testcase id="Crosswalk_Manifest_Check/266" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest99" result="PASS" /><testcase id="Crosswalk_Manifest_Check/27" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest12" result="PASS" /><testcase id="Crosswalk_Manifest_Check/28" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest120" result="PASS" /><testcase id="Crosswalk_Manifest_Check/29" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest121" result="PASS" /><testcase id="Crosswalk_Manifest_Check/3" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_negative_manifest266" result="PASS" /><testcase id="Crosswalk_Manifest_Check/30" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest122" result="PASS" /><testcase id="Crosswalk_Manifest_Check/31" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest123" result="PASS" /><testcase id="Crosswalk_Manifest_Check/32" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest124" result="PASS" /><testcase id="Crosswalk_Manifest_Check/33" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest125" result="PASS" /><testcase id="Crosswalk_Manifest_Check/34" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest126" result="PASS" /><testcase id="Crosswalk_Manifest_Check/35" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest127" result="PASS" /><testcase id="Crosswalk_Manifest_Check/36" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest128" result="PASS" /><testcase id="Crosswalk_Manifest_Check/37" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest129" result="PASS" /><testcase id="Crosswalk_Manifest_Check/38" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest13" result="PASS" /><testcase id="Crosswalk_Manifest_Check/39" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest130" result="PASS" /><testcase id="Crosswalk_Manifest_Check/4" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest1" result="PASS" /><testcase id="Crosswalk_Manifest_Check/40" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest131" result="PASS" /><testcase id="Crosswalk_Manifest_Check/41" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest132" result="PASS" /><testcase id="Crosswalk_Manifest_Check/42" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest133" result="PASS" /><testcase id="Crosswalk_Manifest_Check/43" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest134" result="PASS" /><testcase id="Crosswalk_Manifest_Check/44" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest135" result="PASS" /><testcase id="Crosswalk_Manifest_Check/45" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest136" result="PASS" /><testcase id="Crosswalk_Manifest_Check/46" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest137" result="PASS" /><testcase id="Crosswalk_Manifest_Check/47" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest138" result="PASS" /><testcase id="Crosswalk_Manifest_Check/48" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest139" result="PASS" /><testcase id="Crosswalk_Manifest_Check/49" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest14" result="PASS" /><testcase id="Crosswalk_Manifest_Check/5" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest10" result="PASS" /><testcase id="Crosswalk_Manifest_Check/50" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest140" result="PASS" /><testcase id="Crosswalk_Manifest_Check/51" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest141" result="PASS" /><testcase id="Crosswalk_Manifest_Check/52" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest142" result="PASS" /><testcase id="Crosswalk_Manifest_Check/53" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest143" result="PASS" /><testcase id="Crosswalk_Manifest_Check/54" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest144" result="PASS" /><testcase id="Crosswalk_Manifest_Check/55" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest145" result="PASS" /><testcase id="Crosswalk_Manifest_Check/56" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest146" result="PASS" /><testcase id="Crosswalk_Manifest_Check/57" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest147" result="PASS" /><testcase id="Crosswalk_Manifest_Check/58" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest148" result="PASS" /><testcase id="Crosswalk_Manifest_Check/59" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest149" result="PASS" /><testcase id="Crosswalk_Manifest_Check/6" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest100" result="PASS" /><testcase id="Crosswalk_Manifest_Check/60" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest15" result="PASS" /><testcase id="Crosswalk_Manifest_Check/61" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest150" result="PASS" /><testcase id="Crosswalk_Manifest_Check/62" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest151" result="PASS" /><testcase id="Crosswalk_Manifest_Check/63" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest152" result="PASS" /><testcase id="Crosswalk_Manifest_Check/64" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest153" result="PASS" /><testcase id="Crosswalk_Manifest_Check/65" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest154" result="PASS" /><testcase id="Crosswalk_Manifest_Check/66" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest155" result="PASS" /><testcase id="Crosswalk_Manifest_Check/67" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest156" result="PASS" /><testcase id="Crosswalk_Manifest_Check/68" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest157" result="PASS" /><testcase id="Crosswalk_Manifest_Check/69" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest158" result="PASS" /><testcase id="Crosswalk_Manifest_Check/7" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest101" result="PASS" /><testcase id="Crosswalk_Manifest_Check/70" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest159" result="PASS" /><testcase id="Crosswalk_Manifest_Check/71" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest16" result="PASS" /><testcase id="Crosswalk_Manifest_Check/72" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest160" result="PASS" /><testcase id="Crosswalk_Manifest_Check/73" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest161" result="PASS" /><testcase id="Crosswalk_Manifest_Check/74" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest162" result="PASS" /><testcase id="Crosswalk_Manifest_Check/75" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest163" result="PASS" /><testcase id="Crosswalk_Manifest_Check/76" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest164" result="PASS" /><testcase id="Crosswalk_Manifest_Check/77" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest165" result="PASS" /><testcase id="Crosswalk_Manifest_Check/78" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest166" result="PASS" /><testcase id="Crosswalk_Manifest_Check/79" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest167" result="PASS" /><testcase id="Crosswalk_Manifest_Check/8" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest102" result="PASS" /><testcase id="Crosswalk_Manifest_Check/80" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest168" result="PASS" /><testcase id="Crosswalk_Manifest_Check/81" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest169" result="PASS" /><testcase id="Crosswalk_Manifest_Check/82" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest17" result="PASS" /><testcase id="Crosswalk_Manifest_Check/83" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest170" result="PASS" /><testcase id="Crosswalk_Manifest_Check/84" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest171" result="PASS" /><testcase id="Crosswalk_Manifest_Check/85" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest172" result="PASS" /><testcase id="Crosswalk_Manifest_Check/86" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest173" result="PASS" /><testcase id="Crosswalk_Manifest_Check/87" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest174" result="PASS" /><testcase id="Crosswalk_Manifest_Check/88" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest175" result="PASS" /><testcase id="Crosswalk_Manifest_Check/89" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest176" result="PASS" /><testcase id="Crosswalk_Manifest_Check/9" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest103" result="PASS" /><testcase id="Crosswalk_Manifest_Check/90" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest177" result="PASS" /><testcase id="Crosswalk_Manifest_Check/91" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest178" result="PASS" /><testcase id="Crosswalk_Manifest_Check/92" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest179" result="PASS" /><testcase id="Crosswalk_Manifest_Check/93" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest18" result="PASS" /><testcase id="Crosswalk_Manifest_Check/94" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest180" result="PASS" /><testcase id="Crosswalk_Manifest_Check/95" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest181" result="PASS" /><testcase id="Crosswalk_Manifest_Check/96" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest182" result="PASS" /><testcase id="Crosswalk_Manifest_Check/97" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest183" result="PASS" /><testcase id="Crosswalk_Manifest_Check/98" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest184" result="PASS" /><testcase id="Crosswalk_Manifest_Check/99" purpose="Check if packaged web application can be installed/launched/uninstalled successfully/tests.TestCaseUnit.test_positive_manifest185" result="PASS" /><testcase id="Crosswalk_Manifest_XwalkHosts_MatchPatterns" purpose="Validate Crosswalk enable the xwalk_hosts field with match patterns * in manifest" result="PASS" /><testcase id="Crosswalk_Manifest_XwalkHosts_MatchPatternsMiddle" purpose="Validate Crosswalk enable the xwalk_hosts field with match patterns 'xxx/*xxx' in manifest" result="PASS" /><testcase id="Crosswalk_Manifest_XwalkHosts_MatchPatternsTail" purpose="Validate Crosswalk enable the xwalk_hosts field with match patterns 'xxx/*' in manifest" result="PASS" /><testcase id="Crosswalk_Manifest_XwalkHosts_Value" purpose="Validate Crosswalk enable the xwalk_hosts field in manifest" result="PASS" /><testcase id="Crosswalk_negativetest/1" purpose="Validate if negative test about no name, start_url and description in manifest file/negativetest.TestManifestFunctions.test_negative_description" result="PASS" /><testcase id="Crosswalk_negativetest/2" purpose="Validate if negative test about no name, start_url and description in manifest file/negativetest.TestManifestFunctions.test_negative_name" result="PASS" /><testcase id="Crosswalk_negativetest/3" purpose="Validate if negative test about no name, start_url and description in manifest file/negativetest.TestManifestFunctions.test_negative_nullfields" result="PASS" /><testcase id="Crosswalk_negativetest/4" purpose="Validate if negative test about no name, start_url and description in manifest file/negativetest.TestManifestFunctions.test_negative_nullvalue" result="PASS" /><testcase id="Crosswalk_other" purpose="Validate if the value of name is null in manifest file" result="PASS" /><testcase id="Crosswalk_starturltest/1" purpose="Validate if value of the start_url in manifest file/starturltest.TestManifestFunctions.test_starturl_blank" result="PASS" /><testcase id="Crosswalk_starturltest/2" purpose="Validate if value of the start_url in manifest file/starturltest.TestManifestFunctions.test_starturl_chinese" result="PASS" /><testcase id="Crosswalk_starturltest/3" purpose="Validate if value of the start_url in manifest file/starturltest.TestManifestFunctions.test_starturl_namedhttp" result="PASS" /><testcase id="Crosswalk_starturltest/4" purpose="Validate if value of the start_url in manifest file/starturltest.TestManifestFunctions.test_starturl_noexists" result="PASS" /><testcase id="Maximize_Tests" purpose="Validate the maximize members of manifest can work well" result="PASS">not support on tablet, tested on ZTE Geek phone</testcase><testcase id="Minimize_Tests" purpose="Validate the minimize members of manifest can work well" result="PASS" /></category><category name="Crosswalk WRT/Package Management"><testcase id="Crosswalk_Eclipse_Create_WebApp" purpose="Validate if enable create Crosswalk project in Eclipse" result="PASS" /><testcase id="Crosswalk_Eclipse_Export_WebApp" purpose="Validate if enable export Crosswalk project from Eclipse" result="PASS" /><testcase id="Crosswalk_Eclipse_Import_WebApp" purpose="Validate if enable import Crosswalk project into Eclipse" result="PASS" /><testcase id="Crosswalk_MultiApps_Memory" purpose="Validate if Crosswalk can check system memory" result="PASS" /><testcase id="Crosswalk_WebApp_Close_viaTerminal" purpose="Validate Crosswalk support that web app could be closed successfully" result="PASS" /><testcase id="Crosswalk_WebApp_Icon" purpose="Validate if web app icon display normally" result="PASS" /><testcase id="Crosswalk_WebApp_Icon_Launcher" purpose="Validate if Crosswalk support that web app could be launched from app launcher successfully" result="PASS" /><testcase id="Crosswalk_WebApp_Install" purpose="Validate if Crosswalk support web apps could be installed successfully" result="PASS" /><testcase id="Crosswalk_WebApp_Launch_viaTerminal" purpose="Validate Crosswalk support that web app could be launched successfully" result="PASS" /><testcase id="Crosswalk_WebApp_openfile_docx" purpose="Validate if enable open a docx file with third part app" result="PASS" /><testcase id="Crosswalk_WebApp_openfile_html" purpose="Validate if enable open a html file with third part app" result="PASS" /><testcase id="Crosswalk_WebApp_openfile_png" purpose="Validate if enable open a png file with third part app" result="PASS" /><testcase id="Crosswalk_WebApp_Uninstall_viaTerminal" purpose="Validate if Crosswalk support web apps could be uninstalled successfully" result="PASS" /><testcase id="Crosswalk_WebApp_Update_SameVersion" purpose="Validate if Crosswalk support web apps could be updated by the same version successfully" result="PASS" /></category><category name="Crosswalk WRT/Packer Tool"><testcase id="Crosswalk_apksizetest" purpose="Validate the apk size will not be increased to double size or more on second running" result="PASS" /><testcase id="Crosswalk_appPathtest" purpose="Validate if the Packaging Tool enable the app-local-path option" result="PASS" /><testcase id="Crosswalk_appPathtest/1" purpose="Validate if packer tool can work well with other options/othertest.TestPackertoolsFunctions.test_packertool_arm_x86" result="PASS" /><testcase id="Crosswalk_appPathtest/2" purpose="Validate if packer tool can work well with other options/othertest.TestPackertoolsFunctions.test_packertool_undefinedOption" result="PASS" /><testcase id="Crosswalk_appPathtest/3" purpose="Validate if packer tool can work well with other options/othertest.TestPackertoolsFunctions.test_packertool_verbose" result="PASS" /><testcase id="Crosswalk_compressortest/1" purpose="Validate if the Packaging Tool works well with compressor option/compressortest.TestPackertoolsFunctions.test_compressor_minifyjs" result="PASS" /><testcase id="Crosswalk_compressortest/2" purpose="Validate if the Packaging Tool works well with compressor option/compressortest.TestPackertoolsFunctions.test_compressor_nominify" result="PASS" /><testcase id="Crosswalk_descriptiontest/1" purpose="Validate if the Packaging Tool works well with description option/descriptiontest.TestPackertoolsFunctions.test_description" result="PASS" /><testcase id="Crosswalk_descriptiontest/10" purpose="Validate if the Packaging Tool works well with description option/descriptiontest.TestPackertoolsFunctions.test_description_symbol" result="PASS" /><testcase id="Crosswalk_descriptiontest/2" purpose="Validate if the Packaging Tool works well with description option/descriptiontest.TestPackertoolsFunctions.test_description_backslashSingleQuote" result="PASS" /><testcase id="Crosswalk_descriptiontest/3" purpose="Validate if the Packaging Tool works well with description option/descriptiontest.TestPackertoolsFunctions.test_description_chinese" result="PASS" /><testcase id="Crosswalk_descriptiontest/4" purpose="Validate if the Packaging Tool works well with description option/descriptiontest.TestPackertoolsFunctions.test_description_doubleQuote" result="PASS" /><testcase id="Crosswalk_descriptiontest/5" purpose="Validate if the Packaging Tool works well with description option/descriptiontest.TestPackertoolsFunctions.test_description_longString" result="PASS" /><testcase id="Crosswalk_descriptiontest/6" purpose="Validate if the Packaging Tool works well with description option/descriptiontest.TestPackertoolsFunctions.test_description_numOtherSymbol" result="PASS" /><testcase id="Crosswalk_descriptiontest/7" purpose="Validate if the Packaging Tool works well with description option/descriptiontest.TestPackertoolsFunctions.test_description_numSpace" result="PASS" /><testcase id="Crosswalk_descriptiontest/8" purpose="Validate if the Packaging Tool works well with description option/descriptiontest.TestPackertoolsFunctions.test_description_numSymbol" result="PASS" /><testcase id="Crosswalk_descriptiontest/9" purpose="Validate if the Packaging Tool works well with description option/descriptiontest.TestPackertoolsFunctions.test_description_singleQuote" result="PASS" /><testcase id="Crosswalk_Enable_Move_App" purpose="Validate the Crosswalk enable to create apps which can be moved to sd card" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2667 XWALK-2667]]</testcase><testcase id="Crosswalk_indextest/1" purpose="Validate if packer tool can work well with index file in different path/indextest.TestPackertoolsFunctions.test_index1" result="PASS" /><testcase id="Crosswalk_indextest/2" purpose="Validate if packer tool can work well with index file in different path/indextest.TestPackertoolsFunctions.test_index2" result="PASS" /><testcase id="Crosswalk_indextest/3" purpose="Validate if packer tool can work well with index file in different path/indextest.TestPackertoolsFunctions.test_index3" result="PASS" /><testcase id="Crosswalk_manifesttest/1" purpose="Validate if packer tool can work well with manifest file in different path/manifesttest.TestPackertoolsFunctions.test_manifest1" result="PASS" /><testcase id="Crosswalk_manifesttest/2" purpose="Validate if packer tool can work well with manifest file in different path/manifesttest.TestPackertoolsFunctions.test_manifest2" result="PASS" /><testcase id="Crosswalk_manifesttest/3" purpose="Validate if packer tool can work well with manifest file in different path/manifesttest.TestPackertoolsFunctions.test_manifest3" result="PASS" /><testcase id="Crosswalk_manifesttest/4" purpose="Validate if packer tool can work well with manifest file in different path/manifesttest.TestPackertoolsFunctions.test_manifest4" result="PASS" /><testcase id="Crosswalk_Packer_Tool_AppPath_Duplicate" purpose="Validate if the Packaging Tool enable the duplicate app-local-path options" result="PASS" /><testcase id="Crosswalk_Packer_Tool_AppPath_Manifest" purpose="Validate if the Packaging Tool enable set app-local-path and manifest options at the same time" result="PASS" /><testcase id="Crosswalk_Packer_Tool_AppPath_Manifest_AppUrl" purpose="Validate if the Packaging Tool enable set app-local-path, manifest and app-url options at the same time" result="PASS" /><testcase id="Crosswalk_Packer_Tool_AppUrl_AppPath" purpose="Validate if the Packaging Tool enable set app-url and app-local-path options at the same time" result="PASS" /><testcase id="Crosswalk_Packer_Tool_AppUrl_Duplicate" purpose="Validate if the Packaging Tool enable the duplicate app-url options" result="PASS" /><testcase id="Crosswalk_Packer_Tool_AppUrl_Manifest" purpose="Validate if the Packaging Tool enable set app-url and manifest options at the same time" result="PASS" /><testcase id="Crosswalk_Packer_Tool_AppVersion_DiffUpdate" purpose="Validate if Crosswalk enable update webapp with the different app-version" result="PASS" /><testcase id="Crosswalk_Packer_Tool_AppVersion_SameUpdate" purpose="Validate if Crosswalk enable update webapp with the same app-version" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Change_the_Icon" purpose="Validate user could specify PNG app icon successfully" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/1" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd161" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/10" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd170" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/100" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd17" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/101" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd18" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/102" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd19" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/103" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd2" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/104" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd20" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/105" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd21" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/106" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd22" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/107" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd23" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/108" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd24" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/109" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd25" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/11" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd171" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/110" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd26" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/111" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd27" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/112" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd28" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/113" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd29" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/114" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd3" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/115" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd30" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/116" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd31" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/117" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd32" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/118" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd33" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/119" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd34" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/12" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd172" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/120" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd35" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/121" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd36" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/122" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd37" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/123" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd38" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/124" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd39" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/125" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd4" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/126" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd40" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/127" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd41" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/128" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd42" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/129" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd43" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/13" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd173" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/130" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd44" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/131" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd45" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/132" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd46" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/133" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd47" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/134" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd48" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/135" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd49" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/136" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd5" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/137" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd50" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/138" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd51" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/139" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd52" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/14" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd174" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/140" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd53" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/141" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd54" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/142" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd55" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/143" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd56" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/144" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd57" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/145" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd58" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/146" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd59" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/147" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd6" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/148" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd60" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/149" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd61" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/15" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd175" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/150" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd62" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/151" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd63" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/152" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd64" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/153" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd65" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/154" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd66" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/155" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd67" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/156" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd68" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/157" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd69" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/158" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd7" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/159" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd70" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/16" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd176" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/160" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd71" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/161" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd72" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/162" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd73" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/163" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd74" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/164" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd75" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/165" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd76" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/166" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd77" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/167" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd78" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/168" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd79" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/169" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd8" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/17" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd177" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/170" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd80" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/171" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd81" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/172" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd82" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/173" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd83" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/174" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd84" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/175" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd85" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/176" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd86" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/177" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd87" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/178" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd88" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/179" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd89" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/18" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd178" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/180" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd9" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/181" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd90" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/182" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd91" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/183" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd92" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/184" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd93" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/185" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd94" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/186" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd95" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/187" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd96" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/188" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd97" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/189" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd98" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/19" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd179" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/190" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd99" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/2" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd162" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/20" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd180" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/21" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd181" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/22" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd182" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/23" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd183" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/24" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd184" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/25" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd185" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/26" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd186" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/27" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd187" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/28" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd188" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/29" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd189" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/3" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd163" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/30" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd190" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/31" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd1" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/32" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd10" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/33" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd100" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/34" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd101" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/35" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd102" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/36" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd103" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/37" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd104" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/38" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd105" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/39" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd106" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/4" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd164" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/40" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd107" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/41" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd108" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/42" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd109" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/43" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd11" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/44" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd110" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/45" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd111" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/46" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd112" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/47" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd113" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/48" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd114" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/49" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd115" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/5" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd165" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/50" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd116" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/51" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd117" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/52" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd118" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/53" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd119" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/54" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd12" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/55" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd120" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/56" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd121" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/57" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd122" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/58" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd123" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/59" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd124" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/6" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd166" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/60" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd125" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/61" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd126" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/62" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd127" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/63" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd128" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/64" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd129" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/65" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd13" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/66" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd130" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/67" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd131" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/68" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd132" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/69" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd133" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/7" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd167" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/70" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd134" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/71" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd135" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/72" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd136" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/73" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd137" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/74" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd138" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/75" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd139" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/76" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd14" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/77" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd140" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/78" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd141" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/79" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd142" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/8" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd168" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/80" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd143" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/81" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd144" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/82" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd145" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/83" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd146" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/84" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd147" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/85" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd148" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/86" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd149" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/87" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd15" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/88" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd150" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/89" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd151" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/9" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_negative_cmd169" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/90" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd152" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/91" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd153" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/92" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd154" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/93" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd155" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/94" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd156" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/95" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd157" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/96" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd158" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/97" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd159" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/98" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd16" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Check/99" purpose="Check if packer tool work properly/tests.TestCaseUnit.test_positive_cmd160" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Disable_Xwalk_Extensions" purpose="Validate the 'disable-xwlak-extension' option can work well" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Fullscreen" purpose="Validate if the Packaging Tool enable the fullscreen option" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Icon_BigPic" purpose="Validate if the Packaging Tool enable big picture in icon option" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Icon_Bmp" purpose="Validate if the Packaging Tool enable the 'bmp' icon option" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Icon_InvalidFile" purpose="Validate if the Packaging Tool enable invalid file in icon option" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Icon_Jpg" purpose="Validate if the Packaging Tool enable the 'jpg' icon option" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Icon_Png" purpose="Validate if the Packaging Tool enable the 'png' icon option" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Icon_TwoPic" purpose="Validate if the Packaging Tool enable two icon options" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Keep_Screen_On" purpose="Validate if the Packaging Tool works well with the keep-screen-on option" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Manifest_Duplicate" purpose="Validate if the Packaging Tool enable set duplicate manifest options" result="PASS" /><testcase id="Crosswalk_Packer_Tool_OnWindows_HostApp" purpose="Validate the Crosswalk Packaging Tool can package app with url on Windows host" result="PASS" /><testcase id="Crosswalk_Packer_Tool_OnWindows_Manifest" purpose="Validate the Crosswalk Packaging Tool can package app with Manifest on Windows host" result="PASS" /><testcase id="Crosswalk_Packer_Tool_OnWindows_PackageApp" purpose="Validate the Crosswalk Packaging Tool can package app on Windows host" result="PASS" /><testcase id="Crosswalk_Packer_Tool_OnWindows_Version" purpose="Validate the Crosswalk is able to get the Packaging Tool version info on Windows host" result="PASS" /><testcase id="Crosswalk_Packer_Tool_Orientation_Portrait" purpose="Validate if the Packaging Tool enable the 'portrait' orientation option" result="PASS" /><testcase id="Crosswalk_Packer_Tool_PythonVersion_2.0.1" purpose="Validate if the Packaging Tool only support Python 2.7+" result="PASS" /><testcase id="Crosswalk_Packer_Tool_PythonVersion_2.7.6" purpose="Validate if the Packaging Tool support Python 2.7.6" result="PASS" /><testcase id="Crosswalk_Packer_Tool_PythonVersion_3.0" purpose="Validate if the Packaging Tool support Python 3.0" result="PASS" /><testcase id="Crosswalk_Packer_Tool_PythonVersion_3.4" purpose="Validate if the Packaging Tool support Python 3.4" result="PASS" /><testcase id="Crosswalk_Packer_Tool_TempFile_HostApp" purpose="Validate the Packaging Tool create temporary directories in system 'temp' location with 'app-url'" result="PASS" /><testcase id="Crosswalk_Packer_Tool_TempFile_Manifest" purpose="Validate the Packaging Tool create temporary directories in system 'temp' location with 'manifest'" result="PASS" /><testcase id="Crosswalk_Packer_Tool_TempFile_Package" purpose="Validate the Packaging Tool create temporary directories in system 'temp' location with 'app-root' and 'app-local-path'" result="PASS" /><testcase id="Crosswalk_permissiontest/1" purpose="Validate if packer tool can work well with parameter permission of manifest/permissiontest.TestPackertoolsFunctions.test_permission_duplicate" result="PASS" /><testcase id="Crosswalk_permissiontest/2" purpose="Validate if packer tool can work well with parameter permission of manifest/permissiontest.TestPackertoolsFunctions.test_permission_duplicate2" result="PASS" /><testcase id="Crosswalk_permissiontest/3" purpose="Validate if packer tool can work well with parameter permission of manifest/permissiontest.TestPackertoolsFunctions.test_permission_lowercase" result="PASS" /><testcase id="Crosswalk_permissiontest/4" purpose="Validate if packer tool can work well with parameter permission of manifest/permissiontest.TestPackertoolsFunctions.test_permission_more2" result="PASS" /><testcase id="Crosswalk_permissiontest/5" purpose="Validate if packer tool can work well with parameter permission of manifest/permissiontest.TestPackertoolsFunctions.test_permission_uppercase" result="PASS" /><testcase id="Crosswalk_permissiontest/6" purpose="Validate if packer tool can work well with parameter permission of manifest/permissiontest.TestPackertoolsFunctions.test_permission_value3" result="PASS" /><testcase id="Crosswalk_permissiontest/7" purpose="Validate if packer tool can work well with parameter permission of manifest/permissiontest.TestPackertoolsFunctions.test_permission_value4" result="PASS" /><testcase id="Crosswalk_projectdirtest/1" purpose="Validate if packer tool can work well with project-dir option/projectdirtest.TestPackertoolsFunctions.test_projectdir_existDir" result="PASS" /><testcase id="Crosswalk_projectdirtest/2" purpose="Validate if packer tool can work well with project-dir option/projectdirtest.TestPackertoolsFunctions.test_projectdir_existFile" result="PASS" /><testcase id="Crosswalk_projectdirtest/3" purpose="Validate if packer tool can work well with project-dir option/projectdirtest.TestPackertoolsFunctions.test_projectdir_readOnly" result="PASS" /><testcase id="Crosswalk_Remote_Debugging_Default" purpose="Validate Crosswalk could debug by remote host when the web app is packaged with remote debugging by default" result="PASS" /><testcase id="Crosswalk_ShareMode_HostApp" purpose="Validate the Crosswalk support share mode of host app" result="PASS" /><testcase id="Crosswalk_ShareMode_Manifest" purpose="Validate the Crosswalk support share mode of manifest inputs" result="PASS" /><testcase id="Crosswalk_ShareMode_PackageApp" purpose="Validate the Crosswalk support share mode of package app" result="PASS" /><testcase id="Crosswalk_versionCode/1" purpose="Validate if packer tool can work well with app-versionCode and app-versionCodeBase option/versionCodetest.TestPackertoolsFunctions.test_manifest_no_versionCode" result="PASS" /><testcase id="Crosswalk_versionCode/2" purpose="Validate if packer tool can work well with app-versionCode and app-versionCodeBase option/versionCodetest.TestPackertoolsFunctions.test_manifest_versionCode" result="PASS" /><testcase id="Crosswalk_versionCode/3" purpose="Validate if packer tool can work well with app-versionCode and app-versionCodeBase option/versionCodetest.TestPackertoolsFunctions.test_manifest_versionCodeBase" result="PASS" /><testcase id="Crosswalk_versionCode/4" purpose="Validate if packer tool can work well with app-versionCode and app-versionCodeBase option/versionCodetest.TestPackertoolsFunctions.test_manifest_version_versionCode" result="PASS" /><testcase id="Crosswalk_WebGL_API_Disable" purpose="Validate if Crosswalk support disable the WebGL API" result="PASS" /><testcase id="Crosswalk_WebGL_API_Enable" purpose="Validate if Crosswalk enable the WebGL API" result="PASS" /><testcase id="Crosswalk_WebRTC_API_Disable" purpose="Validate if Crosswalk support disable the WebRTC API" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4415 XWALK-4415]]</testcase><testcase id="Crosswalk_WebRTC_API_Enable" purpose="Validate if Crosswalk enable the WebRTC API" result="PASS" /></category><category name="Crosswalk WRT/Runtime Core"><testcase id="Crosswalk_Disk_Cache_Size" purpose="Validate if the command line '--disk-cache-size' option can work well" result="PASS" /><testcase id="Crosswalk_Manifest_Icon_117pixel" purpose="Validate the Manifest icon of web app is display normally" result="PASS" /><testcase id="Crosswalk_Manifest_Icon_69pixel" purpose="Validate the Manifest icon of web app is display normally" result="PASS" /><testcase id="Crosswalk_Manifest_Icon_Chinese" purpose="Validate if app can not be installed when icon is chinese" result="PASS" /><testcase id="Crosswalk_Manifest_Icon_NoFile" purpose="Validate if app can not be packing when no icon file" result="PASS" /><testcase id="Crosswalk_Manifest_Icon_Null" purpose="Validate if package app successfully when not specify picture" result="PASS" /><testcase id="Crosswalk_Manifest_Icon_ThreeIcon" purpose="Validate if app can not be packing when no icon file" result="PASS" /><testcase id="Crosswalk_Manifest_Icon_TwoIcon" purpose="Validate if app can not be packing when no icons file" result="PASS" /><testcase id="Crosswalk_Manifest_Icon_ValueNull" purpose="Validate if app can be installed when icon value is null" result="PASS" /><testcase id="Crosswalk_Manifest_Minimal_Manifest" purpose="Validate if package app successfully use minimal manifest file" result="PASS" /><testcase id="Crosswalk_Manifest_Negative_NullValueCSP" purpose="Validate if pakaging successfully when null csp value in manifest" result="PASS" /></category><category name="Crosswalk WRT/Security"><testcase id="Crosswalk_permissiontest/1" purpose="Validate if permission option of manifest can work well with other options/permissiontest.TestSecurityFunctions.test_permission_chinese" result="PASS" /><testcase id="Crosswalk_permissiontest/2" purpose="Validate if permission option of manifest can work well with other options/permissiontest.TestSecurityFunctions.test_permission_noapi" result="PASS" /><testcase id="Crosswalk_permissiontest/3" purpose="Validate if permission option of manifest can work well with other options/permissiontest.TestSecurityFunctions.test_permission_null" result="PASS" /><testcase id="Crosswalk_permissiontest/4" purpose="Validate if permission option of manifest can work well with other options/permissiontest.TestSecurityFunctions.test_permission_splite" result="PASS" /><testcase id="Crosswalk_Permission_Field_Contacts" purpose="Validate if enable the 'Contacts' permission" result="PASS" /><testcase id="Crosswalk_Permission_Field_Geolocation" purpose="Validate if enable the 'Geolocation' permission" result="PASS" /><testcase id="Crosswalk_Permission_Field_Messaging" purpose="Validate if enable the 'messaging' permission" result="PASS" /><testcase id="Crosswalk_Permission_Undefined_Contacts" purpose="Validate if unsupported the related API when undefined the 'Contacts' permission" result="PASS" /><testcase id="Crosswalk_Permission_Undefined_Geolocation" purpose="Validate if unsupported the related API when undefined the 'Geolocation' permission" result="PASS" /><testcase id="Crosswalk_Permission_Undefined_Messaging" purpose="Validate if unsupported the related API when undefined the 'messaging' permission" result="PASS" /><testcase id="Crosswalk_WebApp_Certificate_Trusted" purpose="Validate if support accept the untrused security certificate website" result="PASS" /><testcase id="Crosswalk_WebApp_Certificate_Trusted_ReInstall" purpose="Validate if support accept the reinstalled untrused security certificate website" result="PASS" /><testcase id="Crosswalk_WebApp_Certificate_Trusted_ReOpen" purpose="Validate if support accept the reopend untrused security certificate website" result="PASS" /><testcase id="Crosswalk_WebApp_Certificate_Untrusted" purpose="Validate if support refuse the untrused security certificate website" result="PASS" /><testcase id="Crosswalk_WebApp_Certificate_Untrusted_ReInstall" purpose="Validate if support refuse the reinstalled untrused security certificate website" result="PASS" /><testcase id="Crosswalk_WebApp_Certificate_Untrusted_ReOpen" purpose="Validate if support refuse the reopened untrused security certificate website" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Connect_Src_None" purpose="Validate if enable 'none' value of csp directives: connect-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Connect_Src_Value" purpose="Validate if enable csp directives: connect-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Frame_Src_None" purpose="Validate if enable 'none' value of csp directives: frame-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Frame_Src_Value" purpose="Validate if enable csp directives: frame-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Img_Src_None" purpose="Validate if enable 'none' value of csp directives: img-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Img_Src_Value" purpose="Validate if enable csp directives: img-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Media_Src_None" purpose="Validate if enable 'none' value of csp directives: media-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Media_Src_Value" purpose="Validate if enable csp directives: media-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Script_Src_None" purpose="Validate if enable 'none' value of csp directives: script-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Script_Src_Self" purpose="Validate if enable 'self' value of csp directives: script-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Script_Src_Unsafe" purpose="Validate if enable csp directives: script-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Style_Src_None" purpose="Validate if enable 'none' value of csp directives: style-src in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_CSP_Style_Src_Value" purpose="Validate if enable csp directives: style-src in Crosswalk" result="PASS" /></category><category name="Crosswalk WRT/Shared Mode"><testcase id="Crosswalk_arch_arm_shared" purpose="Validate descriptive error message prompt if install shared arm app in arm platform" result="PASS" /><testcase id="Crosswalk_arch_arm_x86_shared" purpose="Validate the app built with shared mode can run on both of the IA and ARM devices" result="PASS" /><testcase id="Crosswalk_arch_mismatch_arm_embeded" purpose="Validate descriptive error message prompt if install x86 app in arm platform" result="PASS" /><testcase id="Crosswalk_arch_mismatch_arm_shared_x86_2" purpose="Validate descriptive error message prompt if install shared arm app in x86 platform with x86 RuntimeLib" result="PASS" /><testcase id="Crosswalk_arch_mismatch_arm_shared_x86_crosswalk" purpose="Validate descriptive error message prompt if install shared arm app in arm platform with x86 RuntimeLib" result="PASS" /><testcase id="Crosswalk_arch_mismatch_x86_embeded" purpose="Validate descriptive error message prompt if install arm app in x86 platform" result="PASS" /><testcase id="Crosswalk_arch_mismatch_x86_shared_arm_2" purpose="Validate descriptive error message prompt if install shared x86 app in arm platform with arm RuntimeLib" result="PASS" /><testcase id="Crosswalk_arch_mismatch_x86_shared_arm_crosswalk" purpose="Validate descriptive error message prompt if install shared x86 app in x86 platform with arm RuntimeLib" result="PASS" /><testcase id="Crosswalk_arch_x86_shared" purpose="Validate descriptive error message prompt if install shared x86 app in x86 platform" result="PASS" /><testcase id="Crosswalk_Library_Icon_Check" purpose="Validate if Crosswalk icon display normally" result="PASS" /><testcase id="Crosswalk_Library_Name_Check" purpose="Validate the installer name is about with Crosswalk" result="PASS" /><testcase id="Crosswalk_shared_download_break" purpose="Validate the app built with shared mode can run on both of the IA and ARM devices" result="PASS" /><testcase id="Crosswalk_ShareMode_Library_Install_test" purpose="Check install xwalk lib" result="PASS" /><testcase id="Crosswalk_ShareMode_Library_Uninstall_test" purpose="Check uninstall xwalk lib" result="PASS" /><testcase id="Crosswalk_ShareMode_Uninstall_WithAppRunning_test" purpose="Check uninstall web app with app running" result="PASS" /></category><category name="Crosswalk WRT/Upgrade"><testcase id="Crosswalk_Embedded_Embedded_Version_cookie" purpose="Validate the crosswalk can work well after upgrading embedded mode test app version when test with cookie" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3332  XWALK-3332]]</testcase><testcase id="Crosswalk_Embedded_Embedded_Version_other" purpose="Validate the crosswalk can work well after upgrading embedded mode test app version when test with localStorage/IndexDB/Web SQL Database" result="PASS" /><testcase id="Crosswalk_Shared_Embedded_Version_cookie" purpose="Validate the crosswalk can work well after upgrading test app version from shared mode to embedded mode when test with cookie" result="PASS" /><testcase id="Crosswalk_Shared_Embedded_Version_other" purpose="Validate the crosswalk can work well after upgrading test app version from shared mode to embedded mode when test with localStorage/IndexDB/Web SQL Database" result="PASS" /><testcase id="Crosswalk_Shared_Shared_Binary_Lib_cookie" purpose="Validate the crosswalk can work well after upgrading shared mode test app build using higher Crosswalk binary and runtime library when test with cookie" result="PASS" /><testcase id="Crosswalk_Shared_Shared_Binary_Lib_other" purpose="Validate the crosswalk can work well after upgrading shared mode test app build using higher Crosswalk binary and runtime library when test with localStorage/IndexDB/Web SQL Database" result="PASS" /><testcase id="Crosswalk_Shared_Shared_Version_cookie" purpose="Validate the crosswalk can work well after upgrading shared mode test app version when test with cookie" result="FAIL" /><testcase id="Crosswalk_Shared_Shared_Version_other" purpose="Validate the crosswalk can work well after upgrading shared mode test app version when test with localStorage/IndexDB/Web SQL Database" result="PASS" /></category><category name="Crosswalk WRT/User Experience"><testcase id="Crosswalk_CopyAndPaste_Copy_Hyperlink" purpose="Validate if could copy hyperlink" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Copy_MailAddress" purpose="Validate if could copy MailAddress" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Copy_NativeToWeb" purpose="Validate crosswalk support copy and paste from native to web application" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Copy_Paragraph" purpose="Validate if could copy Paragraph" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Copy_PhoneNumber" purpose="Validate if could copy PhoneNumber" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Copy_Photo" purpose="Validate if could copy Photo" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Copy_SeveralCopies" purpose="Validate if could copy SeveralCopies" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Copy_ToNativeapp" purpose="Validate if could copy ToNativeapp" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Copy_ToWebapp" purpose="Validate if could copy ToWebapp" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Cross_Application" purpose="Validate crosswalk support copy and paste cross application" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_SelectAll_Copy" purpose="Validate if could copy Select all" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Selected_Copy" purpose="Validate if could copy Selected_Copy" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Selected_Cut" purpose="Validate if could cut text" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_Selected_UI" purpose="Validate if the UI display normal" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_SelectOneChar_Copy" purpose="Validate if could select on char and copy, paste" result="PASS" /><testcase id="Crosswalk_CopyAndPaste_SelectSpecialChar_Copy" purpose="Validate if could select speci char and copy, paste" result="PASS" /><testcase id="Crosswalk_Lock_And_Unlock_Screen" purpose="Validate Crosswalk suppor lock and unlock screen when running Web Apps" result="PASS" /><testcase id="Crosswalk_System_Interruption" purpose="Validate Crosswalk support Web App work normally that system interruption (popup, audio effect) when running Web Apps" result="PASS" /><testcase id="Crosswalk_UseChromeBlacklist_WebGLNotSupport_ARM" purpose="Validate if display normal when browser not support WebGL on ARM" result="PASS">webgl sample instead of use_chrome_blacklist_tests apk due to the connection issue of get.webgl.org</testcase><testcase id="Crosswalk_UseChromeBlacklist_WebGLSupport_ARM" purpose="Validate if display normal when browser support WebGL on ARM" result="PASS">webgl sample instead of use_chrome_blacklist_tests apk due to the connection issue of get.webgl.org</testcase><testcase id="Crosswalk_UseChromeBlacklist_WebGLSupport_IA" purpose="Validate if display normal when support WebGL on IA" result="PASS">webgl sample instead of use_chrome_blacklist_tests apk due to the connection issue of get.webgl.org</testcase><testcase id="Crosswalk_WebApps_Volume" purpose="Validate if web app sound volume work fine on Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_BackKey_Back" purpose="Validate if Crosswalk support go back to previous page by back key" result="PASS" /><testcase id="Crosswalk_WebApp_BackKey_Exit" purpose="Validate if Crosswalk support stop activity by back key" result="PASS" /><testcase id="Crosswalk_WebApp_HTML5_Notification" purpose="Validate if enable the feature of HTML5 Notification in Crosswalk" result="PASS" /><testcase id="Crosswalk_WebApp_HW_KEY" purpose="Validate if the HW Key work well in Crosswalk App" result="PASS" /><testcase id="Crosswalk_WebApp_Integration_NoCursors" purpose="Validate if Crosswalk support Web Apps interface no cursors" result="PASS" /><testcase id="Crosswalk_WebApp_Integration_Switch" purpose="Validate if Crosswalk support Web Apps could be switch successfully" result="PASS" /><testcase id="Crosswalk_WebApp_Orientation" purpose="Validate Crosswalk support rotate between portrait orientation screen and landscape orientation screen" result="PASS" /><testcase id="Crosswalk_WebApp_Terminated_TaskManager" purpose="Validate if Web App could be termined in task manager" result="PASS" /><testcase id="Crosswalk_WebApp_Touch_Gesture_Click" purpose="Validate if Crosswalk support click gesture on Web Apps" result="PASS" /><testcase id="Crosswalk_WebApp_Touch_Gesture_Scroll" purpose="Validate if Crosswalk support scroll gesture on Web Apps" result="PASS" /><testcase id="Crosswalk_WebApp_Touch_Gesture_Swipe" purpose="Validate if Crosswalk support swipe gesture on Web Apps" result="PASS" /><testcase id="Crosswalk_WebApp_Video_HWAccelerate" purpose="Validate if Crosswalk support HW accelerated HTML5 video" result="PASS" /><testcase id="Crosswalk_WebApp_VKB_Basic" purpose="Validate if the Virtual keyboard work fine in Crosswalk App" result="PASS" /><testcase id="Crosswalk_WebApp_VKB_ContentSwitch" purpose="Validate if the Virtual keyboard ContentSwitch work fine in Crosswalk App" result="PASS" /><testcase id="Crosswalk_WebApp_VKB_Rotation" purpose="Validate if the Virtual keyboard Rotation work fine in Crosswalk App" result="PASS" /></category><category name="Crosswalk Use Cases/Embedding API"><testcase id="AnimatableXWalkView" purpose="Animatable XWalkView Test" result="PASS" /><testcase id="ContactExtension" purpose="ContactExtension Test" result="PASS" /><testcase id="Extension" purpose="Extension Test" result="PASS" /><testcase id="FullScreen" purpose="FullScreen Test" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3889 XWALK-3889]]</testcase><testcase id="LoadAppFromManifest" purpose="Load app from manifest Test" result="PASS" /><testcase id="MultiInstance" purpose="Multi instance Test" result="PASS" /><testcase id="MultipleSurfaceViews" purpose="Multiple SurfaceViews Test" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2012 XWALK-2012]]</testcase><testcase id="MultipleTextureViews" purpose="Multiple TextureViews Test" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4262 XWALK-4262]]</testcase><testcase id="OnCreateWindowRequested" purpose="OnCreateWindowRequested() Test" result="PASS" /><testcase id="onHideonShow" purpose="onHide() onShow() Test" result="PASS" /><testcase id="onIconAvailableOnReceivedIcon" purpose="onIconAvailable() onReceivedIcon() Test" result="PASS" /><testcase id="PauseJsTimers" purpose="Pause js timers Test" result="PASS" /><testcase id="ResourceClientUIClient" purpose="XWalkResourceClient And XWalkUIClient Test" result="PASS" /><testcase id="Versions" purpose="Versions Test" result="PASS" /><testcase id="XWalkBlockAndErrorRedirection" purpose="XWalkBlockAndErrorRedirection Test" result="PASS" /><testcase id="XWalkNavigation" purpose="XWalkNavigation Test" result="PASS" /><testcase id="XWalkPreferences" purpose="XWalkPreferences Test" result="PASS" /><testcase id="XWalkViewUIInflation" purpose="XWalkView UI inflation Test" result="PASS" /><testcase id="XWalkViewWithClearCache" purpose="clearCache() Test With XWalkInitializer" result="PASS" /><testcase id="XWalkViewWithDownloadListener" purpose="XWalkViewWithDownloadListener Test" result="PASS" /><testcase id="XWalkViewWithLoadImage" purpose="onActivityResult() Test" result="PASS" /><testcase id="XWalkViewWithRedirection" purpose="onPageLoadStopped() Test" result="PASS" /><testcase id="XWalkViewWithTransparent" purpose="setZOrderOnTop() Test" result="PASS" /><testcase id="ZoomInAndOutXwalkView" purpose="ZoomInAndOutXwalkView Test" result="PASS" /></category><category name="Crosswalk Use Cases/WebAPI"><testcase id="CSP/1" purpose="CSP/CSP.Usecase WebAPI/Security/CSP/csp-none Test" result="PASS" /><testcase id="CSP/2" purpose="CSP/CSP.Usecase WebAPI/Security/CSP/csp-self Test" result="PASS" /><testcase id="CSP/3" purpose="CSP/CSP.Usecase WebAPI/Security/CSP/csp-asterisk Test" result="PASS" /><testcase id="CSP/4" purpose="CSP/CSP.Usecase WebAPI/Security/CSP/csp-cross-origin Test" result="PASS" /><testcase id="CSP/5" purpose="CSP/CSP.Usecase WebAPI/Security/CSP/default-src_asterisk Test" result="PASS" /><testcase id="CSP/6" purpose="CSP/CSP.Usecase WebAPI/Security/CSP/sandbox-same-origin-allow-scripts Test" result="PASS" /><testcase id="CSP/7" purpose="CSP/CSP.Usecase WebAPI/Security/CSP/script-src_inline_eval Test" result="PASS" /><testcase id="CSP/8" purpose="CSP/CSP.Usecase WebAPI/Security/CSP/style-src_self Test" result="PASS" /><testcase id="CSP/9" purpose="CSP/CSP.Usecase WebAPI/Security/CSP/csp-default-src-self Test" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3844 XWALK-3844]]</testcase><testcase id="Es6NumericLiterals" purpose="Es6NumericLiterals" result="PASS" /><testcase id="FileApiPersistent" purpose="FileApiPersistent" result="PASS" /><testcase id="Jsenhance" purpose="Jsenhance" result="PASS" /><testcase id="RawSockets" purpose="Raw Sockets" result="PASS" /><testcase id="WebSocket" purpose="WebSocket" result="PASS" /></category><category name="Crosswalk Use Cases/WRT"><testcase id="cancle" purpose="cancle Test" result="PASS" /><testcase id="ChromeProtocol" purpose="ChromeProtocol Test" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3594 XWALK-3594]]</testcase><testcase id="command" purpose="command Test" result="PASS" /><testcase id="CookieCheck" purpose="CookieCheck Test" result="PASS" /><testcase id="CopyPasteNative" purpose="CopyPasteNative Test" result="PASS" /><testcase id="Crosswalk_absolutePath/1" purpose="Validate if the packer tool can work well with run script make_apk.py in different path/absolutePath.TestPackertoolsFunctions.test_absolutePath_hostApp" result="PASS" /><testcase id="Crosswalk_absolutePath/2" purpose="Validate if the packer tool can work well with run script make_apk.py in different path/absolutePath.TestPackertoolsFunctions.test_absolutePath_manifest" result="PASS" /><testcase id="Crosswalk_absolutePath/3" purpose="Validate if the packer tool can work well with run script make_apk.py in different path/absolutePath.TestPackertoolsFunctions.test_absolutePath_package" result="PASS" /><testcase id="Crosswalk_anyLocation/1" purpose="Validate if the packer tool can work well with set the make_apk.py to environment path/anyLocation.TestPackertoolsFunctions.test_anyLocation_hostApp" result="PASS" /><testcase id="Crosswalk_anyLocation/2" purpose="Validate if the packer tool can work well with set the make_apk.py to environment path/anyLocation.TestPackertoolsFunctions.test_anyLocationtest_manifest" result="PASS" /><testcase id="Crosswalk_anyLocation/3" purpose="Validate if the packer tool can work well with set the make_apk.py to environment path/anyLocation.TestPackertoolsFunctions.test_anyLocationtest_package" result="PASS" /><testcase id="Crosswalk_compressor" purpose="Validate if the Packaging Tool works well with compressor option" result="PASS" /><testcase id="Crosswalk_compressorcss" purpose="Validate if the Packaging Tool works well with compressor option and the value is css" result="PASS" /><testcase id="Crosswalk_helpversion/1" purpose="Validate if the Packaging Tool works well with help and version options/helpversion.TestPackertoolsFunctions.test_packertool_help" result="PASS" /><testcase id="Crosswalk_helpversion/2" purpose="Validate if the Packaging Tool works well with help and version options/helpversion.TestPackertoolsFunctions.test_packertool_version" result="PASS" /><testcase id="Crosswalk_projectdir" purpose="Validate if the Packaging Tool works well with project-dir options" result="PASS" /><testcase id="Crosswalk_projectonly/1" purpose="Validate if the Packaging Tool works well with project-only options/projectonly.TestPackertoolsFunctions.test_projectonly1" result="PASS" /><testcase id="Crosswalk_projectonly/2" purpose="Validate if the Packaging Tool works well with project-only options/projectonly.TestPackertoolsFunctions.test_projectonly2" result="PASS" /><testcase id="Crosswalk_temporary/1" purpose="Validate if the Packaging Tool create a temporary floder during building/temporary.TestPackertoolsFunctions.test_temp_hostApp" result="PASS" /><testcase id="Crosswalk_temporary/2" purpose="Validate if the Packaging Tool create a temporary floder during building/temporary.TestPackertoolsFunctions.test_temp_manifest" result="PASS" /><testcase id="Crosswalk_temporary/3" purpose="Validate if the Packaging Tool create a temporary floder during building/temporary.TestPackertoolsFunctions.test_temp_package" result="PASS" /><testcase id="Crosswalk_versionupdate" purpose="Validate if the Packaging Tool works well when update the version value" result="PASS" /><testcase id="disablenetwork" purpose="disablenetwork Test" result="PASS" /><testcase id="downloadsimul" purpose="downloadsimul Test" result="PASS" /><testcase id="ExtensionManager" purpose="Verifies the extension_manage.py should work properly" result="PASS" /><testcase id="ExtensionPermission" purpose="ExtensionPermission Test" result="PASS" /><testcase id="ImmersiveFullscreen" purpose="ImmersiveFullscreen Test" result="PASS" /><testcase id="InputDate" purpose="InputDate Test" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3330 XWALK-3330]]</testcase><testcase id="LocalDownload" purpose="LocalDownload Test" result="PASS" /><testcase id="LZMACompressionUI" purpose="LZMACompressionUI Test" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4326 XWALK-4326]]</testcase><testcase id="manifestjson" purpose="manifestjson Test" result="PASS" /><testcase id="manifestxml" purpose="manifestxml Test" result="PASS" /><testcase id="MisarchEmbeddedArm" purpose="MisarchEmbeddedArm Test" result="PASS" /><testcase id="MisarchEmbeddedIA" purpose="MisarchEmbeddedIA Test" result="PASS" /><testcase id="MisarchSharedArm" purpose="MisarchSharedArm Test" result="PASS" /><testcase id="MisarchSharedIA" purpose="MisarchSharedIA Test" result="PASS" /><testcase id="OpenFile" purpose="OpenFile Test" result="PASS" /><testcase id="PackertoolIcon" purpose="PackertoolIcon Test" result="PASS" /><testcase id="PackertoolOptions" purpose="PackertoolOptions Test" result="PASS" /><testcase id="PackertoolOptions2" purpose="PackertoolOptions2 Test" result="PASS" /><testcase id="PackertoolXpk" purpose="PackertoolXpk Test" result="PASS" /><testcase id="PDFDownload Test" purpose="PDFDownload Test" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-3108 XWALK-3108]]</testcase><testcase id="PermissionApiContacts" purpose="PermissionApiContacts Test" result="PASS" /><testcase id="poweroff" purpose="poweroff Test" result="PASS" /><testcase id="previouslib" purpose="previouslib Test" result="PASS" /><testcase id="RemoteDebugging" purpose="RemoteDebugging Test" result="PASS" /><testcase id="SecurityUrlCertificate" purpose="SecurityUrlCertificate Test" result="BLOCK">[[https://crosswalk-project.org/jira/browse/XWALK-3973 XWALK-3973]]</testcase><testcase id="sharedapps" purpose="sharedapps Test" result="PASS" /><testcase id="terminateapp" purpose="terminatapp Test" result="PASS" /><testcase id="uninstallapp" purpose="uninstallapp Test" result="PASS" /><testcase id="UninstallLib" purpose="UninstallLib Test" result="PASS" /><testcase id="VideoPlay" purpose="VideoPlay Test" result="PASS" /><testcase id="WebAppGesture" purpose="WebAppGesture Test" result="PASS" /><testcase id="WebAppHWKey" purpose="WebAppHWKey Test" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4057 XWALK-4057]]</testcase><testcase id="webapps" purpose="webapps Test" result="PASS" /><testcase id="WebAppTaskManager" purpose="WebAppTaskManager Test" result="PASS" /><testcase id="WebAppXwalkHost" purpose="WebAppXwalkHost Test" result="PASS" /></category><category name="Device &amp;Hardware"><testcase id="Accelerometer" purpose="Accelerometer" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2666 XWALK-2666]]device limitation,won't fix</testcase><testcase id="BatteryStatus" purpose="BatteryStatus" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4111 XWALK-4111]]</testcase><testcase id="BrowserState" purpose="Browser State" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1693 XWALK-1693]]</testcase><testcase id="Camera" purpose="Camera" result="PASS" /><testcase id="CameraViaUserMedia" purpose="Camera via UserMedia" result="PASS" /><testcase id="FullScreen" purpose="Full Screen" result="PASS" /><testcase id="GamePad" purpose="GamePad" result="PASS" /><testcase id="Input" purpose="Input" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-1457 XWALK-1457]]</testcase><testcase id="LocationGPS" purpose="Location GPS" result="PASS" /><testcase id="Notifications" purpose="Notifications" result="PASS" /><testcase id="ScreenOrientation" purpose="ScreenOrientation" result="PASS" /><testcase id="Touch" purpose="Touch" result="PASS" /><testcase id="Vibration" purpose="Vibration" result="PASS" /><testcase id="WebAudio" purpose="WebAudio" result="PASS" /><testcase id="WebCL" purpose="WebCL" result="PASS" /><testcase id="WebCrypto" purpose="WebCrypto" result="PASS" /><testcase id="WebGL" purpose="WebGL" result="PASS" /></category><category name="Experimental API"><testcase id="Presentation" purpose="Presentation" result="PASS" /></category><category name="Multimedia &amp;Graphics"><testcase id="AnimationTransform" purpose="Animation Transform" result="PASS" /><testcase id="AudioPlay" purpose="Audio Play" result="PASS" /><testcase id="Canvas" purpose="Canvas" result="PASS" /><testcase id="CSSAnimation" purpose="CSS Animation" result="PASS" /><testcase id="CSSStyle" purpose="CSS Style" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2988 XWALK-2988]]</testcase><testcase id="FlexibleBox" purpose="Flexible Box" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-2663 XWALK-2663]]</testcase><testcase id="MediaQueries" purpose="Media Queries" result="PASS" /><testcase id="MediaSource" purpose="MediaSource" result="PASS" /><testcase id="SVGTransformation" purpose="SVG Transformation" result="PASS" /><testcase id="Transitions" purpose="Transitions" result="PASS" /><testcase id="VideoPlayAndroid" purpose="Video Play" result="PASS" /></category><category name="Networking &amp;Storage"><testcase id="FileReader" purpose="FileReader" result="PASS" /><testcase id="FileSystem" purpose="File System" result="PASS" /><testcase id="SpeechSynthesis" purpose="SpeechSynthesis" result="FAIL">Speech Synthesis partly implement[[https://crosswalk-project.org/jira/browse/XWALK-1105 XWALK-1105]]</testcase><testcase id="WebSpeech" purpose="Web Speech" result="PASS" /></category><category name="Performance &amp; Optimization"><testcase id="AnimationTiming" purpose="Animation Timing" result="PASS" /><testcase id="HrtimeAndroid" purpose="High Resolution Time" result="PASS" /><testcase id="PageVisibility" purpose="Page Visibility" result="PASS" /></category><category name="sample"><testcase id="AppURI" purpose="App URI" result="PASS" /><testcase id="ContactsManager" purpose="Contacts Manager" result="PASS" /><testcase id="DeviceCapabilities" purpose="Device Capabilities" result="PASS" /><testcase id="Forms" purpose="Forms" result="PASS" /><testcase id="HTMLTemplate" purpose="HTML Template" result="PASS" /><testcase id="IndexedDB" purpose="IndexedDB" result="PASS" /><testcase id="ManifestDemo1" purpose="ManifestDemo1" result="PASS" /><testcase id="ManifestDemo2" purpose="ManifestDemo2" result="PASS" /><testcase id="ManifestDemo3" purpose="ManifestDemo3" result="FAIL">[[https://crosswalk-project.org/jira/browse/XWALK-4261 XWALK-4261]]</testcase><testcase id="ManifestDemo4" purpose="ManifestDemo4" result="PASS" /><testcase id="ManifestDemo5" purpose="ManifestDemo5" result="PASS" /><testcase id="NavigationTiming" purpose="Navigation Timing" result="PASS" /><testcase id="PDFjs Test" purpose="Verifies the PDFjs can be showed correctly" result="PASS" /><testcase id="PerformanceTimeline" purpose="Performance Timeline" result="PASS" /><testcase id="ResourceTiming" purpose="Resource Timing" result="PASS" /><testcase id="Sandbox" purpose="Sandbox" result="PASS" /><testcase id="SchemesCheck" purpose="SchemesCheck Test" result="PASS" /><testcase id="SchemesContent" purpose="SchemesContent Test" result="PASS" /><testcase id="Selectors" purpose="Selectors" result="PASS" /><testcase id="SessionHistory" purpose="Session History" result="PASS" /><testcase id="ShadowDom" purpose="ShadowDom" result="PASS" /><testcase id="SIMD" purpose="SIMD" result="PASS" /><testcase id="TypedArray" purpose="Typed Array" result="PASS" /><testcase id="Usertiming" purpose="User Timing" result="PASS" /><testcase id="WebDatabase" purpose="Web Database" result="PASS" /><testcase id="WebMessaging" purpose="Web Messaging" result="PASS" /><testcase id="WebRTC" purpose="WebRTC" result="PASS" /><testcase id="WebStorage" purpose="Web Storage" result="PASS" /><testcase id="Workers" purpose="Workers" result="PASS" /></category><category name="Security"><testcase id="PermissionsAPI" purpose="PermissionsAPI" result="PASS" /></category><category name="UI"><testcase id="Clipboard" purpose="Clipboard" result="PASS" /></category></test_definition>